digraph "CFG for 'foo' function" {
	label="CFG for 'foo' function";

	Node0x55f1217e1960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{entry:\l  call void @llvm.dbg.value(metadata ptr %a, metadata !21, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata ptr %b, metadata !22, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata ptr %c, metadata !23, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata i32 %n, metadata !24, metadata\l... !DIExpression()), !dbg !27\l  tail call void asm sideeffect \"dmb sy\\0A\\09orr x3,x3,x3\\0A\", \"~\{memory\}\"()\l... #8, !dbg !28, !srcloc !29\l  call void @llvm.dbg.value(metadata i32 0, metadata !25, metadata\l... !DIExpression()), !dbg !30\l  %cmp11 = icmp sgt i32 %n, 0, !dbg !31\l  br i1 %cmp11, label %for.body.preheader, label %for.cond.cleanup, !dbg !33\l|{<s0>T|<s1>F}}"];
	Node0x55f1217e1960:s0 -> Node0x55f1217e4b80;
	Node0x55f1217e1960:s1 -> Node0x55f1217e4c20;
	Node0x55f1217e4b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.body.preheader:                               \l  %wide.trip.count = zext i32 %n to i64, !dbg !31\l  br label %for.body.init.1\l}"];
	Node0x55f1217e4b80 -> Node0x55f1217e55b0;
	Node0x55f1217e55b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.body.init.1:                                  \l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !30\l  %rem15.init.1 = and i64 0, 1, !dbg !34\l  %cmp1.not.init.1 = icmp eq i64 %rem15.init.1, 0, !dbg !34\l  %indvars.iv.next.init.1 = add nuw nsw i64 0, 1, !dbg !37\l  %rem15.headerCopy.1.init.1 = and i64 %indvars.iv.next.init.1, 1, !dbg !34\l  %cmp1.not.headerCopy.1.init.1 = icmp eq i64 %rem15.headerCopy.1.init.1, 0,\l... !dbg !34\l  %indvars.iv.next.latchCopy.1.init.1 = add nuw nsw i64\l... %indvars.iv.next.init.1, 1, !dbg !37\l  %rem15.headerCopy.1.2.init.1 = and i64 %indvars.iv.next.latchCopy.1.init.1,\l... 1, !dbg !34\l  %cmp1.not.headerCopy.1.2.init.1 = icmp eq i64 %rem15.headerCopy.1.2.init.1,\l... 0, !dbg !34\l  %indvars.iv.next.latchCopy.1.2.init.1 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.init.1, 1, !dbg !37\l  %rem15.headerCopy.1.2.3.init.1 = and i64\l... %indvars.iv.next.latchCopy.1.2.init.1, 1, !dbg !34\l  %cmp1.not.headerCopy.1.2.3.init.1 = icmp eq i64\l... %rem15.headerCopy.1.2.3.init.1, 0, !dbg !34\l  %indvars.iv.next.latchCopy.1.2.3.init.1 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.init.1, 1, !dbg !37\l  br label %for.body.init.2\l}"];
	Node0x55f1217e55b0 -> Node0x55f1217e7950;
	Node0x55f1217e7950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.body.init.2:                                  \l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !30\l  %rem15.init.2 = and i64 %indvars.iv.next.latchCopy.1.2.3.init.1, 1, !dbg !34\l  %cmp1.not.init.2 = icmp eq i64 %rem15.init.2, 0, !dbg !34\l  %indvars.iv.next.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, 1, !dbg !37\l  %rem15.headerCopy.1.init.2 = and i64 %indvars.iv.next.init.2, 1, !dbg !34\l  %cmp1.not.headerCopy.1.init.2 = icmp eq i64 %rem15.headerCopy.1.init.2, 0,\l... !dbg !34\l  %indvars.iv.next.latchCopy.1.init.2 = add nuw nsw i64\l... %indvars.iv.next.init.2, 1, !dbg !37\l  %rem15.headerCopy.1.2.init.2 = and i64 %indvars.iv.next.latchCopy.1.init.2,\l... 1, !dbg !34\l  %cmp1.not.headerCopy.1.2.init.2 = icmp eq i64 %rem15.headerCopy.1.2.init.2,\l... 0, !dbg !34\l  %indvars.iv.next.latchCopy.1.2.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.init.2, 1, !dbg !37\l  %rem15.headerCopy.1.2.3.init.2 = and i64\l... %indvars.iv.next.latchCopy.1.2.init.2, 1, !dbg !34\l  %cmp1.not.headerCopy.1.2.3.init.2 = icmp eq i64\l... %rem15.headerCopy.1.2.3.init.2, 0, !dbg !34\l  %indvars.iv.next.latchCopy.1.2.3.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.init.2, 1, !dbg !37\l  %0 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not.init.1, i64 0\l  %1 = insertelement \<vscale x 4 x i1\> %0, i1 %cmp1.not.headerCopy.1.init.1,\l... i64 1\l  %2 = insertelement \<vscale x 4 x i1\> %1, i1 %cmp1.not.headerCopy.1.2.init.1,\l... i64 2\l  %3 = insertelement \<vscale x 4 x i1\> %2, i1\l... %cmp1.not.headerCopy.1.2.3.init.1, i64 3\l  %4 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not.init.2, i64 0\l  %5 = insertelement \<vscale x 4 x i1\> %4, i1 %cmp1.not.headerCopy.1.init.2,\l... i64 1\l  %6 = insertelement \<vscale x 4 x i1\> %5, i1 %cmp1.not.headerCopy.1.2.init.2,\l... i64 2\l  %7 = insertelement \<vscale x 4 x i1\> %6, i1\l... %cmp1.not.headerCopy.1.2.3.init.2, i64 3\l  %8 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 0, i32 1)\l  %9 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 4, i32 1)\l  br label %for.body\l}"];
	Node0x55f1217e7950 -> Node0x55f1217e9b30;
	Node0x55f1217e8180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{epilogueBlock1:                                   \l  %10 = getelementptr inbounds i32, ptr %a, i64 %24, !dbg !38\l  %11 = getelementptr inbounds i32, ptr %b, i64 %24, !dbg !40\l  %12 = getelementptr inbounds i32, ptr %c, i64 %24, !dbg !41\l  %13 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %26, ptr\l... %10, \<vscale x 4 x i32\> %25)\l  %14 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %26, ptr\l... %11, \<vscale x 4 x i32\> %25)\l  %15 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.mul.nxv4i32(\<vscale x 4 x\l... i1\> %26, \<vscale x 4 x i32\> %14, \<vscale x 4 x i32\> %13)\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %15,\l... \<vscale x 4 x i1\> %26, ptr %12, \<vscale x 4 x i32\> %25)\l  %16 = zext \<vscale x 4 x i32\> %25 to \<vscale x 4 x i64\>\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %25,\l... \<vscale x 4 x i1\> %26, ptr %12, \<vscale x 4 x i32\> %25)\l  br label %epilogueBlock2\l}"];
	Node0x55f1217e8180 -> Node0x55f1217eadb0;
	Node0x55f1217eadb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{epilogueBlock2:                                   \l  %17 = getelementptr inbounds i32, ptr %a, i64 %24, !dbg !38\l  %18 = getelementptr inbounds i32, ptr %b, i64 %24, !dbg !40\l  %19 = getelementptr inbounds i32, ptr %c, i64 %24, !dbg !41\l  %20 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %28, ptr\l... %17, \<vscale x 4 x i32\> %27)\l  %21 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %28, ptr\l... %18, \<vscale x 4 x i32\> %27)\l  %22 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.mul.nxv4i32(\<vscale x 4 x\l... i1\> %28, \<vscale x 4 x i32\> %21, \<vscale x 4 x i32\> %20)\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %22,\l... \<vscale x 4 x i1\> %28, ptr %19, \<vscale x 4 x i32\> %27)\l  %23 = zext \<vscale x 4 x i32\> %27 to \<vscale x 4 x i64\>\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %27,\l... \<vscale x 4 x i1\> %28, ptr %19, \<vscale x 4 x i32\> %27)\l  br label %for.cond.cleanup\l}"];
	Node0x55f1217eadb0 -> Node0x55f1217e4c20;
	Node0x55f1217e4c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{for.cond.cleanup:                                 \l  tail call void asm sideeffect \"dmb sy\\0A\\09orr x4,x4,x4\\0A\", \"~\{memory\}\"()\l... #8, !dbg !42, !srcloc !43\l  ret void, !dbg !44\l}"];
	Node0x55f1217e9b30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %24 = phi i64 [ %indvars.iv.next.latchCopy.1.2.3, %new.latch ], [ 8,\l... %for.body.init.2 ]\l  %25 = phi \<vscale x 4 x i32\> [ %78, %new.latch ], [ %8, %for.body.init.2 ]\l  %26 = phi \<vscale x 4 x i1\> [ %79, %new.latch ], [ %3, %for.body.init.2 ]\l  %27 = phi \<vscale x 4 x i32\> [ %80, %new.latch ], [ %9, %for.body.init.2 ]\l  %28 = phi \<vscale x 4 x i1\> [ %81, %new.latch ], [ %7, %for.body.init.2 ]\l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !30\l  %rem15 = and i64 %24, 1, !dbg !34\l  %cmp1.not = icmp eq i64 %rem15, 0, !dbg !34\l  %indvars.iv.next = add nuw nsw i64 %24, 1, !dbg !37\l  %rem15.headerCopy.1 = and i64 %indvars.iv.next, 1, !dbg !34\l  %cmp1.not.headerCopy.1 = icmp eq i64 %rem15.headerCopy.1, 0, !dbg !34\l  %indvars.iv.next.latchCopy.1 = add nuw nsw i64 %indvars.iv.next, 1, !dbg !37\l  %rem15.headerCopy.1.2 = and i64 %indvars.iv.next.latchCopy.1, 1, !dbg !34\l  %cmp1.not.headerCopy.1.2 = icmp eq i64 %rem15.headerCopy.1.2, 0, !dbg !34\l  %indvars.iv.next.latchCopy.1.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1, 1, !dbg !37\l  %rem15.headerCopy.1.2.3 = and i64 %indvars.iv.next.latchCopy.1.2, 1, !dbg !34\l  %cmp1.not.headerCopy.1.2.3 = icmp eq i64 %rem15.headerCopy.1.2.3, 0, !dbg !34\l  %indvars.iv.next.latchCopy.1.2.3 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2, 1, !dbg !37\l  %29 = icmp uge i64 %indvars.iv.next.latchCopy.1.2.3, %wide.trip.count, !dbg\l... !31\l  br i1 %29, label %epilogueBlock1, label %permute.decision, !dbg !33,\l... !llvm.loop !45\l|{<s0>T|<s1>F}}"];
	Node0x55f1217e9b30:s0 -> Node0x55f1217e8180;
	Node0x55f1217e9b30:s1 -> Node0x55f1217eeca0;
	Node0x55f1217eeca0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{permute.decision:                                 \l  %30 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4)\l  %31 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %30, \<vscale\l... x 4 x i1\> %26)\l  %32 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %30, \<vscale\l... x 4 x i1\> %28)\l  %33 = add i64 %31, %32\l  %34 = icmp uge i64 %33, 4\l  br i1 %34, label %lane.gather, label %linearized\l|{<s0>T|<s1>F}}"];
	Node0x55f1217eeca0:s0 -> Node0x55f1217efc80;
	Node0x55f1217eeca0:s1 -> Node0x55f1217efd30;
	Node0x55f1217efc80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{lane.gather:                                      \l  %35 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4)\l  %36 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %26, \<vscale x 4 x i32\> %25)\l  %37 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %28, \<vscale x 4 x i32\> %27)\l  %38 = xor \<vscale x 4 x i1\> %26, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %39 = xor \<vscale x 4 x i1\> %28, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %40 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %38, \<vscale x 4 x i32\> %25)\l  %41 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %39, \<vscale x 4 x i32\> %27)\l  %42 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %35, \<vscale\l... x 4 x i1\> %26)\l  %43 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %42)\l  %44 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.splice.nxv4i32(\<vscale x 4 x\l... i1\> %43, \<vscale x 4 x i32\> %36, \<vscale x 4 x i32\> %37)\l  %45 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %35, \<vscale\l... x 4 x i1\> %28)\l  %46 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %45)\l  %47 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.splice.nxv4i32(\<vscale x 4 x\l... i1\> %46, \<vscale x 4 x i32\> %37, \<vscale x 4 x i32\> %41)\l  %48 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %35, \<vscale\l... x 4 x i1\> %38)\l  %49 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %48)\l  %50 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.sel.nxv4i32(\<vscale x 4 x\l... i1\> %49, \<vscale x 4 x i32\> %40, \<vscale x 4 x i32\> %47)\l  %51 = xor \<vscale x 4 x i1\> %49, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %52 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %35, \<vscale\l... x 4 x i1\> %49)\l  %53 = sub i64 %45, %48\l  %54 = add i64 %53, %52\l  %55 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %54)\l  %56 = xor \<vscale x 4 x i1\> %55, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %57 = and \<vscale x 4 x i1\> %51, %55\l  %58 = and \<vscale x 4 x i1\> %51, %55\l  %59 = and \<vscale x 4 x i1\> %58, %56\l  %60 = or \<vscale x 4 x i1\> %57, %59\l  br label %if.then\l}"];
	Node0x55f1217efc80 -> Node0x55f1217f2150;
	Node0x55f1217efd30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{linearized:                                       \l  %61 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not, i1 false\l  %62 = insertelement \<vscale x 4 x i1\> %61, i1 %cmp1.not.headerCopy.1, i1 true\l  %63 = insertelement \<vscale x 4 x i1\> %62, i1 %cmp1.not.headerCopy.1.2, i1\l... false\l  %64 = insertelement \<vscale x 4 x i1\> %63, i1 %cmp1.not.headerCopy.1.2.3, i1\l... true\l  %65 = trunc i64 %24 to i32\l  %66 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 %65, i32 1)\l  br label %new.latch\l}"];
	Node0x55f1217efd30 -> Node0x55f1217ecfd0;
	Node0x55f1217f2150 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then:                                          \l  %arrayidx = getelementptr inbounds i32, ptr %a, i64 %24, !dbg !38\l  %arrayidx3 = getelementptr inbounds i32, ptr %b, i64 %24, !dbg !40\l  %arrayidx5 = getelementptr inbounds i32, ptr %c, i64 %24, !dbg !41\l  %67 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4), !dbg !49\l  %68 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %67, ptr\l... %arrayidx, \<vscale x 4 x i32\> %44), !dbg !49\l  %69 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %67, ptr\l... %arrayidx3, \<vscale x 4 x i32\> %44), !dbg !49\l  %70 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.mul.nxv4i32(\<vscale x 4 x\l... i1\> %67, \<vscale x 4 x i32\> %69, \<vscale x 4 x i32\> %68), !dbg !49\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %70,\l... \<vscale x 4 x i1\> %67, ptr %arrayidx5, \<vscale x 4 x i32\> %44), !dbg !49\l  %71 = zext \<vscale x 4 x i32\> %44 to \<vscale x 4 x i64\>, !dbg !49\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %44,\l... \<vscale x 4 x i1\> %67, ptr %arrayidx5, \<vscale x 4 x i32\> %44), !dbg !49\l  %72 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not, i1 false, !dbg !49\l  %73 = insertelement \<vscale x 4 x i1\> %72, i1 %cmp1.not.headerCopy.1, i1\l... true, !dbg !49\l  %74 = insertelement \<vscale x 4 x i1\> %73, i1 %cmp1.not.headerCopy.1.2, i1\l... false, !dbg !49\l  %75 = insertelement \<vscale x 4 x i1\> %74, i1 %cmp1.not.headerCopy.1.2.3, i1\l... true, !dbg !49\l  %76 = trunc i64 %24 to i32, !dbg !49\l  %77 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 %76, i32\l... 1), !dbg !49\l  br label %new.latch, !dbg !49\l}"];
	Node0x55f1217f2150 -> Node0x55f1217ecfd0;
	Node0x55f1217ecfd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{new.latch:                                        \l  %78 = phi \<vscale x 4 x i32\> [ %77, %if.then ], [ %25, %linearized ]\l  %79 = phi \<vscale x 4 x i1\> [ %75, %if.then ], [ %26, %linearized ]\l  %80 = phi \<vscale x 4 x i32\> [ %66, %linearized ], [ %27, %if.then ]\l  %81 = phi \<vscale x 4 x i1\> [ %64, %linearized ], [ %60, %if.then ]\l  br label %for.body\l}"];
	Node0x55f1217ecfd0 -> Node0x55f1217e9b30;
}
