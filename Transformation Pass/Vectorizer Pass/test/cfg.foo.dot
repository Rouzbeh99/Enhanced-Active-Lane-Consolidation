digraph "CFG for 'foo' function" {
	label="CFG for 'foo' function";

	Node0x555851ae9320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{entry:\l  call void @llvm.dbg.value(metadata ptr %a, metadata !21, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata ptr %b, metadata !22, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata ptr %c, metadata !23, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata i32 %n, metadata !24, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata i32 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %cmp11 = icmp sgt i32 %n, 0, !dbg !29\l  br i1 %cmp11, label %for.body.preheader, label %for.cond.cleanup, !dbg !31\l|{<s0>T|<s1>F}}"];
	Node0x555851ae9320:s0 -> Node0x555851aeb8b0;
	Node0x555851ae9320:s1 -> Node0x555851aeb9b0;
	Node0x555851aeb8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.preheader:                               \l  %wide.trip.count = zext i32 %n to i64, !dbg !29\l  br label %for.body.init.1, !dbg !31\l}"];
	Node0x555851aeb8b0 -> Node0x555851aec340;
	Node0x555851aec340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.init.1:                                  \l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.init.1 = and i64 0, 1, !dbg !32\l  %cmp1.not.init.1 = icmp eq i64 %rem15.init.1, 0, !dbg !32\l  br label %for.inc.init.1\l}"];
	Node0x555851aec340 -> Node0x555851aedb40;
	Node0x555851aedb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.init.1:                                   \l  %indvars.iv.next.init.1 = add nuw nsw i64 0, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.1, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.init.1\l}"];
	Node0x555851aedb40 -> Node0x555851aee160;
	Node0x555851aee160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.init.1:                     \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.1, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.init.1 = and i64 %indvars.iv.next.init.1, 1, !dbg !32\l  %cmp1.not.headerCopy.1.init.1 = icmp eq i64 %rem15.headerCopy.1.init.1, 0,\l... !dbg !32\l  br label %for.inc.latchCopy.1.init.1\l}"];
	Node0x555851aee160 -> Node0x555851aee590;
	Node0x555851aee590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.init.1:                       \l  %indvars.iv.next.latchCopy.1.init.1 = add nuw nsw i64\l... %indvars.iv.next.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.init.1\l}"];
	Node0x555851aee590 -> Node0x555851aeef40;
	Node0x555851aeef40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.init.1:                   \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.init.1 = and i64 %indvars.iv.next.latchCopy.1.init.1,\l... 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.init.1 = icmp eq i64 %rem15.headerCopy.1.2.init.1,\l... 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.init.1\l}"];
	Node0x555851aeef40 -> Node0x555851aef340;
	Node0x555851aef340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.init.1:                     \l  %indvars.iv.next.latchCopy.1.2.init.1 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.1, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.3.init.1\l}"];
	Node0x555851aef340 -> Node0x555851aef6e0;
	Node0x555851aef6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.3.init.1:                 \l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.1, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.3.init.1 = and i64\l... %indvars.iv.next.latchCopy.1.2.init.1, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.3.init.1 = icmp eq i64\l... %rem15.headerCopy.1.2.3.init.1, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.3.init.1\l}"];
	Node0x555851aef6e0 -> Node0x555851aefe50;
	Node0x555851aefe50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.3.init.1:                   \l  %indvars.iv.next.latchCopy.1.2.3.init.1 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %0 = sub i64 %wide.trip.count, 3, !dbg !29\l  %exitcond.not.latchCopy.1.2.3.init.1 = icmp eq i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, %0, !dbg !29\l  br label %for.body.init.2\l}"];
	Node0x555851aefe50 -> Node0x555851af0360;
	Node0x555851af0360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.init.2:                                  \l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.init.2 = and i64 %indvars.iv.next.latchCopy.1.2.3.init.1, 1, !dbg !32\l  %cmp1.not.init.2 = icmp eq i64 %rem15.init.2, 0, !dbg !32\l  br label %for.inc.init.2\l}"];
	Node0x555851af0360 -> Node0x555851af0690;
	Node0x555851af0690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.init.2:                                   \l  %indvars.iv.next.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.2, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.init.2\l}"];
	Node0x555851af0690 -> Node0x555851af0a70;
	Node0x555851af0a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.init.2:                     \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.2, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.init.2 = and i64 %indvars.iv.next.init.2, 1, !dbg !32\l  %cmp1.not.headerCopy.1.init.2 = icmp eq i64 %rem15.headerCopy.1.init.2, 0,\l... !dbg !32\l  br label %for.inc.latchCopy.1.init.2\l}"];
	Node0x555851af0a70 -> Node0x555851af0ea0;
	Node0x555851af0ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.init.2:                       \l  %indvars.iv.next.latchCopy.1.init.2 = add nuw nsw i64\l... %indvars.iv.next.init.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.init.2\l}"];
	Node0x555851af0ea0 -> Node0x555851af1240;
	Node0x555851af1240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.init.2:                   \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.init.2 = and i64 %indvars.iv.next.latchCopy.1.init.2,\l... 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.init.2 = icmp eq i64 %rem15.headerCopy.1.2.init.2,\l... 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.init.2\l}"];
	Node0x555851af1240 -> Node0x555851af1640;
	Node0x555851af1640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.init.2:                     \l  %indvars.iv.next.latchCopy.1.2.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.init.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.2, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.3.init.2\l}"];
	Node0x555851af1640 -> Node0x555851af21f0;
	Node0x555851af21f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.3.init.2:                 \l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.2, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.3.init.2 = and i64\l... %indvars.iv.next.latchCopy.1.2.init.2, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.3.init.2 = icmp eq i64\l... %rem15.headerCopy.1.2.3.init.2, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.3.init.2\l}"];
	Node0x555851af21f0 -> Node0x555851af2640;
	Node0x555851af2640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.3.init.2:                   \l  %indvars.iv.next.latchCopy.1.2.3.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.init.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.3.init.2, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %1 = sub i64 %wide.trip.count, 3, !dbg !29\l  %exitcond.not.latchCopy.1.2.3.init.2 = icmp eq i64\l... %indvars.iv.next.latchCopy.1.2.3.init.2, %1, !dbg !29\l  %2 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not.init.1, i64 0, !dbg\l... !31\l  %3 = insertelement \<vscale x 4 x i1\> %2, i1 %cmp1.not.headerCopy.1.init.1,\l... i64 1, !dbg !31\l  %4 = insertelement \<vscale x 4 x i1\> %3, i1 %cmp1.not.headerCopy.1.2.init.1,\l... i64 2, !dbg !31\l  %5 = insertelement \<vscale x 4 x i1\> %4, i1\l... %cmp1.not.headerCopy.1.2.3.init.1, i64 3, !dbg !31\l  %6 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not.init.2, i64 0, !dbg\l... !31\l  %7 = insertelement \<vscale x 4 x i1\> %6, i1 %cmp1.not.headerCopy.1.init.2,\l... i64 1, !dbg !31\l  %8 = insertelement \<vscale x 4 x i1\> %7, i1 %cmp1.not.headerCopy.1.2.init.2,\l... i64 2, !dbg !31\l  %9 = insertelement \<vscale x 4 x i1\> %8, i1\l... %cmp1.not.headerCopy.1.2.3.init.2, i64 3, !dbg !31\l  %10 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 0, i32 1),\l... !dbg !31\l  %11 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 4, i32 1),\l... !dbg !31\l  br i1 %exitcond.not.latchCopy.1.2.3.init.2, label\l... %for.cond.cleanup.loopexit, label %for.body, !dbg !31, !llvm.loop !36\l|{<s0>T|<s1>F}}"];
	Node0x555851af2640:s0 -> Node0x555851af4060;
	Node0x555851af2640:s1 -> Node0x555851af4150;
	Node0x555851af4060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.cond.cleanup.loopexit:                        \l  br label %for.cond.cleanup, !dbg !40\l}"];
	Node0x555851af4060 -> Node0x555851aeb9b0;
	Node0x555851aeb9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{for.cond.cleanup:                                 \l  ret void, !dbg !40\l}"];
	Node0x555851af4150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %12 = phi i64 [ %indvars.iv.next.latchCopy.1.2.3, %new.latch ], [ 0,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  %13 = phi \<vscale x 4 x i32\> [ %57, %new.latch ], [ %10,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15 = and i64 %12, 1, !dbg !32\l  %cmp1.not = icmp eq i64 %rem15, 0, !dbg !32\l  br label %for.inc\l}"];
	Node0x555851af4150 -> Node0x555851af5070;
	Node0x555851af5190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{permute.decision:                                 \l  %14 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4)\l  %15 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %14, \<vscale\l... x 4 x i1\> %5)\l  %16 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %14, \<vscale\l... x 4 x i1\> %9)\l  %17 = add i64 %15, %16\l  %18 = icmp uge i64 %17, 4\l  br i1 %18, label %lane.gather, label %linearized\l|{<s0>T|<s1>F}}"];
	Node0x555851af5190:s0 -> Node0x555851af5870;
	Node0x555851af5190:s1 -> Node0x555851af5920;
	Node0x555851af5870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{lane.gather:                                      \l  %19 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4)\l  %20 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %5, \<vscale x 4 x i32\> %13)\l  %21 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %9, \<vscale x 4 x i32\> %11)\l  %22 = xor \<vscale x 4 x i1\> %5, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %23 = xor \<vscale x 4 x i1\> %9, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %24 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %22, \<vscale x 4 x i32\> %13)\l  %25 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %23, \<vscale x 4 x i32\> %11)\l  %26 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %19, \<vscale\l... x 4 x i1\> %5)\l  %27 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %26)\l  %28 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.splice.nxv4i32(\<vscale x 4 x\l... i1\> %27, \<vscale x 4 x i32\> %20, \<vscale x 4 x i32\> %21)\l  %29 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %19, \<vscale\l... x 4 x i1\> %9)\l  %30 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %29)\l  %31 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.splice.nxv4i32(\<vscale x 4 x\l... i1\> %30, \<vscale x 4 x i32\> %21, \<vscale x 4 x i32\> %25)\l  %32 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %19, \<vscale\l... x 4 x i1\> %22)\l  %33 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %32)\l  %34 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.sel.nxv4i32(\<vscale x 4 x\l... i1\> %33, \<vscale x 4 x i32\> %24, \<vscale x 4 x i32\> %31)\l  %35 = xor \<vscale x 4 x i1\> %33, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %36 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %19, \<vscale\l... x 4 x i1\> %33)\l  %37 = sub i64 %29, %32\l  %38 = add i64 %37, %36\l  %39 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %38)\l  %40 = xor \<vscale x 4 x i1\> %39, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %41 = and \<vscale x 4 x i1\> %35, %39\l  %42 = and \<vscale x 4 x i1\> %35, %39\l  %43 = and \<vscale x 4 x i1\> %42, %40\l  %44 = or \<vscale x 4 x i1\> %41, %43\l  br label %if.then\l}"];
	Node0x555851af5870 -> Node0x555851af8360;
	Node0x555851af5920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{linearized:                                       \l  br label %new.latch\l}"];
	Node0x555851af5920 -> Node0x555851af4be0;
	Node0x555851af8360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then:                                          \l  %arrayidx = getelementptr inbounds i32, ptr %a, i64 %12, !dbg !41\l  %arrayidx3 = getelementptr inbounds i32, ptr %b, i64 %12, !dbg !43\l  %arrayidx5 = getelementptr inbounds i32, ptr %c, i64 %12, !dbg !44\l  %45 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4), !dbg !45\l  %46 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %45, ptr\l... %arrayidx, \<vscale x 4 x i32\> %28), !dbg !45\l  %47 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %45, ptr\l... %arrayidx3, \<vscale x 4 x i32\> %28), !dbg !45\l  %48 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.mul.nxv4i32(\<vscale x 4 x\l... i1\> %45, \<vscale x 4 x i32\> %47, \<vscale x 4 x i32\> %46), !dbg !45\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %48,\l... \<vscale x 4 x i1\> %45, ptr %arrayidx5, \<vscale x 4 x i32\> %28), !dbg !45\l  %49 = zext \<vscale x 4 x i32\> %28 to \<vscale x 4 x i64\>, !dbg !45\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %28,\l... \<vscale x 4 x i1\> %45, ptr %arrayidx5, \<vscale x 4 x i32\> %28), !dbg !45\l  %50 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not, i1 false, !dbg !45\l  %51 = insertelement \<vscale x 4 x i1\> %50, i1 %cmp1.not.headerCopy.1, i1\l... true, !dbg !45\l  %52 = insertelement \<vscale x 4 x i1\> %51, i1 %cmp1.not.headerCopy.1.2, i1\l... false, !dbg !45\l  %53 = insertelement \<vscale x 4 x i1\> %52, i1 %cmp1.not.headerCopy.1.2.3, i1\l... true, !dbg !45\l  %54 = trunc i64 %12 to i32, !dbg !45\l  %55 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 %54, i32\l... 1), !dbg !45\l  br label %new.latch, !dbg !45\l}"];
	Node0x555851af8360 -> Node0x555851af4be0;
	Node0x555851af5070 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %12, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !25,\l... metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1\l}"];
	Node0x555851af5070 -> Node0x555851afa6e0;
	Node0x555851afa6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.headerCopy.1:                            \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !25,\l... metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1 = and i64 %indvars.iv.next, 1, !dbg !32\l  %cmp1.not.headerCopy.1 = icmp eq i64 %rem15.headerCopy.1, 0, !dbg !32\l  br label %for.inc.latchCopy.1\l}"];
	Node0x555851afa6e0 -> Node0x555851afaae0;
	Node0x555851afaae0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.latchCopy.1:                              \l  %indvars.iv.next.latchCopy.1 = add nuw nsw i64 %indvars.iv.next, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2\l}"];
	Node0x555851afaae0 -> Node0x555851afae00;
	Node0x555851afae00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.headerCopy.1.2:                          \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2 = and i64 %indvars.iv.next.latchCopy.1, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2 = icmp eq i64 %rem15.headerCopy.1.2, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2\l}"];
	Node0x555851afae00 -> Node0x555851afb1a0;
	Node0x555851afb1a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.latchCopy.1.2:                            \l  %indvars.iv.next.latchCopy.1.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.3\l}"];
	Node0x555851afb1a0 -> Node0x555851afb500;
	Node0x555851afb500 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.headerCopy.1.2.3:                        \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.3 = and i64 %indvars.iv.next.latchCopy.1.2, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.3 = icmp eq i64 %rem15.headerCopy.1.2.3, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.3\l}"];
	Node0x555851afb500 -> Node0x555851afb8b0;
	Node0x555851afb8b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.latchCopy.1.2.3:                          \l  %indvars.iv.next.latchCopy.1.2.3 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.2.3,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %56 = sub i64 %wide.trip.count, 3, !dbg !29\l  %exitcond.not.latchCopy.1.2.3 = icmp eq i64\l... %indvars.iv.next.latchCopy.1.2.3, %56, !dbg !29\l  br i1 %exitcond.not.latchCopy.1.2.3, label %for.cond.cleanup.loopexit, label\l... %permute.decision, !dbg !31, !llvm.loop !36\l|{<s0>T|<s1>F}}"];
	Node0x555851afb8b0:s0 -> Node0x555851af4060;
	Node0x555851afb8b0:s1 -> Node0x555851af5190;
	Node0x555851af4be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{new.latch:                                        \l  %57 = phi \<vscale x 4 x i32\> [ %55, %if.then ], [ %13, %linearized ]\l  br label %for.body\l}"];
	Node0x555851af4be0 -> Node0x555851af4150;
}
