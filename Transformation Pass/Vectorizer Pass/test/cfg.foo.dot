digraph "CFG for 'foo' function" {
	label="CFG for 'foo' function";

	Node0x56417538d320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{entry:\l  call void @llvm.dbg.value(metadata ptr %a, metadata !21, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata ptr %b, metadata !22, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata ptr %c, metadata !23, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata i32 %n, metadata !24, metadata\l... !DIExpression()), !dbg !27\l  call void @llvm.dbg.value(metadata i32 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %cmp11 = icmp sgt i32 %n, 0, !dbg !29\l  br i1 %cmp11, label %for.body.preheader, label %for.cond.cleanup, !dbg !31\l|{<s0>T|<s1>F}}"];
	Node0x56417538d320:s0 -> Node0x56417538f8b0;
	Node0x56417538d320:s1 -> Node0x56417538f9b0;
	Node0x56417538f8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.preheader:                               \l  %wide.trip.count = zext i32 %n to i64, !dbg !29\l  br label %for.body.init.1, !dbg !31\l}"];
	Node0x56417538f8b0 -> Node0x564175390340;
	Node0x564175390340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.init.1:                                  \l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.init.1 = and i64 0, 1, !dbg !32\l  %cmp1.not.init.1 = icmp eq i64 %rem15.init.1, 0, !dbg !32\l  br label %for.inc.init.1\l}"];
	Node0x564175390340 -> Node0x564175391b40;
	Node0x564175391b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.init.1:                                   \l  %indvars.iv.next.init.1 = add nuw nsw i64 0, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.1, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.init.1\l}"];
	Node0x564175391b40 -> Node0x564175392160;
	Node0x564175392160 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.init.1:                     \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.1, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.init.1 = and i64 %indvars.iv.next.init.1, 1, !dbg !32\l  %cmp1.not.headerCopy.1.init.1 = icmp eq i64 %rem15.headerCopy.1.init.1, 0,\l... !dbg !32\l  br label %for.inc.latchCopy.1.init.1\l}"];
	Node0x564175392160 -> Node0x564175392590;
	Node0x564175392590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.init.1:                       \l  %indvars.iv.next.latchCopy.1.init.1 = add nuw nsw i64\l... %indvars.iv.next.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.init.1\l}"];
	Node0x564175392590 -> Node0x564175392f40;
	Node0x564175392f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.init.1:                   \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.init.1 = and i64 %indvars.iv.next.latchCopy.1.init.1,\l... 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.init.1 = icmp eq i64 %rem15.headerCopy.1.2.init.1,\l... 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.init.1\l}"];
	Node0x564175392f40 -> Node0x564175393340;
	Node0x564175393340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.init.1:                     \l  %indvars.iv.next.latchCopy.1.2.init.1 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.1, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.3.init.1\l}"];
	Node0x564175393340 -> Node0x5641753936e0;
	Node0x5641753936e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.3.init.1:                 \l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.1, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.3.init.1 = and i64\l... %indvars.iv.next.latchCopy.1.2.init.1, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.3.init.1 = icmp eq i64\l... %rem15.headerCopy.1.2.3.init.1, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.3.init.1\l}"];
	Node0x5641753936e0 -> Node0x564175393e50;
	Node0x564175393e50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.3.init.1:                   \l  %indvars.iv.next.latchCopy.1.2.3.init.1 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %0 = sub i64 %wide.trip.count, 3, !dbg !29\l  %exitcond.not.latchCopy.1.2.3.init.1 = icmp eq i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, %0, !dbg !29\l  br label %for.body.init.2\l}"];
	Node0x564175393e50 -> Node0x564175394360;
	Node0x564175394360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.init.2:                                  \l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.init.2 = and i64 %indvars.iv.next.latchCopy.1.2.3.init.1, 1, !dbg !32\l  %cmp1.not.init.2 = icmp eq i64 %rem15.init.2, 0, !dbg !32\l  br label %for.inc.init.2\l}"];
	Node0x564175394360 -> Node0x564175394690;
	Node0x564175394690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.init.2:                                   \l  %indvars.iv.next.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.3.init.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.2, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.init.2\l}"];
	Node0x564175394690 -> Node0x564175394a70;
	Node0x564175394a70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.init.2:                     \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.init.2, metadata\l... !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.init.2 = and i64 %indvars.iv.next.init.2, 1, !dbg !32\l  %cmp1.not.headerCopy.1.init.2 = icmp eq i64 %rem15.headerCopy.1.init.2, 0,\l... !dbg !32\l  br label %for.inc.latchCopy.1.init.2\l}"];
	Node0x564175394a70 -> Node0x564175394ea0;
	Node0x564175394ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.init.2:                       \l  %indvars.iv.next.latchCopy.1.init.2 = add nuw nsw i64\l... %indvars.iv.next.init.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.init.2\l}"];
	Node0x564175394ea0 -> Node0x564175395240;
	Node0x564175395240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.init.2:                   \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.init.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.init.2 = and i64 %indvars.iv.next.latchCopy.1.init.2,\l... 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.init.2 = icmp eq i64 %rem15.headerCopy.1.2.init.2,\l... 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.init.2\l}"];
	Node0x564175395240 -> Node0x564175395640;
	Node0x564175395640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.init.2:                     \l  %indvars.iv.next.latchCopy.1.2.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.init.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.2, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.3.init.2\l}"];
	Node0x564175395640 -> Node0x5641753961f0;
	Node0x5641753961f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.body.headerCopy.1.2.3.init.2:                 \l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.init.2, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.3.init.2 = and i64\l... %indvars.iv.next.latchCopy.1.2.init.2, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.3.init.2 = icmp eq i64\l... %rem15.headerCopy.1.2.3.init.2, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.3.init.2\l}"];
	Node0x5641753961f0 -> Node0x564175396640;
	Node0x564175396640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.inc.latchCopy.1.2.3.init.2:                   \l  %indvars.iv.next.latchCopy.1.2.3.init.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2.init.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64\l... %indvars.iv.next.latchCopy.1.2.3.init.2, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %1 = sub i64 %wide.trip.count, 3, !dbg !29\l  %exitcond.not.latchCopy.1.2.3.init.2 = icmp eq i64\l... %indvars.iv.next.latchCopy.1.2.3.init.2, %1, !dbg !29\l  %2 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not.init.1, i64 0, !dbg\l... !31\l  %3 = insertelement \<vscale x 4 x i1\> %2, i1 %cmp1.not.headerCopy.1.init.1,\l... i64 1, !dbg !31\l  %4 = insertelement \<vscale x 4 x i1\> %3, i1 %cmp1.not.headerCopy.1.2.init.1,\l... i64 2, !dbg !31\l  %5 = insertelement \<vscale x 4 x i1\> %4, i1\l... %cmp1.not.headerCopy.1.2.3.init.1, i64 3, !dbg !31\l  %6 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not.init.2, i64 0, !dbg\l... !31\l  %7 = insertelement \<vscale x 4 x i1\> %6, i1 %cmp1.not.headerCopy.1.init.2,\l... i64 1, !dbg !31\l  %8 = insertelement \<vscale x 4 x i1\> %7, i1 %cmp1.not.headerCopy.1.2.init.2,\l... i64 2, !dbg !31\l  %9 = insertelement \<vscale x 4 x i1\> %8, i1\l... %cmp1.not.headerCopy.1.2.3.init.2, i64 3, !dbg !31\l  %10 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 0, i32 1),\l... !dbg !31\l  %11 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 4, i32 1),\l... !dbg !31\l  br i1 %exitcond.not.latchCopy.1.2.3.init.2, label\l... %for.cond.cleanup.loopexit, label %for.body, !dbg !31, !llvm.loop !36\l|{<s0>T|<s1>F}}"];
	Node0x564175396640:s0 -> Node0x564175398060;
	Node0x564175396640:s1 -> Node0x564175398150;
	Node0x564175398060 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{for.cond.cleanup.loopexit:                        \l  br label %for.cond.cleanup, !dbg !40\l}"];
	Node0x564175398060 -> Node0x56417538f9b0;
	Node0x56417538f9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{for.cond.cleanup:                                 \l  ret void, !dbg !40\l}"];
	Node0x564175398150 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %12 = phi i64 [ %indvars.iv.next.latchCopy.1.2.3, %new.latch ], [ 0,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  %13 = phi \<vscale x 4 x i32\> [ %72, %new.latch ], [ %10,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  %14 = phi \<vscale x 4 x i1\> [ %73, %new.latch ], [ %5,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  %15 = phi \<vscale x 4 x i32\> [ %74, %new.latch ], [ %11,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  %16 = phi \<vscale x 4 x i1\> [ %75, %new.latch ], [ %9,\l... %for.inc.latchCopy.1.2.3.init.2 ]\l  call void @llvm.dbg.value(metadata i64 0, metadata !25, metadata\l... !DIExpression()), !dbg !28\l  %rem15 = and i64 %12, 1, !dbg !32\l  %cmp1.not = icmp eq i64 %rem15, 0, !dbg !32\l  br label %for.inc\l}"];
	Node0x564175398150 -> Node0x564175399340;
	Node0x564175399460 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{permute.decision:                                 \l  %17 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4)\l  %18 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %17, \<vscale\l... x 4 x i1\> %14)\l  %19 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %17, \<vscale\l... x 4 x i1\> %16)\l  %20 = add i64 %18, %19\l  %21 = icmp uge i64 %20, 4\l  br i1 %21, label %lane.gather, label %linearized\l|{<s0>T|<s1>F}}"];
	Node0x564175399460:s0 -> Node0x564175399bd0;
	Node0x564175399460:s1 -> Node0x564175399c80;
	Node0x564175399bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{lane.gather:                                      \l  %22 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4)\l  %23 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %14, \<vscale x 4 x i32\> %13)\l  %24 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %16, \<vscale x 4 x i32\> %15)\l  %25 = xor \<vscale x 4 x i1\> %14, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %26 = xor \<vscale x 4 x i1\> %16, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %27 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %25, \<vscale x 4 x i32\> %13)\l  %28 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.compact.nxv4i32(\<vscale x 4\l... x i1\> %26, \<vscale x 4 x i32\> %15)\l  %29 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %22, \<vscale\l... x 4 x i1\> %14)\l  %30 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %29)\l  %31 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.splice.nxv4i32(\<vscale x 4 x\l... i1\> %30, \<vscale x 4 x i32\> %23, \<vscale x 4 x i32\> %24)\l  %32 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %22, \<vscale\l... x 4 x i1\> %16)\l  %33 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %32)\l  %34 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.splice.nxv4i32(\<vscale x 4 x\l... i1\> %33, \<vscale x 4 x i32\> %24, \<vscale x 4 x i32\> %28)\l  %35 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %22, \<vscale\l... x 4 x i1\> %25)\l  %36 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %35)\l  %37 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.sel.nxv4i32(\<vscale x 4 x\l... i1\> %36, \<vscale x 4 x i32\> %27, \<vscale x 4 x i32\> %34)\l  %38 = xor \<vscale x 4 x i1\> %36, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %39 = call i64 @llvm.aarch64.sve.cntp.nxv4i1(\<vscale x 4 x i1\> %22, \<vscale\l... x 4 x i1\> %36)\l  %40 = sub i64 %32, %35\l  %41 = add i64 %40, %39\l  %42 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.whilelt.nxv4i1.i64(i64 0, i64\l... %41)\l  %43 = xor \<vscale x 4 x i1\> %42, shufflevector (\<vscale x 4 x i1\>\l... insertelement (\<vscale x 4 x i1\> poison, i1 true, i32 0), \<vscale x 4 x i1\>\l... poison, \<vscale x 4 x i32\> zeroinitializer)\l  %44 = and \<vscale x 4 x i1\> %38, %42\l  %45 = and \<vscale x 4 x i1\> %38, %42\l  %46 = and \<vscale x 4 x i1\> %45, %43\l  %47 = or \<vscale x 4 x i1\> %44, %46\l  br label %if.then\l}"];
	Node0x564175399bd0 -> Node0x56417539c6c0;
	Node0x564175399c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{linearized:                                       \l  %48 = getelementptr inbounds i32, ptr %a, i64 %12, !dbg !41\l  %49 = load i32, ptr %48, align 4, !dbg !41, !tbaa !43\l  %50 = getelementptr inbounds i32, ptr %b, i64 %12, !dbg !47\l  %51 = load i32, ptr %50, align 4, !dbg !47, !tbaa !43\l  %52 = mul nsw i32 %51, %49, !dbg !48\l  %53 = getelementptr inbounds i32, ptr %c, i64 %12, !dbg !49\l  store i32 %52, ptr %53, align 4, !dbg !50, !tbaa !43\l  %54 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not, i1 false\l  %55 = insertelement \<vscale x 4 x i1\> %54, i1 %cmp1.not.headerCopy.1, i1 true\l  %56 = insertelement \<vscale x 4 x i1\> %55, i1 %cmp1.not.headerCopy.1.2, i1\l... false\l  %57 = insertelement \<vscale x 4 x i1\> %56, i1 %cmp1.not.headerCopy.1.2.3, i1\l... true\l  %58 = trunc i64 %12 to i32\l  %59 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 %58, i32 1)\l  br label %new.latch\l}"];
	Node0x564175399c80 -> Node0x564175398be0;
	Node0x56417539c6c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{if.then:                                          \l  %arrayidx = getelementptr inbounds i32, ptr %a, i64 %12, !dbg !41\l  %arrayidx3 = getelementptr inbounds i32, ptr %b, i64 %12, !dbg !47\l  %arrayidx5 = getelementptr inbounds i32, ptr %c, i64 %12, !dbg !49\l  %60 = call \<vscale x 4 x i1\> @llvm.aarch64.sve.ptrue.nxv4i1(i32 4), !dbg !51\l  %61 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %60, ptr\l... %arrayidx, \<vscale x 4 x i32\> %31), !dbg !51\l  %62 = call \<vscale x 4 x i32\>\l... @llvm.aarch64.sve.ld1.gather.sxtw.index.nxv4i32(\<vscale x 4 x i1\> %60, ptr\l... %arrayidx3, \<vscale x 4 x i32\> %31), !dbg !51\l  %63 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.mul.nxv4i32(\<vscale x 4 x\l... i1\> %60, \<vscale x 4 x i32\> %62, \<vscale x 4 x i32\> %61), !dbg !51\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %63,\l... \<vscale x 4 x i1\> %60, ptr %arrayidx5, \<vscale x 4 x i32\> %31), !dbg !51\l  %64 = zext \<vscale x 4 x i32\> %31 to \<vscale x 4 x i64\>, !dbg !51\l  call void @llvm.aarch64.sve.st1.scatter.sxtw.nxv4i32(\<vscale x 4 x i32\> %31,\l... \<vscale x 4 x i1\> %60, ptr %arrayidx5, \<vscale x 4 x i32\> %31), !dbg !51\l  %65 = insertelement \<vscale x 4 x i1\> undef, i1 %cmp1.not, i1 false, !dbg !51\l  %66 = insertelement \<vscale x 4 x i1\> %65, i1 %cmp1.not.headerCopy.1, i1\l... true, !dbg !51\l  %67 = insertelement \<vscale x 4 x i1\> %66, i1 %cmp1.not.headerCopy.1.2, i1\l... false, !dbg !51\l  %68 = insertelement \<vscale x 4 x i1\> %67, i1 %cmp1.not.headerCopy.1.2.3, i1\l... true, !dbg !51\l  %69 = trunc i64 %12 to i32, !dbg !51\l  %70 = call \<vscale x 4 x i32\> @llvm.aarch64.sve.index.nxv4i32(i32 %69, i32\l... 1), !dbg !51\l  br label %new.latch, !dbg !51\l}"];
	Node0x56417539c6c0 -> Node0x564175398be0;
	Node0x564175399340 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc:                                          \l  %indvars.iv.next = add nuw nsw i64 %12, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !25,\l... metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1\l}"];
	Node0x564175399340 -> Node0x5641753a1280;
	Node0x5641753a1280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.headerCopy.1:                            \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !25,\l... metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1 = and i64 %indvars.iv.next, 1, !dbg !32\l  %cmp1.not.headerCopy.1 = icmp eq i64 %rem15.headerCopy.1, 0, !dbg !32\l  br label %for.inc.latchCopy.1\l}"];
	Node0x5641753a1280 -> Node0x5641753a1680;
	Node0x5641753a1680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.latchCopy.1:                              \l  %indvars.iv.next.latchCopy.1 = add nuw nsw i64 %indvars.iv.next, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2\l}"];
	Node0x5641753a1680 -> Node0x5641753a19a0;
	Node0x5641753a19a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.headerCopy.1.2:                          \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2 = and i64 %indvars.iv.next.latchCopy.1, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2 = icmp eq i64 %rem15.headerCopy.1.2, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2\l}"];
	Node0x5641753a19a0 -> Node0x5641753a1d40;
	Node0x5641753a1d40 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.latchCopy.1.2:                            \l  %indvars.iv.next.latchCopy.1.2 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  br label %for.body.headerCopy.1.2.3\l}"];
	Node0x5641753a1d40 -> Node0x5641753a2060;
	Node0x5641753a2060 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body.headerCopy.1.2.3:                        \l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.2,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %rem15.headerCopy.1.2.3 = and i64 %indvars.iv.next.latchCopy.1.2, 1, !dbg !32\l  %cmp1.not.headerCopy.1.2.3 = icmp eq i64 %rem15.headerCopy.1.2.3, 0, !dbg !32\l  br label %for.inc.latchCopy.1.2.3\l}"];
	Node0x5641753a2060 -> Node0x5641753a2410;
	Node0x5641753a2410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.inc.latchCopy.1.2.3:                          \l  %indvars.iv.next.latchCopy.1.2.3 = add nuw nsw i64\l... %indvars.iv.next.latchCopy.1.2, 1, !dbg !35\l  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.latchCopy.1.2.3,\l... metadata !25, metadata !DIExpression()), !dbg !28\l  %71 = sub i64 %wide.trip.count, 3, !dbg !29\l  %exitcond.not.latchCopy.1.2.3 = icmp eq i64\l... %indvars.iv.next.latchCopy.1.2.3, %71, !dbg !29\l  br i1 %exitcond.not.latchCopy.1.2.3, label %for.cond.cleanup.loopexit, label\l... %permute.decision, !dbg !31, !llvm.loop !36\l|{<s0>T|<s1>F}}"];
	Node0x5641753a2410:s0 -> Node0x564175398060;
	Node0x5641753a2410:s1 -> Node0x564175399460;
	Node0x564175398be0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{new.latch:                                        \l  %72 = phi \<vscale x 4 x i32\> [ %70, %if.then ], [ %13, %linearized ]\l  %73 = phi \<vscale x 4 x i1\> [ %68, %if.then ], [ %14, %linearized ]\l  %74 = phi \<vscale x 4 x i32\> [ %59, %linearized ], [ %15, %if.then ]\l  %75 = phi \<vscale x 4 x i1\> [ %57, %linearized ], [ %47, %if.then ]\l  br label %for.body\l}"];
	Node0x564175398be0 -> Node0x564175398150;
}
