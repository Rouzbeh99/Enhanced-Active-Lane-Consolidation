; ModuleID = '/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake/build/apps/500.perlbench_r/llvm-ir/500.perlbench_r_bc/src/perl.c.bc'
source_filename = "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake/apps/500.perlbench_r/src/perl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cop = type { ptr, ptr, ptr, i64, i16, i8, i8, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.sv = type { ptr, i32, i32, %union.anon }
%union.anon = type { ptr }
%struct.jmpenv = type { [1 x %struct.__jmp_buf_tag], ptr, i32, i8 }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.perl_debug_pad = type { [3 x %struct.sv] }
%struct.mgvtbl = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.stackinfo = type { ptr, ptr, ptr, ptr, i32, i32, i32, i32 }
%struct.av = type { ptr, i32, i32, %union.anon.3 }
%union.anon.3 = type { ptr }
%struct.xpvav = type { ptr, %union._xmgu, i64, i64, ptr }
%union._xmgu = type { ptr }
%struct.hv = type { ptr, i32, i32, %union.anon.5 }
%union.anon.5 = type { ptr }
%struct.xpvhv = type { ptr, %union._xmgu, i64, i64 }
%struct.xpvcv = type { ptr, %union._xmgu, i64, %union.anon.10, ptr, %union.anon.11, %union.anon.12, %union.anon.13, ptr, %union.anon.14, ptr, i32, i32, i32 }
%union.anon.10 = type { i64 }
%union.anon.11 = type { ptr }
%union.anon.12 = type { ptr }
%union.anon.13 = type { ptr }
%union.anon.14 = type { ptr }
%struct.padlist = type { i64, ptr, i32, i32 }
%struct.exitlistentry = type { ptr, ptr }
%struct.yy_parser = type { ptr, %union.YYSTYPE, i32, i32, i32, i32, ptr, ptr, i32, i32, ptr, ptr, i8, i8, i8, i8, i32, ptr, ptr, ptr, i16, i16, i32, ptr, i32, i32, i8, i8, i8, i8, i32, %struct._sublex_info, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i16, i8, i8, ptr, ptr, ptr, i8, [5 x %union.YYSTYPE], [5 x i32], i32, ptr, [256 x i8], i32, i32, i8, i8, i8 }
%union.YYSTYPE = type { ptr }
%struct._sublex_info = type { i8, i16, ptr, ptr }
%struct.he = type { ptr, ptr, %union.anon.0 }
%union.anon.0 = type { ptr }
%struct.hek = type { i32, i32, [1 x i8] }
%struct.regmatch_slab = type { [33 x %struct.regmatch_state], ptr, ptr }
%struct.regmatch_state = type { i32, ptr, %union.anon.27 }
%union.anon.27 = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i32, i32, i32, ptr, ptr, i32, i32, i32, ptr, ptr, [14 x i8], [14 x i8] }
%struct.xpvmg = type { ptr, %union._xmgu, i64, %union.anon.40, %union._xivu, %union._xnvu }
%union.anon.40 = type { i64 }
%union._xivu = type { i64 }
%union._xnvu = type { double }
%struct.magic = type { ptr, ptr, i16, i8, i8, i64, ptr, ptr }
%struct.xpv = type { ptr, %union._xmgu, i64, %union.anon.41 }
%union.anon.41 = type { i64 }
%struct.gv = type { ptr, i32, i32, %union.anon.4 }
%union.anon.4 = type { ptr }
%struct.gp = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, i32, ptr }
%struct.xpvio = type { ptr, %union._xmgu, i64, %union.anon.15, %union._xivu, ptr, %union.anon.16, i64, i64, i64, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8 }
%union.anon.15 = type { i64 }
%union.anon.16 = type { ptr }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.xpvgv = type { ptr, %union._xmgu, i64, %union.anon.9, %union._xivu, %union._xnvu }
%union.anon.9 = type { i64 }
%struct.io = type { ptr, i32, i32, %union.anon.1 }
%union.anon.1 = type { ptr }
%struct.logop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr, ptr }
%struct.methop = type { ptr, ptr, ptr, i64, i16, i8, i8, %union.anon.42, ptr }
%union.anon.42 = type { ptr }
%struct.unop = type { ptr, ptr, ptr, i64, i16, i8, i8, ptr }
%struct.xpviv = type { ptr, %union._xmgu, i64, %union.anon.43, %union._xivu }
%union.anon.43 = type { i64 }
%struct.xpvnv = type { ptr, %union._xmgu, i64, %union.anon.44, %union._xivu, %union._xnvu }
%union.anon.44 = type { i64 }
%struct.__va_list_tag = type { i32, i32, ptr, ptr }

@PL_sigfpe_saved = external local_unnamed_addr global ptr, align 8
@PL_veto_cleanup = external local_unnamed_addr global i32, align 4
@PL_perl_destruct_level = external local_unnamed_addr global i8, align 1
@PL_compiling = external global %struct.cop, align 8
@PL_curcop = external local_unnamed_addr global ptr, align 8
@PL_sv_placeholder = external local_unnamed_addr global %struct.sv, align 8
@PL_sighandlerp = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@PL_rs = external local_unnamed_addr global ptr, align 8
@PL_start_env = external global %struct.jmpenv, align 8
@PL_top_env = external local_unnamed_addr global ptr, align 8
@PL_statusvalue = external local_unnamed_addr global i32, align 4
@PL_statusvalue_posix = external local_unnamed_addr global i32, align 4
@local_patches = internal constant [2 x ptr] zeroinitializer, align 16, !dbg !0
@PL_localpatches = external local_unnamed_addr global ptr, align 8
@PL_fdpid = external local_unnamed_addr global ptr, align 8
@PL_modglobal = external local_unnamed_addr global ptr, align 8
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@PL_errors = external local_unnamed_addr global ptr, align 8
@PL_debug_pad = external global %struct.perl_debug_pad, align 8
@PL_hash_seed_set = external local_unnamed_addr global i8, align 1
@PL_hash_seed = external global [8 x i8], align 1
@PL_strtab = external local_unnamed_addr global ptr, align 8
@PL_sv_consts = external local_unnamed_addr global [35 x ptr], align 16
@environ = external local_unnamed_addr global ptr, align 8
@PL_origenviron = external local_unnamed_addr global ptr, align 8
@PL_clocktick = external local_unnamed_addr global i64, align 8
@PL_stashcache = external local_unnamed_addr global ptr, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"v5.22.1\00", align 1
@PL_patchlevel = external local_unnamed_addr global ptr, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"spec-cpu\00", align 1
@PL_osname = external local_unnamed_addr global ptr, align 8
@PL_registered_mros = external local_unnamed_addr global ptr, align 8
@ASCII_invlist = internal constant [5 x i64] [i64 2, i64 148565664, i64 0, i64 0, i64 128], align 16, !dbg !1159
@PL_XPosix_ptrs = external local_unnamed_addr global [16 x ptr], align 16
@XPosixAlnum_invlist = internal constant [1264 x i64] [i64 1261, i64 148565664, i64 1, i64 0, i64 48, i64 58, i64 65, i64 91, i64 97, i64 123, i64 170, i64 171, i64 181, i64 182, i64 186, i64 187, i64 192, i64 215, i64 216, i64 247, i64 248, i64 706, i64 710, i64 722, i64 736, i64 741, i64 748, i64 749, i64 750, i64 751, i64 837, i64 838, i64 880, i64 885, i64 886, i64 888, i64 890, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1014, i64 1015, i64 1154, i64 1162, i64 1328, i64 1329, i64 1367, i64 1369, i64 1370, i64 1377, i64 1416, i64 1456, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1480, i64 1488, i64 1515, i64 1520, i64 1523, i64 1552, i64 1563, i64 1568, i64 1624, i64 1625, i64 1642, i64 1646, i64 1748, i64 1749, i64 1757, i64 1761, i64 1769, i64 1773, i64 1789, i64 1791, i64 1792, i64 1808, i64 1856, i64 1869, i64 1970, i64 1984, i64 2027, i64 2036, i64 2038, i64 2042, i64 2043, i64 2048, i64 2072, i64 2074, i64 2093, i64 2112, i64 2137, i64 2208, i64 2227, i64 2276, i64 2282, i64 2288, i64 2364, i64 2365, i64 2381, i64 2382, i64 2385, i64 2389, i64 2404, i64 2406, i64 2416, i64 2417, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2493, i64 2501, i64 2503, i64 2505, i64 2507, i64 2509, i64 2510, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2532, i64 2534, i64 2546, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2637, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2662, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2749, i64 2758, i64 2759, i64 2762, i64 2763, i64 2765, i64 2768, i64 2769, i64 2784, i64 2788, i64 2790, i64 2800, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2877, i64 2885, i64 2887, i64 2889, i64 2891, i64 2893, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2916, i64 2918, i64 2928, i64 2929, i64 2930, i64 2946, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3021, i64 3024, i64 3025, i64 3031, i64 3032, i64 3046, i64 3056, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3141, i64 3142, i64 3145, i64 3146, i64 3149, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3172, i64 3174, i64 3184, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3261, i64 3269, i64 3270, i64 3273, i64 3274, i64 3277, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3300, i64 3302, i64 3312, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3397, i64 3398, i64 3401, i64 3402, i64 3405, i64 3406, i64 3407, i64 3415, i64 3416, i64 3424, i64 3428, i64 3430, i64 3440, i64 3450, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3558, i64 3568, i64 3570, i64 3572, i64 3585, i64 3643, i64 3648, i64 3655, i64 3661, i64 3662, i64 3664, i64 3674, i64 3713, i64 3715, i64 3716, i64 3717, i64 3719, i64 3721, i64 3722, i64 3723, i64 3725, i64 3726, i64 3732, i64 3736, i64 3737, i64 3744, i64 3745, i64 3748, i64 3749, i64 3750, i64 3751, i64 3752, i64 3754, i64 3756, i64 3757, i64 3770, i64 3771, i64 3774, i64 3776, i64 3781, i64 3782, i64 3783, i64 3789, i64 3790, i64 3792, i64 3802, i64 3804, i64 3808, i64 3840, i64 3841, i64 3872, i64 3882, i64 3904, i64 3912, i64 3913, i64 3949, i64 3953, i64 3970, i64 3976, i64 3992, i64 3993, i64 4029, i64 4096, i64 4151, i64 4152, i64 4153, i64 4155, i64 4170, i64 4176, i64 4195, i64 4197, i64 4201, i64 4206, i64 4231, i64 4238, i64 4239, i64 4240, i64 4250, i64 4252, i64 4254, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4347, i64 4348, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4959, i64 4960, i64 4992, i64 5008, i64 5024, i64 5109, i64 5121, i64 5741, i64 5743, i64 5760, i64 5761, i64 5787, i64 5792, i64 5867, i64 5870, i64 5881, i64 5888, i64 5901, i64 5902, i64 5908, i64 5920, i64 5940, i64 5952, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6016, i64 6068, i64 6070, i64 6089, i64 6103, i64 6104, i64 6108, i64 6109, i64 6112, i64 6122, i64 6160, i64 6170, i64 6176, i64 6264, i64 6272, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6457, i64 6470, i64 6510, i64 6512, i64 6517, i64 6528, i64 6572, i64 6576, i64 6602, i64 6608, i64 6618, i64 6656, i64 6684, i64 6688, i64 6751, i64 6753, i64 6773, i64 6784, i64 6794, i64 6800, i64 6810, i64 6823, i64 6824, i64 6912, i64 6964, i64 6965, i64 6980, i64 6981, i64 6988, i64 6992, i64 7002, i64 7040, i64 7082, i64 7084, i64 7142, i64 7143, i64 7154, i64 7168, i64 7222, i64 7232, i64 7242, i64 7245, i64 7294, i64 7401, i64 7405, i64 7406, i64 7412, i64 7413, i64 7415, i64 7424, i64 7616, i64 7655, i64 7669, i64 7680, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8305, i64 8306, i64 8319, i64 8320, i64 8336, i64 8349, i64 8450, i64 8451, i64 8455, i64 8456, i64 8458, i64 8468, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8495, i64 8506, i64 8508, i64 8512, i64 8517, i64 8522, i64 8526, i64 8527, i64 8544, i64 8585, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11493, i64 11499, i64 11503, i64 11506, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11632, i64 11648, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11776, i64 11823, i64 11824, i64 12293, i64 12296, i64 12321, i64 12330, i64 12337, i64 12342, i64 12344, i64 12349, i64 12353, i64 12439, i64 12445, i64 12448, i64 12449, i64 12539, i64 12540, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12704, i64 12731, i64 12784, i64 12800, i64 13312, i64 19894, i64 19968, i64 40909, i64 40960, i64 42125, i64 42192, i64 42238, i64 42240, i64 42509, i64 42512, i64 42540, i64 42560, i64 42607, i64 42612, i64 42620, i64 42623, i64 42654, i64 42655, i64 42736, i64 42775, i64 42784, i64 42786, i64 42889, i64 42891, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 42999, i64 43010, i64 43011, i64 43014, i64 43015, i64 43019, i64 43020, i64 43048, i64 43072, i64 43124, i64 43136, i64 43204, i64 43216, i64 43226, i64 43250, i64 43256, i64 43259, i64 43260, i64 43264, i64 43307, i64 43312, i64 43347, i64 43360, i64 43389, i64 43392, i64 43443, i64 43444, i64 43456, i64 43471, i64 43482, i64 43488, i64 43493, i64 43494, i64 43519, i64 43520, i64 43575, i64 43584, i64 43598, i64 43600, i64 43610, i64 43616, i64 43639, i64 43642, i64 43643, i64 43646, i64 43711, i64 43712, i64 43713, i64 43714, i64 43715, i64 43739, i64 43742, i64 43744, i64 43760, i64 43762, i64 43766, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 43968, i64 44011, i64 44016, i64 44026, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 63744, i64 64110, i64 64112, i64 64218, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64297, i64 64298, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64434, i64 64467, i64 64830, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65020, i64 65136, i64 65141, i64 65142, i64 65277, i64 65296, i64 65306, i64 65313, i64 65339, i64 65345, i64 65371, i64 65382, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65856, i64 65909, i64 66176, i64 66205, i64 66208, i64 66257, i64 66304, i64 66336, i64 66352, i64 66379, i64 66384, i64 66427, i64 66432, i64 66462, i64 66464, i64 66500, i64 66504, i64 66512, i64 66513, i64 66518, i64 66560, i64 66718, i64 66720, i64 66730, i64 66816, i64 66856, i64 66864, i64 66916, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67680, i64 67703, i64 67712, i64 67743, i64 67840, i64 67862, i64 67872, i64 67898, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68100, i64 68101, i64 68103, i64 68108, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68192, i64 68221, i64 68224, i64 68253, i64 68288, i64 68296, i64 68297, i64 68325, i64 68352, i64 68406, i64 68416, i64 68438, i64 68448, i64 68467, i64 68480, i64 68498, i64 68608, i64 68681, i64 69632, i64 69702, i64 69734, i64 69744, i64 69762, i64 69817, i64 69840, i64 69865, i64 69872, i64 69882, i64 69888, i64 69939, i64 69942, i64 69952, i64 69968, i64 70003, i64 70006, i64 70007, i64 70016, i64 70080, i64 70081, i64 70085, i64 70096, i64 70107, i64 70144, i64 70162, i64 70163, i64 70197, i64 70199, i64 70200, i64 70320, i64 70377, i64 70384, i64 70394, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70461, i64 70469, i64 70471, i64 70473, i64 70475, i64 70477, i64 70487, i64 70488, i64 70493, i64 70500, i64 70784, i64 70850, i64 70852, i64 70854, i64 70855, i64 70856, i64 70864, i64 70874, i64 71040, i64 71094, i64 71096, i64 71103, i64 71168, i64 71231, i64 71232, i64 71233, i64 71236, i64 71237, i64 71248, i64 71258, i64 71296, i64 71350, i64 71360, i64 71370, i64 71840, i64 71914, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92768, i64 92778, i64 92880, i64 92910, i64 92928, i64 92983, i64 92992, i64 92996, i64 93008, i64 93018, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94079, i64 94099, i64 94112, i64 110592, i64 110594, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113822, i64 113823, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120513, i64 120514, i64 120539, i64 120540, i64 120571, i64 120572, i64 120597, i64 120598, i64 120629, i64 120630, i64 120655, i64 120656, i64 120687, i64 120688, i64 120713, i64 120714, i64 120745, i64 120746, i64 120771, i64 120772, i64 120780, i64 120782, i64 120832, i64 124928, i64 125125, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370, i64 131072, i64 173783, i64 173824, i64 177973, i64 177984, i64 178206, i64 194560, i64 195102], align 16, !dbg !1166
@XPosixAlpha_invlist = internal constant [1204 x i64] [i64 1201, i64 148565664, i64 1, i64 0, i64 65, i64 91, i64 97, i64 123, i64 170, i64 171, i64 181, i64 182, i64 186, i64 187, i64 192, i64 215, i64 216, i64 247, i64 248, i64 706, i64 710, i64 722, i64 736, i64 741, i64 748, i64 749, i64 750, i64 751, i64 837, i64 838, i64 880, i64 885, i64 886, i64 888, i64 890, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1014, i64 1015, i64 1154, i64 1162, i64 1328, i64 1329, i64 1367, i64 1369, i64 1370, i64 1377, i64 1416, i64 1456, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1480, i64 1488, i64 1515, i64 1520, i64 1523, i64 1552, i64 1563, i64 1568, i64 1624, i64 1625, i64 1632, i64 1646, i64 1748, i64 1749, i64 1757, i64 1761, i64 1769, i64 1773, i64 1776, i64 1786, i64 1789, i64 1791, i64 1792, i64 1808, i64 1856, i64 1869, i64 1970, i64 1994, i64 2027, i64 2036, i64 2038, i64 2042, i64 2043, i64 2048, i64 2072, i64 2074, i64 2093, i64 2112, i64 2137, i64 2208, i64 2227, i64 2276, i64 2282, i64 2288, i64 2364, i64 2365, i64 2381, i64 2382, i64 2385, i64 2389, i64 2404, i64 2417, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2493, i64 2501, i64 2503, i64 2505, i64 2507, i64 2509, i64 2510, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2532, i64 2544, i64 2546, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2637, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2672, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2749, i64 2758, i64 2759, i64 2762, i64 2763, i64 2765, i64 2768, i64 2769, i64 2784, i64 2788, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2877, i64 2885, i64 2887, i64 2889, i64 2891, i64 2893, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2916, i64 2929, i64 2930, i64 2946, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3021, i64 3024, i64 3025, i64 3031, i64 3032, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3141, i64 3142, i64 3145, i64 3146, i64 3149, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3172, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3261, i64 3269, i64 3270, i64 3273, i64 3274, i64 3277, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3300, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3397, i64 3398, i64 3401, i64 3402, i64 3405, i64 3406, i64 3407, i64 3415, i64 3416, i64 3424, i64 3428, i64 3450, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3570, i64 3572, i64 3585, i64 3643, i64 3648, i64 3655, i64 3661, i64 3662, i64 3713, i64 3715, i64 3716, i64 3717, i64 3719, i64 3721, i64 3722, i64 3723, i64 3725, i64 3726, i64 3732, i64 3736, i64 3737, i64 3744, i64 3745, i64 3748, i64 3749, i64 3750, i64 3751, i64 3752, i64 3754, i64 3756, i64 3757, i64 3770, i64 3771, i64 3774, i64 3776, i64 3781, i64 3782, i64 3783, i64 3789, i64 3790, i64 3804, i64 3808, i64 3840, i64 3841, i64 3904, i64 3912, i64 3913, i64 3949, i64 3953, i64 3970, i64 3976, i64 3992, i64 3993, i64 4029, i64 4096, i64 4151, i64 4152, i64 4153, i64 4155, i64 4160, i64 4176, i64 4195, i64 4197, i64 4201, i64 4206, i64 4231, i64 4238, i64 4239, i64 4252, i64 4254, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4347, i64 4348, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4959, i64 4960, i64 4992, i64 5008, i64 5024, i64 5109, i64 5121, i64 5741, i64 5743, i64 5760, i64 5761, i64 5787, i64 5792, i64 5867, i64 5870, i64 5881, i64 5888, i64 5901, i64 5902, i64 5908, i64 5920, i64 5940, i64 5952, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6016, i64 6068, i64 6070, i64 6089, i64 6103, i64 6104, i64 6108, i64 6109, i64 6176, i64 6264, i64 6272, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6457, i64 6480, i64 6510, i64 6512, i64 6517, i64 6528, i64 6572, i64 6576, i64 6602, i64 6656, i64 6684, i64 6688, i64 6751, i64 6753, i64 6773, i64 6823, i64 6824, i64 6912, i64 6964, i64 6965, i64 6980, i64 6981, i64 6988, i64 7040, i64 7082, i64 7084, i64 7088, i64 7098, i64 7142, i64 7143, i64 7154, i64 7168, i64 7222, i64 7245, i64 7248, i64 7258, i64 7294, i64 7401, i64 7405, i64 7406, i64 7412, i64 7413, i64 7415, i64 7424, i64 7616, i64 7655, i64 7669, i64 7680, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8305, i64 8306, i64 8319, i64 8320, i64 8336, i64 8349, i64 8450, i64 8451, i64 8455, i64 8456, i64 8458, i64 8468, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8495, i64 8506, i64 8508, i64 8512, i64 8517, i64 8522, i64 8526, i64 8527, i64 8544, i64 8585, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11493, i64 11499, i64 11503, i64 11506, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11632, i64 11648, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11776, i64 11823, i64 11824, i64 12293, i64 12296, i64 12321, i64 12330, i64 12337, i64 12342, i64 12344, i64 12349, i64 12353, i64 12439, i64 12445, i64 12448, i64 12449, i64 12539, i64 12540, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12704, i64 12731, i64 12784, i64 12800, i64 13312, i64 19894, i64 19968, i64 40909, i64 40960, i64 42125, i64 42192, i64 42238, i64 42240, i64 42509, i64 42512, i64 42528, i64 42538, i64 42540, i64 42560, i64 42607, i64 42612, i64 42620, i64 42623, i64 42654, i64 42655, i64 42736, i64 42775, i64 42784, i64 42786, i64 42889, i64 42891, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 42999, i64 43010, i64 43011, i64 43014, i64 43015, i64 43019, i64 43020, i64 43048, i64 43072, i64 43124, i64 43136, i64 43204, i64 43250, i64 43256, i64 43259, i64 43260, i64 43274, i64 43307, i64 43312, i64 43347, i64 43360, i64 43389, i64 43392, i64 43443, i64 43444, i64 43456, i64 43471, i64 43472, i64 43488, i64 43493, i64 43494, i64 43504, i64 43514, i64 43519, i64 43520, i64 43575, i64 43584, i64 43598, i64 43616, i64 43639, i64 43642, i64 43643, i64 43646, i64 43711, i64 43712, i64 43713, i64 43714, i64 43715, i64 43739, i64 43742, i64 43744, i64 43760, i64 43762, i64 43766, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 43968, i64 44011, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 63744, i64 64110, i64 64112, i64 64218, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64297, i64 64298, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64434, i64 64467, i64 64830, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65020, i64 65136, i64 65141, i64 65142, i64 65277, i64 65313, i64 65339, i64 65345, i64 65371, i64 65382, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65856, i64 65909, i64 66176, i64 66205, i64 66208, i64 66257, i64 66304, i64 66336, i64 66352, i64 66379, i64 66384, i64 66427, i64 66432, i64 66462, i64 66464, i64 66500, i64 66504, i64 66512, i64 66513, i64 66518, i64 66560, i64 66718, i64 66816, i64 66856, i64 66864, i64 66916, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67680, i64 67703, i64 67712, i64 67743, i64 67840, i64 67862, i64 67872, i64 67898, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68100, i64 68101, i64 68103, i64 68108, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68192, i64 68221, i64 68224, i64 68253, i64 68288, i64 68296, i64 68297, i64 68325, i64 68352, i64 68406, i64 68416, i64 68438, i64 68448, i64 68467, i64 68480, i64 68498, i64 68608, i64 68681, i64 69632, i64 69702, i64 69762, i64 69817, i64 69840, i64 69865, i64 69888, i64 69939, i64 69968, i64 70003, i64 70006, i64 70007, i64 70016, i64 70080, i64 70081, i64 70085, i64 70106, i64 70107, i64 70144, i64 70162, i64 70163, i64 70197, i64 70199, i64 70200, i64 70320, i64 70377, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70461, i64 70469, i64 70471, i64 70473, i64 70475, i64 70477, i64 70487, i64 70488, i64 70493, i64 70500, i64 70784, i64 70850, i64 70852, i64 70854, i64 70855, i64 70856, i64 71040, i64 71094, i64 71096, i64 71103, i64 71168, i64 71231, i64 71232, i64 71233, i64 71236, i64 71237, i64 71296, i64 71350, i64 71840, i64 71904, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92880, i64 92910, i64 92928, i64 92983, i64 92992, i64 92996, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94079, i64 94099, i64 94112, i64 110592, i64 110594, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113822, i64 113823, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120513, i64 120514, i64 120539, i64 120540, i64 120571, i64 120572, i64 120597, i64 120598, i64 120629, i64 120630, i64 120655, i64 120656, i64 120687, i64 120688, i64 120713, i64 120714, i64 120745, i64 120746, i64 120771, i64 120772, i64 120780, i64 124928, i64 125125, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370, i64 131072, i64 173783, i64 173824, i64 177973, i64 177984, i64 178206, i64 194560, i64 195102], align 16, !dbg !1171
@XPosixBlank_invlist = internal constant [20 x i64] [i64 17, i64 148565664, i64 1, i64 0, i64 9, i64 10, i64 32, i64 33, i64 160, i64 161, i64 5760, i64 5761, i64 8192, i64 8203, i64 8239, i64 8240, i64 8287, i64 8288, i64 12288, i64 12289], align 16, !dbg !1176
@Cased_invlist = internal constant [258 x i64] [i64 255, i64 148565664, i64 1, i64 0, i64 65, i64 91, i64 97, i64 123, i64 170, i64 171, i64 181, i64 182, i64 186, i64 187, i64 192, i64 215, i64 216, i64 247, i64 248, i64 443, i64 444, i64 448, i64 452, i64 660, i64 661, i64 697, i64 704, i64 706, i64 736, i64 741, i64 837, i64 838, i64 880, i64 884, i64 886, i64 888, i64 890, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1014, i64 1015, i64 1154, i64 1162, i64 1328, i64 1329, i64 1367, i64 1377, i64 1416, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 7424, i64 7616, i64 7680, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8305, i64 8306, i64 8319, i64 8320, i64 8336, i64 8349, i64 8450, i64 8451, i64 8455, i64 8456, i64 8458, i64 8468, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8495, i64 8501, i64 8505, i64 8506, i64 8508, i64 8512, i64 8517, i64 8522, i64 8526, i64 8527, i64 8544, i64 8576, i64 8579, i64 8581, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11493, i64 11499, i64 11503, i64 11506, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 42560, i64 42606, i64 42624, i64 42654, i64 42786, i64 42888, i64 42891, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 43000, i64 43003, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 64256, i64 64263, i64 64275, i64 64280, i64 65313, i64 65339, i64 65345, i64 65371, i64 66560, i64 66640, i64 71840, i64 71904, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120513, i64 120514, i64 120539, i64 120540, i64 120571, i64 120572, i64 120597, i64 120598, i64 120629, i64 120630, i64 120655, i64 120656, i64 120687, i64 120688, i64 120713, i64 120714, i64 120745, i64 120746, i64 120771, i64 120772, i64 120780, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370], align 16, !dbg !1181
@XPosixCntrl_invlist = internal constant [7 x i64] [i64 4, i64 148565664, i64 0, i64 0, i64 32, i64 127, i64 160], align 16, !dbg !1186
@XPosixDigit_invlist = internal constant [104 x i64] [i64 101, i64 148565664, i64 1, i64 0, i64 48, i64 58, i64 1632, i64 1642, i64 1776, i64 1786, i64 1984, i64 1994, i64 2406, i64 2416, i64 2534, i64 2544, i64 2662, i64 2672, i64 2790, i64 2800, i64 2918, i64 2928, i64 3046, i64 3056, i64 3174, i64 3184, i64 3302, i64 3312, i64 3430, i64 3440, i64 3558, i64 3568, i64 3664, i64 3674, i64 3792, i64 3802, i64 3872, i64 3882, i64 4160, i64 4170, i64 4240, i64 4250, i64 6112, i64 6122, i64 6160, i64 6170, i64 6470, i64 6480, i64 6608, i64 6618, i64 6784, i64 6794, i64 6800, i64 6810, i64 6992, i64 7002, i64 7088, i64 7098, i64 7232, i64 7242, i64 7248, i64 7258, i64 42528, i64 42538, i64 43216, i64 43226, i64 43264, i64 43274, i64 43472, i64 43482, i64 43504, i64 43514, i64 43600, i64 43610, i64 44016, i64 44026, i64 65296, i64 65306, i64 66720, i64 66730, i64 69734, i64 69744, i64 69872, i64 69882, i64 69942, i64 69952, i64 70096, i64 70106, i64 70384, i64 70394, i64 70864, i64 70874, i64 71248, i64 71258, i64 71360, i64 71370, i64 71904, i64 71914, i64 92768, i64 92778, i64 93008, i64 93018, i64 120782, i64 120832], align 16, !dbg !1191
@XPosixGraph_invlist = internal constant [1214 x i64] [i64 1211, i64 148565664, i64 1, i64 0, i64 33, i64 127, i64 161, i64 888, i64 890, i64 896, i64 900, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1328, i64 1329, i64 1367, i64 1369, i64 1376, i64 1377, i64 1416, i64 1417, i64 1419, i64 1421, i64 1424, i64 1425, i64 1480, i64 1488, i64 1515, i64 1520, i64 1525, i64 1536, i64 1565, i64 1566, i64 1806, i64 1807, i64 1867, i64 1869, i64 1970, i64 1984, i64 2043, i64 2048, i64 2094, i64 2096, i64 2111, i64 2112, i64 2140, i64 2142, i64 2143, i64 2208, i64 2227, i64 2276, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2492, i64 2501, i64 2503, i64 2505, i64 2507, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2532, i64 2534, i64 2556, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2620, i64 2621, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2638, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2662, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2748, i64 2758, i64 2759, i64 2762, i64 2763, i64 2766, i64 2768, i64 2769, i64 2784, i64 2788, i64 2790, i64 2802, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2876, i64 2885, i64 2887, i64 2889, i64 2891, i64 2894, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2916, i64 2918, i64 2936, i64 2946, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3022, i64 3024, i64 3025, i64 3031, i64 3032, i64 3046, i64 3067, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3141, i64 3142, i64 3145, i64 3146, i64 3150, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3172, i64 3174, i64 3184, i64 3192, i64 3200, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3260, i64 3269, i64 3270, i64 3273, i64 3274, i64 3278, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3300, i64 3302, i64 3312, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3397, i64 3398, i64 3401, i64 3402, i64 3407, i64 3415, i64 3416, i64 3424, i64 3428, i64 3430, i64 3446, i64 3449, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3530, i64 3531, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3558, i64 3568, i64 3570, i64 3573, i64 3585, i64 3643, i64 3647, i64 3676, i64 3713, i64 3715, i64 3716, i64 3717, i64 3719, i64 3721, i64 3722, i64 3723, i64 3725, i64 3726, i64 3732, i64 3736, i64 3737, i64 3744, i64 3745, i64 3748, i64 3749, i64 3750, i64 3751, i64 3752, i64 3754, i64 3756, i64 3757, i64 3770, i64 3771, i64 3774, i64 3776, i64 3781, i64 3782, i64 3783, i64 3784, i64 3790, i64 3792, i64 3802, i64 3804, i64 3808, i64 3840, i64 3912, i64 3913, i64 3949, i64 3953, i64 3992, i64 3993, i64 4029, i64 4030, i64 4045, i64 4046, i64 4059, i64 4096, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4957, i64 4989, i64 4992, i64 5018, i64 5024, i64 5109, i64 5120, i64 5760, i64 5761, i64 5789, i64 5792, i64 5881, i64 5888, i64 5901, i64 5902, i64 5909, i64 5920, i64 5943, i64 5952, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6016, i64 6110, i64 6112, i64 6122, i64 6128, i64 6138, i64 6144, i64 6159, i64 6160, i64 6170, i64 6176, i64 6264, i64 6272, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6460, i64 6464, i64 6465, i64 6468, i64 6510, i64 6512, i64 6517, i64 6528, i64 6572, i64 6576, i64 6602, i64 6608, i64 6619, i64 6622, i64 6684, i64 6686, i64 6751, i64 6752, i64 6781, i64 6783, i64 6794, i64 6800, i64 6810, i64 6816, i64 6830, i64 6832, i64 6847, i64 6912, i64 6988, i64 6992, i64 7037, i64 7040, i64 7156, i64 7164, i64 7224, i64 7227, i64 7242, i64 7245, i64 7296, i64 7360, i64 7368, i64 7376, i64 7415, i64 7416, i64 7418, i64 7424, i64 7670, i64 7676, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8133, i64 8134, i64 8148, i64 8150, i64 8156, i64 8157, i64 8176, i64 8178, i64 8181, i64 8182, i64 8191, i64 8203, i64 8232, i64 8234, i64 8239, i64 8240, i64 8287, i64 8288, i64 8293, i64 8294, i64 8306, i64 8308, i64 8335, i64 8336, i64 8349, i64 8352, i64 8382, i64 8400, i64 8433, i64 8448, i64 8586, i64 8592, i64 9211, i64 9216, i64 9255, i64 9280, i64 9291, i64 9312, i64 11124, i64 11126, i64 11158, i64 11160, i64 11194, i64 11197, i64 11209, i64 11210, i64 11218, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11508, i64 11513, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11633, i64 11647, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11843, i64 11904, i64 11930, i64 11931, i64 12020, i64 12032, i64 12246, i64 12272, i64 12284, i64 12289, i64 12352, i64 12353, i64 12439, i64 12441, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12688, i64 12731, i64 12736, i64 12772, i64 12784, i64 12831, i64 12832, i64 13055, i64 13056, i64 19894, i64 19904, i64 40909, i64 40960, i64 42125, i64 42128, i64 42183, i64 42192, i64 42540, i64 42560, i64 42654, i64 42655, i64 42744, i64 42752, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 42999, i64 43052, i64 43056, i64 43066, i64 43072, i64 43128, i64 43136, i64 43205, i64 43214, i64 43226, i64 43232, i64 43260, i64 43264, i64 43348, i64 43359, i64 43389, i64 43392, i64 43470, i64 43471, i64 43482, i64 43486, i64 43519, i64 43520, i64 43575, i64 43584, i64 43598, i64 43600, i64 43610, i64 43612, i64 43715, i64 43739, i64 43767, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43872, i64 43876, i64 43878, i64 43968, i64 44014, i64 44016, i64 44026, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 57344, i64 64110, i64 64112, i64 64218, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64450, i64 64467, i64 64832, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65022, i64 65024, i64 65050, i64 65056, i64 65070, i64 65072, i64 65107, i64 65108, i64 65127, i64 65128, i64 65132, i64 65136, i64 65141, i64 65142, i64 65277, i64 65279, i64 65280, i64 65281, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65504, i64 65511, i64 65512, i64 65519, i64 65529, i64 65534, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65792, i64 65795, i64 65799, i64 65844, i64 65847, i64 65933, i64 65936, i64 65948, i64 65952, i64 65953, i64 66000, i64 66046, i64 66176, i64 66205, i64 66208, i64 66257, i64 66272, i64 66300, i64 66304, i64 66340, i64 66352, i64 66379, i64 66384, i64 66427, i64 66432, i64 66462, i64 66463, i64 66500, i64 66504, i64 66518, i64 66560, i64 66718, i64 66720, i64 66730, i64 66816, i64 66856, i64 66864, i64 66916, i64 66927, i64 66928, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67671, i64 67743, i64 67751, i64 67760, i64 67840, i64 67868, i64 67871, i64 67898, i64 67903, i64 67904, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68100, i64 68101, i64 68103, i64 68108, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68152, i64 68155, i64 68159, i64 68168, i64 68176, i64 68185, i64 68192, i64 68256, i64 68288, i64 68327, i64 68331, i64 68343, i64 68352, i64 68406, i64 68409, i64 68438, i64 68440, i64 68467, i64 68472, i64 68498, i64 68505, i64 68509, i64 68521, i64 68528, i64 68608, i64 68681, i64 69216, i64 69247, i64 69632, i64 69710, i64 69714, i64 69744, i64 69759, i64 69826, i64 69840, i64 69865, i64 69872, i64 69882, i64 69888, i64 69941, i64 69942, i64 69956, i64 69968, i64 70007, i64 70016, i64 70089, i64 70093, i64 70094, i64 70096, i64 70107, i64 70113, i64 70133, i64 70144, i64 70162, i64 70163, i64 70206, i64 70320, i64 70379, i64 70384, i64 70394, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70460, i64 70469, i64 70471, i64 70473, i64 70475, i64 70478, i64 70487, i64 70488, i64 70493, i64 70500, i64 70502, i64 70509, i64 70512, i64 70517, i64 70784, i64 70856, i64 70864, i64 70874, i64 71040, i64 71094, i64 71096, i64 71114, i64 71168, i64 71237, i64 71248, i64 71258, i64 71296, i64 71352, i64 71360, i64 71370, i64 71840, i64 71923, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 74864, i64 74869, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92768, i64 92778, i64 92782, i64 92784, i64 92880, i64 92910, i64 92912, i64 92918, i64 92928, i64 92998, i64 93008, i64 93018, i64 93019, i64 93026, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94079, i64 94095, i64 94112, i64 110592, i64 110594, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113820, i64 113828, i64 118784, i64 119030, i64 119040, i64 119079, i64 119081, i64 119262, i64 119296, i64 119366, i64 119552, i64 119639, i64 119648, i64 119666, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120780, i64 120782, i64 120832, i64 124928, i64 125125, i64 125127, i64 125143, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 126704, i64 126706, i64 126976, i64 127020, i64 127024, i64 127124, i64 127136, i64 127151, i64 127153, i64 127168, i64 127169, i64 127184, i64 127185, i64 127222, i64 127232, i64 127245, i64 127248, i64 127279, i64 127280, i64 127340, i64 127344, i64 127387, i64 127462, i64 127491, i64 127504, i64 127547, i64 127552, i64 127561, i64 127568, i64 127570, i64 127744, i64 127789, i64 127792, i64 127870, i64 127872, i64 127951, i64 127956, i64 127992, i64 128000, i64 128255, i64 128256, i64 128331, i64 128336, i64 128378, i64 128379, i64 128420, i64 128421, i64 128579, i64 128581, i64 128720, i64 128736, i64 128749, i64 128752, i64 128756, i64 128768, i64 128884, i64 128896, i64 128981, i64 129024, i64 129036, i64 129040, i64 129096, i64 129104, i64 129114, i64 129120, i64 129160, i64 129168, i64 129198, i64 131072, i64 173783, i64 173824, i64 177973, i64 177984, i64 178206, i64 194560, i64 195102, i64 917505, i64 917506, i64 917536, i64 917632, i64 917760, i64 918000, i64 983040, i64 1048574, i64 1048576, i64 1114110], align 16, !dbg !1196
@XPosixLower_invlist = internal constant [1270 x i64] [i64 1267, i64 148565664, i64 1, i64 0, i64 97, i64 123, i64 170, i64 171, i64 181, i64 182, i64 186, i64 187, i64 223, i64 247, i64 248, i64 256, i64 257, i64 258, i64 259, i64 260, i64 261, i64 262, i64 263, i64 264, i64 265, i64 266, i64 267, i64 268, i64 269, i64 270, i64 271, i64 272, i64 273, i64 274, i64 275, i64 276, i64 277, i64 278, i64 279, i64 280, i64 281, i64 282, i64 283, i64 284, i64 285, i64 286, i64 287, i64 288, i64 289, i64 290, i64 291, i64 292, i64 293, i64 294, i64 295, i64 296, i64 297, i64 298, i64 299, i64 300, i64 301, i64 302, i64 303, i64 304, i64 305, i64 306, i64 307, i64 308, i64 309, i64 310, i64 311, i64 313, i64 314, i64 315, i64 316, i64 317, i64 318, i64 319, i64 320, i64 321, i64 322, i64 323, i64 324, i64 325, i64 326, i64 327, i64 328, i64 330, i64 331, i64 332, i64 333, i64 334, i64 335, i64 336, i64 337, i64 338, i64 339, i64 340, i64 341, i64 342, i64 343, i64 344, i64 345, i64 346, i64 347, i64 348, i64 349, i64 350, i64 351, i64 352, i64 353, i64 354, i64 355, i64 356, i64 357, i64 358, i64 359, i64 360, i64 361, i64 362, i64 363, i64 364, i64 365, i64 366, i64 367, i64 368, i64 369, i64 370, i64 371, i64 372, i64 373, i64 374, i64 375, i64 376, i64 378, i64 379, i64 380, i64 381, i64 382, i64 385, i64 387, i64 388, i64 389, i64 390, i64 392, i64 393, i64 396, i64 398, i64 402, i64 403, i64 405, i64 406, i64 409, i64 412, i64 414, i64 415, i64 417, i64 418, i64 419, i64 420, i64 421, i64 422, i64 424, i64 425, i64 426, i64 428, i64 429, i64 430, i64 432, i64 433, i64 436, i64 437, i64 438, i64 439, i64 441, i64 443, i64 445, i64 448, i64 454, i64 455, i64 457, i64 458, i64 460, i64 461, i64 462, i64 463, i64 464, i64 465, i64 466, i64 467, i64 468, i64 469, i64 470, i64 471, i64 472, i64 473, i64 474, i64 475, i64 476, i64 478, i64 479, i64 480, i64 481, i64 482, i64 483, i64 484, i64 485, i64 486, i64 487, i64 488, i64 489, i64 490, i64 491, i64 492, i64 493, i64 494, i64 495, i64 497, i64 499, i64 500, i64 501, i64 502, i64 505, i64 506, i64 507, i64 508, i64 509, i64 510, i64 511, i64 512, i64 513, i64 514, i64 515, i64 516, i64 517, i64 518, i64 519, i64 520, i64 521, i64 522, i64 523, i64 524, i64 525, i64 526, i64 527, i64 528, i64 529, i64 530, i64 531, i64 532, i64 533, i64 534, i64 535, i64 536, i64 537, i64 538, i64 539, i64 540, i64 541, i64 542, i64 543, i64 544, i64 545, i64 546, i64 547, i64 548, i64 549, i64 550, i64 551, i64 552, i64 553, i64 554, i64 555, i64 556, i64 557, i64 558, i64 559, i64 560, i64 561, i64 562, i64 563, i64 570, i64 572, i64 573, i64 575, i64 577, i64 578, i64 579, i64 583, i64 584, i64 585, i64 586, i64 587, i64 588, i64 589, i64 590, i64 591, i64 660, i64 661, i64 697, i64 704, i64 706, i64 736, i64 741, i64 837, i64 838, i64 881, i64 882, i64 883, i64 884, i64 887, i64 888, i64 890, i64 894, i64 912, i64 913, i64 940, i64 975, i64 976, i64 978, i64 981, i64 984, i64 985, i64 986, i64 987, i64 988, i64 989, i64 990, i64 991, i64 992, i64 993, i64 994, i64 995, i64 996, i64 997, i64 998, i64 999, i64 1000, i64 1001, i64 1002, i64 1003, i64 1004, i64 1005, i64 1006, i64 1007, i64 1012, i64 1013, i64 1014, i64 1016, i64 1017, i64 1019, i64 1021, i64 1072, i64 1120, i64 1121, i64 1122, i64 1123, i64 1124, i64 1125, i64 1126, i64 1127, i64 1128, i64 1129, i64 1130, i64 1131, i64 1132, i64 1133, i64 1134, i64 1135, i64 1136, i64 1137, i64 1138, i64 1139, i64 1140, i64 1141, i64 1142, i64 1143, i64 1144, i64 1145, i64 1146, i64 1147, i64 1148, i64 1149, i64 1150, i64 1151, i64 1152, i64 1153, i64 1154, i64 1163, i64 1164, i64 1165, i64 1166, i64 1167, i64 1168, i64 1169, i64 1170, i64 1171, i64 1172, i64 1173, i64 1174, i64 1175, i64 1176, i64 1177, i64 1178, i64 1179, i64 1180, i64 1181, i64 1182, i64 1183, i64 1184, i64 1185, i64 1186, i64 1187, i64 1188, i64 1189, i64 1190, i64 1191, i64 1192, i64 1193, i64 1194, i64 1195, i64 1196, i64 1197, i64 1198, i64 1199, i64 1200, i64 1201, i64 1202, i64 1203, i64 1204, i64 1205, i64 1206, i64 1207, i64 1208, i64 1209, i64 1210, i64 1211, i64 1212, i64 1213, i64 1214, i64 1215, i64 1216, i64 1218, i64 1219, i64 1220, i64 1221, i64 1222, i64 1223, i64 1224, i64 1225, i64 1226, i64 1227, i64 1228, i64 1229, i64 1230, i64 1232, i64 1233, i64 1234, i64 1235, i64 1236, i64 1237, i64 1238, i64 1239, i64 1240, i64 1241, i64 1242, i64 1243, i64 1244, i64 1245, i64 1246, i64 1247, i64 1248, i64 1249, i64 1250, i64 1251, i64 1252, i64 1253, i64 1254, i64 1255, i64 1256, i64 1257, i64 1258, i64 1259, i64 1260, i64 1261, i64 1262, i64 1263, i64 1264, i64 1265, i64 1266, i64 1267, i64 1268, i64 1269, i64 1270, i64 1271, i64 1272, i64 1273, i64 1274, i64 1275, i64 1276, i64 1277, i64 1278, i64 1279, i64 1280, i64 1281, i64 1282, i64 1283, i64 1284, i64 1285, i64 1286, i64 1287, i64 1288, i64 1289, i64 1290, i64 1291, i64 1292, i64 1293, i64 1294, i64 1295, i64 1296, i64 1297, i64 1298, i64 1299, i64 1300, i64 1301, i64 1302, i64 1303, i64 1304, i64 1305, i64 1306, i64 1307, i64 1308, i64 1309, i64 1310, i64 1311, i64 1312, i64 1313, i64 1314, i64 1315, i64 1316, i64 1317, i64 1318, i64 1319, i64 1320, i64 1321, i64 1322, i64 1323, i64 1324, i64 1325, i64 1326, i64 1327, i64 1328, i64 1377, i64 1416, i64 7424, i64 7616, i64 7681, i64 7682, i64 7683, i64 7684, i64 7685, i64 7686, i64 7687, i64 7688, i64 7689, i64 7690, i64 7691, i64 7692, i64 7693, i64 7694, i64 7695, i64 7696, i64 7697, i64 7698, i64 7699, i64 7700, i64 7701, i64 7702, i64 7703, i64 7704, i64 7705, i64 7706, i64 7707, i64 7708, i64 7709, i64 7710, i64 7711, i64 7712, i64 7713, i64 7714, i64 7715, i64 7716, i64 7717, i64 7718, i64 7719, i64 7720, i64 7721, i64 7722, i64 7723, i64 7724, i64 7725, i64 7726, i64 7727, i64 7728, i64 7729, i64 7730, i64 7731, i64 7732, i64 7733, i64 7734, i64 7735, i64 7736, i64 7737, i64 7738, i64 7739, i64 7740, i64 7741, i64 7742, i64 7743, i64 7744, i64 7745, i64 7746, i64 7747, i64 7748, i64 7749, i64 7750, i64 7751, i64 7752, i64 7753, i64 7754, i64 7755, i64 7756, i64 7757, i64 7758, i64 7759, i64 7760, i64 7761, i64 7762, i64 7763, i64 7764, i64 7765, i64 7766, i64 7767, i64 7768, i64 7769, i64 7770, i64 7771, i64 7772, i64 7773, i64 7774, i64 7775, i64 7776, i64 7777, i64 7778, i64 7779, i64 7780, i64 7781, i64 7782, i64 7783, i64 7784, i64 7785, i64 7786, i64 7787, i64 7788, i64 7789, i64 7790, i64 7791, i64 7792, i64 7793, i64 7794, i64 7795, i64 7796, i64 7797, i64 7798, i64 7799, i64 7800, i64 7801, i64 7802, i64 7803, i64 7804, i64 7805, i64 7806, i64 7807, i64 7808, i64 7809, i64 7810, i64 7811, i64 7812, i64 7813, i64 7814, i64 7815, i64 7816, i64 7817, i64 7818, i64 7819, i64 7820, i64 7821, i64 7822, i64 7823, i64 7824, i64 7825, i64 7826, i64 7827, i64 7828, i64 7829, i64 7838, i64 7839, i64 7840, i64 7841, i64 7842, i64 7843, i64 7844, i64 7845, i64 7846, i64 7847, i64 7848, i64 7849, i64 7850, i64 7851, i64 7852, i64 7853, i64 7854, i64 7855, i64 7856, i64 7857, i64 7858, i64 7859, i64 7860, i64 7861, i64 7862, i64 7863, i64 7864, i64 7865, i64 7866, i64 7867, i64 7868, i64 7869, i64 7870, i64 7871, i64 7872, i64 7873, i64 7874, i64 7875, i64 7876, i64 7877, i64 7878, i64 7879, i64 7880, i64 7881, i64 7882, i64 7883, i64 7884, i64 7885, i64 7886, i64 7887, i64 7888, i64 7889, i64 7890, i64 7891, i64 7892, i64 7893, i64 7894, i64 7895, i64 7896, i64 7897, i64 7898, i64 7899, i64 7900, i64 7901, i64 7902, i64 7903, i64 7904, i64 7905, i64 7906, i64 7907, i64 7908, i64 7909, i64 7910, i64 7911, i64 7912, i64 7913, i64 7914, i64 7915, i64 7916, i64 7917, i64 7918, i64 7919, i64 7920, i64 7921, i64 7922, i64 7923, i64 7924, i64 7925, i64 7926, i64 7927, i64 7928, i64 7929, i64 7930, i64 7931, i64 7932, i64 7933, i64 7934, i64 7935, i64 7944, i64 7952, i64 7958, i64 7968, i64 7976, i64 7984, i64 7992, i64 8000, i64 8006, i64 8016, i64 8024, i64 8032, i64 8040, i64 8048, i64 8062, i64 8064, i64 8072, i64 8080, i64 8088, i64 8096, i64 8104, i64 8112, i64 8117, i64 8118, i64 8120, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8136, i64 8144, i64 8148, i64 8150, i64 8152, i64 8160, i64 8168, i64 8178, i64 8181, i64 8182, i64 8184, i64 8305, i64 8306, i64 8319, i64 8320, i64 8336, i64 8349, i64 8458, i64 8459, i64 8462, i64 8464, i64 8467, i64 8468, i64 8495, i64 8496, i64 8500, i64 8501, i64 8505, i64 8506, i64 8508, i64 8510, i64 8518, i64 8522, i64 8526, i64 8527, i64 8560, i64 8576, i64 8580, i64 8581, i64 9424, i64 9450, i64 11312, i64 11359, i64 11361, i64 11362, i64 11365, i64 11367, i64 11368, i64 11369, i64 11370, i64 11371, i64 11372, i64 11373, i64 11377, i64 11378, i64 11379, i64 11381, i64 11382, i64 11390, i64 11393, i64 11394, i64 11395, i64 11396, i64 11397, i64 11398, i64 11399, i64 11400, i64 11401, i64 11402, i64 11403, i64 11404, i64 11405, i64 11406, i64 11407, i64 11408, i64 11409, i64 11410, i64 11411, i64 11412, i64 11413, i64 11414, i64 11415, i64 11416, i64 11417, i64 11418, i64 11419, i64 11420, i64 11421, i64 11422, i64 11423, i64 11424, i64 11425, i64 11426, i64 11427, i64 11428, i64 11429, i64 11430, i64 11431, i64 11432, i64 11433, i64 11434, i64 11435, i64 11436, i64 11437, i64 11438, i64 11439, i64 11440, i64 11441, i64 11442, i64 11443, i64 11444, i64 11445, i64 11446, i64 11447, i64 11448, i64 11449, i64 11450, i64 11451, i64 11452, i64 11453, i64 11454, i64 11455, i64 11456, i64 11457, i64 11458, i64 11459, i64 11460, i64 11461, i64 11462, i64 11463, i64 11464, i64 11465, i64 11466, i64 11467, i64 11468, i64 11469, i64 11470, i64 11471, i64 11472, i64 11473, i64 11474, i64 11475, i64 11476, i64 11477, i64 11478, i64 11479, i64 11480, i64 11481, i64 11482, i64 11483, i64 11484, i64 11485, i64 11486, i64 11487, i64 11488, i64 11489, i64 11490, i64 11491, i64 11493, i64 11500, i64 11501, i64 11502, i64 11503, i64 11507, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 42561, i64 42562, i64 42563, i64 42564, i64 42565, i64 42566, i64 42567, i64 42568, i64 42569, i64 42570, i64 42571, i64 42572, i64 42573, i64 42574, i64 42575, i64 42576, i64 42577, i64 42578, i64 42579, i64 42580, i64 42581, i64 42582, i64 42583, i64 42584, i64 42585, i64 42586, i64 42587, i64 42588, i64 42589, i64 42590, i64 42591, i64 42592, i64 42593, i64 42594, i64 42595, i64 42596, i64 42597, i64 42598, i64 42599, i64 42600, i64 42601, i64 42602, i64 42603, i64 42604, i64 42605, i64 42606, i64 42625, i64 42626, i64 42627, i64 42628, i64 42629, i64 42630, i64 42631, i64 42632, i64 42633, i64 42634, i64 42635, i64 42636, i64 42637, i64 42638, i64 42639, i64 42640, i64 42641, i64 42642, i64 42643, i64 42644, i64 42645, i64 42646, i64 42647, i64 42648, i64 42649, i64 42650, i64 42651, i64 42654, i64 42787, i64 42788, i64 42789, i64 42790, i64 42791, i64 42792, i64 42793, i64 42794, i64 42795, i64 42796, i64 42797, i64 42798, i64 42799, i64 42802, i64 42803, i64 42804, i64 42805, i64 42806, i64 42807, i64 42808, i64 42809, i64 42810, i64 42811, i64 42812, i64 42813, i64 42814, i64 42815, i64 42816, i64 42817, i64 42818, i64 42819, i64 42820, i64 42821, i64 42822, i64 42823, i64 42824, i64 42825, i64 42826, i64 42827, i64 42828, i64 42829, i64 42830, i64 42831, i64 42832, i64 42833, i64 42834, i64 42835, i64 42836, i64 42837, i64 42838, i64 42839, i64 42840, i64 42841, i64 42842, i64 42843, i64 42844, i64 42845, i64 42846, i64 42847, i64 42848, i64 42849, i64 42850, i64 42851, i64 42852, i64 42853, i64 42854, i64 42855, i64 42856, i64 42857, i64 42858, i64 42859, i64 42860, i64 42861, i64 42862, i64 42863, i64 42873, i64 42874, i64 42875, i64 42876, i64 42877, i64 42879, i64 42880, i64 42881, i64 42882, i64 42883, i64 42884, i64 42885, i64 42886, i64 42887, i64 42888, i64 42892, i64 42893, i64 42894, i64 42895, i64 42897, i64 42898, i64 42899, i64 42902, i64 42903, i64 42904, i64 42905, i64 42906, i64 42907, i64 42908, i64 42909, i64 42910, i64 42911, i64 42912, i64 42913, i64 42914, i64 42915, i64 42916, i64 42917, i64 42918, i64 42919, i64 42920, i64 42921, i64 42922, i64 43000, i64 43003, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 64256, i64 64263, i64 64275, i64 64280, i64 65345, i64 65371, i64 66600, i64 66640, i64 71872, i64 71904, i64 119834, i64 119860, i64 119886, i64 119893, i64 119894, i64 119912, i64 119938, i64 119964, i64 119990, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120016, i64 120042, i64 120068, i64 120094, i64 120120, i64 120146, i64 120172, i64 120198, i64 120224, i64 120250, i64 120276, i64 120302, i64 120328, i64 120354, i64 120380, i64 120406, i64 120432, i64 120458, i64 120486, i64 120514, i64 120539, i64 120540, i64 120546, i64 120572, i64 120597, i64 120598, i64 120604, i64 120630, i64 120655, i64 120656, i64 120662, i64 120688, i64 120713, i64 120714, i64 120720, i64 120746, i64 120771, i64 120772, i64 120778, i64 120779, i64 120780], align 16, !dbg !1201
@XPosixPrint_invlist = internal constant [1208 x i64] [i64 1205, i64 148565664, i64 1, i64 0, i64 32, i64 127, i64 160, i64 888, i64 890, i64 896, i64 900, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1328, i64 1329, i64 1367, i64 1369, i64 1376, i64 1377, i64 1416, i64 1417, i64 1419, i64 1421, i64 1424, i64 1425, i64 1480, i64 1488, i64 1515, i64 1520, i64 1525, i64 1536, i64 1565, i64 1566, i64 1806, i64 1807, i64 1867, i64 1869, i64 1970, i64 1984, i64 2043, i64 2048, i64 2094, i64 2096, i64 2111, i64 2112, i64 2140, i64 2142, i64 2143, i64 2208, i64 2227, i64 2276, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2492, i64 2501, i64 2503, i64 2505, i64 2507, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2532, i64 2534, i64 2556, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2620, i64 2621, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2638, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2662, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2748, i64 2758, i64 2759, i64 2762, i64 2763, i64 2766, i64 2768, i64 2769, i64 2784, i64 2788, i64 2790, i64 2802, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2876, i64 2885, i64 2887, i64 2889, i64 2891, i64 2894, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2916, i64 2918, i64 2936, i64 2946, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3022, i64 3024, i64 3025, i64 3031, i64 3032, i64 3046, i64 3067, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3141, i64 3142, i64 3145, i64 3146, i64 3150, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3172, i64 3174, i64 3184, i64 3192, i64 3200, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3260, i64 3269, i64 3270, i64 3273, i64 3274, i64 3278, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3300, i64 3302, i64 3312, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3397, i64 3398, i64 3401, i64 3402, i64 3407, i64 3415, i64 3416, i64 3424, i64 3428, i64 3430, i64 3446, i64 3449, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3530, i64 3531, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3558, i64 3568, i64 3570, i64 3573, i64 3585, i64 3643, i64 3647, i64 3676, i64 3713, i64 3715, i64 3716, i64 3717, i64 3719, i64 3721, i64 3722, i64 3723, i64 3725, i64 3726, i64 3732, i64 3736, i64 3737, i64 3744, i64 3745, i64 3748, i64 3749, i64 3750, i64 3751, i64 3752, i64 3754, i64 3756, i64 3757, i64 3770, i64 3771, i64 3774, i64 3776, i64 3781, i64 3782, i64 3783, i64 3784, i64 3790, i64 3792, i64 3802, i64 3804, i64 3808, i64 3840, i64 3912, i64 3913, i64 3949, i64 3953, i64 3992, i64 3993, i64 4029, i64 4030, i64 4045, i64 4046, i64 4059, i64 4096, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4957, i64 4989, i64 4992, i64 5018, i64 5024, i64 5109, i64 5120, i64 5789, i64 5792, i64 5881, i64 5888, i64 5901, i64 5902, i64 5909, i64 5920, i64 5943, i64 5952, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6016, i64 6110, i64 6112, i64 6122, i64 6128, i64 6138, i64 6144, i64 6159, i64 6160, i64 6170, i64 6176, i64 6264, i64 6272, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6460, i64 6464, i64 6465, i64 6468, i64 6510, i64 6512, i64 6517, i64 6528, i64 6572, i64 6576, i64 6602, i64 6608, i64 6619, i64 6622, i64 6684, i64 6686, i64 6751, i64 6752, i64 6781, i64 6783, i64 6794, i64 6800, i64 6810, i64 6816, i64 6830, i64 6832, i64 6847, i64 6912, i64 6988, i64 6992, i64 7037, i64 7040, i64 7156, i64 7164, i64 7224, i64 7227, i64 7242, i64 7245, i64 7296, i64 7360, i64 7368, i64 7376, i64 7415, i64 7416, i64 7418, i64 7424, i64 7670, i64 7676, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8133, i64 8134, i64 8148, i64 8150, i64 8156, i64 8157, i64 8176, i64 8178, i64 8181, i64 8182, i64 8191, i64 8192, i64 8232, i64 8234, i64 8293, i64 8294, i64 8306, i64 8308, i64 8335, i64 8336, i64 8349, i64 8352, i64 8382, i64 8400, i64 8433, i64 8448, i64 8586, i64 8592, i64 9211, i64 9216, i64 9255, i64 9280, i64 9291, i64 9312, i64 11124, i64 11126, i64 11158, i64 11160, i64 11194, i64 11197, i64 11209, i64 11210, i64 11218, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11508, i64 11513, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11633, i64 11647, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11843, i64 11904, i64 11930, i64 11931, i64 12020, i64 12032, i64 12246, i64 12272, i64 12284, i64 12288, i64 12352, i64 12353, i64 12439, i64 12441, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12688, i64 12731, i64 12736, i64 12772, i64 12784, i64 12831, i64 12832, i64 13055, i64 13056, i64 19894, i64 19904, i64 40909, i64 40960, i64 42125, i64 42128, i64 42183, i64 42192, i64 42540, i64 42560, i64 42654, i64 42655, i64 42744, i64 42752, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 42999, i64 43052, i64 43056, i64 43066, i64 43072, i64 43128, i64 43136, i64 43205, i64 43214, i64 43226, i64 43232, i64 43260, i64 43264, i64 43348, i64 43359, i64 43389, i64 43392, i64 43470, i64 43471, i64 43482, i64 43486, i64 43519, i64 43520, i64 43575, i64 43584, i64 43598, i64 43600, i64 43610, i64 43612, i64 43715, i64 43739, i64 43767, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43872, i64 43876, i64 43878, i64 43968, i64 44014, i64 44016, i64 44026, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 57344, i64 64110, i64 64112, i64 64218, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64450, i64 64467, i64 64832, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65022, i64 65024, i64 65050, i64 65056, i64 65070, i64 65072, i64 65107, i64 65108, i64 65127, i64 65128, i64 65132, i64 65136, i64 65141, i64 65142, i64 65277, i64 65279, i64 65280, i64 65281, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65504, i64 65511, i64 65512, i64 65519, i64 65529, i64 65534, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65792, i64 65795, i64 65799, i64 65844, i64 65847, i64 65933, i64 65936, i64 65948, i64 65952, i64 65953, i64 66000, i64 66046, i64 66176, i64 66205, i64 66208, i64 66257, i64 66272, i64 66300, i64 66304, i64 66340, i64 66352, i64 66379, i64 66384, i64 66427, i64 66432, i64 66462, i64 66463, i64 66500, i64 66504, i64 66518, i64 66560, i64 66718, i64 66720, i64 66730, i64 66816, i64 66856, i64 66864, i64 66916, i64 66927, i64 66928, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67671, i64 67743, i64 67751, i64 67760, i64 67840, i64 67868, i64 67871, i64 67898, i64 67903, i64 67904, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68100, i64 68101, i64 68103, i64 68108, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68152, i64 68155, i64 68159, i64 68168, i64 68176, i64 68185, i64 68192, i64 68256, i64 68288, i64 68327, i64 68331, i64 68343, i64 68352, i64 68406, i64 68409, i64 68438, i64 68440, i64 68467, i64 68472, i64 68498, i64 68505, i64 68509, i64 68521, i64 68528, i64 68608, i64 68681, i64 69216, i64 69247, i64 69632, i64 69710, i64 69714, i64 69744, i64 69759, i64 69826, i64 69840, i64 69865, i64 69872, i64 69882, i64 69888, i64 69941, i64 69942, i64 69956, i64 69968, i64 70007, i64 70016, i64 70089, i64 70093, i64 70094, i64 70096, i64 70107, i64 70113, i64 70133, i64 70144, i64 70162, i64 70163, i64 70206, i64 70320, i64 70379, i64 70384, i64 70394, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70460, i64 70469, i64 70471, i64 70473, i64 70475, i64 70478, i64 70487, i64 70488, i64 70493, i64 70500, i64 70502, i64 70509, i64 70512, i64 70517, i64 70784, i64 70856, i64 70864, i64 70874, i64 71040, i64 71094, i64 71096, i64 71114, i64 71168, i64 71237, i64 71248, i64 71258, i64 71296, i64 71352, i64 71360, i64 71370, i64 71840, i64 71923, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 74864, i64 74869, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92768, i64 92778, i64 92782, i64 92784, i64 92880, i64 92910, i64 92912, i64 92918, i64 92928, i64 92998, i64 93008, i64 93018, i64 93019, i64 93026, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94079, i64 94095, i64 94112, i64 110592, i64 110594, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113820, i64 113828, i64 118784, i64 119030, i64 119040, i64 119079, i64 119081, i64 119262, i64 119296, i64 119366, i64 119552, i64 119639, i64 119648, i64 119666, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120780, i64 120782, i64 120832, i64 124928, i64 125125, i64 125127, i64 125143, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 126704, i64 126706, i64 126976, i64 127020, i64 127024, i64 127124, i64 127136, i64 127151, i64 127153, i64 127168, i64 127169, i64 127184, i64 127185, i64 127222, i64 127232, i64 127245, i64 127248, i64 127279, i64 127280, i64 127340, i64 127344, i64 127387, i64 127462, i64 127491, i64 127504, i64 127547, i64 127552, i64 127561, i64 127568, i64 127570, i64 127744, i64 127789, i64 127792, i64 127870, i64 127872, i64 127951, i64 127956, i64 127992, i64 128000, i64 128255, i64 128256, i64 128331, i64 128336, i64 128378, i64 128379, i64 128420, i64 128421, i64 128579, i64 128581, i64 128720, i64 128736, i64 128749, i64 128752, i64 128756, i64 128768, i64 128884, i64 128896, i64 128981, i64 129024, i64 129036, i64 129040, i64 129096, i64 129104, i64 129114, i64 129120, i64 129160, i64 129168, i64 129198, i64 131072, i64 173783, i64 173824, i64 177973, i64 177984, i64 178206, i64 194560, i64 195102, i64 917505, i64 917506, i64 917536, i64 917632, i64 917760, i64 918000, i64 983040, i64 1048574, i64 1048576, i64 1114110], align 16, !dbg !1206
@XPosixPunct_invlist = internal constant [304 x i64] [i64 301, i64 148565664, i64 1, i64 0, i64 33, i64 48, i64 58, i64 65, i64 91, i64 97, i64 123, i64 127, i64 161, i64 162, i64 167, i64 168, i64 171, i64 172, i64 182, i64 184, i64 187, i64 188, i64 191, i64 192, i64 894, i64 895, i64 903, i64 904, i64 1370, i64 1376, i64 1417, i64 1419, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1523, i64 1525, i64 1545, i64 1547, i64 1548, i64 1550, i64 1563, i64 1564, i64 1566, i64 1568, i64 1642, i64 1646, i64 1748, i64 1749, i64 1792, i64 1806, i64 2039, i64 2042, i64 2096, i64 2111, i64 2142, i64 2143, i64 2404, i64 2406, i64 2416, i64 2417, i64 2800, i64 2801, i64 3572, i64 3573, i64 3663, i64 3664, i64 3674, i64 3676, i64 3844, i64 3859, i64 3860, i64 3861, i64 3898, i64 3902, i64 3973, i64 3974, i64 4048, i64 4053, i64 4057, i64 4059, i64 4170, i64 4176, i64 4347, i64 4348, i64 4960, i64 4969, i64 5120, i64 5121, i64 5741, i64 5743, i64 5787, i64 5789, i64 5867, i64 5870, i64 5941, i64 5943, i64 6100, i64 6103, i64 6104, i64 6107, i64 6144, i64 6155, i64 6468, i64 6470, i64 6686, i64 6688, i64 6816, i64 6823, i64 6824, i64 6830, i64 7002, i64 7009, i64 7164, i64 7168, i64 7227, i64 7232, i64 7294, i64 7296, i64 7360, i64 7368, i64 7379, i64 7380, i64 8208, i64 8232, i64 8240, i64 8260, i64 8261, i64 8274, i64 8275, i64 8287, i64 8317, i64 8319, i64 8333, i64 8335, i64 8968, i64 8972, i64 9001, i64 9003, i64 10088, i64 10102, i64 10181, i64 10183, i64 10214, i64 10224, i64 10627, i64 10649, i64 10712, i64 10716, i64 10748, i64 10750, i64 11513, i64 11517, i64 11518, i64 11520, i64 11632, i64 11633, i64 11776, i64 11823, i64 11824, i64 11843, i64 12289, i64 12292, i64 12296, i64 12306, i64 12308, i64 12320, i64 12336, i64 12337, i64 12349, i64 12350, i64 12448, i64 12449, i64 12539, i64 12540, i64 42238, i64 42240, i64 42509, i64 42512, i64 42611, i64 42612, i64 42622, i64 42623, i64 42738, i64 42744, i64 43124, i64 43128, i64 43214, i64 43216, i64 43256, i64 43259, i64 43310, i64 43312, i64 43359, i64 43360, i64 43457, i64 43470, i64 43486, i64 43488, i64 43612, i64 43616, i64 43742, i64 43744, i64 43760, i64 43762, i64 44011, i64 44012, i64 64830, i64 64832, i64 65040, i64 65050, i64 65072, i64 65107, i64 65108, i64 65122, i64 65123, i64 65124, i64 65128, i64 65129, i64 65130, i64 65132, i64 65281, i64 65284, i64 65285, i64 65291, i64 65292, i64 65296, i64 65306, i64 65308, i64 65311, i64 65313, i64 65339, i64 65342, i64 65343, i64 65344, i64 65371, i64 65372, i64 65373, i64 65374, i64 65375, i64 65382, i64 65792, i64 65795, i64 66463, i64 66464, i64 66512, i64 66513, i64 66927, i64 66928, i64 67671, i64 67672, i64 67871, i64 67872, i64 67903, i64 67904, i64 68176, i64 68185, i64 68223, i64 68224, i64 68336, i64 68343, i64 68409, i64 68416, i64 68505, i64 68509, i64 69703, i64 69710, i64 69819, i64 69821, i64 69822, i64 69826, i64 69952, i64 69956, i64 70004, i64 70006, i64 70085, i64 70089, i64 70093, i64 70094, i64 70200, i64 70206, i64 70854, i64 70855, i64 71105, i64 71114, i64 71233, i64 71236, i64 74864, i64 74869, i64 92782, i64 92784, i64 92917, i64 92918, i64 92983, i64 92988, i64 92996, i64 92997, i64 113823, i64 113824], align 16, !dbg !1211
@XPerlSpace_invlist = internal constant [24 x i64] [i64 21, i64 148565664, i64 1, i64 0, i64 9, i64 14, i64 32, i64 33, i64 133, i64 134, i64 160, i64 161, i64 5760, i64 5761, i64 8192, i64 8203, i64 8232, i64 8234, i64 8239, i64 8240, i64 8287, i64 8288, i64 12288, i64 12289], align 16, !dbg !1216
@XPosixUpper_invlist = internal constant [1258 x i64] [i64 1255, i64 148565664, i64 1, i64 0, i64 65, i64 91, i64 192, i64 215, i64 216, i64 223, i64 256, i64 257, i64 258, i64 259, i64 260, i64 261, i64 262, i64 263, i64 264, i64 265, i64 266, i64 267, i64 268, i64 269, i64 270, i64 271, i64 272, i64 273, i64 274, i64 275, i64 276, i64 277, i64 278, i64 279, i64 280, i64 281, i64 282, i64 283, i64 284, i64 285, i64 286, i64 287, i64 288, i64 289, i64 290, i64 291, i64 292, i64 293, i64 294, i64 295, i64 296, i64 297, i64 298, i64 299, i64 300, i64 301, i64 302, i64 303, i64 304, i64 305, i64 306, i64 307, i64 308, i64 309, i64 310, i64 311, i64 313, i64 314, i64 315, i64 316, i64 317, i64 318, i64 319, i64 320, i64 321, i64 322, i64 323, i64 324, i64 325, i64 326, i64 327, i64 328, i64 330, i64 331, i64 332, i64 333, i64 334, i64 335, i64 336, i64 337, i64 338, i64 339, i64 340, i64 341, i64 342, i64 343, i64 344, i64 345, i64 346, i64 347, i64 348, i64 349, i64 350, i64 351, i64 352, i64 353, i64 354, i64 355, i64 356, i64 357, i64 358, i64 359, i64 360, i64 361, i64 362, i64 363, i64 364, i64 365, i64 366, i64 367, i64 368, i64 369, i64 370, i64 371, i64 372, i64 373, i64 374, i64 375, i64 376, i64 378, i64 379, i64 380, i64 381, i64 382, i64 385, i64 387, i64 388, i64 389, i64 390, i64 392, i64 393, i64 396, i64 398, i64 402, i64 403, i64 405, i64 406, i64 409, i64 412, i64 414, i64 415, i64 417, i64 418, i64 419, i64 420, i64 421, i64 422, i64 424, i64 425, i64 426, i64 428, i64 429, i64 430, i64 432, i64 433, i64 436, i64 437, i64 438, i64 439, i64 441, i64 444, i64 445, i64 452, i64 453, i64 455, i64 456, i64 458, i64 459, i64 461, i64 462, i64 463, i64 464, i64 465, i64 466, i64 467, i64 468, i64 469, i64 470, i64 471, i64 472, i64 473, i64 474, i64 475, i64 476, i64 478, i64 479, i64 480, i64 481, i64 482, i64 483, i64 484, i64 485, i64 486, i64 487, i64 488, i64 489, i64 490, i64 491, i64 492, i64 493, i64 494, i64 495, i64 497, i64 498, i64 500, i64 501, i64 502, i64 505, i64 506, i64 507, i64 508, i64 509, i64 510, i64 511, i64 512, i64 513, i64 514, i64 515, i64 516, i64 517, i64 518, i64 519, i64 520, i64 521, i64 522, i64 523, i64 524, i64 525, i64 526, i64 527, i64 528, i64 529, i64 530, i64 531, i64 532, i64 533, i64 534, i64 535, i64 536, i64 537, i64 538, i64 539, i64 540, i64 541, i64 542, i64 543, i64 544, i64 545, i64 546, i64 547, i64 548, i64 549, i64 550, i64 551, i64 552, i64 553, i64 554, i64 555, i64 556, i64 557, i64 558, i64 559, i64 560, i64 561, i64 562, i64 563, i64 570, i64 572, i64 573, i64 575, i64 577, i64 578, i64 579, i64 583, i64 584, i64 585, i64 586, i64 587, i64 588, i64 589, i64 590, i64 591, i64 880, i64 881, i64 882, i64 883, i64 886, i64 887, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 912, i64 913, i64 930, i64 931, i64 940, i64 975, i64 976, i64 978, i64 981, i64 984, i64 985, i64 986, i64 987, i64 988, i64 989, i64 990, i64 991, i64 992, i64 993, i64 994, i64 995, i64 996, i64 997, i64 998, i64 999, i64 1000, i64 1001, i64 1002, i64 1003, i64 1004, i64 1005, i64 1006, i64 1007, i64 1012, i64 1013, i64 1015, i64 1016, i64 1017, i64 1019, i64 1021, i64 1072, i64 1120, i64 1121, i64 1122, i64 1123, i64 1124, i64 1125, i64 1126, i64 1127, i64 1128, i64 1129, i64 1130, i64 1131, i64 1132, i64 1133, i64 1134, i64 1135, i64 1136, i64 1137, i64 1138, i64 1139, i64 1140, i64 1141, i64 1142, i64 1143, i64 1144, i64 1145, i64 1146, i64 1147, i64 1148, i64 1149, i64 1150, i64 1151, i64 1152, i64 1153, i64 1162, i64 1163, i64 1164, i64 1165, i64 1166, i64 1167, i64 1168, i64 1169, i64 1170, i64 1171, i64 1172, i64 1173, i64 1174, i64 1175, i64 1176, i64 1177, i64 1178, i64 1179, i64 1180, i64 1181, i64 1182, i64 1183, i64 1184, i64 1185, i64 1186, i64 1187, i64 1188, i64 1189, i64 1190, i64 1191, i64 1192, i64 1193, i64 1194, i64 1195, i64 1196, i64 1197, i64 1198, i64 1199, i64 1200, i64 1201, i64 1202, i64 1203, i64 1204, i64 1205, i64 1206, i64 1207, i64 1208, i64 1209, i64 1210, i64 1211, i64 1212, i64 1213, i64 1214, i64 1215, i64 1216, i64 1218, i64 1219, i64 1220, i64 1221, i64 1222, i64 1223, i64 1224, i64 1225, i64 1226, i64 1227, i64 1228, i64 1229, i64 1230, i64 1232, i64 1233, i64 1234, i64 1235, i64 1236, i64 1237, i64 1238, i64 1239, i64 1240, i64 1241, i64 1242, i64 1243, i64 1244, i64 1245, i64 1246, i64 1247, i64 1248, i64 1249, i64 1250, i64 1251, i64 1252, i64 1253, i64 1254, i64 1255, i64 1256, i64 1257, i64 1258, i64 1259, i64 1260, i64 1261, i64 1262, i64 1263, i64 1264, i64 1265, i64 1266, i64 1267, i64 1268, i64 1269, i64 1270, i64 1271, i64 1272, i64 1273, i64 1274, i64 1275, i64 1276, i64 1277, i64 1278, i64 1279, i64 1280, i64 1281, i64 1282, i64 1283, i64 1284, i64 1285, i64 1286, i64 1287, i64 1288, i64 1289, i64 1290, i64 1291, i64 1292, i64 1293, i64 1294, i64 1295, i64 1296, i64 1297, i64 1298, i64 1299, i64 1300, i64 1301, i64 1302, i64 1303, i64 1304, i64 1305, i64 1306, i64 1307, i64 1308, i64 1309, i64 1310, i64 1311, i64 1312, i64 1313, i64 1314, i64 1315, i64 1316, i64 1317, i64 1318, i64 1319, i64 1320, i64 1321, i64 1322, i64 1323, i64 1324, i64 1325, i64 1326, i64 1327, i64 1329, i64 1367, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 7680, i64 7681, i64 7682, i64 7683, i64 7684, i64 7685, i64 7686, i64 7687, i64 7688, i64 7689, i64 7690, i64 7691, i64 7692, i64 7693, i64 7694, i64 7695, i64 7696, i64 7697, i64 7698, i64 7699, i64 7700, i64 7701, i64 7702, i64 7703, i64 7704, i64 7705, i64 7706, i64 7707, i64 7708, i64 7709, i64 7710, i64 7711, i64 7712, i64 7713, i64 7714, i64 7715, i64 7716, i64 7717, i64 7718, i64 7719, i64 7720, i64 7721, i64 7722, i64 7723, i64 7724, i64 7725, i64 7726, i64 7727, i64 7728, i64 7729, i64 7730, i64 7731, i64 7732, i64 7733, i64 7734, i64 7735, i64 7736, i64 7737, i64 7738, i64 7739, i64 7740, i64 7741, i64 7742, i64 7743, i64 7744, i64 7745, i64 7746, i64 7747, i64 7748, i64 7749, i64 7750, i64 7751, i64 7752, i64 7753, i64 7754, i64 7755, i64 7756, i64 7757, i64 7758, i64 7759, i64 7760, i64 7761, i64 7762, i64 7763, i64 7764, i64 7765, i64 7766, i64 7767, i64 7768, i64 7769, i64 7770, i64 7771, i64 7772, i64 7773, i64 7774, i64 7775, i64 7776, i64 7777, i64 7778, i64 7779, i64 7780, i64 7781, i64 7782, i64 7783, i64 7784, i64 7785, i64 7786, i64 7787, i64 7788, i64 7789, i64 7790, i64 7791, i64 7792, i64 7793, i64 7794, i64 7795, i64 7796, i64 7797, i64 7798, i64 7799, i64 7800, i64 7801, i64 7802, i64 7803, i64 7804, i64 7805, i64 7806, i64 7807, i64 7808, i64 7809, i64 7810, i64 7811, i64 7812, i64 7813, i64 7814, i64 7815, i64 7816, i64 7817, i64 7818, i64 7819, i64 7820, i64 7821, i64 7822, i64 7823, i64 7824, i64 7825, i64 7826, i64 7827, i64 7828, i64 7829, i64 7838, i64 7839, i64 7840, i64 7841, i64 7842, i64 7843, i64 7844, i64 7845, i64 7846, i64 7847, i64 7848, i64 7849, i64 7850, i64 7851, i64 7852, i64 7853, i64 7854, i64 7855, i64 7856, i64 7857, i64 7858, i64 7859, i64 7860, i64 7861, i64 7862, i64 7863, i64 7864, i64 7865, i64 7866, i64 7867, i64 7868, i64 7869, i64 7870, i64 7871, i64 7872, i64 7873, i64 7874, i64 7875, i64 7876, i64 7877, i64 7878, i64 7879, i64 7880, i64 7881, i64 7882, i64 7883, i64 7884, i64 7885, i64 7886, i64 7887, i64 7888, i64 7889, i64 7890, i64 7891, i64 7892, i64 7893, i64 7894, i64 7895, i64 7896, i64 7897, i64 7898, i64 7899, i64 7900, i64 7901, i64 7902, i64 7903, i64 7904, i64 7905, i64 7906, i64 7907, i64 7908, i64 7909, i64 7910, i64 7911, i64 7912, i64 7913, i64 7914, i64 7915, i64 7916, i64 7917, i64 7918, i64 7919, i64 7920, i64 7921, i64 7922, i64 7923, i64 7924, i64 7925, i64 7926, i64 7927, i64 7928, i64 7929, i64 7930, i64 7931, i64 7932, i64 7933, i64 7934, i64 7935, i64 7944, i64 7952, i64 7960, i64 7966, i64 7976, i64 7984, i64 7992, i64 8000, i64 8008, i64 8014, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8032, i64 8040, i64 8048, i64 8120, i64 8124, i64 8136, i64 8140, i64 8152, i64 8156, i64 8168, i64 8173, i64 8184, i64 8188, i64 8450, i64 8451, i64 8455, i64 8456, i64 8459, i64 8462, i64 8464, i64 8467, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8496, i64 8500, i64 8510, i64 8512, i64 8517, i64 8518, i64 8544, i64 8560, i64 8579, i64 8580, i64 9398, i64 9424, i64 11264, i64 11311, i64 11360, i64 11361, i64 11362, i64 11365, i64 11367, i64 11368, i64 11369, i64 11370, i64 11371, i64 11372, i64 11373, i64 11377, i64 11378, i64 11379, i64 11381, i64 11382, i64 11390, i64 11393, i64 11394, i64 11395, i64 11396, i64 11397, i64 11398, i64 11399, i64 11400, i64 11401, i64 11402, i64 11403, i64 11404, i64 11405, i64 11406, i64 11407, i64 11408, i64 11409, i64 11410, i64 11411, i64 11412, i64 11413, i64 11414, i64 11415, i64 11416, i64 11417, i64 11418, i64 11419, i64 11420, i64 11421, i64 11422, i64 11423, i64 11424, i64 11425, i64 11426, i64 11427, i64 11428, i64 11429, i64 11430, i64 11431, i64 11432, i64 11433, i64 11434, i64 11435, i64 11436, i64 11437, i64 11438, i64 11439, i64 11440, i64 11441, i64 11442, i64 11443, i64 11444, i64 11445, i64 11446, i64 11447, i64 11448, i64 11449, i64 11450, i64 11451, i64 11452, i64 11453, i64 11454, i64 11455, i64 11456, i64 11457, i64 11458, i64 11459, i64 11460, i64 11461, i64 11462, i64 11463, i64 11464, i64 11465, i64 11466, i64 11467, i64 11468, i64 11469, i64 11470, i64 11471, i64 11472, i64 11473, i64 11474, i64 11475, i64 11476, i64 11477, i64 11478, i64 11479, i64 11480, i64 11481, i64 11482, i64 11483, i64 11484, i64 11485, i64 11486, i64 11487, i64 11488, i64 11489, i64 11490, i64 11491, i64 11499, i64 11500, i64 11501, i64 11502, i64 11506, i64 11507, i64 42560, i64 42561, i64 42562, i64 42563, i64 42564, i64 42565, i64 42566, i64 42567, i64 42568, i64 42569, i64 42570, i64 42571, i64 42572, i64 42573, i64 42574, i64 42575, i64 42576, i64 42577, i64 42578, i64 42579, i64 42580, i64 42581, i64 42582, i64 42583, i64 42584, i64 42585, i64 42586, i64 42587, i64 42588, i64 42589, i64 42590, i64 42591, i64 42592, i64 42593, i64 42594, i64 42595, i64 42596, i64 42597, i64 42598, i64 42599, i64 42600, i64 42601, i64 42602, i64 42603, i64 42604, i64 42605, i64 42624, i64 42625, i64 42626, i64 42627, i64 42628, i64 42629, i64 42630, i64 42631, i64 42632, i64 42633, i64 42634, i64 42635, i64 42636, i64 42637, i64 42638, i64 42639, i64 42640, i64 42641, i64 42642, i64 42643, i64 42644, i64 42645, i64 42646, i64 42647, i64 42648, i64 42649, i64 42650, i64 42651, i64 42786, i64 42787, i64 42788, i64 42789, i64 42790, i64 42791, i64 42792, i64 42793, i64 42794, i64 42795, i64 42796, i64 42797, i64 42798, i64 42799, i64 42802, i64 42803, i64 42804, i64 42805, i64 42806, i64 42807, i64 42808, i64 42809, i64 42810, i64 42811, i64 42812, i64 42813, i64 42814, i64 42815, i64 42816, i64 42817, i64 42818, i64 42819, i64 42820, i64 42821, i64 42822, i64 42823, i64 42824, i64 42825, i64 42826, i64 42827, i64 42828, i64 42829, i64 42830, i64 42831, i64 42832, i64 42833, i64 42834, i64 42835, i64 42836, i64 42837, i64 42838, i64 42839, i64 42840, i64 42841, i64 42842, i64 42843, i64 42844, i64 42845, i64 42846, i64 42847, i64 42848, i64 42849, i64 42850, i64 42851, i64 42852, i64 42853, i64 42854, i64 42855, i64 42856, i64 42857, i64 42858, i64 42859, i64 42860, i64 42861, i64 42862, i64 42863, i64 42873, i64 42874, i64 42875, i64 42876, i64 42877, i64 42879, i64 42880, i64 42881, i64 42882, i64 42883, i64 42884, i64 42885, i64 42886, i64 42887, i64 42891, i64 42892, i64 42893, i64 42894, i64 42896, i64 42897, i64 42898, i64 42899, i64 42902, i64 42903, i64 42904, i64 42905, i64 42906, i64 42907, i64 42908, i64 42909, i64 42910, i64 42911, i64 42912, i64 42913, i64 42914, i64 42915, i64 42916, i64 42917, i64 42918, i64 42919, i64 42920, i64 42921, i64 42922, i64 42926, i64 42928, i64 42930, i64 65313, i64 65339, i64 66560, i64 66600, i64 71840, i64 71872, i64 119808, i64 119834, i64 119860, i64 119886, i64 119912, i64 119938, i64 119964, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119990, i64 120016, i64 120042, i64 120068, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120120, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120172, i64 120198, i64 120224, i64 120250, i64 120276, i64 120302, i64 120328, i64 120354, i64 120380, i64 120406, i64 120432, i64 120458, i64 120488, i64 120513, i64 120546, i64 120571, i64 120604, i64 120629, i64 120662, i64 120687, i64 120720, i64 120745, i64 120778, i64 120779, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370], align 16, !dbg !1221
@VertSpace_invlist = internal constant [10 x i64] [i64 7, i64 148565664, i64 1, i64 0, i64 10, i64 14, i64 133, i64 134, i64 8232, i64 8234], align 16, !dbg !1226
@XPosixWord_invlist = internal constant [1264 x i64] [i64 1261, i64 148565664, i64 1, i64 0, i64 48, i64 58, i64 65, i64 91, i64 95, i64 96, i64 97, i64 123, i64 170, i64 171, i64 181, i64 182, i64 186, i64 187, i64 192, i64 215, i64 216, i64 247, i64 248, i64 706, i64 710, i64 722, i64 736, i64 741, i64 748, i64 749, i64 750, i64 751, i64 768, i64 885, i64 886, i64 888, i64 890, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1014, i64 1015, i64 1154, i64 1155, i64 1328, i64 1329, i64 1367, i64 1369, i64 1370, i64 1377, i64 1416, i64 1425, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1480, i64 1488, i64 1515, i64 1520, i64 1523, i64 1552, i64 1563, i64 1568, i64 1642, i64 1646, i64 1748, i64 1749, i64 1757, i64 1759, i64 1769, i64 1770, i64 1789, i64 1791, i64 1792, i64 1808, i64 1867, i64 1869, i64 1970, i64 1984, i64 2038, i64 2042, i64 2043, i64 2048, i64 2094, i64 2112, i64 2140, i64 2208, i64 2227, i64 2276, i64 2404, i64 2406, i64 2416, i64 2417, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2492, i64 2501, i64 2503, i64 2505, i64 2507, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2532, i64 2534, i64 2546, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2620, i64 2621, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2638, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2662, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2748, i64 2758, i64 2759, i64 2762, i64 2763, i64 2766, i64 2768, i64 2769, i64 2784, i64 2788, i64 2790, i64 2800, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2876, i64 2885, i64 2887, i64 2889, i64 2891, i64 2894, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2916, i64 2918, i64 2928, i64 2929, i64 2930, i64 2946, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3022, i64 3024, i64 3025, i64 3031, i64 3032, i64 3046, i64 3056, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3141, i64 3142, i64 3145, i64 3146, i64 3150, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3172, i64 3174, i64 3184, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3260, i64 3269, i64 3270, i64 3273, i64 3274, i64 3278, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3300, i64 3302, i64 3312, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3397, i64 3398, i64 3401, i64 3402, i64 3407, i64 3415, i64 3416, i64 3424, i64 3428, i64 3430, i64 3440, i64 3450, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3530, i64 3531, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3558, i64 3568, i64 3570, i64 3572, i64 3585, i64 3643, i64 3648, i64 3663, i64 3664, i64 3674, i64 3713, i64 3715, i64 3716, i64 3717, i64 3719, i64 3721, i64 3722, i64 3723, i64 3725, i64 3726, i64 3732, i64 3736, i64 3737, i64 3744, i64 3745, i64 3748, i64 3749, i64 3750, i64 3751, i64 3752, i64 3754, i64 3756, i64 3757, i64 3770, i64 3771, i64 3774, i64 3776, i64 3781, i64 3782, i64 3783, i64 3784, i64 3790, i64 3792, i64 3802, i64 3804, i64 3808, i64 3840, i64 3841, i64 3864, i64 3866, i64 3872, i64 3882, i64 3893, i64 3894, i64 3895, i64 3896, i64 3897, i64 3898, i64 3902, i64 3912, i64 3913, i64 3949, i64 3953, i64 3973, i64 3974, i64 3992, i64 3993, i64 4029, i64 4038, i64 4039, i64 4096, i64 4170, i64 4176, i64 4254, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4347, i64 4348, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4957, i64 4960, i64 4992, i64 5008, i64 5024, i64 5109, i64 5121, i64 5741, i64 5743, i64 5760, i64 5761, i64 5787, i64 5792, i64 5867, i64 5870, i64 5881, i64 5888, i64 5901, i64 5902, i64 5909, i64 5920, i64 5941, i64 5952, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6016, i64 6100, i64 6103, i64 6104, i64 6108, i64 6110, i64 6112, i64 6122, i64 6155, i64 6158, i64 6160, i64 6170, i64 6176, i64 6264, i64 6272, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6460, i64 6470, i64 6510, i64 6512, i64 6517, i64 6528, i64 6572, i64 6576, i64 6602, i64 6608, i64 6618, i64 6656, i64 6684, i64 6688, i64 6751, i64 6752, i64 6781, i64 6783, i64 6794, i64 6800, i64 6810, i64 6823, i64 6824, i64 6832, i64 6847, i64 6912, i64 6988, i64 6992, i64 7002, i64 7019, i64 7028, i64 7040, i64 7156, i64 7168, i64 7224, i64 7232, i64 7242, i64 7245, i64 7294, i64 7376, i64 7379, i64 7380, i64 7415, i64 7416, i64 7418, i64 7424, i64 7670, i64 7676, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8204, i64 8206, i64 8255, i64 8257, i64 8276, i64 8277, i64 8305, i64 8306, i64 8319, i64 8320, i64 8336, i64 8349, i64 8400, i64 8433, i64 8450, i64 8451, i64 8455, i64 8456, i64 8458, i64 8468, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8495, i64 8506, i64 8508, i64 8512, i64 8517, i64 8522, i64 8526, i64 8527, i64 8544, i64 8585, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11493, i64 11499, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11632, i64 11647, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11776, i64 11823, i64 11824, i64 12293, i64 12296, i64 12321, i64 12336, i64 12337, i64 12342, i64 12344, i64 12349, i64 12353, i64 12439, i64 12441, i64 12443, i64 12445, i64 12448, i64 12449, i64 12539, i64 12540, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12704, i64 12731, i64 12784, i64 12800, i64 13312, i64 19894, i64 19968, i64 40909, i64 40960, i64 42125, i64 42192, i64 42238, i64 42240, i64 42509, i64 42512, i64 42540, i64 42560, i64 42611, i64 42612, i64 42622, i64 42623, i64 42654, i64 42655, i64 42738, i64 42775, i64 42784, i64 42786, i64 42889, i64 42891, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 42999, i64 43048, i64 43072, i64 43124, i64 43136, i64 43205, i64 43216, i64 43226, i64 43232, i64 43256, i64 43259, i64 43260, i64 43264, i64 43310, i64 43312, i64 43348, i64 43360, i64 43389, i64 43392, i64 43457, i64 43471, i64 43482, i64 43488, i64 43519, i64 43520, i64 43575, i64 43584, i64 43598, i64 43600, i64 43610, i64 43616, i64 43639, i64 43642, i64 43715, i64 43739, i64 43742, i64 43744, i64 43760, i64 43762, i64 43767, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 43968, i64 44011, i64 44012, i64 44014, i64 44016, i64 44026, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 63744, i64 64110, i64 64112, i64 64218, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64297, i64 64298, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64434, i64 64467, i64 64830, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65020, i64 65024, i64 65040, i64 65056, i64 65070, i64 65075, i64 65077, i64 65101, i64 65104, i64 65136, i64 65141, i64 65142, i64 65277, i64 65296, i64 65306, i64 65313, i64 65339, i64 65343, i64 65344, i64 65345, i64 65371, i64 65382, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65856, i64 65909, i64 66045, i64 66046, i64 66176, i64 66205, i64 66208, i64 66257, i64 66272, i64 66273, i64 66304, i64 66336, i64 66352, i64 66379, i64 66384, i64 66427, i64 66432, i64 66462, i64 66464, i64 66500, i64 66504, i64 66512, i64 66513, i64 66518, i64 66560, i64 66718, i64 66720, i64 66730, i64 66816, i64 66856, i64 66864, i64 66916, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67680, i64 67703, i64 67712, i64 67743, i64 67840, i64 67862, i64 67872, i64 67898, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68100, i64 68101, i64 68103, i64 68108, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68152, i64 68155, i64 68159, i64 68160, i64 68192, i64 68221, i64 68224, i64 68253, i64 68288, i64 68296, i64 68297, i64 68327, i64 68352, i64 68406, i64 68416, i64 68438, i64 68448, i64 68467, i64 68480, i64 68498, i64 68608, i64 68681, i64 69632, i64 69703, i64 69734, i64 69744, i64 69759, i64 69819, i64 69840, i64 69865, i64 69872, i64 69882, i64 69888, i64 69941, i64 69942, i64 69952, i64 69968, i64 70004, i64 70006, i64 70007, i64 70016, i64 70085, i64 70096, i64 70107, i64 70144, i64 70162, i64 70163, i64 70200, i64 70320, i64 70379, i64 70384, i64 70394, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70460, i64 70469, i64 70471, i64 70473, i64 70475, i64 70478, i64 70487, i64 70488, i64 70493, i64 70500, i64 70502, i64 70509, i64 70512, i64 70517, i64 70784, i64 70854, i64 70855, i64 70856, i64 70864, i64 70874, i64 71040, i64 71094, i64 71096, i64 71105, i64 71168, i64 71233, i64 71236, i64 71237, i64 71248, i64 71258, i64 71296, i64 71352, i64 71360, i64 71370, i64 71840, i64 71914, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92768, i64 92778, i64 92880, i64 92910, i64 92912, i64 92917, i64 92928, i64 92983, i64 92992, i64 92996, i64 93008, i64 93018, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94079, i64 94095, i64 94112, i64 110592, i64 110594, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113821, i64 113823, i64 119141, i64 119146, i64 119149, i64 119155, i64 119163, i64 119171, i64 119173, i64 119180, i64 119210, i64 119214, i64 119362, i64 119365, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120513, i64 120514, i64 120539, i64 120540, i64 120571, i64 120572, i64 120597, i64 120598, i64 120629, i64 120630, i64 120655, i64 120656, i64 120687, i64 120688, i64 120713, i64 120714, i64 120745, i64 120746, i64 120771, i64 120772, i64 120780, i64 120782, i64 120832, i64 124928, i64 125125, i64 125136, i64 125143, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370, i64 131072, i64 173783, i64 173824, i64 177973, i64 177984, i64 178206, i64 194560, i64 195102, i64 917760, i64 918000], align 16, !dbg !1231
@XPosixXDigit_invlist = internal constant [16 x i64] [i64 13, i64 148565664, i64 1, i64 0, i64 48, i64 58, i64 65, i64 71, i64 97, i64 103, i64 65296, i64 65306, i64 65313, i64 65319, i64 65345, i64 65351], align 16, !dbg !1233
@Grapheme_Cluster_Break_invlist = internal constant [1487 x i64] [i64 1484, i64 148565664, i64 0, i64 0, i64 10, i64 11, i64 13, i64 14, i64 32, i64 127, i64 160, i64 173, i64 174, i64 768, i64 880, i64 1155, i64 1162, i64 1425, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1480, i64 1536, i64 1542, i64 1552, i64 1563, i64 1564, i64 1565, i64 1611, i64 1632, i64 1648, i64 1649, i64 1750, i64 1757, i64 1758, i64 1759, i64 1765, i64 1767, i64 1769, i64 1770, i64 1774, i64 1807, i64 1808, i64 1809, i64 1810, i64 1840, i64 1867, i64 1958, i64 1969, i64 2027, i64 2036, i64 2070, i64 2074, i64 2075, i64 2084, i64 2085, i64 2088, i64 2089, i64 2094, i64 2137, i64 2140, i64 2276, i64 2307, i64 2308, i64 2362, i64 2363, i64 2364, i64 2365, i64 2366, i64 2369, i64 2377, i64 2381, i64 2382, i64 2384, i64 2385, i64 2392, i64 2402, i64 2404, i64 2433, i64 2434, i64 2436, i64 2492, i64 2493, i64 2494, i64 2495, i64 2497, i64 2501, i64 2503, i64 2505, i64 2507, i64 2509, i64 2510, i64 2519, i64 2520, i64 2530, i64 2532, i64 2561, i64 2563, i64 2564, i64 2620, i64 2621, i64 2622, i64 2625, i64 2627, i64 2631, i64 2633, i64 2635, i64 2638, i64 2641, i64 2642, i64 2672, i64 2674, i64 2677, i64 2678, i64 2689, i64 2691, i64 2692, i64 2748, i64 2749, i64 2750, i64 2753, i64 2758, i64 2759, i64 2761, i64 2762, i64 2763, i64 2765, i64 2766, i64 2786, i64 2788, i64 2817, i64 2818, i64 2820, i64 2876, i64 2877, i64 2878, i64 2880, i64 2881, i64 2885, i64 2887, i64 2889, i64 2891, i64 2893, i64 2894, i64 2902, i64 2904, i64 2914, i64 2916, i64 2946, i64 2947, i64 3006, i64 3007, i64 3008, i64 3009, i64 3011, i64 3014, i64 3017, i64 3018, i64 3021, i64 3022, i64 3031, i64 3032, i64 3072, i64 3073, i64 3076, i64 3134, i64 3137, i64 3141, i64 3142, i64 3145, i64 3146, i64 3150, i64 3157, i64 3159, i64 3170, i64 3172, i64 3201, i64 3202, i64 3204, i64 3260, i64 3261, i64 3262, i64 3263, i64 3264, i64 3266, i64 3267, i64 3269, i64 3270, i64 3271, i64 3273, i64 3274, i64 3276, i64 3278, i64 3285, i64 3287, i64 3298, i64 3300, i64 3329, i64 3330, i64 3332, i64 3390, i64 3391, i64 3393, i64 3397, i64 3398, i64 3401, i64 3402, i64 3405, i64 3406, i64 3415, i64 3416, i64 3426, i64 3428, i64 3458, i64 3460, i64 3530, i64 3531, i64 3535, i64 3536, i64 3538, i64 3541, i64 3542, i64 3543, i64 3544, i64 3551, i64 3552, i64 3570, i64 3572, i64 3633, i64 3634, i64 3635, i64 3636, i64 3643, i64 3655, i64 3663, i64 3761, i64 3762, i64 3763, i64 3764, i64 3770, i64 3771, i64 3773, i64 3784, i64 3790, i64 3864, i64 3866, i64 3893, i64 3894, i64 3895, i64 3896, i64 3897, i64 3898, i64 3902, i64 3904, i64 3953, i64 3967, i64 3968, i64 3973, i64 3974, i64 3976, i64 3981, i64 3992, i64 3993, i64 4029, i64 4038, i64 4039, i64 4141, i64 4145, i64 4146, i64 4152, i64 4153, i64 4155, i64 4157, i64 4159, i64 4182, i64 4184, i64 4186, i64 4190, i64 4193, i64 4209, i64 4213, i64 4226, i64 4227, i64 4228, i64 4229, i64 4231, i64 4237, i64 4238, i64 4253, i64 4254, i64 4352, i64 4448, i64 4520, i64 4608, i64 4957, i64 4960, i64 5906, i64 5909, i64 5938, i64 5941, i64 5970, i64 5972, i64 6002, i64 6004, i64 6068, i64 6070, i64 6071, i64 6078, i64 6086, i64 6087, i64 6089, i64 6100, i64 6109, i64 6110, i64 6155, i64 6158, i64 6159, i64 6313, i64 6314, i64 6432, i64 6435, i64 6439, i64 6441, i64 6444, i64 6448, i64 6450, i64 6451, i64 6457, i64 6460, i64 6581, i64 6584, i64 6586, i64 6587, i64 6679, i64 6681, i64 6683, i64 6684, i64 6741, i64 6742, i64 6743, i64 6744, i64 6751, i64 6752, i64 6753, i64 6754, i64 6755, i64 6757, i64 6765, i64 6771, i64 6781, i64 6783, i64 6784, i64 6832, i64 6847, i64 6912, i64 6916, i64 6917, i64 6964, i64 6965, i64 6966, i64 6971, i64 6972, i64 6973, i64 6978, i64 6979, i64 6981, i64 7019, i64 7028, i64 7040, i64 7042, i64 7043, i64 7073, i64 7074, i64 7078, i64 7080, i64 7082, i64 7083, i64 7086, i64 7142, i64 7143, i64 7144, i64 7146, i64 7149, i64 7150, i64 7151, i64 7154, i64 7156, i64 7204, i64 7212, i64 7220, i64 7222, i64 7224, i64 7376, i64 7379, i64 7380, i64 7393, i64 7394, i64 7401, i64 7405, i64 7406, i64 7410, i64 7412, i64 7413, i64 7416, i64 7418, i64 7616, i64 7670, i64 7676, i64 7680, i64 8203, i64 8204, i64 8206, i64 8208, i64 8232, i64 8239, i64 8288, i64 8304, i64 8400, i64 8433, i64 11503, i64 11506, i64 11647, i64 11648, i64 11744, i64 11776, i64 12330, i64 12336, i64 12441, i64 12443, i64 42607, i64 42611, i64 42612, i64 42622, i64 42655, i64 42656, i64 42736, i64 42738, i64 43010, i64 43011, i64 43014, i64 43015, i64 43019, i64 43020, i64 43043, i64 43045, i64 43047, i64 43048, i64 43136, i64 43138, i64 43188, i64 43204, i64 43205, i64 43232, i64 43250, i64 43302, i64 43310, i64 43335, i64 43346, i64 43348, i64 43360, i64 43389, i64 43392, i64 43395, i64 43396, i64 43443, i64 43444, i64 43446, i64 43450, i64 43452, i64 43453, i64 43457, i64 43493, i64 43494, i64 43561, i64 43567, i64 43569, i64 43571, i64 43573, i64 43575, i64 43587, i64 43588, i64 43596, i64 43597, i64 43598, i64 43644, i64 43645, i64 43696, i64 43697, i64 43698, i64 43701, i64 43703, i64 43705, i64 43710, i64 43712, i64 43713, i64 43714, i64 43755, i64 43756, i64 43758, i64 43760, i64 43765, i64 43766, i64 43767, i64 44003, i64 44005, i64 44006, i64 44008, i64 44009, i64 44011, i64 44012, i64 44013, i64 44014, i64 44032, i64 44033, i64 44060, i64 44061, i64 44088, i64 44089, i64 44116, i64 44117, i64 44144, i64 44145, i64 44172, i64 44173, i64 44200, i64 44201, i64 44228, i64 44229, i64 44256, i64 44257, i64 44284, i64 44285, i64 44312, i64 44313, i64 44340, i64 44341, i64 44368, i64 44369, i64 44396, i64 44397, i64 44424, i64 44425, i64 44452, i64 44453, i64 44480, i64 44481, i64 44508, i64 44509, i64 44536, i64 44537, i64 44564, i64 44565, i64 44592, i64 44593, i64 44620, i64 44621, i64 44648, i64 44649, i64 44676, i64 44677, i64 44704, i64 44705, i64 44732, i64 44733, i64 44760, i64 44761, i64 44788, i64 44789, i64 44816, i64 44817, i64 44844, i64 44845, i64 44872, i64 44873, i64 44900, i64 44901, i64 44928, i64 44929, i64 44956, i64 44957, i64 44984, i64 44985, i64 45012, i64 45013, i64 45040, i64 45041, i64 45068, i64 45069, i64 45096, i64 45097, i64 45124, i64 45125, i64 45152, i64 45153, i64 45180, i64 45181, i64 45208, i64 45209, i64 45236, i64 45237, i64 45264, i64 45265, i64 45292, i64 45293, i64 45320, i64 45321, i64 45348, i64 45349, i64 45376, i64 45377, i64 45404, i64 45405, i64 45432, i64 45433, i64 45460, i64 45461, i64 45488, i64 45489, i64 45516, i64 45517, i64 45544, i64 45545, i64 45572, i64 45573, i64 45600, i64 45601, i64 45628, i64 45629, i64 45656, i64 45657, i64 45684, i64 45685, i64 45712, i64 45713, i64 45740, i64 45741, i64 45768, i64 45769, i64 45796, i64 45797, i64 45824, i64 45825, i64 45852, i64 45853, i64 45880, i64 45881, i64 45908, i64 45909, i64 45936, i64 45937, i64 45964, i64 45965, i64 45992, i64 45993, i64 46020, i64 46021, i64 46048, i64 46049, i64 46076, i64 46077, i64 46104, i64 46105, i64 46132, i64 46133, i64 46160, i64 46161, i64 46188, i64 46189, i64 46216, i64 46217, i64 46244, i64 46245, i64 46272, i64 46273, i64 46300, i64 46301, i64 46328, i64 46329, i64 46356, i64 46357, i64 46384, i64 46385, i64 46412, i64 46413, i64 46440, i64 46441, i64 46468, i64 46469, i64 46496, i64 46497, i64 46524, i64 46525, i64 46552, i64 46553, i64 46580, i64 46581, i64 46608, i64 46609, i64 46636, i64 46637, i64 46664, i64 46665, i64 46692, i64 46693, i64 46720, i64 46721, i64 46748, i64 46749, i64 46776, i64 46777, i64 46804, i64 46805, i64 46832, i64 46833, i64 46860, i64 46861, i64 46888, i64 46889, i64 46916, i64 46917, i64 46944, i64 46945, i64 46972, i64 46973, i64 47000, i64 47001, i64 47028, i64 47029, i64 47056, i64 47057, i64 47084, i64 47085, i64 47112, i64 47113, i64 47140, i64 47141, i64 47168, i64 47169, i64 47196, i64 47197, i64 47224, i64 47225, i64 47252, i64 47253, i64 47280, i64 47281, i64 47308, i64 47309, i64 47336, i64 47337, i64 47364, i64 47365, i64 47392, i64 47393, i64 47420, i64 47421, i64 47448, i64 47449, i64 47476, i64 47477, i64 47504, i64 47505, i64 47532, i64 47533, i64 47560, i64 47561, i64 47588, i64 47589, i64 47616, i64 47617, i64 47644, i64 47645, i64 47672, i64 47673, i64 47700, i64 47701, i64 47728, i64 47729, i64 47756, i64 47757, i64 47784, i64 47785, i64 47812, i64 47813, i64 47840, i64 47841, i64 47868, i64 47869, i64 47896, i64 47897, i64 47924, i64 47925, i64 47952, i64 47953, i64 47980, i64 47981, i64 48008, i64 48009, i64 48036, i64 48037, i64 48064, i64 48065, i64 48092, i64 48093, i64 48120, i64 48121, i64 48148, i64 48149, i64 48176, i64 48177, i64 48204, i64 48205, i64 48232, i64 48233, i64 48260, i64 48261, i64 48288, i64 48289, i64 48316, i64 48317, i64 48344, i64 48345, i64 48372, i64 48373, i64 48400, i64 48401, i64 48428, i64 48429, i64 48456, i64 48457, i64 48484, i64 48485, i64 48512, i64 48513, i64 48540, i64 48541, i64 48568, i64 48569, i64 48596, i64 48597, i64 48624, i64 48625, i64 48652, i64 48653, i64 48680, i64 48681, i64 48708, i64 48709, i64 48736, i64 48737, i64 48764, i64 48765, i64 48792, i64 48793, i64 48820, i64 48821, i64 48848, i64 48849, i64 48876, i64 48877, i64 48904, i64 48905, i64 48932, i64 48933, i64 48960, i64 48961, i64 48988, i64 48989, i64 49016, i64 49017, i64 49044, i64 49045, i64 49072, i64 49073, i64 49100, i64 49101, i64 49128, i64 49129, i64 49156, i64 49157, i64 49184, i64 49185, i64 49212, i64 49213, i64 49240, i64 49241, i64 49268, i64 49269, i64 49296, i64 49297, i64 49324, i64 49325, i64 49352, i64 49353, i64 49380, i64 49381, i64 49408, i64 49409, i64 49436, i64 49437, i64 49464, i64 49465, i64 49492, i64 49493, i64 49520, i64 49521, i64 49548, i64 49549, i64 49576, i64 49577, i64 49604, i64 49605, i64 49632, i64 49633, i64 49660, i64 49661, i64 49688, i64 49689, i64 49716, i64 49717, i64 49744, i64 49745, i64 49772, i64 49773, i64 49800, i64 49801, i64 49828, i64 49829, i64 49856, i64 49857, i64 49884, i64 49885, i64 49912, i64 49913, i64 49940, i64 49941, i64 49968, i64 49969, i64 49996, i64 49997, i64 50024, i64 50025, i64 50052, i64 50053, i64 50080, i64 50081, i64 50108, i64 50109, i64 50136, i64 50137, i64 50164, i64 50165, i64 50192, i64 50193, i64 50220, i64 50221, i64 50248, i64 50249, i64 50276, i64 50277, i64 50304, i64 50305, i64 50332, i64 50333, i64 50360, i64 50361, i64 50388, i64 50389, i64 50416, i64 50417, i64 50444, i64 50445, i64 50472, i64 50473, i64 50500, i64 50501, i64 50528, i64 50529, i64 50556, i64 50557, i64 50584, i64 50585, i64 50612, i64 50613, i64 50640, i64 50641, i64 50668, i64 50669, i64 50696, i64 50697, i64 50724, i64 50725, i64 50752, i64 50753, i64 50780, i64 50781, i64 50808, i64 50809, i64 50836, i64 50837, i64 50864, i64 50865, i64 50892, i64 50893, i64 50920, i64 50921, i64 50948, i64 50949, i64 50976, i64 50977, i64 51004, i64 51005, i64 51032, i64 51033, i64 51060, i64 51061, i64 51088, i64 51089, i64 51116, i64 51117, i64 51144, i64 51145, i64 51172, i64 51173, i64 51200, i64 51201, i64 51228, i64 51229, i64 51256, i64 51257, i64 51284, i64 51285, i64 51312, i64 51313, i64 51340, i64 51341, i64 51368, i64 51369, i64 51396, i64 51397, i64 51424, i64 51425, i64 51452, i64 51453, i64 51480, i64 51481, i64 51508, i64 51509, i64 51536, i64 51537, i64 51564, i64 51565, i64 51592, i64 51593, i64 51620, i64 51621, i64 51648, i64 51649, i64 51676, i64 51677, i64 51704, i64 51705, i64 51732, i64 51733, i64 51760, i64 51761, i64 51788, i64 51789, i64 51816, i64 51817, i64 51844, i64 51845, i64 51872, i64 51873, i64 51900, i64 51901, i64 51928, i64 51929, i64 51956, i64 51957, i64 51984, i64 51985, i64 52012, i64 52013, i64 52040, i64 52041, i64 52068, i64 52069, i64 52096, i64 52097, i64 52124, i64 52125, i64 52152, i64 52153, i64 52180, i64 52181, i64 52208, i64 52209, i64 52236, i64 52237, i64 52264, i64 52265, i64 52292, i64 52293, i64 52320, i64 52321, i64 52348, i64 52349, i64 52376, i64 52377, i64 52404, i64 52405, i64 52432, i64 52433, i64 52460, i64 52461, i64 52488, i64 52489, i64 52516, i64 52517, i64 52544, i64 52545, i64 52572, i64 52573, i64 52600, i64 52601, i64 52628, i64 52629, i64 52656, i64 52657, i64 52684, i64 52685, i64 52712, i64 52713, i64 52740, i64 52741, i64 52768, i64 52769, i64 52796, i64 52797, i64 52824, i64 52825, i64 52852, i64 52853, i64 52880, i64 52881, i64 52908, i64 52909, i64 52936, i64 52937, i64 52964, i64 52965, i64 52992, i64 52993, i64 53020, i64 53021, i64 53048, i64 53049, i64 53076, i64 53077, i64 53104, i64 53105, i64 53132, i64 53133, i64 53160, i64 53161, i64 53188, i64 53189, i64 53216, i64 53217, i64 53244, i64 53245, i64 53272, i64 53273, i64 53300, i64 53301, i64 53328, i64 53329, i64 53356, i64 53357, i64 53384, i64 53385, i64 53412, i64 53413, i64 53440, i64 53441, i64 53468, i64 53469, i64 53496, i64 53497, i64 53524, i64 53525, i64 53552, i64 53553, i64 53580, i64 53581, i64 53608, i64 53609, i64 53636, i64 53637, i64 53664, i64 53665, i64 53692, i64 53693, i64 53720, i64 53721, i64 53748, i64 53749, i64 53776, i64 53777, i64 53804, i64 53805, i64 53832, i64 53833, i64 53860, i64 53861, i64 53888, i64 53889, i64 53916, i64 53917, i64 53944, i64 53945, i64 53972, i64 53973, i64 54000, i64 54001, i64 54028, i64 54029, i64 54056, i64 54057, i64 54084, i64 54085, i64 54112, i64 54113, i64 54140, i64 54141, i64 54168, i64 54169, i64 54196, i64 54197, i64 54224, i64 54225, i64 54252, i64 54253, i64 54280, i64 54281, i64 54308, i64 54309, i64 54336, i64 54337, i64 54364, i64 54365, i64 54392, i64 54393, i64 54420, i64 54421, i64 54448, i64 54449, i64 54476, i64 54477, i64 54504, i64 54505, i64 54532, i64 54533, i64 54560, i64 54561, i64 54588, i64 54589, i64 54616, i64 54617, i64 54644, i64 54645, i64 54672, i64 54673, i64 54700, i64 54701, i64 54728, i64 54729, i64 54756, i64 54757, i64 54784, i64 54785, i64 54812, i64 54813, i64 54840, i64 54841, i64 54868, i64 54869, i64 54896, i64 54897, i64 54924, i64 54925, i64 54952, i64 54953, i64 54980, i64 54981, i64 55008, i64 55009, i64 55036, i64 55037, i64 55064, i64 55065, i64 55092, i64 55093, i64 55120, i64 55121, i64 55148, i64 55149, i64 55176, i64 55177, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 55296, i64 57344, i64 64286, i64 64287, i64 65024, i64 65040, i64 65056, i64 65070, i64 65279, i64 65280, i64 65438, i64 65440, i64 65520, i64 65532, i64 66045, i64 66046, i64 66272, i64 66273, i64 66422, i64 66427, i64 68097, i64 68100, i64 68101, i64 68103, i64 68108, i64 68112, i64 68152, i64 68155, i64 68159, i64 68160, i64 68325, i64 68327, i64 69632, i64 69633, i64 69634, i64 69635, i64 69688, i64 69703, i64 69759, i64 69762, i64 69763, i64 69808, i64 69811, i64 69815, i64 69817, i64 69819, i64 69821, i64 69822, i64 69888, i64 69891, i64 69927, i64 69932, i64 69933, i64 69941, i64 70003, i64 70004, i64 70016, i64 70018, i64 70019, i64 70067, i64 70070, i64 70079, i64 70081, i64 70188, i64 70191, i64 70194, i64 70196, i64 70197, i64 70198, i64 70200, i64 70367, i64 70368, i64 70371, i64 70379, i64 70401, i64 70402, i64 70404, i64 70460, i64 70461, i64 70462, i64 70463, i64 70464, i64 70465, i64 70469, i64 70471, i64 70473, i64 70475, i64 70478, i64 70487, i64 70488, i64 70498, i64 70500, i64 70502, i64 70509, i64 70512, i64 70517, i64 70832, i64 70833, i64 70835, i64 70841, i64 70842, i64 70843, i64 70845, i64 70846, i64 70847, i64 70849, i64 70850, i64 70852, i64 71087, i64 71088, i64 71090, i64 71094, i64 71096, i64 71100, i64 71102, i64 71103, i64 71105, i64 71216, i64 71219, i64 71227, i64 71229, i64 71230, i64 71231, i64 71233, i64 71339, i64 71340, i64 71341, i64 71342, i64 71344, i64 71350, i64 71351, i64 71352, i64 92912, i64 92917, i64 92976, i64 92983, i64 94033, i64 94079, i64 94095, i64 94099, i64 113821, i64 113823, i64 113824, i64 113828, i64 119141, i64 119142, i64 119143, i64 119146, i64 119149, i64 119150, i64 119155, i64 119163, i64 119171, i64 119173, i64 119180, i64 119210, i64 119214, i64 119362, i64 119365, i64 125136, i64 125143, i64 127462, i64 127488, i64 917504, i64 917760, i64 918000, i64 921600], align 16, !dbg !1238
@PL_GCB_invlist = external local_unnamed_addr global ptr, align 8
@Sentence_Break_invlist = internal constant [2838 x i64] [i64 2835, i64 148565664, i64 0, i64 0, i64 9, i64 10, i64 11, i64 13, i64 14, i64 32, i64 33, i64 34, i64 35, i64 39, i64 42, i64 44, i64 46, i64 47, i64 48, i64 58, i64 59, i64 63, i64 64, i64 65, i64 91, i64 92, i64 93, i64 94, i64 97, i64 123, i64 124, i64 125, i64 126, i64 133, i64 134, i64 160, i64 161, i64 170, i64 171, i64 172, i64 173, i64 174, i64 181, i64 182, i64 186, i64 187, i64 188, i64 192, i64 215, i64 216, i64 223, i64 247, i64 248, i64 256, i64 257, i64 258, i64 259, i64 260, i64 261, i64 262, i64 263, i64 264, i64 265, i64 266, i64 267, i64 268, i64 269, i64 270, i64 271, i64 272, i64 273, i64 274, i64 275, i64 276, i64 277, i64 278, i64 279, i64 280, i64 281, i64 282, i64 283, i64 284, i64 285, i64 286, i64 287, i64 288, i64 289, i64 290, i64 291, i64 292, i64 293, i64 294, i64 295, i64 296, i64 297, i64 298, i64 299, i64 300, i64 301, i64 302, i64 303, i64 304, i64 305, i64 306, i64 307, i64 308, i64 309, i64 310, i64 311, i64 313, i64 314, i64 315, i64 316, i64 317, i64 318, i64 319, i64 320, i64 321, i64 322, i64 323, i64 324, i64 325, i64 326, i64 327, i64 328, i64 330, i64 331, i64 332, i64 333, i64 334, i64 335, i64 336, i64 337, i64 338, i64 339, i64 340, i64 341, i64 342, i64 343, i64 344, i64 345, i64 346, i64 347, i64 348, i64 349, i64 350, i64 351, i64 352, i64 353, i64 354, i64 355, i64 356, i64 357, i64 358, i64 359, i64 360, i64 361, i64 362, i64 363, i64 364, i64 365, i64 366, i64 367, i64 368, i64 369, i64 370, i64 371, i64 372, i64 373, i64 374, i64 375, i64 376, i64 378, i64 379, i64 380, i64 381, i64 382, i64 385, i64 387, i64 388, i64 389, i64 390, i64 392, i64 393, i64 396, i64 398, i64 402, i64 403, i64 405, i64 406, i64 409, i64 412, i64 414, i64 415, i64 417, i64 418, i64 419, i64 420, i64 421, i64 422, i64 424, i64 425, i64 426, i64 428, i64 429, i64 430, i64 432, i64 433, i64 436, i64 437, i64 438, i64 439, i64 441, i64 443, i64 444, i64 445, i64 448, i64 452, i64 454, i64 455, i64 457, i64 458, i64 460, i64 461, i64 462, i64 463, i64 464, i64 465, i64 466, i64 467, i64 468, i64 469, i64 470, i64 471, i64 472, i64 473, i64 474, i64 475, i64 476, i64 478, i64 479, i64 480, i64 481, i64 482, i64 483, i64 484, i64 485, i64 486, i64 487, i64 488, i64 489, i64 490, i64 491, i64 492, i64 493, i64 494, i64 495, i64 497, i64 499, i64 500, i64 501, i64 502, i64 505, i64 506, i64 507, i64 508, i64 509, i64 510, i64 511, i64 512, i64 513, i64 514, i64 515, i64 516, i64 517, i64 518, i64 519, i64 520, i64 521, i64 522, i64 523, i64 524, i64 525, i64 526, i64 527, i64 528, i64 529, i64 530, i64 531, i64 532, i64 533, i64 534, i64 535, i64 536, i64 537, i64 538, i64 539, i64 540, i64 541, i64 542, i64 543, i64 544, i64 545, i64 546, i64 547, i64 548, i64 549, i64 550, i64 551, i64 552, i64 553, i64 554, i64 555, i64 556, i64 557, i64 558, i64 559, i64 560, i64 561, i64 562, i64 563, i64 570, i64 572, i64 573, i64 575, i64 577, i64 578, i64 579, i64 583, i64 584, i64 585, i64 586, i64 587, i64 588, i64 589, i64 590, i64 591, i64 660, i64 661, i64 697, i64 704, i64 706, i64 710, i64 722, i64 736, i64 741, i64 748, i64 749, i64 750, i64 751, i64 768, i64 880, i64 881, i64 882, i64 883, i64 884, i64 885, i64 886, i64 887, i64 888, i64 890, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 912, i64 913, i64 930, i64 931, i64 940, i64 975, i64 976, i64 978, i64 981, i64 984, i64 985, i64 986, i64 987, i64 988, i64 989, i64 990, i64 991, i64 992, i64 993, i64 994, i64 995, i64 996, i64 997, i64 998, i64 999, i64 1000, i64 1001, i64 1002, i64 1003, i64 1004, i64 1005, i64 1006, i64 1007, i64 1012, i64 1013, i64 1014, i64 1015, i64 1016, i64 1017, i64 1019, i64 1021, i64 1072, i64 1120, i64 1121, i64 1122, i64 1123, i64 1124, i64 1125, i64 1126, i64 1127, i64 1128, i64 1129, i64 1130, i64 1131, i64 1132, i64 1133, i64 1134, i64 1135, i64 1136, i64 1137, i64 1138, i64 1139, i64 1140, i64 1141, i64 1142, i64 1143, i64 1144, i64 1145, i64 1146, i64 1147, i64 1148, i64 1149, i64 1150, i64 1151, i64 1152, i64 1153, i64 1154, i64 1155, i64 1162, i64 1163, i64 1164, i64 1165, i64 1166, i64 1167, i64 1168, i64 1169, i64 1170, i64 1171, i64 1172, i64 1173, i64 1174, i64 1175, i64 1176, i64 1177, i64 1178, i64 1179, i64 1180, i64 1181, i64 1182, i64 1183, i64 1184, i64 1185, i64 1186, i64 1187, i64 1188, i64 1189, i64 1190, i64 1191, i64 1192, i64 1193, i64 1194, i64 1195, i64 1196, i64 1197, i64 1198, i64 1199, i64 1200, i64 1201, i64 1202, i64 1203, i64 1204, i64 1205, i64 1206, i64 1207, i64 1208, i64 1209, i64 1210, i64 1211, i64 1212, i64 1213, i64 1214, i64 1215, i64 1216, i64 1218, i64 1219, i64 1220, i64 1221, i64 1222, i64 1223, i64 1224, i64 1225, i64 1226, i64 1227, i64 1228, i64 1229, i64 1230, i64 1232, i64 1233, i64 1234, i64 1235, i64 1236, i64 1237, i64 1238, i64 1239, i64 1240, i64 1241, i64 1242, i64 1243, i64 1244, i64 1245, i64 1246, i64 1247, i64 1248, i64 1249, i64 1250, i64 1251, i64 1252, i64 1253, i64 1254, i64 1255, i64 1256, i64 1257, i64 1258, i64 1259, i64 1260, i64 1261, i64 1262, i64 1263, i64 1264, i64 1265, i64 1266, i64 1267, i64 1268, i64 1269, i64 1270, i64 1271, i64 1272, i64 1273, i64 1274, i64 1275, i64 1276, i64 1277, i64 1278, i64 1279, i64 1280, i64 1281, i64 1282, i64 1283, i64 1284, i64 1285, i64 1286, i64 1287, i64 1288, i64 1289, i64 1290, i64 1291, i64 1292, i64 1293, i64 1294, i64 1295, i64 1296, i64 1297, i64 1298, i64 1299, i64 1300, i64 1301, i64 1302, i64 1303, i64 1304, i64 1305, i64 1306, i64 1307, i64 1308, i64 1309, i64 1310, i64 1311, i64 1312, i64 1313, i64 1314, i64 1315, i64 1316, i64 1317, i64 1318, i64 1319, i64 1320, i64 1321, i64 1322, i64 1323, i64 1324, i64 1325, i64 1326, i64 1327, i64 1328, i64 1329, i64 1367, i64 1369, i64 1370, i64 1373, i64 1374, i64 1377, i64 1416, i64 1417, i64 1418, i64 1425, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1480, i64 1488, i64 1515, i64 1520, i64 1524, i64 1536, i64 1542, i64 1548, i64 1550, i64 1552, i64 1563, i64 1564, i64 1565, i64 1567, i64 1568, i64 1611, i64 1632, i64 1642, i64 1643, i64 1645, i64 1646, i64 1648, i64 1649, i64 1748, i64 1749, i64 1750, i64 1757, i64 1758, i64 1759, i64 1765, i64 1767, i64 1769, i64 1770, i64 1774, i64 1776, i64 1786, i64 1789, i64 1791, i64 1792, i64 1795, i64 1807, i64 1808, i64 1809, i64 1810, i64 1840, i64 1867, i64 1869, i64 1958, i64 1969, i64 1970, i64 1984, i64 1994, i64 2027, i64 2036, i64 2038, i64 2040, i64 2041, i64 2042, i64 2043, i64 2048, i64 2070, i64 2074, i64 2075, i64 2084, i64 2085, i64 2088, i64 2089, i64 2094, i64 2112, i64 2137, i64 2140, i64 2208, i64 2227, i64 2276, i64 2308, i64 2362, i64 2365, i64 2366, i64 2384, i64 2385, i64 2392, i64 2402, i64 2404, i64 2406, i64 2416, i64 2417, i64 2433, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2492, i64 2493, i64 2494, i64 2501, i64 2503, i64 2505, i64 2507, i64 2510, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2530, i64 2532, i64 2534, i64 2544, i64 2546, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2620, i64 2621, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2638, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2662, i64 2672, i64 2674, i64 2677, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2748, i64 2749, i64 2750, i64 2758, i64 2759, i64 2762, i64 2763, i64 2766, i64 2768, i64 2769, i64 2784, i64 2786, i64 2788, i64 2790, i64 2800, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2876, i64 2877, i64 2878, i64 2885, i64 2887, i64 2889, i64 2891, i64 2894, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2914, i64 2916, i64 2918, i64 2928, i64 2929, i64 2930, i64 2946, i64 2947, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3022, i64 3024, i64 3025, i64 3031, i64 3032, i64 3046, i64 3056, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3134, i64 3141, i64 3142, i64 3145, i64 3146, i64 3150, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3170, i64 3172, i64 3174, i64 3184, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3260, i64 3261, i64 3262, i64 3269, i64 3270, i64 3273, i64 3274, i64 3278, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3298, i64 3300, i64 3302, i64 3312, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3390, i64 3397, i64 3398, i64 3401, i64 3402, i64 3406, i64 3407, i64 3415, i64 3416, i64 3424, i64 3426, i64 3428, i64 3430, i64 3440, i64 3450, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3530, i64 3531, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3558, i64 3568, i64 3570, i64 3572, i64 3585, i64 3633, i64 3634, i64 3636, i64 3643, i64 3648, i64 3655, i64 3663, i64 3664, i64 3674, i64 3713, i64 3715, i64 3716, i64 3717, i64 3719, i64 3721, i64 3722, i64 3723, i64 3725, i64 3726, i64 3732, i64 3736, i64 3737, i64 3744, i64 3745, i64 3748, i64 3749, i64 3750, i64 3751, i64 3752, i64 3754, i64 3756, i64 3757, i64 3761, i64 3762, i64 3764, i64 3770, i64 3771, i64 3773, i64 3774, i64 3776, i64 3781, i64 3782, i64 3783, i64 3784, i64 3790, i64 3792, i64 3802, i64 3804, i64 3808, i64 3840, i64 3841, i64 3864, i64 3866, i64 3872, i64 3882, i64 3893, i64 3894, i64 3895, i64 3896, i64 3897, i64 3898, i64 3902, i64 3904, i64 3912, i64 3913, i64 3949, i64 3953, i64 3973, i64 3974, i64 3976, i64 3981, i64 3992, i64 3993, i64 4029, i64 4038, i64 4039, i64 4096, i64 4139, i64 4159, i64 4160, i64 4170, i64 4172, i64 4176, i64 4182, i64 4186, i64 4190, i64 4193, i64 4194, i64 4197, i64 4199, i64 4206, i64 4209, i64 4213, i64 4226, i64 4238, i64 4239, i64 4240, i64 4250, i64 4254, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4347, i64 4348, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4957, i64 4960, i64 4962, i64 4963, i64 4967, i64 4969, i64 4992, i64 5008, i64 5024, i64 5109, i64 5121, i64 5741, i64 5742, i64 5743, i64 5760, i64 5761, i64 5787, i64 5789, i64 5792, i64 5867, i64 5870, i64 5881, i64 5888, i64 5901, i64 5902, i64 5906, i64 5909, i64 5920, i64 5938, i64 5941, i64 5943, i64 5952, i64 5970, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6016, i64 6068, i64 6100, i64 6103, i64 6104, i64 6108, i64 6109, i64 6110, i64 6112, i64 6122, i64 6146, i64 6147, i64 6148, i64 6152, i64 6153, i64 6154, i64 6155, i64 6158, i64 6159, i64 6160, i64 6170, i64 6176, i64 6264, i64 6272, i64 6313, i64 6314, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6460, i64 6468, i64 6470, i64 6480, i64 6510, i64 6512, i64 6517, i64 6528, i64 6572, i64 6576, i64 6593, i64 6600, i64 6602, i64 6608, i64 6618, i64 6656, i64 6679, i64 6684, i64 6688, i64 6741, i64 6751, i64 6752, i64 6781, i64 6783, i64 6784, i64 6794, i64 6800, i64 6810, i64 6823, i64 6824, i64 6828, i64 6832, i64 6847, i64 6912, i64 6917, i64 6964, i64 6981, i64 6988, i64 6992, i64 7002, i64 7004, i64 7006, i64 7008, i64 7019, i64 7028, i64 7040, i64 7043, i64 7073, i64 7086, i64 7088, i64 7098, i64 7142, i64 7156, i64 7168, i64 7204, i64 7224, i64 7227, i64 7229, i64 7232, i64 7242, i64 7245, i64 7248, i64 7258, i64 7294, i64 7296, i64 7376, i64 7379, i64 7380, i64 7401, i64 7405, i64 7406, i64 7410, i64 7413, i64 7415, i64 7416, i64 7418, i64 7424, i64 7616, i64 7670, i64 7676, i64 7680, i64 7681, i64 7682, i64 7683, i64 7684, i64 7685, i64 7686, i64 7687, i64 7688, i64 7689, i64 7690, i64 7691, i64 7692, i64 7693, i64 7694, i64 7695, i64 7696, i64 7697, i64 7698, i64 7699, i64 7700, i64 7701, i64 7702, i64 7703, i64 7704, i64 7705, i64 7706, i64 7707, i64 7708, i64 7709, i64 7710, i64 7711, i64 7712, i64 7713, i64 7714, i64 7715, i64 7716, i64 7717, i64 7718, i64 7719, i64 7720, i64 7721, i64 7722, i64 7723, i64 7724, i64 7725, i64 7726, i64 7727, i64 7728, i64 7729, i64 7730, i64 7731, i64 7732, i64 7733, i64 7734, i64 7735, i64 7736, i64 7737, i64 7738, i64 7739, i64 7740, i64 7741, i64 7742, i64 7743, i64 7744, i64 7745, i64 7746, i64 7747, i64 7748, i64 7749, i64 7750, i64 7751, i64 7752, i64 7753, i64 7754, i64 7755, i64 7756, i64 7757, i64 7758, i64 7759, i64 7760, i64 7761, i64 7762, i64 7763, i64 7764, i64 7765, i64 7766, i64 7767, i64 7768, i64 7769, i64 7770, i64 7771, i64 7772, i64 7773, i64 7774, i64 7775, i64 7776, i64 7777, i64 7778, i64 7779, i64 7780, i64 7781, i64 7782, i64 7783, i64 7784, i64 7785, i64 7786, i64 7787, i64 7788, i64 7789, i64 7790, i64 7791, i64 7792, i64 7793, i64 7794, i64 7795, i64 7796, i64 7797, i64 7798, i64 7799, i64 7800, i64 7801, i64 7802, i64 7803, i64 7804, i64 7805, i64 7806, i64 7807, i64 7808, i64 7809, i64 7810, i64 7811, i64 7812, i64 7813, i64 7814, i64 7815, i64 7816, i64 7817, i64 7818, i64 7819, i64 7820, i64 7821, i64 7822, i64 7823, i64 7824, i64 7825, i64 7826, i64 7827, i64 7828, i64 7829, i64 7838, i64 7839, i64 7840, i64 7841, i64 7842, i64 7843, i64 7844, i64 7845, i64 7846, i64 7847, i64 7848, i64 7849, i64 7850, i64 7851, i64 7852, i64 7853, i64 7854, i64 7855, i64 7856, i64 7857, i64 7858, i64 7859, i64 7860, i64 7861, i64 7862, i64 7863, i64 7864, i64 7865, i64 7866, i64 7867, i64 7868, i64 7869, i64 7870, i64 7871, i64 7872, i64 7873, i64 7874, i64 7875, i64 7876, i64 7877, i64 7878, i64 7879, i64 7880, i64 7881, i64 7882, i64 7883, i64 7884, i64 7885, i64 7886, i64 7887, i64 7888, i64 7889, i64 7890, i64 7891, i64 7892, i64 7893, i64 7894, i64 7895, i64 7896, i64 7897, i64 7898, i64 7899, i64 7900, i64 7901, i64 7902, i64 7903, i64 7904, i64 7905, i64 7906, i64 7907, i64 7908, i64 7909, i64 7910, i64 7911, i64 7912, i64 7913, i64 7914, i64 7915, i64 7916, i64 7917, i64 7918, i64 7919, i64 7920, i64 7921, i64 7922, i64 7923, i64 7924, i64 7925, i64 7926, i64 7927, i64 7928, i64 7929, i64 7930, i64 7931, i64 7932, i64 7933, i64 7934, i64 7935, i64 7944, i64 7952, i64 7958, i64 7960, i64 7966, i64 7968, i64 7976, i64 7984, i64 7992, i64 8000, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8032, i64 8040, i64 8048, i64 8062, i64 8064, i64 8072, i64 8080, i64 8088, i64 8096, i64 8104, i64 8112, i64 8117, i64 8118, i64 8120, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8136, i64 8141, i64 8144, i64 8148, i64 8150, i64 8152, i64 8156, i64 8160, i64 8168, i64 8173, i64 8178, i64 8181, i64 8182, i64 8184, i64 8189, i64 8192, i64 8203, i64 8204, i64 8206, i64 8208, i64 8211, i64 8213, i64 8216, i64 8224, i64 8228, i64 8229, i64 8232, i64 8234, i64 8239, i64 8240, i64 8249, i64 8251, i64 8252, i64 8254, i64 8261, i64 8263, i64 8266, i64 8287, i64 8288, i64 8293, i64 8294, i64 8304, i64 8305, i64 8306, i64 8317, i64 8319, i64 8320, i64 8333, i64 8335, i64 8336, i64 8349, i64 8400, i64 8433, i64 8450, i64 8451, i64 8455, i64 8456, i64 8458, i64 8459, i64 8462, i64 8464, i64 8467, i64 8468, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8495, i64 8496, i64 8500, i64 8501, i64 8505, i64 8506, i64 8508, i64 8510, i64 8512, i64 8517, i64 8518, i64 8522, i64 8526, i64 8527, i64 8544, i64 8560, i64 8576, i64 8579, i64 8580, i64 8581, i64 8585, i64 8968, i64 8972, i64 9001, i64 9003, i64 9398, i64 9424, i64 9450, i64 10075, i64 10081, i64 10088, i64 10102, i64 10181, i64 10183, i64 10214, i64 10224, i64 10627, i64 10649, i64 10712, i64 10716, i64 10748, i64 10750, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11361, i64 11362, i64 11365, i64 11367, i64 11368, i64 11369, i64 11370, i64 11371, i64 11372, i64 11373, i64 11377, i64 11378, i64 11379, i64 11381, i64 11382, i64 11390, i64 11393, i64 11394, i64 11395, i64 11396, i64 11397, i64 11398, i64 11399, i64 11400, i64 11401, i64 11402, i64 11403, i64 11404, i64 11405, i64 11406, i64 11407, i64 11408, i64 11409, i64 11410, i64 11411, i64 11412, i64 11413, i64 11414, i64 11415, i64 11416, i64 11417, i64 11418, i64 11419, i64 11420, i64 11421, i64 11422, i64 11423, i64 11424, i64 11425, i64 11426, i64 11427, i64 11428, i64 11429, i64 11430, i64 11431, i64 11432, i64 11433, i64 11434, i64 11435, i64 11436, i64 11437, i64 11438, i64 11439, i64 11440, i64 11441, i64 11442, i64 11443, i64 11444, i64 11445, i64 11446, i64 11447, i64 11448, i64 11449, i64 11450, i64 11451, i64 11452, i64 11453, i64 11454, i64 11455, i64 11456, i64 11457, i64 11458, i64 11459, i64 11460, i64 11461, i64 11462, i64 11463, i64 11464, i64 11465, i64 11466, i64 11467, i64 11468, i64 11469, i64 11470, i64 11471, i64 11472, i64 11473, i64 11474, i64 11475, i64 11476, i64 11477, i64 11478, i64 11479, i64 11480, i64 11481, i64 11482, i64 11483, i64 11484, i64 11485, i64 11486, i64 11487, i64 11488, i64 11489, i64 11490, i64 11491, i64 11493, i64 11499, i64 11500, i64 11501, i64 11502, i64 11503, i64 11506, i64 11507, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11632, i64 11647, i64 11648, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11776, i64 11790, i64 11804, i64 11806, i64 11808, i64 11818, i64 11822, i64 11823, i64 11824, i64 11836, i64 11837, i64 11842, i64 11843, i64 12288, i64 12289, i64 12290, i64 12291, i64 12293, i64 12296, i64 12306, i64 12308, i64 12316, i64 12317, i64 12320, i64 12321, i64 12330, i64 12336, i64 12337, i64 12342, i64 12344, i64 12349, i64 12353, i64 12439, i64 12441, i64 12443, i64 12445, i64 12448, i64 12449, i64 12539, i64 12540, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12704, i64 12731, i64 12784, i64 12800, i64 13312, i64 19894, i64 19968, i64 40909, i64 40960, i64 42125, i64 42192, i64 42238, i64 42239, i64 42240, i64 42509, i64 42510, i64 42512, i64 42528, i64 42538, i64 42540, i64 42560, i64 42561, i64 42562, i64 42563, i64 42564, i64 42565, i64 42566, i64 42567, i64 42568, i64 42569, i64 42570, i64 42571, i64 42572, i64 42573, i64 42574, i64 42575, i64 42576, i64 42577, i64 42578, i64 42579, i64 42580, i64 42581, i64 42582, i64 42583, i64 42584, i64 42585, i64 42586, i64 42587, i64 42588, i64 42589, i64 42590, i64 42591, i64 42592, i64 42593, i64 42594, i64 42595, i64 42596, i64 42597, i64 42598, i64 42599, i64 42600, i64 42601, i64 42602, i64 42603, i64 42604, i64 42605, i64 42606, i64 42607, i64 42611, i64 42612, i64 42622, i64 42623, i64 42624, i64 42625, i64 42626, i64 42627, i64 42628, i64 42629, i64 42630, i64 42631, i64 42632, i64 42633, i64 42634, i64 42635, i64 42636, i64 42637, i64 42638, i64 42639, i64 42640, i64 42641, i64 42642, i64 42643, i64 42644, i64 42645, i64 42646, i64 42647, i64 42648, i64 42649, i64 42650, i64 42651, i64 42654, i64 42655, i64 42656, i64 42736, i64 42738, i64 42739, i64 42740, i64 42743, i64 42744, i64 42775, i64 42784, i64 42786, i64 42787, i64 42788, i64 42789, i64 42790, i64 42791, i64 42792, i64 42793, i64 42794, i64 42795, i64 42796, i64 42797, i64 42798, i64 42799, i64 42802, i64 42803, i64 42804, i64 42805, i64 42806, i64 42807, i64 42808, i64 42809, i64 42810, i64 42811, i64 42812, i64 42813, i64 42814, i64 42815, i64 42816, i64 42817, i64 42818, i64 42819, i64 42820, i64 42821, i64 42822, i64 42823, i64 42824, i64 42825, i64 42826, i64 42827, i64 42828, i64 42829, i64 42830, i64 42831, i64 42832, i64 42833, i64 42834, i64 42835, i64 42836, i64 42837, i64 42838, i64 42839, i64 42840, i64 42841, i64 42842, i64 42843, i64 42844, i64 42845, i64 42846, i64 42847, i64 42848, i64 42849, i64 42850, i64 42851, i64 42852, i64 42853, i64 42854, i64 42855, i64 42856, i64 42857, i64 42858, i64 42859, i64 42860, i64 42861, i64 42862, i64 42863, i64 42873, i64 42874, i64 42875, i64 42876, i64 42877, i64 42879, i64 42880, i64 42881, i64 42882, i64 42883, i64 42884, i64 42885, i64 42886, i64 42887, i64 42888, i64 42889, i64 42891, i64 42892, i64 42893, i64 42894, i64 42895, i64 42896, i64 42897, i64 42898, i64 42899, i64 42902, i64 42903, i64 42904, i64 42905, i64 42906, i64 42907, i64 42908, i64 42909, i64 42910, i64 42911, i64 42912, i64 42913, i64 42914, i64 42915, i64 42916, i64 42917, i64 42918, i64 42919, i64 42920, i64 42921, i64 42922, i64 42926, i64 42928, i64 42930, i64 42999, i64 43000, i64 43003, i64 43010, i64 43011, i64 43014, i64 43015, i64 43019, i64 43020, i64 43043, i64 43048, i64 43072, i64 43124, i64 43126, i64 43128, i64 43136, i64 43138, i64 43188, i64 43205, i64 43214, i64 43216, i64 43226, i64 43232, i64 43250, i64 43256, i64 43259, i64 43260, i64 43264, i64 43274, i64 43302, i64 43310, i64 43311, i64 43312, i64 43335, i64 43348, i64 43360, i64 43389, i64 43392, i64 43396, i64 43443, i64 43457, i64 43464, i64 43466, i64 43471, i64 43472, i64 43482, i64 43488, i64 43493, i64 43494, i64 43504, i64 43514, i64 43519, i64 43520, i64 43561, i64 43575, i64 43584, i64 43587, i64 43588, i64 43596, i64 43598, i64 43600, i64 43610, i64 43613, i64 43616, i64 43639, i64 43642, i64 43643, i64 43646, i64 43696, i64 43697, i64 43698, i64 43701, i64 43703, i64 43705, i64 43710, i64 43712, i64 43713, i64 43714, i64 43715, i64 43739, i64 43742, i64 43744, i64 43755, i64 43760, i64 43762, i64 43765, i64 43767, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 43968, i64 44003, i64 44011, i64 44012, i64 44014, i64 44016, i64 44026, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 63744, i64 64110, i64 64112, i64 64218, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64286, i64 64287, i64 64297, i64 64298, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64434, i64 64467, i64 64830, i64 64832, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65020, i64 65024, i64 65040, i64 65042, i64 65043, i64 65044, i64 65047, i64 65049, i64 65056, i64 65070, i64 65073, i64 65075, i64 65077, i64 65093, i64 65095, i64 65097, i64 65104, i64 65106, i64 65107, i64 65109, i64 65110, i64 65112, i64 65113, i64 65119, i64 65123, i64 65124, i64 65136, i64 65141, i64 65142, i64 65277, i64 65279, i64 65280, i64 65281, i64 65282, i64 65288, i64 65290, i64 65292, i64 65294, i64 65295, i64 65306, i64 65307, i64 65311, i64 65312, i64 65313, i64 65339, i64 65340, i64 65341, i64 65342, i64 65345, i64 65371, i64 65372, i64 65373, i64 65374, i64 65375, i64 65377, i64 65378, i64 65380, i64 65381, i64 65382, i64 65438, i64 65440, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65529, i64 65532, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65856, i64 65909, i64 66045, i64 66046, i64 66176, i64 66205, i64 66208, i64 66257, i64 66272, i64 66273, i64 66304, i64 66336, i64 66352, i64 66379, i64 66384, i64 66422, i64 66427, i64 66432, i64 66462, i64 66464, i64 66500, i64 66504, i64 66512, i64 66513, i64 66518, i64 66560, i64 66600, i64 66640, i64 66718, i64 66720, i64 66730, i64 66816, i64 66856, i64 66864, i64 66916, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67680, i64 67703, i64 67712, i64 67743, i64 67840, i64 67862, i64 67872, i64 67898, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68097, i64 68100, i64 68101, i64 68103, i64 68108, i64 68112, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68152, i64 68155, i64 68159, i64 68160, i64 68182, i64 68184, i64 68192, i64 68221, i64 68224, i64 68253, i64 68288, i64 68296, i64 68297, i64 68325, i64 68327, i64 68352, i64 68406, i64 68416, i64 68438, i64 68448, i64 68467, i64 68480, i64 68498, i64 68608, i64 68681, i64 69632, i64 69635, i64 69688, i64 69703, i64 69705, i64 69734, i64 69744, i64 69759, i64 69763, i64 69808, i64 69819, i64 69821, i64 69822, i64 69826, i64 69840, i64 69865, i64 69872, i64 69882, i64 69888, i64 69891, i64 69927, i64 69941, i64 69942, i64 69952, i64 69953, i64 69956, i64 69968, i64 70003, i64 70004, i64 70006, i64 70007, i64 70016, i64 70019, i64 70067, i64 70081, i64 70085, i64 70087, i64 70093, i64 70094, i64 70096, i64 70106, i64 70107, i64 70144, i64 70162, i64 70163, i64 70188, i64 70200, i64 70202, i64 70203, i64 70205, i64 70320, i64 70367, i64 70379, i64 70384, i64 70394, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70460, i64 70461, i64 70462, i64 70469, i64 70471, i64 70473, i64 70475, i64 70478, i64 70487, i64 70488, i64 70493, i64 70498, i64 70500, i64 70502, i64 70509, i64 70512, i64 70517, i64 70784, i64 70832, i64 70852, i64 70854, i64 70855, i64 70856, i64 70864, i64 70874, i64 71040, i64 71087, i64 71094, i64 71096, i64 71105, i64 71106, i64 71108, i64 71113, i64 71114, i64 71168, i64 71216, i64 71233, i64 71235, i64 71236, i64 71237, i64 71248, i64 71258, i64 71296, i64 71339, i64 71352, i64 71360, i64 71370, i64 71840, i64 71872, i64 71904, i64 71914, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92768, i64 92778, i64 92782, i64 92784, i64 92880, i64 92910, i64 92912, i64 92917, i64 92918, i64 92928, i64 92976, i64 92983, i64 92985, i64 92992, i64 92996, i64 92997, i64 93008, i64 93018, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94033, i64 94079, i64 94095, i64 94099, i64 94112, i64 110592, i64 110594, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113821, i64 113823, i64 113824, i64 113828, i64 119141, i64 119146, i64 119149, i64 119155, i64 119163, i64 119171, i64 119173, i64 119180, i64 119210, i64 119214, i64 119362, i64 119365, i64 119808, i64 119834, i64 119860, i64 119886, i64 119893, i64 119894, i64 119912, i64 119938, i64 119964, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119990, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120016, i64 120042, i64 120068, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120120, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120172, i64 120198, i64 120224, i64 120250, i64 120276, i64 120302, i64 120328, i64 120354, i64 120380, i64 120406, i64 120432, i64 120458, i64 120486, i64 120488, i64 120513, i64 120514, i64 120539, i64 120540, i64 120546, i64 120571, i64 120572, i64 120597, i64 120598, i64 120604, i64 120629, i64 120630, i64 120655, i64 120656, i64 120662, i64 120687, i64 120688, i64 120713, i64 120714, i64 120720, i64 120745, i64 120746, i64 120771, i64 120772, i64 120778, i64 120779, i64 120780, i64 120782, i64 120832, i64 124928, i64 125125, i64 125136, i64 125143, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370, i64 128630, i64 128633, i64 131072, i64 173783, i64 173824, i64 177973, i64 177984, i64 178206, i64 194560, i64 195102, i64 917505, i64 917506, i64 917536, i64 917632, i64 917760, i64 918000], align 16, !dbg !1243
@PL_SB_invlist = external local_unnamed_addr global ptr, align 8
@Word_Break_invlist = internal constant [1483 x i64] [i64 1480, i64 148565664, i64 0, i64 0, i64 10, i64 11, i64 13, i64 14, i64 34, i64 35, i64 39, i64 40, i64 44, i64 45, i64 46, i64 47, i64 48, i64 58, i64 59, i64 60, i64 65, i64 91, i64 95, i64 96, i64 97, i64 123, i64 133, i64 134, i64 170, i64 171, i64 173, i64 174, i64 181, i64 182, i64 183, i64 184, i64 186, i64 187, i64 192, i64 215, i64 216, i64 247, i64 248, i64 706, i64 710, i64 722, i64 727, i64 728, i64 736, i64 741, i64 748, i64 749, i64 750, i64 751, i64 768, i64 880, i64 885, i64 886, i64 888, i64 890, i64 894, i64 895, i64 896, i64 902, i64 903, i64 904, i64 907, i64 908, i64 909, i64 910, i64 930, i64 931, i64 1014, i64 1015, i64 1154, i64 1155, i64 1162, i64 1328, i64 1329, i64 1367, i64 1369, i64 1370, i64 1377, i64 1416, i64 1417, i64 1418, i64 1425, i64 1470, i64 1471, i64 1472, i64 1473, i64 1475, i64 1476, i64 1478, i64 1479, i64 1480, i64 1488, i64 1515, i64 1520, i64 1523, i64 1524, i64 1525, i64 1536, i64 1542, i64 1548, i64 1550, i64 1552, i64 1563, i64 1564, i64 1565, i64 1568, i64 1611, i64 1632, i64 1642, i64 1643, i64 1644, i64 1645, i64 1646, i64 1648, i64 1649, i64 1748, i64 1749, i64 1750, i64 1757, i64 1758, i64 1759, i64 1765, i64 1767, i64 1769, i64 1770, i64 1774, i64 1776, i64 1786, i64 1789, i64 1791, i64 1792, i64 1807, i64 1808, i64 1809, i64 1810, i64 1840, i64 1867, i64 1869, i64 1958, i64 1969, i64 1970, i64 1984, i64 1994, i64 2027, i64 2036, i64 2038, i64 2040, i64 2041, i64 2042, i64 2043, i64 2048, i64 2070, i64 2074, i64 2075, i64 2084, i64 2085, i64 2088, i64 2089, i64 2094, i64 2112, i64 2137, i64 2140, i64 2208, i64 2227, i64 2276, i64 2308, i64 2362, i64 2365, i64 2366, i64 2384, i64 2385, i64 2392, i64 2402, i64 2404, i64 2406, i64 2416, i64 2417, i64 2433, i64 2436, i64 2437, i64 2445, i64 2447, i64 2449, i64 2451, i64 2473, i64 2474, i64 2481, i64 2482, i64 2483, i64 2486, i64 2490, i64 2492, i64 2493, i64 2494, i64 2501, i64 2503, i64 2505, i64 2507, i64 2510, i64 2511, i64 2519, i64 2520, i64 2524, i64 2526, i64 2527, i64 2530, i64 2532, i64 2534, i64 2544, i64 2546, i64 2561, i64 2564, i64 2565, i64 2571, i64 2575, i64 2577, i64 2579, i64 2601, i64 2602, i64 2609, i64 2610, i64 2612, i64 2613, i64 2615, i64 2616, i64 2618, i64 2620, i64 2621, i64 2622, i64 2627, i64 2631, i64 2633, i64 2635, i64 2638, i64 2641, i64 2642, i64 2649, i64 2653, i64 2654, i64 2655, i64 2662, i64 2672, i64 2674, i64 2677, i64 2678, i64 2689, i64 2692, i64 2693, i64 2702, i64 2703, i64 2706, i64 2707, i64 2729, i64 2730, i64 2737, i64 2738, i64 2740, i64 2741, i64 2746, i64 2748, i64 2749, i64 2750, i64 2758, i64 2759, i64 2762, i64 2763, i64 2766, i64 2768, i64 2769, i64 2784, i64 2786, i64 2788, i64 2790, i64 2800, i64 2817, i64 2820, i64 2821, i64 2829, i64 2831, i64 2833, i64 2835, i64 2857, i64 2858, i64 2865, i64 2866, i64 2868, i64 2869, i64 2874, i64 2876, i64 2877, i64 2878, i64 2885, i64 2887, i64 2889, i64 2891, i64 2894, i64 2902, i64 2904, i64 2908, i64 2910, i64 2911, i64 2914, i64 2916, i64 2918, i64 2928, i64 2929, i64 2930, i64 2946, i64 2947, i64 2948, i64 2949, i64 2955, i64 2958, i64 2961, i64 2962, i64 2966, i64 2969, i64 2971, i64 2972, i64 2973, i64 2974, i64 2976, i64 2979, i64 2981, i64 2984, i64 2987, i64 2990, i64 3002, i64 3006, i64 3011, i64 3014, i64 3017, i64 3018, i64 3022, i64 3024, i64 3025, i64 3031, i64 3032, i64 3046, i64 3056, i64 3072, i64 3076, i64 3077, i64 3085, i64 3086, i64 3089, i64 3090, i64 3113, i64 3114, i64 3130, i64 3133, i64 3134, i64 3141, i64 3142, i64 3145, i64 3146, i64 3150, i64 3157, i64 3159, i64 3160, i64 3162, i64 3168, i64 3170, i64 3172, i64 3174, i64 3184, i64 3201, i64 3204, i64 3205, i64 3213, i64 3214, i64 3217, i64 3218, i64 3241, i64 3242, i64 3252, i64 3253, i64 3258, i64 3260, i64 3261, i64 3262, i64 3269, i64 3270, i64 3273, i64 3274, i64 3278, i64 3285, i64 3287, i64 3294, i64 3295, i64 3296, i64 3298, i64 3300, i64 3302, i64 3312, i64 3313, i64 3315, i64 3329, i64 3332, i64 3333, i64 3341, i64 3342, i64 3345, i64 3346, i64 3387, i64 3389, i64 3390, i64 3397, i64 3398, i64 3401, i64 3402, i64 3406, i64 3407, i64 3415, i64 3416, i64 3424, i64 3426, i64 3428, i64 3430, i64 3440, i64 3450, i64 3456, i64 3458, i64 3460, i64 3461, i64 3479, i64 3482, i64 3506, i64 3507, i64 3516, i64 3517, i64 3518, i64 3520, i64 3527, i64 3530, i64 3531, i64 3535, i64 3541, i64 3542, i64 3543, i64 3544, i64 3552, i64 3558, i64 3568, i64 3570, i64 3572, i64 3633, i64 3634, i64 3636, i64 3643, i64 3655, i64 3663, i64 3664, i64 3674, i64 3761, i64 3762, i64 3764, i64 3770, i64 3771, i64 3773, i64 3784, i64 3790, i64 3792, i64 3802, i64 3840, i64 3841, i64 3864, i64 3866, i64 3872, i64 3882, i64 3893, i64 3894, i64 3895, i64 3896, i64 3897, i64 3898, i64 3902, i64 3904, i64 3912, i64 3913, i64 3949, i64 3953, i64 3973, i64 3974, i64 3976, i64 3981, i64 3992, i64 3993, i64 4029, i64 4038, i64 4039, i64 4139, i64 4159, i64 4160, i64 4170, i64 4182, i64 4186, i64 4190, i64 4193, i64 4194, i64 4197, i64 4199, i64 4206, i64 4209, i64 4213, i64 4226, i64 4238, i64 4239, i64 4240, i64 4250, i64 4254, i64 4256, i64 4294, i64 4295, i64 4296, i64 4301, i64 4302, i64 4304, i64 4347, i64 4348, i64 4681, i64 4682, i64 4686, i64 4688, i64 4695, i64 4696, i64 4697, i64 4698, i64 4702, i64 4704, i64 4745, i64 4746, i64 4750, i64 4752, i64 4785, i64 4786, i64 4790, i64 4792, i64 4799, i64 4800, i64 4801, i64 4802, i64 4806, i64 4808, i64 4823, i64 4824, i64 4881, i64 4882, i64 4886, i64 4888, i64 4955, i64 4957, i64 4960, i64 4992, i64 5008, i64 5024, i64 5109, i64 5121, i64 5741, i64 5743, i64 5760, i64 5761, i64 5787, i64 5792, i64 5867, i64 5870, i64 5881, i64 5888, i64 5901, i64 5902, i64 5906, i64 5909, i64 5920, i64 5938, i64 5941, i64 5952, i64 5970, i64 5972, i64 5984, i64 5997, i64 5998, i64 6001, i64 6002, i64 6004, i64 6068, i64 6100, i64 6109, i64 6110, i64 6112, i64 6122, i64 6155, i64 6158, i64 6159, i64 6160, i64 6170, i64 6176, i64 6264, i64 6272, i64 6313, i64 6314, i64 6315, i64 6320, i64 6390, i64 6400, i64 6431, i64 6432, i64 6444, i64 6448, i64 6460, i64 6470, i64 6480, i64 6576, i64 6593, i64 6600, i64 6602, i64 6608, i64 6618, i64 6656, i64 6679, i64 6684, i64 6741, i64 6751, i64 6752, i64 6781, i64 6783, i64 6784, i64 6794, i64 6800, i64 6810, i64 6832, i64 6847, i64 6912, i64 6917, i64 6964, i64 6981, i64 6988, i64 6992, i64 7002, i64 7019, i64 7028, i64 7040, i64 7043, i64 7073, i64 7086, i64 7088, i64 7098, i64 7142, i64 7156, i64 7168, i64 7204, i64 7224, i64 7232, i64 7242, i64 7245, i64 7248, i64 7258, i64 7294, i64 7376, i64 7379, i64 7380, i64 7401, i64 7405, i64 7406, i64 7410, i64 7413, i64 7415, i64 7416, i64 7418, i64 7424, i64 7616, i64 7670, i64 7676, i64 7680, i64 7958, i64 7960, i64 7966, i64 7968, i64 8006, i64 8008, i64 8014, i64 8016, i64 8024, i64 8025, i64 8026, i64 8027, i64 8028, i64 8029, i64 8030, i64 8031, i64 8062, i64 8064, i64 8117, i64 8118, i64 8125, i64 8126, i64 8127, i64 8130, i64 8133, i64 8134, i64 8141, i64 8144, i64 8148, i64 8150, i64 8156, i64 8160, i64 8173, i64 8178, i64 8181, i64 8182, i64 8189, i64 8204, i64 8206, i64 8208, i64 8216, i64 8218, i64 8228, i64 8229, i64 8231, i64 8232, i64 8234, i64 8239, i64 8255, i64 8257, i64 8260, i64 8261, i64 8276, i64 8277, i64 8288, i64 8293, i64 8294, i64 8304, i64 8305, i64 8306, i64 8319, i64 8320, i64 8336, i64 8349, i64 8400, i64 8433, i64 8450, i64 8451, i64 8455, i64 8456, i64 8458, i64 8468, i64 8469, i64 8470, i64 8473, i64 8478, i64 8484, i64 8485, i64 8486, i64 8487, i64 8488, i64 8489, i64 8490, i64 8494, i64 8495, i64 8506, i64 8508, i64 8512, i64 8517, i64 8522, i64 8526, i64 8527, i64 8544, i64 8585, i64 9398, i64 9450, i64 11264, i64 11311, i64 11312, i64 11359, i64 11360, i64 11493, i64 11499, i64 11503, i64 11506, i64 11508, i64 11520, i64 11558, i64 11559, i64 11560, i64 11565, i64 11566, i64 11568, i64 11624, i64 11631, i64 11632, i64 11647, i64 11648, i64 11671, i64 11680, i64 11687, i64 11688, i64 11695, i64 11696, i64 11703, i64 11704, i64 11711, i64 11712, i64 11719, i64 11720, i64 11727, i64 11728, i64 11735, i64 11736, i64 11743, i64 11744, i64 11776, i64 11823, i64 11824, i64 12293, i64 12294, i64 12330, i64 12336, i64 12337, i64 12342, i64 12347, i64 12349, i64 12441, i64 12443, i64 12445, i64 12448, i64 12539, i64 12540, i64 12544, i64 12549, i64 12590, i64 12593, i64 12687, i64 12704, i64 12731, i64 12784, i64 12800, i64 13008, i64 13055, i64 13056, i64 13144, i64 40960, i64 42125, i64 42192, i64 42238, i64 42240, i64 42509, i64 42512, i64 42528, i64 42538, i64 42540, i64 42560, i64 42607, i64 42611, i64 42612, i64 42622, i64 42623, i64 42654, i64 42655, i64 42656, i64 42736, i64 42738, i64 42775, i64 42784, i64 42786, i64 42889, i64 42891, i64 42895, i64 42896, i64 42926, i64 42928, i64 42930, i64 42999, i64 43010, i64 43011, i64 43014, i64 43015, i64 43019, i64 43020, i64 43043, i64 43048, i64 43072, i64 43124, i64 43136, i64 43138, i64 43188, i64 43205, i64 43216, i64 43226, i64 43232, i64 43250, i64 43256, i64 43259, i64 43260, i64 43264, i64 43274, i64 43302, i64 43310, i64 43312, i64 43335, i64 43348, i64 43360, i64 43389, i64 43392, i64 43396, i64 43443, i64 43457, i64 43471, i64 43472, i64 43482, i64 43493, i64 43494, i64 43504, i64 43514, i64 43520, i64 43561, i64 43575, i64 43584, i64 43587, i64 43588, i64 43596, i64 43598, i64 43600, i64 43610, i64 43643, i64 43646, i64 43696, i64 43697, i64 43698, i64 43701, i64 43703, i64 43705, i64 43710, i64 43712, i64 43713, i64 43714, i64 43744, i64 43755, i64 43760, i64 43762, i64 43765, i64 43767, i64 43777, i64 43783, i64 43785, i64 43791, i64 43793, i64 43799, i64 43808, i64 43815, i64 43816, i64 43823, i64 43824, i64 43867, i64 43868, i64 43872, i64 43876, i64 43878, i64 43968, i64 44003, i64 44011, i64 44012, i64 44014, i64 44016, i64 44026, i64 44032, i64 55204, i64 55216, i64 55239, i64 55243, i64 55292, i64 64256, i64 64263, i64 64275, i64 64280, i64 64285, i64 64286, i64 64287, i64 64297, i64 64298, i64 64311, i64 64312, i64 64317, i64 64318, i64 64319, i64 64320, i64 64322, i64 64323, i64 64325, i64 64326, i64 64336, i64 64434, i64 64467, i64 64830, i64 64848, i64 64912, i64 64914, i64 64968, i64 65008, i64 65020, i64 65024, i64 65040, i64 65041, i64 65043, i64 65044, i64 65045, i64 65056, i64 65070, i64 65075, i64 65077, i64 65101, i64 65104, i64 65105, i64 65106, i64 65107, i64 65108, i64 65109, i64 65110, i64 65136, i64 65141, i64 65142, i64 65277, i64 65279, i64 65280, i64 65287, i64 65288, i64 65292, i64 65293, i64 65294, i64 65295, i64 65306, i64 65307, i64 65308, i64 65313, i64 65339, i64 65343, i64 65344, i64 65345, i64 65371, i64 65382, i64 65438, i64 65440, i64 65471, i64 65474, i64 65480, i64 65482, i64 65488, i64 65490, i64 65496, i64 65498, i64 65501, i64 65529, i64 65532, i64 65536, i64 65548, i64 65549, i64 65575, i64 65576, i64 65595, i64 65596, i64 65598, i64 65599, i64 65614, i64 65616, i64 65630, i64 65664, i64 65787, i64 65856, i64 65909, i64 66045, i64 66046, i64 66176, i64 66205, i64 66208, i64 66257, i64 66272, i64 66273, i64 66304, i64 66336, i64 66352, i64 66379, i64 66384, i64 66422, i64 66427, i64 66432, i64 66462, i64 66464, i64 66500, i64 66504, i64 66512, i64 66513, i64 66518, i64 66560, i64 66718, i64 66720, i64 66730, i64 66816, i64 66856, i64 66864, i64 66916, i64 67072, i64 67383, i64 67392, i64 67414, i64 67424, i64 67432, i64 67584, i64 67590, i64 67592, i64 67593, i64 67594, i64 67638, i64 67639, i64 67641, i64 67644, i64 67645, i64 67647, i64 67670, i64 67680, i64 67703, i64 67712, i64 67743, i64 67840, i64 67862, i64 67872, i64 67898, i64 67968, i64 68024, i64 68030, i64 68032, i64 68096, i64 68097, i64 68100, i64 68101, i64 68103, i64 68108, i64 68112, i64 68116, i64 68117, i64 68120, i64 68121, i64 68148, i64 68152, i64 68155, i64 68159, i64 68160, i64 68192, i64 68221, i64 68224, i64 68253, i64 68288, i64 68296, i64 68297, i64 68325, i64 68327, i64 68352, i64 68406, i64 68416, i64 68438, i64 68448, i64 68467, i64 68480, i64 68498, i64 68608, i64 68681, i64 69632, i64 69635, i64 69688, i64 69703, i64 69734, i64 69744, i64 69759, i64 69763, i64 69808, i64 69819, i64 69821, i64 69822, i64 69840, i64 69865, i64 69872, i64 69882, i64 69888, i64 69891, i64 69927, i64 69941, i64 69942, i64 69952, i64 69968, i64 70003, i64 70004, i64 70006, i64 70007, i64 70016, i64 70019, i64 70067, i64 70081, i64 70085, i64 70096, i64 70106, i64 70107, i64 70144, i64 70162, i64 70163, i64 70188, i64 70200, i64 70320, i64 70367, i64 70379, i64 70384, i64 70394, i64 70401, i64 70404, i64 70405, i64 70413, i64 70415, i64 70417, i64 70419, i64 70441, i64 70442, i64 70449, i64 70450, i64 70452, i64 70453, i64 70458, i64 70460, i64 70461, i64 70462, i64 70469, i64 70471, i64 70473, i64 70475, i64 70478, i64 70487, i64 70488, i64 70493, i64 70498, i64 70500, i64 70502, i64 70509, i64 70512, i64 70517, i64 70784, i64 70832, i64 70852, i64 70854, i64 70855, i64 70856, i64 70864, i64 70874, i64 71040, i64 71087, i64 71094, i64 71096, i64 71105, i64 71168, i64 71216, i64 71233, i64 71236, i64 71237, i64 71248, i64 71258, i64 71296, i64 71339, i64 71352, i64 71360, i64 71370, i64 71840, i64 71904, i64 71914, i64 71935, i64 71936, i64 72384, i64 72441, i64 73728, i64 74649, i64 74752, i64 74863, i64 77824, i64 78895, i64 92160, i64 92729, i64 92736, i64 92767, i64 92768, i64 92778, i64 92880, i64 92910, i64 92912, i64 92917, i64 92928, i64 92976, i64 92983, i64 92992, i64 92996, i64 93008, i64 93018, i64 93027, i64 93048, i64 93053, i64 93072, i64 93952, i64 94021, i64 94032, i64 94033, i64 94079, i64 94095, i64 94099, i64 94112, i64 110592, i64 110593, i64 113664, i64 113771, i64 113776, i64 113789, i64 113792, i64 113801, i64 113808, i64 113818, i64 113821, i64 113823, i64 113824, i64 113828, i64 119141, i64 119146, i64 119149, i64 119155, i64 119163, i64 119171, i64 119173, i64 119180, i64 119210, i64 119214, i64 119362, i64 119365, i64 119808, i64 119893, i64 119894, i64 119965, i64 119966, i64 119968, i64 119970, i64 119971, i64 119973, i64 119975, i64 119977, i64 119981, i64 119982, i64 119994, i64 119995, i64 119996, i64 119997, i64 120004, i64 120005, i64 120070, i64 120071, i64 120075, i64 120077, i64 120085, i64 120086, i64 120093, i64 120094, i64 120122, i64 120123, i64 120127, i64 120128, i64 120133, i64 120134, i64 120135, i64 120138, i64 120145, i64 120146, i64 120486, i64 120488, i64 120513, i64 120514, i64 120539, i64 120540, i64 120571, i64 120572, i64 120597, i64 120598, i64 120629, i64 120630, i64 120655, i64 120656, i64 120687, i64 120688, i64 120713, i64 120714, i64 120745, i64 120746, i64 120771, i64 120772, i64 120780, i64 120782, i64 120832, i64 124928, i64 125125, i64 125136, i64 125143, i64 126464, i64 126468, i64 126469, i64 126496, i64 126497, i64 126499, i64 126500, i64 126501, i64 126503, i64 126504, i64 126505, i64 126515, i64 126516, i64 126520, i64 126521, i64 126522, i64 126523, i64 126524, i64 126530, i64 126531, i64 126535, i64 126536, i64 126537, i64 126538, i64 126539, i64 126540, i64 126541, i64 126544, i64 126545, i64 126547, i64 126548, i64 126549, i64 126551, i64 126552, i64 126553, i64 126554, i64 126555, i64 126556, i64 126557, i64 126558, i64 126559, i64 126560, i64 126561, i64 126563, i64 126564, i64 126565, i64 126567, i64 126571, i64 126572, i64 126579, i64 126580, i64 126584, i64 126585, i64 126589, i64 126590, i64 126591, i64 126592, i64 126602, i64 126603, i64 126620, i64 126625, i64 126628, i64 126629, i64 126634, i64 126635, i64 126652, i64 127280, i64 127306, i64 127312, i64 127338, i64 127344, i64 127370, i64 127462, i64 127488, i64 917505, i64 917506, i64 917536, i64 917632, i64 917760, i64 918000], align 16, !dbg !1248
@PL_WB_invlist = external local_unnamed_addr global ptr, align 8
@PL_exit_flags = external local_unnamed_addr global i8, align 1
@PL_endav = external local_unnamed_addr global ptr, align 8
@PL_minus_c = external local_unnamed_addr global i8, align 1
@PL_phase = external local_unnamed_addr global i32, align 4
@PL_scopestack_ix = external local_unnamed_addr global i32, align 4
@PL_tmps_ix = external local_unnamed_addr global i64, align 8
@PL_tmps_floor = external global i64, align 8
@PL_threadhook = external local_unnamed_addr global ptr, align 8
@PL_main_root = external local_unnamed_addr global ptr, align 8
@PL_main_cv = external local_unnamed_addr global ptr, align 8
@PL_comppad = external local_unnamed_addr global ptr, align 8
@PL_curpad = external local_unnamed_addr global ptr, align 8
@PL_comppad_name = external local_unnamed_addr global ptr, align 8
@PL_main_start = external local_unnamed_addr global ptr, align 8
@PL_warnhook = external local_unnamed_addr global ptr, align 8
@PL_diehook = external local_unnamed_addr global ptr, align 8
@PL_exitlistlen = external local_unnamed_addr global i32, align 4
@PL_exitlist = external local_unnamed_addr global ptr, align 8
@PL_use_safe_putenv = external local_unnamed_addr global i8, align 1
@PL_parser = external local_unnamed_addr global ptr, align 8
@PL_minus_F = external local_unnamed_addr global i8, align 1
@PL_splitstr = external local_unnamed_addr global ptr, align 8
@PL_minus_n = external local_unnamed_addr global i8, align 1
@PL_minus_p = external local_unnamed_addr global i8, align 1
@PL_minus_l = external local_unnamed_addr global i8, align 1
@PL_minus_a = external local_unnamed_addr global i8, align 1
@PL_doswitches = external local_unnamed_addr global i8, align 1
@PL_dowarn = external local_unnamed_addr global i8, align 1
@PL_unsafe = external local_unnamed_addr global i8, align 1
@PL_inplace = external local_unnamed_addr global ptr, align 8
@PL_e_script = external local_unnamed_addr global ptr, align 8
@PL_perldb = external local_unnamed_addr global i32, align 4
@PL_ofsgv = external local_unnamed_addr global ptr, align 8
@PL_ors_sv = external local_unnamed_addr global ptr, align 8
@PL_statname = external local_unnamed_addr global ptr, align 8
@PL_statgv = external local_unnamed_addr global ptr, align 8
@PL_efloatbuf = external local_unnamed_addr global ptr, align 8
@PL_efloatsize = external local_unnamed_addr global i64, align 8
@PL_beginav = external local_unnamed_addr global ptr, align 8
@PL_beginav_save = external global ptr, align 8
@PL_checkav = external local_unnamed_addr global ptr, align 8
@PL_checkav_save = external global ptr, align 8
@PL_unitcheckav = external local_unnamed_addr global ptr, align 8
@PL_unitcheckav_save = external global ptr, align 8
@PL_initav = external local_unnamed_addr global ptr, align 8
@PL_hintgv = external local_unnamed_addr global ptr, align 8
@PL_errgv = external local_unnamed_addr global ptr, align 8
@PL_argvoutgv = external local_unnamed_addr global ptr, align 8
@PL_stdingv = external local_unnamed_addr global ptr, align 8
@PL_stderrgv = external local_unnamed_addr global ptr, align 8
@PL_last_in_gv = external local_unnamed_addr global ptr, align 8
@PL_DBsingle = external local_unnamed_addr global ptr, align 8
@PL_DBtrace = external local_unnamed_addr global ptr, align 8
@PL_DBsignal = external local_unnamed_addr global ptr, align 8
@PL_DBcontrol = external local_unnamed_addr global [3 x i64], align 16
@PL_DBcv = external local_unnamed_addr global ptr, align 8
@PL_dbargs = external local_unnamed_addr global ptr, align 8
@PL_debstash = external local_unnamed_addr global ptr, align 8
@PL_envgv = external local_unnamed_addr global ptr, align 8
@PL_incgv = external local_unnamed_addr global ptr, align 8
@PL_argvgv = external local_unnamed_addr global ptr, align 8
@PL_replgv = external local_unnamed_addr global ptr, align 8
@PL_DBgv = external local_unnamed_addr global ptr, align 8
@PL_DBline = external local_unnamed_addr global ptr, align 8
@PL_DBsub = external local_unnamed_addr global ptr, align 8
@PL_argvout_stack = external local_unnamed_addr global ptr, align 8
@PL_preambleav = external global ptr, align 8
@PL_subname = external local_unnamed_addr global ptr, align 8
@PL_toptarget = external local_unnamed_addr global ptr, align 8
@PL_bodytarget = external local_unnamed_addr global ptr, align 8
@PL_formtarget = external local_unnamed_addr global ptr, align 8
@PL_utf8_swash_ptrs = external local_unnamed_addr global [10 x ptr], align 16
@PL_utf8_mark = external local_unnamed_addr global ptr, align 8
@PL_utf8_toupper = external local_unnamed_addr global ptr, align 8
@PL_utf8_totitle = external local_unnamed_addr global ptr, align 8
@PL_utf8_tolower = external local_unnamed_addr global ptr, align 8
@PL_utf8_tofold = external local_unnamed_addr global ptr, align 8
@PL_utf8_idstart = external local_unnamed_addr global ptr, align 8
@PL_utf8_idcont = external local_unnamed_addr global ptr, align 8
@PL_utf8_foldable = external local_unnamed_addr global ptr, align 8
@PL_utf8_foldclosures = external local_unnamed_addr global ptr, align 8
@PL_AboveLatin1 = external local_unnamed_addr global ptr, align 8
@PL_InBitmap = external local_unnamed_addr global ptr, align 8
@PL_UpperLatin1 = external local_unnamed_addr global ptr, align 8
@PL_Latin1 = external local_unnamed_addr global ptr, align 8
@PL_NonL1NonFinalFold = external local_unnamed_addr global ptr, align 8
@PL_HasMultiCharFold = external local_unnamed_addr global ptr, align 8
@PL_defstash = external local_unnamed_addr global ptr, align 8
@.str.4 = private unnamed_addr constant [7 x i8] c"main::\00", align 1
@PL_curstname = external local_unnamed_addr global ptr, align 8
@PL_isarev = external local_unnamed_addr global ptr, align 8
@.str.5 = private unnamed_addr constant [48 x i8] c"Unbalanced scopes: %ld more ENTERs than LEAVEs\0A\00", align 1
@PL_savestack_ix = external local_unnamed_addr global i32, align 4
@.str.6 = private unnamed_addr constant [48 x i8] c"Unbalanced saves: %ld more saves than restores\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"Unbalanced tmps: %ld more allocs than frees\0A\00", align 1
@PL_curstackinfo = external local_unnamed_addr global ptr, align 8
@.str.8 = private unnamed_addr constant [47 x i8] c"Unbalanced context: %ld more PUSHes than POPs\0A\00", align 1
@.str.9 = private unnamed_addr constant [49 x i8] c"Unbalanced string table refcount: (%ld) for \22%s\22\00", align 1
@PL_sv_yes = external global %struct.sv, align 8
@PL_sv_no = external global %struct.sv, align 8
@PL_sv_count = external local_unnamed_addr global i64, align 8
@.str.10 = private unnamed_addr constant [21 x i8] c"Scalars leaked: %ld\0A\00", align 1
@PL_sv_undef = external global %struct.sv, align 8
@PL_origfilename = external local_unnamed_addr global ptr, align 8
@PL_reg_curpm = external local_unnamed_addr global ptr, align 8
@PL_op_mask = external local_unnamed_addr global ptr, align 8
@PL_psig_name = external local_unnamed_addr global ptr, align 8
@PL_psig_ptr = external local_unnamed_addr global ptr, align 8
@PL_psig_pend = external local_unnamed_addr global ptr, align 8
@PL_tainting = external local_unnamed_addr global i8, align 1
@PL_taint_warn = external local_unnamed_addr global i8, align 1
@PL_debug = external global i32, align 4
@PL_custom_op_names = external local_unnamed_addr global ptr, align 8
@PL_custom_op_descs = external local_unnamed_addr global ptr, align 8
@PL_custom_ops = external local_unnamed_addr global ptr, align 8
@PL_regmatch_slab = external local_unnamed_addr global ptr, align 8
@PL_mess_sv = external local_unnamed_addr global ptr, align 8
@PL_origargc = external local_unnamed_addr global i32, align 4
@PL_origargv = external local_unnamed_addr global ptr, align 8
@PL_origalen = external local_unnamed_addr global i32, align 4
@.str.11 = private unnamed_addr constant [11 x i8] c"NoNe  SuCh\00", align 1
@PL_do_undump = external local_unnamed_addr global i8, align 1
@PL_tainted = external local_unnamed_addr global i8, align 1
@PL_basetime = external global i64, align 8
@PL_curstash = external local_unnamed_addr global ptr, align 8
@.str.12 = private unnamed_addr constant [16 x i8] c"panic: top_env\0A\00", align 1
@PL_restartop = external local_unnamed_addr global ptr, align 8
@PL_curstack = external local_unnamed_addr global ptr, align 8
@PL_mainstack = external local_unnamed_addr global ptr, align 8
@PL_stack_sp = external local_unnamed_addr global ptr, align 8
@PL_stack_base = external local_unnamed_addr global ptr, align 8
@PL_stack_max = external local_unnamed_addr global ptr, align 8
@.str.13 = private unnamed_addr constant [30 x i8] c"panic: restartop in perl_run\0A\00", align 1
@PL_markstack_ptr = external local_unnamed_addr global ptr, align 8
@PL_markstack_max = external local_unnamed_addr global ptr, align 8
@PL_op = external local_unnamed_addr global ptr, align 8
@PL_ppaddr = external local_unnamed_addr global [0 x ptr], align 8
@PL_runops = external local_unnamed_addr global ptr, align 8
@PL_restartjmpenv = external local_unnamed_addr global ptr, align 8
@.str.14 = private unnamed_addr constant [10 x i8] c"eval_sv()\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"require q%c%s%c\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@PL_unicode = external local_unnamed_addr global i32, align 4
@PL_utf8cache = external local_unnamed_addr global i8, align 1
@PL_charclass = external local_unnamed_addr constant [0 x i32], align 4
@.str.18 = private unnamed_addr constant [17 x i8] c"PERL5DB_THREADED\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"no Devel::\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"use Devel::\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c" split(/,/,q{%s});\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"PERL5DB\00", align 1
@.str.24 = private unnamed_addr constant [70 x i8] c"Recompile perl with -DDEBUGGING to use -D switch (did you mean -d ?)\0A\00", align 1
@.str.25 = private unnamed_addr constant [30 x i8] c"No directory specified for -I\00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"use \00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c" no \00", align 1
@.str.29 = private unnamed_addr constant [37 x i8] c"Module name required with -%c option\00", align 1
@.str.30 = private unnamed_addr constant [62 x i8] c"Invalid module name %.*s with -%c option: contains single ':'\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Can't use '%c' after -mname\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c" ()\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c" split(/,/,q\00\00", align 1
@.str.34 = private unnamed_addr constant [3 x i8] c"\00)\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"Missing argument to -%c\00", align 1
@.str.36 = private unnamed_addr constant [68 x i8] c"\22-%c\22 is on the #! line, it must also be used on the command line%s\00", align 1
@.str.37 = private unnamed_addr constant [31 x i8] c"Can't emulate -%.1s on #! line\00", align 1
@.str.38 = private unnamed_addr constant [57 x i8] c"Unrecognized switch: -%.1s  (-h will show valid options)\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"DB::args\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"Cannot set tied @DB::args\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"DB::DB\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"DB::dbline\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"DB::sub\00", align 1
@.str.44 = private unnamed_addr constant [11 x i8] c"DB::single\00", align 1
@PL_magic_vtables = external constant [31 x %struct.mgvtbl], align 16
@.str.45 = private unnamed_addr constant [10 x i8] c"DB::trace\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"DB::signal\00", align 1
@PL_tmps_stack = external local_unnamed_addr global ptr, align 8
@PL_tmps_max = external local_unnamed_addr global i64, align 8
@PL_markstack = external local_unnamed_addr global ptr, align 8
@PL_scopestack = external local_unnamed_addr global ptr, align 8
@PL_scopestack_max = external local_unnamed_addr global i32, align 4
@PL_savestack = external local_unnamed_addr global ptr, align 8
@PL_savestack_max = external local_unnamed_addr global i32, align 4
@.str.47 = private unnamed_addr constant [5 x i8] c"ARGV\00", align 1
@PL_utf8locale = external local_unnamed_addr global i8, align 1
@.str.48 = private unnamed_addr constant [66 x i8] c"-i used with no filenames on the command line, reading from STDIN\00", align 1
@PL_savebegin = external local_unnamed_addr global i8, align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"BEGIN failed--compilation aborted\00", align 1
@.str.50 = private unnamed_addr constant [30 x i8] c"%s failed--call queue aborted\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"INIT\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"UNITCHECK\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"END\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"%-p\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"panic: top_env, v=%d\0A\00", align 1
@.str.57 = private unnamed_addr constant [31 x i8] c"panic: restartop in call_list\0A\00", align 1
@.str.58 = private unnamed_addr constant [20 x i8] c"Unexpected exit %lu\00", align 1
@.str.59 = private unnamed_addr constant [28 x i8] c"Unexpected exit failure %ld\00", align 1
@PL_curinterp = external local_unnamed_addr global ptr, align 8
@PL_minus_E = external local_unnamed_addr global i8, align 1
@.str.60 = private unnamed_addr constant [26 x i8] c"No code specified for -%c\00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"use Config; Config::_V()\00", align 1
@.str.62 = private unnamed_addr constant [42 x i8] c"use Config; Config::config_vars(qw%c%s%c)\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@.str.64 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.66 = private unnamed_addr constant [55 x i8] c"Unrecognized switch: -%s  (-h will show valid options)\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.68 = private unnamed_addr constant [45 x i8] c"Can't ignore signal CHLD, forcing to default\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"Can't chdir to %s\00", align 1
@PL_compcv = external local_unnamed_addr global ptr, align 8
@.str.70 = private unnamed_addr constant [13 x i8] c"Internals::V\00", align 1
@.str.71 = private unnamed_addr constant [78 x i8] c"/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake/apps/500.perlbench_r/src/perl.c\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c":utf8\00", align 1
@PL_defoutgv = external local_unnamed_addr global ptr, align 8
@.str.73 = private unnamed_addr constant [5 x i8] c"\0FPEN\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c":utf8\00:utf8\00", align 1
@.str.75 = private unnamed_addr constant [7 x i8] c":utf8\00\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"\00:utf8\00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.78 = private unnamed_addr constant [28 x i8] c"%s had compilation errors.\0A\00", align 1
@.str.79 = private unnamed_addr constant [52 x i8] c"Execution of %s aborted due to compilation errors.\0A\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"INC\00", align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"\08\00", align 1
@.str.82 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@PL_defgv = external local_unnamed_addr global ptr, align 8
@.str.83 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c"\12\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"%240s\00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"DB::\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"CORE::GLOBAL::\00", align 1
@PL_globalstash = external local_unnamed_addr global ptr, align 8
@.str.88 = private unnamed_addr constant [4 x i8] c"lib\00", align 1
@.str.89 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.90 = private unnamed_addr constant [3 x i8] c"-e\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"/dev/fd/\00", align 1
@.str.92 = private unnamed_addr constant [41 x i8] c"Wrong syntax (suid) fd script name \22%s\22\0A\00", align 1
@.str.93 = private unnamed_addr constant [31 x i8] c"Missing (suid) fd script name\0A\00", align 1
@.str.94 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"Can't open /dev/null: %s\0A\00", align 1
@.str.96 = private unnamed_addr constant [33 x i8] c"Can't open perl script \22%s\22: %s\0A\00", align 1
@.str.97 = private unnamed_addr constant [31 x i8] c"No Perl script found in input\0A\00", align 1
@.str.98 = private unnamed_addr constant [5 x i8] c"perl\00", align 1
@.str.99 = private unnamed_addr constant [5 x i8] c"PERL\00", align 1
@S_Internals_V.non_bincompat_options = internal constant [113 x i8] c" PERL_DONT_CREATE_GVSV PERL_HASH_FUNC_ONE_AT_A_TIME_HARD PERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV USE_PERL_ATOF\00", align 16, !dbg !1253
@PL_bincompat_options = external constant [0 x i8], align 1
@.str.100 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.102 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.103 = private unnamed_addr constant [14 x i8] c"IO::File::ISA\00", align 1
@.str.104 = private unnamed_addr constant [13 x i8] c"IO::Handle::\00", align 1
@.str.105 = private unnamed_addr constant [15 x i8] c"IO::Seekable::\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"Exporter::\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"STDIN\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"STDOUT\00", align 1
@.str.110 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.111 = private unnamed_addr constant [7 x i8] c"STDERR\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str.113 = private unnamed_addr constant [14 x i8] c"%s syntax OK\0A\00", align 1
@S_usage.usage_msg = internal unnamed_addr constant [6 x ptr] [ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr null], align 16, !dbg !1273
@.str.114 = private unnamed_addr constant [385 x i8] c"  -0[octal]         specify record separator (\\0, if no argument)\0A  -a                autosplit mode with -n or -p (splits $_ into @F)\0A  -C[number/list]   enables the listed Unicode features\0A  -c                check syntax only (runs BEGIN and CHECK blocks)\0A  -d[:debugger]     run program under debugger\0A  -D[number/list]   set debugging flags (argument is a bit mask or alphabets)\0A\00", align 1
@.str.115 = private unnamed_addr constant [436 x i8] c"  -e program        one line of program (several -e's allowed, omit programfile)\0A  -E program        like -e, but enables all optional features\0A  -f                don't do $sitelib/sitecustomize.pl at startup\0A  -F/pattern/       split() pattern for -a switch (//'s are optional)\0A  -i[extension]     edit <> files in place (makes backup if extension supplied)\0A  -Idirectory       specify @INC/#include directory (several -I's allowed)\0A\00", align 1
@.str.116 = private unnamed_addr constant [439 x i8] c"  -l[octal]         enable line ending processing, specifies line terminator\0A  -[mM][-]module    execute \22use/no module...\22 before executing program\0A  -n                assume \22while (<>) { ... }\22 loop around program\0A  -p                assume loop like -n but print line also, like sed\0A  -s                enable rudimentary parsing for switches after programfile\0A  -S                look for programfile using PATH environment variable\0A\00", align 1
@.str.117 = private unnamed_addr constant [324 x i8] c"  -t                enable tainting warnings\0A  -T                enable tainting checks\0A  -u                dump core after parsing program\0A  -U                allow unsafe operations\0A  -v                print version, patchlevel and license\0A  -V[:variable]     print configuration summary (or a single Config.pm variable)\0A\00", align 1
@.str.118 = private unnamed_addr constant [258 x i8] c"  -w                enable many useful warnings\0A  -W                enable all warnings\0A  -x[directory]     ignore text before #!perl line (optionally cd to directory)\0A  -X                disable all warnings\0A  \0ARun 'perldoc perl' for more help with Perl.\0A\0A\00", align 1
@.str.119 = private unnamed_addr constant [54 x i8] c"\0AUsage: %s [switches] [--] [programfile] [arguments]\0A\00", align 1
@.str.120 = private unnamed_addr constant [67 x i8] c"\0AThis is perl 5, version 22, subversion 1 (%-p) built for spec-cpu\00", align 1
@.str.121 = private unnamed_addr constant [35 x i8] c"\0A\0ACopyright 1987-2015, Larry Wall\0A\00", align 1
@.str.122 = private unnamed_addr constant [377 x i8] c"\0APerl may be copied only under the terms of either the Artistic License or the\0AGNU General Public License, which may be found in the Perl 5 source kit.\0A\0AComplete documentation for Perl, including FAQ lists, should be found on\0Athis system using \22man perl\22 or \22perldoc perl\22.  If you have access to the\0AInternet, point your browser at http://www.perl.org/, the Perl Home Page.\0A\0A\00", align 1
@PL_sub_generation = external local_unnamed_addr global i32, align 4
@PL_sawalias = external local_unnamed_addr global i8, align 1
@PL_hash_rand_bits_enabled = external local_unnamed_addr global i8, align 1
@PL_hash_rand_bits = external local_unnamed_addr global i64, align 8
@.str.123 = private unnamed_addr constant [4 x i8] c" \0A-\00", align 1
@PL_chopset = external local_unnamed_addr global ptr, align 8
@PL_dumpindent = external local_unnamed_addr global i16, align 2
@PL_peepp = external local_unnamed_addr global ptr, align 8
@PL_rpeepp = external local_unnamed_addr global ptr, align 8
@PL_opfreehook = external local_unnamed_addr global ptr, align 8
@PL_watchaddr = external local_unnamed_addr global ptr, align 8
@PL_xsubfilename = external local_unnamed_addr global ptr, align 8
@PL_maxsysfd = external local_unnamed_addr global i32, align 4
@PL_sig_pending = external local_unnamed_addr global i32, align 4
@PL_curcopdb = external local_unnamed_addr global ptr, align 8
@PL_gensym = external local_unnamed_addr global i32, align 4
@PL_cv_has_eval = external local_unnamed_addr global i8, align 1
@PL_laststype = external local_unnamed_addr global i16, align 2
@PL_laststatval = external local_unnamed_addr global i32, align 4
@PL_profiledata = external local_unnamed_addr global ptr, align 8
@PL_generation = external local_unnamed_addr global i32, align 4
@PL_in_clean_objs = external local_unnamed_addr global i8, align 1
@PL_in_clean_all = external local_unnamed_addr global i8, align 1
@PL_an = external local_unnamed_addr global i32, align 4
@PL_breakable_sub_gen = external local_unnamed_addr global i32, align 4
@PL_cop_seqmax = external local_unnamed_addr global i32, align 4
@PL_evalseq = external local_unnamed_addr global i32, align 4
@PL_maxo = external local_unnamed_addr global i32, align 4
@PL_in_load_module = external local_unnamed_addr global i8, align 1
@PL_perlio = external local_unnamed_addr global ptr, align 8
@PL_known_layers = external local_unnamed_addr global ptr, align 8
@PL_def_layerlist = external local_unnamed_addr global ptr, align 8
@PL_encoding = external local_unnamed_addr global ptr, align 8
@PL_lex_encoding = external local_unnamed_addr global ptr, align 8
@PL_sharehook = external local_unnamed_addr global ptr, align 8
@PL_lockhook = external local_unnamed_addr global ptr, align 8
@PL_unlockhook = external local_unnamed_addr global ptr, align 8
@PL_destroyhook = external local_unnamed_addr global ptr, align 8
@PL_signalhook = external local_unnamed_addr global ptr, align 8
@PL_scopestack_name = external local_unnamed_addr global ptr, align 8
@PL_globhook = external local_unnamed_addr global ptr, align 8
@PL_padlist_generation = external local_unnamed_addr global i32, align 4
@.str.124 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.125 = private unnamed_addr constant [4 x i8] c"ENV\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"main::F\00", align 1
@.str.127 = private unnamed_addr constant [17 x i8] c"/5.22.1/spec-cpu\00", align 1
@.str.128 = private unnamed_addr constant [8 x i8] c"/5.22.1\00", align 1
@.str.130 = private unnamed_addr constant [10 x i8] c"/spec-cpu\00", align 1

; Function Attrs: nounwind uwtable
define dso_local void @Perl_sys_init(ptr nocapture noundef readnone %argc, ptr nocapture noundef readnone %argv) local_unnamed_addr #0 !dbg !1296 {
entry:
  call void @llvm.dbg.value(metadata ptr %argc, metadata !1301, metadata !DIExpression()), !dbg !1303
  call void @llvm.dbg.value(metadata ptr %argv, metadata !1302, metadata !DIExpression()), !dbg !1303
  %call = tail call ptr @__sysv_signal(i32 noundef 8, ptr noundef nonnull inttoptr (i64 1 to ptr)) #17, !dbg !1304
  store ptr %call, ptr @PL_sigfpe_saved, align 8, !dbg !1304
  ret void, !dbg !1305
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare !dbg !1306 ptr @__sysv_signal(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @Perl_sys_init3(ptr nocapture noundef readnone %argc, ptr nocapture noundef readnone %argv, ptr nocapture noundef readnone %env) local_unnamed_addr #0 !dbg !1310 {
entry:
  call void @llvm.dbg.value(metadata ptr %argc, metadata !1314, metadata !DIExpression()), !dbg !1317
  call void @llvm.dbg.value(metadata ptr %argv, metadata !1315, metadata !DIExpression()), !dbg !1317
  call void @llvm.dbg.value(metadata ptr %env, metadata !1316, metadata !DIExpression()), !dbg !1317
  %call = tail call ptr @__sysv_signal(i32 noundef 8, ptr noundef nonnull inttoptr (i64 1 to ptr)) #17, !dbg !1318
  store ptr %call, ptr @PL_sigfpe_saved, align 8, !dbg !1318
  ret void, !dbg !1319
}

; Function Attrs: nounwind uwtable
define dso_local void @Perl_sys_term() local_unnamed_addr #0 !dbg !1320 {
entry:
  %0 = load i32, ptr @PL_veto_cleanup, align 4, !dbg !1321
  %tobool.not = icmp eq i32 %0, 0, !dbg !1321
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !1323

if.then:                                          ; preds = %entry
  tail call void @PerlIO_teardown() #17, !dbg !1324
  br label %if.end, !dbg !1326

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !1327
}

declare !dbg !1328 void @PerlIO_teardown() local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind willreturn uwtable
define dso_local ptr @perl_alloc() local_unnamed_addr #4 !dbg !1329 {
entry:
  %call = tail call noalias dereferenceable_or_null(1) ptr @malloc(i64 noundef 1) #18, !dbg !1334
  call void @llvm.dbg.value(metadata ptr %call, metadata !1333, metadata !DIExpression()), !dbg !1335
  call void @llvm.dbg.value(metadata ptr %call, metadata !1336, metadata !DIExpression()), !dbg !1341
  %0 = load ptr, ptr @PL_curinterp, align 8, !dbg !1343
  %tobool.not.i = icmp eq ptr %0, null, !dbg !1343
  br i1 %tobool.not.i, label %if.then.i, label %S_init_tls_and_interp.exit, !dbg !1345

if.then.i:                                        ; preds = %entry
  store ptr %call, ptr @PL_curinterp, align 8, !dbg !1346
  br label %S_init_tls_and_interp.exit, !dbg !1348

S_init_tls_and_interp.exit:                       ; preds = %entry, %if.then.i
  store i8 0, ptr %call, align 1, !dbg !1349
  ret ptr %call, !dbg !1350
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #5

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #5

; Function Attrs: nounwind uwtable
define dso_local void @perl_construct(ptr nocapture noundef readnone %my_perl) local_unnamed_addr #0 !dbg !1351 {
entry:
  call void @llvm.dbg.value(metadata ptr %my_perl, metadata !1353, metadata !DIExpression()), !dbg !1354
  %0 = load i8, ptr @PL_perl_destruct_level, align 1, !dbg !1355
  %cmp = icmp sgt i8 %0, 0, !dbg !1357
  br i1 %cmp, label %if.then, label %if.end, !dbg !1358

if.then:                                          ; preds = %entry
  store i64 -1, ptr @PL_tmps_ix, align 8, !dbg !1359
  store i64 -1, ptr @PL_tmps_floor, align 8, !dbg !1364
  store i32 1, ptr @PL_sub_generation, align 4, !dbg !1365
  store i8 0, ptr @PL_sawalias, align 1, !dbg !1366
  store i8 1, ptr @PL_hash_rand_bits_enabled, align 1, !dbg !1367
  store i64 0, ptr @PL_hash_rand_bits, align 8, !dbg !1368
  store i8 1, ptr @PL_utf8cache, align 1, !dbg !1369
  store ptr null, ptr @PL_reg_curpm, align 8, !dbg !1370
  store ptr null, ptr @PL_regmatch_slab, align 8, !dbg !1371
  store ptr null, ptr @PL_statname, align 8, !dbg !1372
  store ptr @.str.123, ptr @PL_chopset, align 8, !dbg !1373
  store ptr null, ptr @PL_errors, align 8, !dbg !1374
  store i16 4, ptr @PL_dumpindent, align 2, !dbg !1375
  store ptr @Perl_peep, ptr @PL_peepp, align 8, !dbg !1376
  store ptr @Perl_rpeep, ptr @PL_rpeepp, align 8, !dbg !1377
  store ptr null, ptr @PL_opfreehook, align 8, !dbg !1378
  store ptr null, ptr @PL_watchaddr, align 8, !dbg !1379
  store ptr null, ptr @PL_xsubfilename, align 8, !dbg !1380
  store ptr @.str.101, ptr @PL_splitstr, align 8, !dbg !1381
  store i32 2, ptr @PL_maxsysfd, align 4, !dbg !1382
  store i32 0, ptr @PL_sig_pending, align 4, !dbg !1383
  store ptr null, ptr @PL_op_mask, align 8, !dbg !1384
  store ptr null, ptr @PL_curcopdb, align 8, !dbg !1385
  store i32 0, ptr @PL_gensym, align 4, !dbg !1386
  store i8 0, ptr @PL_cv_has_eval, align 1, !dbg !1387
  store i16 265, ptr @PL_laststype, align 2, !dbg !1388
  store i32 -1, ptr @PL_laststatval, align 4, !dbg !1389
  store i32 0, ptr @PL_exitlistlen, align 4, !dbg !1390
  store ptr null, ptr @PL_exitlist, align 8, !dbg !1391
  store ptr null, ptr @PL_profiledata, align 8, !dbg !1392
  store i32 100, ptr @PL_generation, align 4, !dbg !1393
  store i8 0, ptr @PL_in_clean_objs, align 1, !dbg !1394
  store i8 0, ptr @PL_in_clean_all, align 1, !dbg !1395
  store i8 0, ptr @PL_savebegin, align 1, !dbg !1396
  store i32 0, ptr @PL_an, align 4, !dbg !1397
  store i32 0, ptr @PL_breakable_sub_gen, align 4, !dbg !1398
  store i32 0, ptr @PL_cop_seqmax, align 4, !dbg !1399
  store i32 0, ptr @PL_evalseq, align 4, !dbg !1400
  store i32 396, ptr @PL_maxo, align 4, !dbg !1401
  store ptr @Perl_runops_standard, ptr @PL_runops, align 8, !dbg !1402
  store i32 0, ptr @PL_phase, align 4, !dbg !1403
  store i8 0, ptr @PL_in_load_module, align 1, !dbg !1404
  store i8 0, ptr @PL_perl_destruct_level, align 1, !dbg !1405
  store ptr null, ptr @PL_beginav_save, align 8, !dbg !1406
  store ptr null, ptr @PL_perlio, align 8, !dbg !1407
  store ptr null, ptr @PL_known_layers, align 8, !dbg !1408
  store ptr null, ptr @PL_def_layerlist, align 8, !dbg !1409
  store ptr null, ptr @PL_encoding, align 8, !dbg !1410
  store ptr null, ptr @PL_lex_encoding, align 8, !dbg !1411
  store ptr null, ptr @PL_checkav_save, align 8, !dbg !1412
  store ptr null, ptr @PL_unitcheckav_save, align 8, !dbg !1413
  store i64 0, ptr @PL_clocktick, align 8, !dbg !1414
  store ptr @Perl_sv_nosharing, ptr @PL_sharehook, align 8, !dbg !1415
  store ptr @Perl_sv_nosharing, ptr @PL_lockhook, align 8, !dbg !1416
  store ptr @Perl_sv_nounlocking, ptr @PL_unlockhook, align 8, !dbg !1417
  store ptr @Perl_nothreadhook, ptr @PL_threadhook, align 8, !dbg !1418
  store ptr @Perl_sv_destroyable, ptr @PL_destroyhook, align 8, !dbg !1419
  store ptr @Perl_despatch_signals, ptr @PL_signalhook, align 8, !dbg !1420
  store ptr null, ptr @PL_isarev, align 8, !dbg !1421
  store ptr null, ptr @PL_utf8_foldclosures, align 8, !dbg !1422
  store ptr null, ptr @PL_utf8_foldable, align 8, !dbg !1423
  store ptr null, ptr @PL_scopestack_name, align 8, !dbg !1424
  store ptr null, ptr @PL_globhook, align 8, !dbg !1425
  store i32 1, ptr @PL_padlist_generation, align 4, !dbg !1426
  br label %if.end, !dbg !1427

if.end:                                           ; preds = %if.then, %entry
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !dbg !1428
  tail call void @Perl_init_constants() #17, !dbg !1429
  %1 = load i32, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_placeholder, i64 0, i32 2), align 4, !dbg !1430
  %or = or i32 %1, 134283264, !dbg !1430
  store i32 %or, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_placeholder, i64 0, i32 2), align 4, !dbg !1430
  store i32 2147483647, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_placeholder, i64 0, i32 1), align 8, !dbg !1431
  store ptr @Perl_sighandler, ptr @PL_sighandlerp, align 8, !dbg !1432
  %call = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str, i64 noundef 1) #17, !dbg !1433
  store ptr %call, ptr @PL_rs, align 8, !dbg !1434
  %call.i = tail call ptr @Perl_new_stackinfo(i32 noundef 128, i32 noundef 92) #17, !dbg !1435
  store ptr %call.i, ptr @PL_curstackinfo, align 8, !dbg !1438
  %si_type.i = getelementptr inbounds %struct.stackinfo, ptr %call.i, i64 0, i32 6, !dbg !1439
  store i32 1, ptr %si_type.i, align 8, !dbg !1440
  %2 = load ptr, ptr %call.i, align 8, !dbg !1441
  store ptr %2, ptr @PL_curstack, align 8, !dbg !1442
  store ptr %2, ptr @PL_mainstack, align 8, !dbg !1443
  %sv_u.i = getelementptr inbounds %struct.av, ptr %2, i64 0, i32 3, !dbg !1444
  %3 = load ptr, ptr %sv_u.i, align 8, !dbg !1444
  store ptr %3, ptr @PL_stack_base, align 8, !dbg !1445
  store ptr %3, ptr @PL_stack_sp, align 8, !dbg !1446
  %4 = load ptr, ptr %2, align 8, !dbg !1447
  %xav_max.i = getelementptr inbounds %struct.xpvav, ptr %4, i64 0, i32 3, !dbg !1447
  %5 = load i64, ptr %xav_max.i, align 8, !dbg !1447
  %add.ptr.i = getelementptr inbounds ptr, ptr %3, i64 %5, !dbg !1448
  store ptr %add.ptr.i, ptr @PL_stack_max, align 8, !dbg !1449
  %call1.i = tail call ptr @Perl_safesysmalloc(i64 noundef 1024) #17, !dbg !1450
  store ptr %call1.i, ptr @PL_tmps_stack, align 8, !dbg !1450
  store i64 -1, ptr @PL_tmps_floor, align 8, !dbg !1451
  store i64 -1, ptr @PL_tmps_ix, align 8, !dbg !1452
  store i64 128, ptr @PL_tmps_max, align 8, !dbg !1453
  %call2.i = tail call ptr @Perl_safesysmalloc(i64 noundef 128) #17, !dbg !1454
  store ptr %call2.i, ptr @PL_markstack, align 8, !dbg !1454
  store ptr %call2.i, ptr @PL_markstack_ptr, align 8, !dbg !1455
  %add.ptr3.i = getelementptr inbounds i32, ptr %call2.i, i64 32, !dbg !1456
  store ptr %add.ptr3.i, ptr @PL_markstack_max, align 8, !dbg !1457
  %call4.i = tail call ptr @Perl_safesysmalloc(i64 noundef 128) #17, !dbg !1458
  store ptr %call4.i, ptr @PL_scopestack, align 8, !dbg !1458
  store i32 0, ptr @PL_scopestack_ix, align 4, !dbg !1459
  store i32 32, ptr @PL_scopestack_max, align 4, !dbg !1460
  %call5.i = tail call ptr @Perl_safesysmalloc(i64 noundef 1024) #17, !dbg !1461
  store ptr %call5.i, ptr @PL_savestack, align 8, !dbg !1461
  store i32 0, ptr @PL_savestack_ix, align 4, !dbg !1462
  store i32 128, ptr @PL_savestack_max, align 4, !dbg !1463
  %call.i35 = tail call i32 @getuid() #17, !dbg !1464
  call void @llvm.dbg.value(metadata i32 %call.i35, metadata !1467, metadata !DIExpression()) #17, !dbg !1478
  %call1.i36 = tail call i32 @geteuid() #17, !dbg !1479
  call void @llvm.dbg.value(metadata i32 %call1.i36, metadata !1471, metadata !DIExpression()) #17, !dbg !1478
  %call2.i37 = tail call i32 @getgid() #17, !dbg !1480
  call void @llvm.dbg.value(metadata i32 %call2.i37, metadata !1472, metadata !DIExpression()) #17, !dbg !1478
  %call3.i = tail call i32 @getegid() #17, !dbg !1481
  call void @llvm.dbg.value(metadata i32 %call3.i, metadata !1476, metadata !DIExpression()) #17, !dbg !1478
  %6 = load i8, ptr @PL_tainting, align 1, !dbg !1482, !range !1483
  %tobool4.not.i = icmp eq i32 %call.i35, 0, !dbg !1482
  br i1 %tobool4.not.i, label %S_init_ids.exit, label %land.rhs.i, !dbg !1482

land.rhs.i:                                       ; preds = %if.end
  %cmp.not.i = icmp eq i32 %call1.i36, %call.i35, !dbg !1482
  br i1 %cmp.not.i, label %lor.rhs.i, label %S_init_ids.exit, !dbg !1482

lor.rhs.i:                                        ; preds = %land.rhs.i
  %cmp6.i = icmp ne i32 %call3.i, %call2.i37, !dbg !1482
  %phi.cast.i = zext i1 %cmp6.i to i8, !dbg !1482
  br label %S_init_ids.exit, !dbg !1482

S_init_ids.exit:                                  ; preds = %if.end, %land.rhs.i, %lor.rhs.i
  %7 = phi i8 [ 0, %if.end ], [ 1, %land.rhs.i ], [ %phi.cast.i, %lor.rhs.i ]
  %or.i = or i8 %7, %6, !dbg !1482
  store i8 %or.i, ptr @PL_tainting, align 1, !dbg !1482
  store ptr @PL_start_env, ptr @PL_top_env, align 8, !dbg !1484
  store ptr null, ptr getelementptr inbounds (%struct.jmpenv, ptr @PL_start_env, i64 0, i32 1), align 8, !dbg !1484
  store i32 -1, ptr getelementptr inbounds (%struct.jmpenv, ptr @PL_start_env, i64 0, i32 2), align 8, !dbg !1484
  store i8 1, ptr getelementptr inbounds (%struct.jmpenv, ptr @PL_start_env, i64 0, i32 3), align 4, !dbg !1484
  store i32 0, ptr @PL_statusvalue, align 4, !dbg !1486
  store i32 0, ptr @PL_statusvalue_posix, align 4, !dbg !1486
  %call2 = tail call i32 @Perl_init_i18nl10n(i32 noundef 1) #17, !dbg !1487
  store ptr @local_patches, ptr @PL_localpatches, align 8, !dbg !1488
  tail call void @PerlIO_init() #17, !dbg !1489
  %call3 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17, !dbg !1490
  store ptr %call3, ptr @PL_fdpid, align 8, !dbg !1491
  %call4 = tail call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !1492
  store ptr %call4, ptr @PL_modglobal, align 8, !dbg !1493
  %call5 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !1494
  store ptr %call5, ptr @PL_errors, align 8, !dbg !1495
  tail call void @Perl_sv_setpvn(ptr noundef nonnull @PL_debug_pad, ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !1496
  tail call void @Perl_sv_setpvn(ptr noundef getelementptr inbounds (%struct.perl_debug_pad, ptr @PL_debug_pad, i64 0, i32 0, i64 1), ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !1497
  tail call void @Perl_sv_setpvn(ptr noundef getelementptr inbounds (%struct.perl_debug_pad, ptr @PL_debug_pad, i64 0, i32 0, i64 2), ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !1498
  %8 = load i8, ptr @PL_hash_seed_set, align 1, !dbg !1499, !range !1483
  %cmp7 = icmp eq i8 %8, 0, !dbg !1501
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !1502

if.then9:                                         ; preds = %S_init_ids.exit
  tail call void @Perl_get_hash_seed(ptr noundef nonnull @PL_hash_seed) #17, !dbg !1503
  store i8 1, ptr @PL_hash_seed_set, align 1, !dbg !1505
  br label %if.end10, !dbg !1506

if.end10:                                         ; preds = %if.then9, %S_init_ids.exit
  %call11 = tail call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !1507
  store ptr %call11, ptr @PL_strtab, align 8, !dbg !1508
  %sv_flags = getelementptr inbounds %struct.hv, ptr %call11, i64 0, i32 2, !dbg !1509
  %9 = load i32, ptr %sv_flags, align 4, !dbg !1509
  %and = and i32 %9, -536870913, !dbg !1509
  store i32 %and, ptr %sv_flags, align 4, !dbg !1509
  tail call void @Perl_hv_ksplit(ptr noundef %call11, i64 noundef 512) #17, !dbg !1510
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(280) @PL_sv_consts, i8 0, i64 280, i1 false), !dbg !1511
  %10 = load ptr, ptr @environ, align 8, !dbg !1512
  store ptr %10, ptr @PL_origenviron, align 8, !dbg !1513
  store i64 60, ptr @PL_clocktick, align 8, !dbg !1514
  %call12 = tail call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !1515
  store ptr %call12, ptr @PL_stashcache, align 8, !dbg !1516
  %call13 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.2, i64 noundef 7) #17, !dbg !1517
  store ptr %call13, ptr @PL_patchlevel, align 8, !dbg !1518
  %call14 = tail call ptr @Perl_savepvn(ptr noundef nonnull @.str.3, i32 noundef 8) #17, !dbg !1519
  store ptr %call14, ptr @PL_osname, align 8, !dbg !1520
  %call15 = tail call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !1521
  store ptr %call15, ptr @PL_registered_mros, align 8, !dbg !1522
  %11 = load ptr, ptr %call15, align 8, !dbg !1523
  %xhv_max = getelementptr inbounds %struct.xpvhv, ptr %11, i64 0, i32 3, !dbg !1523
  store i64 0, ptr %xhv_max, align 8, !dbg !1524
  %call16 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @ASCII_invlist) #17, !dbg !1525
  store ptr %call16, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 14), align 16, !dbg !1526
  %call17 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixAlnum_invlist) #17, !dbg !1527
  store ptr %call17, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 7), align 8, !dbg !1528
  %call18 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixAlpha_invlist) #17, !dbg !1529
  store ptr %call18, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 2), align 16, !dbg !1530
  %call19 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixBlank_invlist) #17, !dbg !1531
  store ptr %call19, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 11), align 8, !dbg !1532
  %call20 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @Cased_invlist) #17, !dbg !1533
  store ptr %call20, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 9), align 8, !dbg !1534
  %call21 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixCntrl_invlist) #17, !dbg !1535
  store ptr %call21, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 13), align 8, !dbg !1536
  %call22 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixDigit_invlist) #17, !dbg !1537
  store ptr %call22, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 1), align 8, !dbg !1538
  %call23 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixGraph_invlist) #17, !dbg !1539
  store ptr %call23, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 8), align 16, !dbg !1540
  %call24 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixLower_invlist) #17, !dbg !1541
  store ptr %call24, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 3), align 8, !dbg !1542
  %call25 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixPrint_invlist) #17, !dbg !1543
  store ptr %call25, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 6), align 16, !dbg !1544
  %call26 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixPunct_invlist) #17, !dbg !1545
  store ptr %call26, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 5), align 8, !dbg !1546
  %call27 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPerlSpace_invlist) #17, !dbg !1547
  store ptr %call27, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 10), align 16, !dbg !1548
  %call28 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixUpper_invlist) #17, !dbg !1549
  store ptr %call28, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 4), align 16, !dbg !1550
  %call29 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @VertSpace_invlist) #17, !dbg !1551
  store ptr %call29, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 15), align 8, !dbg !1552
  %call30 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixWord_invlist) #17, !dbg !1553
  store ptr %call30, ptr @PL_XPosix_ptrs, align 16, !dbg !1554
  %call31 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @XPosixXDigit_invlist) #17, !dbg !1555
  store ptr %call31, ptr getelementptr inbounds ([16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 12), align 16, !dbg !1556
  %call32 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @Grapheme_Cluster_Break_invlist) #17, !dbg !1557
  store ptr %call32, ptr @PL_GCB_invlist, align 8, !dbg !1558
  %call33 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @Sentence_Break_invlist) #17, !dbg !1559
  store ptr %call33, ptr @PL_SB_invlist, align 8, !dbg !1560
  %call34 = tail call ptr @Perl__new_invlist_C_array(ptr noundef nonnull @Word_Break_invlist) #17, !dbg !1561
  store ptr %call34, ptr @PL_WB_invlist, align 8, !dbg !1562
  tail call void @Perl_push_scope() #17, !dbg !1563
  ret void, !dbg !1564
}

declare !dbg !1565 void @Perl_init_constants() local_unnamed_addr #3

declare void @Perl_sighandler(i32 noundef) #3

declare !dbg !1567 ptr @Perl_newSVpvn(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @Perl_init_stacks() local_unnamed_addr #0 !dbg !1436 {
entry:
  %call = tail call ptr @Perl_new_stackinfo(i32 noundef 128, i32 noundef 92) #17, !dbg !1571
  store ptr %call, ptr @PL_curstackinfo, align 8, !dbg !1572
  %si_type = getelementptr inbounds %struct.stackinfo, ptr %call, i64 0, i32 6, !dbg !1573
  store i32 1, ptr %si_type, align 8, !dbg !1574
  %0 = load ptr, ptr %call, align 8, !dbg !1575
  store ptr %0, ptr @PL_curstack, align 8, !dbg !1576
  store ptr %0, ptr @PL_mainstack, align 8, !dbg !1577
  %sv_u = getelementptr inbounds %struct.av, ptr %0, i64 0, i32 3, !dbg !1578
  %1 = load ptr, ptr %sv_u, align 8, !dbg !1578
  store ptr %1, ptr @PL_stack_base, align 8, !dbg !1579
  store ptr %1, ptr @PL_stack_sp, align 8, !dbg !1580
  %2 = load ptr, ptr %0, align 8, !dbg !1581
  %xav_max = getelementptr inbounds %struct.xpvav, ptr %2, i64 0, i32 3, !dbg !1581
  %3 = load i64, ptr %xav_max, align 8, !dbg !1581
  %add.ptr = getelementptr inbounds ptr, ptr %1, i64 %3, !dbg !1582
  store ptr %add.ptr, ptr @PL_stack_max, align 8, !dbg !1583
  %call1 = tail call ptr @Perl_safesysmalloc(i64 noundef 1024) #17, !dbg !1584
  store ptr %call1, ptr @PL_tmps_stack, align 8, !dbg !1584
  store i64 -1, ptr @PL_tmps_floor, align 8, !dbg !1585
  store i64 -1, ptr @PL_tmps_ix, align 8, !dbg !1586
  store i64 128, ptr @PL_tmps_max, align 8, !dbg !1587
  %call2 = tail call ptr @Perl_safesysmalloc(i64 noundef 128) #17, !dbg !1588
  store ptr %call2, ptr @PL_markstack, align 8, !dbg !1588
  store ptr %call2, ptr @PL_markstack_ptr, align 8, !dbg !1589
  %add.ptr3 = getelementptr inbounds i32, ptr %call2, i64 32, !dbg !1590
  store ptr %add.ptr3, ptr @PL_markstack_max, align 8, !dbg !1591
  %call4 = tail call ptr @Perl_safesysmalloc(i64 noundef 128) #17, !dbg !1592
  store ptr %call4, ptr @PL_scopestack, align 8, !dbg !1592
  store i32 0, ptr @PL_scopestack_ix, align 4, !dbg !1593
  store i32 32, ptr @PL_scopestack_max, align 4, !dbg !1594
  %call5 = tail call ptr @Perl_safesysmalloc(i64 noundef 1024) #17, !dbg !1595
  store ptr %call5, ptr @PL_savestack, align 8, !dbg !1595
  store i32 0, ptr @PL_savestack_ix, align 4, !dbg !1596
  store i32 128, ptr @PL_savestack_max, align 4, !dbg !1597
  ret void, !dbg !1598
}

declare !dbg !1599 i32 @Perl_init_i18nl10n(i32 noundef) local_unnamed_addr #3

declare !dbg !1602 void @PerlIO_init() local_unnamed_addr #3

declare !dbg !1603 ptr @Perl_newSV_type(i32 noundef) local_unnamed_addr #3

declare !dbg !1607 void @Perl_sv_setpvn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !1610 void @Perl_get_hash_seed(ptr noundef) local_unnamed_addr #3

declare !dbg !1615 void @Perl_hv_ksplit(ptr noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !1618 ptr @Perl_savepvn(ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !1621 ptr @Perl__new_invlist_C_array(ptr noundef) local_unnamed_addr #3

declare !dbg !1626 void @Perl_push_scope() local_unnamed_addr #3

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local i32 @Perl_nothreadhook() #8 !dbg !1627 {
entry:
  ret i32 0, !dbg !1630
}

; Function Attrs: nounwind uwtable
define dso_local i32 @perl_destruct(ptr nocapture noundef readnone %my_perl) local_unnamed_addr #0 !dbg !1631 {
entry:
  %destruct_level = alloca i8, align 1
  %cur_env = alloca %struct.jmpenv, align 8
  call void @llvm.dbg.value(metadata ptr %my_perl, metadata !1635, metadata !DIExpression()), !dbg !1915
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %destruct_level), !dbg !1916
  call void @llvm.dbg.declare(metadata ptr %destruct_level, metadata !1636, metadata !DIExpression()), !dbg !1917
  %0 = load i8, ptr @PL_perl_destruct_level, align 1, !dbg !1918
  store volatile i8 %0, ptr %destruct_level, align 1, !dbg !1919
  %1 = load i8, ptr @PL_exit_flags, align 1, !dbg !1920
  %2 = and i8 %1, 2, !dbg !1921
  %tobool.not = icmp eq i8 %2, 0, !dbg !1921
  br i1 %tobool.not, label %if.end9, label %if.then, !dbg !1922

if.then:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !1923
  call void @llvm.dbg.declare(metadata ptr %cur_env, metadata !1641, metadata !DIExpression()), !dbg !1923
  call void @llvm.dbg.value(metadata i32 0, metadata !1671, metadata !DIExpression()), !dbg !1924
  %3 = load ptr, ptr @PL_top_env, align 8, !dbg !1925
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 1, !dbg !1925
  store ptr %3, ptr %je_prev, align 8, !dbg !1925
  %call = call i32 @__sigsetjmp(ptr noundef nonnull %cur_env, i32 noundef 0) #19, !dbg !1925
  %je_ret = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 2, !dbg !1925
  store i32 %call, ptr %je_ret, align 8, !dbg !1925
  store ptr %cur_env, ptr @PL_top_env, align 8, !dbg !1925
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 3, !dbg !1925
  store i8 0, ptr %je_mustcatch, align 4, !dbg !1925
  call void @llvm.dbg.value(metadata i32 undef, metadata !1671, metadata !DIExpression()), !dbg !1924
  %4 = load ptr, ptr @PL_endav, align 8, !dbg !1927
  %tobool2.not = icmp ne ptr %4, null, !dbg !1927
  %5 = load i8, ptr @PL_minus_c, align 1
  %tobool3.not = icmp eq i8 %5, 0
  %or.cond312 = select i1 %tobool2.not, i1 %tobool3.not, i1 false, !dbg !1929
  br i1 %or.cond312, label %if.then4, label %do.body5, !dbg !1929

if.then4:                                         ; preds = %if.then
  store i32 5, ptr @PL_phase, align 4, !dbg !1930
  %6 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !1932
  call void @Perl_call_list(i32 noundef %6, ptr noundef nonnull %4), !dbg !1932
  br label %do.body5, !dbg !1933

do.body5:                                         ; preds = %if.then, %if.then4
  %7 = load ptr, ptr %je_prev, align 8, !dbg !1934
  store ptr %7, ptr @PL_top_env, align 8, !dbg !1934
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !1936
  br label %if.end9, !dbg !1937

if.end9:                                          ; preds = %do.body5, %entry
  call void @Perl_pop_scope() #17, !dbg !1938
  %8 = load i64, ptr @PL_tmps_ix, align 8, !dbg !1939
  %9 = load i64, ptr @PL_tmps_floor, align 8, !dbg !1939
  %cmp = icmp sgt i64 %8, %9, !dbg !1939
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !1941

if.then11:                                        ; preds = %if.end9
  call void @Perl_free_tmps() #17, !dbg !1939
  br label %if.end12, !dbg !1939

if.end12:                                         ; preds = %if.then11, %if.end9
  %call13 = call i32 @Perl_my_fflush_all() #17, !dbg !1942
  %10 = load ptr, ptr @PL_threadhook, align 8, !dbg !1943
  %call14 = call i32 %10() #17, !dbg !1943
  %tobool15.not = icmp eq i32 %call14, 0, !dbg !1943
  br i1 %tobool15.not, label %if.end17, label %if.then16, !dbg !1945

if.then16:                                        ; preds = %if.end12
  store i32 1, ptr @PL_veto_cleanup, align 4, !dbg !1946
  br label %cleanup, !dbg !1948

if.end17:                                         ; preds = %if.end12
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !dbg !1949
  %11 = load ptr, ptr @PL_main_root, align 8, !dbg !1950
  %tobool18.not = icmp eq ptr %11, null, !dbg !1950
  br i1 %tobool18.not, label %if.end28, label %if.then19, !dbg !1952

if.then19:                                        ; preds = %if.end17
  %12 = load ptr, ptr @PL_main_cv, align 8, !dbg !1953
  %13 = load ptr, ptr %12, align 8, !dbg !1953
  %xcv_padlist_u = getelementptr inbounds %struct.xpvcv, ptr %13, i64 0, i32 9, !dbg !1953
  %14 = load ptr, ptr %xcv_padlist_u, align 8, !dbg !1953
  %tobool20.not = icmp eq ptr %14, null, !dbg !1953
  br i1 %tobool20.not, label %if.end27, label %if.then21, !dbg !1956

if.then21:                                        ; preds = %if.then19
  %xpadl_alloc = getelementptr inbounds %struct.padlist, ptr %14, i64 0, i32 1, !dbg !1957
  %15 = load ptr, ptr %xpadl_alloc, align 8, !dbg !1957
  %arrayidx = getelementptr inbounds ptr, ptr %15, i64 1, !dbg !1957
  %16 = load ptr, ptr %arrayidx, align 8, !dbg !1957
  store ptr %16, ptr @PL_comppad, align 8, !dbg !1957
  %sv_u = getelementptr inbounds %struct.av, ptr %16, i64 0, i32 3, !dbg !1957
  %17 = load ptr, ptr %sv_u, align 8, !dbg !1957
  store ptr %17, ptr @PL_curpad, align 8, !dbg !1957
  %18 = load ptr, ptr %12, align 8, !dbg !1959
  %xcv_padlist_u25 = getelementptr inbounds %struct.xpvcv, ptr %18, i64 0, i32 9, !dbg !1959
  %19 = load ptr, ptr %xcv_padlist_u25, align 8, !dbg !1959
  %xpadl_alloc26 = getelementptr inbounds %struct.padlist, ptr %19, i64 0, i32 1, !dbg !1959
  %20 = load ptr, ptr %xpadl_alloc26, align 8, !dbg !1959
  %21 = load ptr, ptr %20, align 8, !dbg !1959
  store ptr %21, ptr @PL_comppad_name, align 8, !dbg !1960
  br label %if.end27, !dbg !1961

if.end27:                                         ; preds = %if.then21, %if.then19
  call void @Perl_op_free(ptr noundef nonnull %11) #17, !dbg !1962
  store ptr null, ptr @PL_main_root, align 8, !dbg !1963
  br label %if.end28, !dbg !1964

if.end28:                                         ; preds = %if.end27, %if.end17
  store ptr null, ptr @PL_main_start, align 8, !dbg !1965
  %22 = load ptr, ptr @PL_main_cv, align 8, !dbg !1966
  call void @llvm.dbg.value(metadata ptr %22, metadata !1967, metadata !DIExpression()) #17, !dbg !1976
  %cmp.not.i = icmp eq ptr %22, null, !dbg !1978
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i, !dbg !1979

if.then.i:                                        ; preds = %if.end28
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 1, !dbg !1980
  %23 = load i32, ptr %sv_refcnt.i, align 8, !dbg !1980
  call void @llvm.dbg.value(metadata i32 %23, metadata !1973, metadata !DIExpression()) #17, !dbg !1981
  %cmp1.i = icmp ugt i32 %23, 1, !dbg !1982
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !1984

if.then4.i:                                       ; preds = %if.then.i
  %sub.i = add i32 %23, -1, !dbg !1985
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !1986
  br label %S_SvREFCNT_dec.exit, !dbg !1987

if.else.i:                                        ; preds = %if.then.i
  call void @Perl_sv_free2(ptr noundef nonnull %22, i32 noundef %23) #17, !dbg !1988
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.end28, %if.then4.i, %if.else.i
  store ptr null, ptr @PL_main_cv, align 8, !dbg !1989
  store i32 6, ptr @PL_phase, align 4, !dbg !1990
  call void @PerlIO_destruct() #17, !dbg !1991
  call void @Perl_sv_clean_objs() #17, !dbg !1992
  %24 = load ptr, ptr @PL_warnhook, align 8, !dbg !1993
  call void @llvm.dbg.value(metadata ptr %24, metadata !1967, metadata !DIExpression()) #17, !dbg !1994
  %cmp.not.i314 = icmp eq ptr %24, null, !dbg !1996
  br i1 %cmp.not.i314, label %S_SvREFCNT_dec.exit321, label %if.then.i317, !dbg !1997

if.then.i317:                                     ; preds = %S_SvREFCNT_dec.exit
  %sv_refcnt.i315 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 1, !dbg !1998
  %25 = load i32, ptr %sv_refcnt.i315, align 8, !dbg !1998
  call void @llvm.dbg.value(metadata i32 %25, metadata !1973, metadata !DIExpression()) #17, !dbg !1999
  %cmp1.i316 = icmp ugt i32 %25, 1, !dbg !2000
  br i1 %cmp1.i316, label %if.then4.i319, label %if.else.i320, !dbg !2001

if.then4.i319:                                    ; preds = %if.then.i317
  %sub.i318 = add i32 %25, -1, !dbg !2002
  store i32 %sub.i318, ptr %sv_refcnt.i315, align 8, !dbg !2003
  br label %S_SvREFCNT_dec.exit321, !dbg !2004

if.else.i320:                                     ; preds = %if.then.i317
  call void @Perl_sv_free2(ptr noundef nonnull %24, i32 noundef %25) #17, !dbg !2005
  br label %S_SvREFCNT_dec.exit321

S_SvREFCNT_dec.exit321:                           ; preds = %S_SvREFCNT_dec.exit, %if.then4.i319, %if.else.i320
  store ptr null, ptr @PL_warnhook, align 8, !dbg !2006
  %26 = load ptr, ptr @PL_diehook, align 8, !dbg !2007
  call void @llvm.dbg.value(metadata ptr %26, metadata !1967, metadata !DIExpression()) #17, !dbg !2008
  %cmp.not.i322 = icmp eq ptr %26, null, !dbg !2010
  br i1 %cmp.not.i322, label %S_SvREFCNT_dec.exit329, label %if.then.i325, !dbg !2011

if.then.i325:                                     ; preds = %S_SvREFCNT_dec.exit321
  %sv_refcnt.i323 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 1, !dbg !2012
  %27 = load i32, ptr %sv_refcnt.i323, align 8, !dbg !2012
  call void @llvm.dbg.value(metadata i32 %27, metadata !1973, metadata !DIExpression()) #17, !dbg !2013
  %cmp1.i324 = icmp ugt i32 %27, 1, !dbg !2014
  br i1 %cmp1.i324, label %if.then4.i327, label %if.else.i328, !dbg !2015

if.then4.i327:                                    ; preds = %if.then.i325
  %sub.i326 = add i32 %27, -1, !dbg !2016
  store i32 %sub.i326, ptr %sv_refcnt.i323, align 8, !dbg !2017
  br label %S_SvREFCNT_dec.exit329, !dbg !2018

if.else.i328:                                     ; preds = %if.then.i325
  call void @Perl_sv_free2(ptr noundef nonnull %26, i32 noundef %27) #17, !dbg !2019
  br label %S_SvREFCNT_dec.exit329

S_SvREFCNT_dec.exit329:                           ; preds = %S_SvREFCNT_dec.exit321, %if.then4.i327, %if.else.i328
  store ptr null, ptr @PL_diehook, align 8, !dbg !2020
  %28 = load i32, ptr @PL_exitlistlen, align 4, !dbg !2021
  %dec777 = add nsw i32 %28, -1, !dbg !2021
  store i32 %dec777, ptr @PL_exitlistlen, align 4, !dbg !2021
  %cmp29778 = icmp sgt i32 %28, 0, !dbg !2022
  br i1 %cmp29778, label %while.body, label %while.end, !dbg !2023

while.body:                                       ; preds = %S_SvREFCNT_dec.exit329, %while.body
  %dec779 = phi i32 [ %dec, %while.body ], [ %dec777, %S_SvREFCNT_dec.exit329 ]
  %29 = load ptr, ptr @PL_exitlist, align 8, !dbg !2024
  %idxprom775 = zext i32 %dec779 to i64, !dbg !2024
  %arrayidx31 = getelementptr inbounds %struct.exitlistentry, ptr %29, i64 %idxprom775, !dbg !2024
  %30 = load ptr, ptr %arrayidx31, align 8, !dbg !2025
  %ptr = getelementptr inbounds %struct.exitlistentry, ptr %29, i64 %idxprom775, i32 1, !dbg !2026
  %31 = load ptr, ptr %ptr, align 8, !dbg !2026
  call void %30(ptr noundef %31) #17, !dbg !2024
  %32 = load i32, ptr @PL_exitlistlen, align 4, !dbg !2021
  %dec = add nsw i32 %32, -1, !dbg !2021
  store i32 %dec, ptr @PL_exitlistlen, align 4, !dbg !2021
  %cmp29 = icmp sgt i32 %32, 0, !dbg !2022
  br i1 %cmp29, label %while.body, label %while.end, !dbg !2023, !llvm.loop !2027

while.end:                                        ; preds = %while.body, %S_SvREFCNT_dec.exit329
  %33 = load ptr, ptr @PL_exitlist, align 8, !dbg !2031
  call void @Perl_safesysfree(ptr noundef %33) #17, !dbg !2031
  store ptr null, ptr @PL_exitlist, align 8, !dbg !2032
  store i32 0, ptr @PL_exitlistlen, align 4, !dbg !2033
  %34 = load ptr, ptr @PL_registered_mros, align 8, !dbg !2034
  call void @llvm.dbg.value(metadata ptr %34, metadata !1967, metadata !DIExpression()) #17, !dbg !2035
  %cmp.not.i330 = icmp eq ptr %34, null, !dbg !2037
  br i1 %cmp.not.i330, label %S_SvREFCNT_dec.exit337, label %if.then.i333, !dbg !2038

if.then.i333:                                     ; preds = %while.end
  %sv_refcnt.i331 = getelementptr inbounds %struct.sv, ptr %34, i64 0, i32 1, !dbg !2039
  %35 = load i32, ptr %sv_refcnt.i331, align 8, !dbg !2039
  call void @llvm.dbg.value(metadata i32 %35, metadata !1973, metadata !DIExpression()) #17, !dbg !2040
  %cmp1.i332 = icmp ugt i32 %35, 1, !dbg !2041
  br i1 %cmp1.i332, label %if.then4.i335, label %if.else.i336, !dbg !2042

if.then4.i335:                                    ; preds = %if.then.i333
  %sub.i334 = add i32 %35, -1, !dbg !2043
  store i32 %sub.i334, ptr %sv_refcnt.i331, align 8, !dbg !2044
  br label %S_SvREFCNT_dec.exit337, !dbg !2045

if.else.i336:                                     ; preds = %if.then.i333
  call void @Perl_sv_free2(ptr noundef nonnull %34, i32 noundef %35) #17, !dbg !2046
  br label %S_SvREFCNT_dec.exit337

S_SvREFCNT_dec.exit337:                           ; preds = %while.end, %if.then4.i335, %if.else.i336
  %36 = load ptr, ptr @environ, align 8, !dbg !2047
  %37 = load ptr, ptr @PL_origenviron, align 8, !dbg !2048
  %cmp34.not = icmp ne ptr %36, %37, !dbg !2049
  %38 = load i8, ptr @PL_use_safe_putenv, align 1
  %tobool37.not = icmp eq i8 %38, 0
  %or.cond313 = select i1 %cmp34.not, i1 %tobool37.not, i1 false, !dbg !2050
  br i1 %or.cond313, label %for.cond.preheader, label %if.end45, !dbg !2050

for.cond.preheader:                               ; preds = %S_SvREFCNT_dec.exit337
  call void @llvm.dbg.value(metadata i32 0, metadata !1672, metadata !DIExpression()), !dbg !2051
  %39 = load ptr, ptr %36, align 8, !dbg !2052
  %tobool42.not780 = icmp eq ptr %39, null, !dbg !2055
  br i1 %tobool42.not780, label %for.end, label %for.body, !dbg !2055

for.body:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.cond.preheader ]
  %40 = phi ptr [ %42, %for.body ], [ %39, %for.cond.preheader ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !1672, metadata !DIExpression()), !dbg !2051
  call void @Perl_safesysfree(ptr noundef nonnull %40) #17, !dbg !2056
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !2057
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !1672, metadata !DIExpression()), !dbg !2051
  %41 = load ptr, ptr @environ, align 8, !dbg !2052
  %arrayidx41 = getelementptr inbounds ptr, ptr %41, i64 %indvars.iv.next, !dbg !2052
  %42 = load ptr, ptr %arrayidx41, align 8, !dbg !2052
  %tobool42.not = icmp eq ptr %42, null, !dbg !2055
  br i1 %tobool42.not, label %for.end, label %for.body, !dbg !2055, !llvm.loop !2058

for.end:                                          ; preds = %for.body, %for.cond.preheader
  %.lcssa776 = phi ptr [ %36, %for.cond.preheader ], [ %41, %for.body ], !dbg !2052
  call void @Perl_safesysfree(ptr noundef nonnull %.lcssa776) #17, !dbg !2060
  %43 = load ptr, ptr @PL_origenviron, align 8, !dbg !2061
  store ptr %43, ptr @environ, align 8, !dbg !2062
  br label %if.end45, !dbg !2063

if.end45:                                         ; preds = %for.end, %S_SvREFCNT_dec.exit337
  %destruct_level.0.destruct_level.0.destruct_level.0. = load volatile i8, ptr %destruct_level, align 1, !dbg !2064
  %cmp47 = icmp eq i8 %destruct_level.0.destruct_level.0.destruct_level.0., 0, !dbg !2066
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !2067

if.then49:                                        ; preds = %if.end45
  call void @PerlIO_cleanup() #17, !dbg !2068
  %44 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !dbg !2070
  call void @llvm.dbg.value(metadata ptr %44, metadata !1967, metadata !DIExpression()) #17, !dbg !2071
  %cmp.not.i338 = icmp eq ptr %44, null, !dbg !2073
  br i1 %cmp.not.i338, label %S_SvREFCNT_dec.exit345, label %if.then.i341, !dbg !2074

if.then.i341:                                     ; preds = %if.then49
  %sv_refcnt.i339 = getelementptr inbounds %struct.sv, ptr %44, i64 0, i32 1, !dbg !2075
  %45 = load i32, ptr %sv_refcnt.i339, align 8, !dbg !2075
  call void @llvm.dbg.value(metadata i32 %45, metadata !1973, metadata !DIExpression()) #17, !dbg !2076
  %cmp1.i340 = icmp ugt i32 %45, 1, !dbg !2077
  br i1 %cmp1.i340, label %if.then4.i343, label %if.else.i344, !dbg !2078

if.then4.i343:                                    ; preds = %if.then.i341
  %sub.i342 = add i32 %45, -1, !dbg !2079
  store i32 %sub.i342, ptr %sv_refcnt.i339, align 8, !dbg !2080
  br label %S_SvREFCNT_dec.exit345, !dbg !2081

if.else.i344:                                     ; preds = %if.then.i341
  call void @Perl_sv_free2(ptr noundef nonnull %44, i32 noundef %45) #17, !dbg !2082
  br label %S_SvREFCNT_dec.exit345

S_SvREFCNT_dec.exit345:                           ; preds = %if.then49, %if.then4.i343, %if.else.i344
  store ptr null, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !dbg !2070
  br label %cleanup, !dbg !2083

if.end50:                                         ; preds = %if.end45
  %46 = load ptr, ptr @PL_stashcache, align 8, !dbg !2084
  call void @llvm.dbg.value(metadata ptr %46, metadata !1967, metadata !DIExpression()) #17, !dbg !2085
  %cmp.not.i346 = icmp eq ptr %46, null, !dbg !2087
  br i1 %cmp.not.i346, label %S_SvREFCNT_dec.exit353, label %if.then.i349, !dbg !2088

if.then.i349:                                     ; preds = %if.end50
  %sv_refcnt.i347 = getelementptr inbounds %struct.sv, ptr %46, i64 0, i32 1, !dbg !2089
  %47 = load i32, ptr %sv_refcnt.i347, align 8, !dbg !2089
  call void @llvm.dbg.value(metadata i32 %47, metadata !1973, metadata !DIExpression()) #17, !dbg !2090
  %cmp1.i348 = icmp ugt i32 %47, 1, !dbg !2091
  br i1 %cmp1.i348, label %if.then4.i351, label %if.else.i352, !dbg !2092

if.then4.i351:                                    ; preds = %if.then.i349
  %sub.i350 = add i32 %47, -1, !dbg !2093
  store i32 %sub.i350, ptr %sv_refcnt.i347, align 8, !dbg !2094
  br label %S_SvREFCNT_dec.exit353, !dbg !2095

if.else.i352:                                     ; preds = %if.then.i349
  call void @Perl_sv_free2(ptr noundef nonnull %46, i32 noundef %47) #17, !dbg !2096
  br label %S_SvREFCNT_dec.exit353

S_SvREFCNT_dec.exit353:                           ; preds = %if.end50, %if.then4.i351, %if.else.i352
  store ptr null, ptr @PL_stashcache, align 8, !dbg !2097
  %48 = load ptr, ptr @PL_parser, align 8, !dbg !2098
  %tobool51.not = icmp eq ptr %48, null, !dbg !2098
  br i1 %tobool51.not, label %if.end58, label %land.lhs.true52, !dbg !2100

land.lhs.true52:                                  ; preds = %S_SvREFCNT_dec.exit353
  %rsfp = getelementptr inbounds %struct.yy_parser, ptr %48, i64 0, i32 46, !dbg !2101
  %49 = load ptr, ptr %rsfp, align 8, !dbg !2101
  %tobool53.not = icmp eq ptr %49, null, !dbg !2102
  br i1 %tobool53.not, label %if.end58, label %if.then54, !dbg !2103

if.then54:                                        ; preds = %land.lhs.true52
  %call56 = call i32 @Perl_PerlIO_close(ptr noundef nonnull %49) #17, !dbg !2104
  %50 = load ptr, ptr @PL_parser, align 8, !dbg !2106
  %rsfp57 = getelementptr inbounds %struct.yy_parser, ptr %50, i64 0, i32 46, !dbg !2107
  store ptr null, ptr %rsfp57, align 8, !dbg !2108
  br label %if.end58, !dbg !2109

if.end58:                                         ; preds = %if.then54, %land.lhs.true52, %S_SvREFCNT_dec.exit353
  %51 = load i8, ptr @PL_minus_F, align 1, !dbg !2110, !range !1483
  %tobool59.not = icmp eq i8 %51, 0, !dbg !2110
  br i1 %tobool59.not, label %if.end61, label %if.then60, !dbg !2112

if.then60:                                        ; preds = %if.end58
  %52 = load ptr, ptr @PL_splitstr, align 8, !dbg !2113
  call void @Perl_safesysfree(ptr noundef %52) #17, !dbg !2113
  store ptr null, ptr @PL_splitstr, align 8, !dbg !2115
  br label %if.end61, !dbg !2116

if.end61:                                         ; preds = %if.then60, %if.end58
  store i8 0, ptr @PL_minus_n, align 1, !dbg !2117
  store i8 0, ptr @PL_minus_p, align 1, !dbg !2118
  store i8 0, ptr @PL_minus_l, align 1, !dbg !2119
  store i8 0, ptr @PL_minus_a, align 1, !dbg !2120
  store i8 0, ptr @PL_minus_F, align 1, !dbg !2121
  store i8 0, ptr @PL_doswitches, align 1, !dbg !2122
  store i8 0, ptr @PL_dowarn, align 1, !dbg !2123
  store i8 0, ptr @PL_unsafe, align 1, !dbg !2124
  %53 = load ptr, ptr @PL_inplace, align 8, !dbg !2125
  call void @Perl_safesysfree(ptr noundef %53) #17, !dbg !2125
  store ptr null, ptr @PL_inplace, align 8, !dbg !2126
  %54 = load ptr, ptr @PL_patchlevel, align 8, !dbg !2127
  call void @llvm.dbg.value(metadata ptr %54, metadata !1967, metadata !DIExpression()) #17, !dbg !2128
  %cmp.not.i354 = icmp eq ptr %54, null, !dbg !2130
  br i1 %cmp.not.i354, label %S_SvREFCNT_dec.exit361, label %if.then.i357, !dbg !2131

if.then.i357:                                     ; preds = %if.end61
  %sv_refcnt.i355 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 1, !dbg !2132
  %55 = load i32, ptr %sv_refcnt.i355, align 8, !dbg !2132
  call void @llvm.dbg.value(metadata i32 %55, metadata !1973, metadata !DIExpression()) #17, !dbg !2133
  %cmp1.i356 = icmp ugt i32 %55, 1, !dbg !2134
  br i1 %cmp1.i356, label %if.then4.i359, label %if.else.i360, !dbg !2135

if.then4.i359:                                    ; preds = %if.then.i357
  %sub.i358 = add i32 %55, -1, !dbg !2136
  store i32 %sub.i358, ptr %sv_refcnt.i355, align 8, !dbg !2137
  br label %S_SvREFCNT_dec.exit361, !dbg !2138

if.else.i360:                                     ; preds = %if.then.i357
  call void @Perl_sv_free2(ptr noundef nonnull %54, i32 noundef %55) #17, !dbg !2139
  br label %S_SvREFCNT_dec.exit361

S_SvREFCNT_dec.exit361:                           ; preds = %if.end61, %if.then4.i359, %if.else.i360
  %56 = load ptr, ptr @PL_e_script, align 8, !dbg !2140
  %tobool62.not = icmp eq ptr %56, null, !dbg !2140
  br i1 %tobool62.not, label %if.end64, label %if.then.i365, !dbg !2142

if.then.i365:                                     ; preds = %S_SvREFCNT_dec.exit361
  call void @llvm.dbg.value(metadata ptr %56, metadata !1967, metadata !DIExpression()) #17, !dbg !2143
  %sv_refcnt.i363 = getelementptr inbounds %struct.sv, ptr %56, i64 0, i32 1, !dbg !2146
  %57 = load i32, ptr %sv_refcnt.i363, align 8, !dbg !2146
  call void @llvm.dbg.value(metadata i32 %57, metadata !1973, metadata !DIExpression()) #17, !dbg !2147
  %cmp1.i364 = icmp ugt i32 %57, 1, !dbg !2148
  br i1 %cmp1.i364, label %if.then4.i367, label %if.else.i368, !dbg !2149

if.then4.i367:                                    ; preds = %if.then.i365
  %sub.i366 = add i32 %57, -1, !dbg !2150
  store i32 %sub.i366, ptr %sv_refcnt.i363, align 8, !dbg !2151
  br label %S_SvREFCNT_dec.exit369, !dbg !2152

if.else.i368:                                     ; preds = %if.then.i365
  call void @Perl_sv_free2(ptr noundef nonnull %56, i32 noundef %57) #17, !dbg !2153
  br label %S_SvREFCNT_dec.exit369

S_SvREFCNT_dec.exit369:                           ; preds = %if.then4.i367, %if.else.i368
  store ptr null, ptr @PL_e_script, align 8, !dbg !2154
  br label %if.end64, !dbg !2155

if.end64:                                         ; preds = %S_SvREFCNT_dec.exit369, %S_SvREFCNT_dec.exit361
  store i32 0, ptr @PL_perldb, align 4, !dbg !2156
  %58 = load ptr, ptr @PL_ofsgv, align 8, !dbg !2157
  call void @llvm.dbg.value(metadata ptr %58, metadata !1967, metadata !DIExpression()) #17, !dbg !2158
  %cmp.not.i370 = icmp eq ptr %58, null, !dbg !2160
  br i1 %cmp.not.i370, label %S_SvREFCNT_dec.exit377, label %if.then.i373, !dbg !2161

if.then.i373:                                     ; preds = %if.end64
  %sv_refcnt.i371 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 1, !dbg !2162
  %59 = load i32, ptr %sv_refcnt.i371, align 8, !dbg !2162
  call void @llvm.dbg.value(metadata i32 %59, metadata !1973, metadata !DIExpression()) #17, !dbg !2163
  %cmp1.i372 = icmp ugt i32 %59, 1, !dbg !2164
  br i1 %cmp1.i372, label %if.then4.i375, label %if.else.i376, !dbg !2165

if.then4.i375:                                    ; preds = %if.then.i373
  %sub.i374 = add i32 %59, -1, !dbg !2166
  store i32 %sub.i374, ptr %sv_refcnt.i371, align 8, !dbg !2167
  br label %S_SvREFCNT_dec.exit377, !dbg !2168

if.else.i376:                                     ; preds = %if.then.i373
  call void @Perl_sv_free2(ptr noundef nonnull %58, i32 noundef %59) #17, !dbg !2169
  br label %S_SvREFCNT_dec.exit377

S_SvREFCNT_dec.exit377:                           ; preds = %if.end64, %if.then4.i375, %if.else.i376
  store ptr null, ptr @PL_ofsgv, align 8, !dbg !2170
  %60 = load ptr, ptr @PL_ors_sv, align 8, !dbg !2171
  call void @llvm.dbg.value(metadata ptr %60, metadata !1967, metadata !DIExpression()) #17, !dbg !2172
  %cmp.not.i378 = icmp eq ptr %60, null, !dbg !2174
  br i1 %cmp.not.i378, label %S_SvREFCNT_dec.exit385, label %if.then.i381, !dbg !2175

if.then.i381:                                     ; preds = %S_SvREFCNT_dec.exit377
  %sv_refcnt.i379 = getelementptr inbounds %struct.sv, ptr %60, i64 0, i32 1, !dbg !2176
  %61 = load i32, ptr %sv_refcnt.i379, align 8, !dbg !2176
  call void @llvm.dbg.value(metadata i32 %61, metadata !1973, metadata !DIExpression()) #17, !dbg !2177
  %cmp1.i380 = icmp ugt i32 %61, 1, !dbg !2178
  br i1 %cmp1.i380, label %if.then4.i383, label %if.else.i384, !dbg !2179

if.then4.i383:                                    ; preds = %if.then.i381
  %sub.i382 = add i32 %61, -1, !dbg !2180
  store i32 %sub.i382, ptr %sv_refcnt.i379, align 8, !dbg !2181
  br label %S_SvREFCNT_dec.exit385, !dbg !2182

if.else.i384:                                     ; preds = %if.then.i381
  call void @Perl_sv_free2(ptr noundef nonnull %60, i32 noundef %61) #17, !dbg !2183
  br label %S_SvREFCNT_dec.exit385

S_SvREFCNT_dec.exit385:                           ; preds = %S_SvREFCNT_dec.exit377, %if.then4.i383, %if.else.i384
  store ptr null, ptr @PL_ors_sv, align 8, !dbg !2184
  %62 = load ptr, ptr @PL_rs, align 8, !dbg !2185
  call void @llvm.dbg.value(metadata ptr %62, metadata !1967, metadata !DIExpression()) #17, !dbg !2186
  %cmp.not.i386 = icmp eq ptr %62, null, !dbg !2188
  br i1 %cmp.not.i386, label %S_SvREFCNT_dec.exit393, label %if.then.i389, !dbg !2189

if.then.i389:                                     ; preds = %S_SvREFCNT_dec.exit385
  %sv_refcnt.i387 = getelementptr inbounds %struct.sv, ptr %62, i64 0, i32 1, !dbg !2190
  %63 = load i32, ptr %sv_refcnt.i387, align 8, !dbg !2190
  call void @llvm.dbg.value(metadata i32 %63, metadata !1973, metadata !DIExpression()) #17, !dbg !2191
  %cmp1.i388 = icmp ugt i32 %63, 1, !dbg !2192
  br i1 %cmp1.i388, label %if.then4.i391, label %if.else.i392, !dbg !2193

if.then4.i391:                                    ; preds = %if.then.i389
  %sub.i390 = add i32 %63, -1, !dbg !2194
  store i32 %sub.i390, ptr %sv_refcnt.i387, align 8, !dbg !2195
  br label %S_SvREFCNT_dec.exit393, !dbg !2196

if.else.i392:                                     ; preds = %if.then.i389
  call void @Perl_sv_free2(ptr noundef nonnull %62, i32 noundef %63) #17, !dbg !2197
  br label %S_SvREFCNT_dec.exit393

S_SvREFCNT_dec.exit393:                           ; preds = %S_SvREFCNT_dec.exit385, %if.then4.i391, %if.else.i392
  store ptr null, ptr @PL_rs, align 8, !dbg !2198
  %64 = load ptr, ptr @PL_osname, align 8, !dbg !2199
  call void @Perl_safesysfree(ptr noundef %64) #17, !dbg !2199
  store ptr null, ptr @PL_osname, align 8, !dbg !2200
  %65 = load ptr, ptr @PL_statname, align 8, !dbg !2201
  call void @llvm.dbg.value(metadata ptr %65, metadata !1967, metadata !DIExpression()) #17, !dbg !2202
  %cmp.not.i394 = icmp eq ptr %65, null, !dbg !2204
  br i1 %cmp.not.i394, label %S_SvREFCNT_dec.exit401, label %if.then.i397, !dbg !2205

if.then.i397:                                     ; preds = %S_SvREFCNT_dec.exit393
  %sv_refcnt.i395 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 1, !dbg !2206
  %66 = load i32, ptr %sv_refcnt.i395, align 8, !dbg !2206
  call void @llvm.dbg.value(metadata i32 %66, metadata !1973, metadata !DIExpression()) #17, !dbg !2207
  %cmp1.i396 = icmp ugt i32 %66, 1, !dbg !2208
  br i1 %cmp1.i396, label %if.then4.i399, label %if.else.i400, !dbg !2209

if.then4.i399:                                    ; preds = %if.then.i397
  %sub.i398 = add i32 %66, -1, !dbg !2210
  store i32 %sub.i398, ptr %sv_refcnt.i395, align 8, !dbg !2211
  br label %S_SvREFCNT_dec.exit401, !dbg !2212

if.else.i400:                                     ; preds = %if.then.i397
  call void @Perl_sv_free2(ptr noundef nonnull %65, i32 noundef %66) #17, !dbg !2213
  br label %S_SvREFCNT_dec.exit401

S_SvREFCNT_dec.exit401:                           ; preds = %S_SvREFCNT_dec.exit393, %if.then4.i399, %if.else.i400
  store ptr null, ptr @PL_statname, align 8, !dbg !2214
  store ptr null, ptr @PL_statgv, align 8, !dbg !2215
  %67 = load ptr, ptr @PL_efloatbuf, align 8, !dbg !2216
  call void @Perl_safesysfree(ptr noundef %67) #17, !dbg !2216
  store ptr null, ptr @PL_efloatbuf, align 8, !dbg !2217
  store i64 0, ptr @PL_efloatsize, align 8, !dbg !2218
  %68 = load ptr, ptr @PL_beginav, align 8, !dbg !2219
  call void @llvm.dbg.value(metadata ptr %68, metadata !1967, metadata !DIExpression()) #17, !dbg !2220
  %cmp.not.i402 = icmp eq ptr %68, null, !dbg !2222
  br i1 %cmp.not.i402, label %S_SvREFCNT_dec.exit409, label %if.then.i405, !dbg !2223

if.then.i405:                                     ; preds = %S_SvREFCNT_dec.exit401
  %sv_refcnt.i403 = getelementptr inbounds %struct.sv, ptr %68, i64 0, i32 1, !dbg !2224
  %69 = load i32, ptr %sv_refcnt.i403, align 8, !dbg !2224
  call void @llvm.dbg.value(metadata i32 %69, metadata !1973, metadata !DIExpression()) #17, !dbg !2225
  %cmp1.i404 = icmp ugt i32 %69, 1, !dbg !2226
  br i1 %cmp1.i404, label %if.then4.i407, label %if.else.i408, !dbg !2227

if.then4.i407:                                    ; preds = %if.then.i405
  %sub.i406 = add i32 %69, -1, !dbg !2228
  store i32 %sub.i406, ptr %sv_refcnt.i403, align 8, !dbg !2229
  br label %S_SvREFCNT_dec.exit409, !dbg !2230

if.else.i408:                                     ; preds = %if.then.i405
  call void @Perl_sv_free2(ptr noundef nonnull %68, i32 noundef %69) #17, !dbg !2231
  br label %S_SvREFCNT_dec.exit409

S_SvREFCNT_dec.exit409:                           ; preds = %S_SvREFCNT_dec.exit401, %if.then4.i407, %if.else.i408
  %70 = load ptr, ptr @PL_beginav_save, align 8, !dbg !2232
  call void @llvm.dbg.value(metadata ptr %70, metadata !1967, metadata !DIExpression()) #17, !dbg !2233
  %cmp.not.i410 = icmp eq ptr %70, null, !dbg !2235
  br i1 %cmp.not.i410, label %S_SvREFCNT_dec.exit417, label %if.then.i413, !dbg !2236

if.then.i413:                                     ; preds = %S_SvREFCNT_dec.exit409
  %sv_refcnt.i411 = getelementptr inbounds %struct.sv, ptr %70, i64 0, i32 1, !dbg !2237
  %71 = load i32, ptr %sv_refcnt.i411, align 8, !dbg !2237
  call void @llvm.dbg.value(metadata i32 %71, metadata !1973, metadata !DIExpression()) #17, !dbg !2238
  %cmp1.i412 = icmp ugt i32 %71, 1, !dbg !2239
  br i1 %cmp1.i412, label %if.then4.i415, label %if.else.i416, !dbg !2240

if.then4.i415:                                    ; preds = %if.then.i413
  %sub.i414 = add i32 %71, -1, !dbg !2241
  store i32 %sub.i414, ptr %sv_refcnt.i411, align 8, !dbg !2242
  br label %S_SvREFCNT_dec.exit417, !dbg !2243

if.else.i416:                                     ; preds = %if.then.i413
  call void @Perl_sv_free2(ptr noundef nonnull %70, i32 noundef %71) #17, !dbg !2244
  br label %S_SvREFCNT_dec.exit417

S_SvREFCNT_dec.exit417:                           ; preds = %S_SvREFCNT_dec.exit409, %if.then4.i415, %if.else.i416
  %72 = load ptr, ptr @PL_endav, align 8, !dbg !2245
  call void @llvm.dbg.value(metadata ptr %72, metadata !1967, metadata !DIExpression()) #17, !dbg !2246
  %cmp.not.i418 = icmp eq ptr %72, null, !dbg !2248
  br i1 %cmp.not.i418, label %S_SvREFCNT_dec.exit425, label %if.then.i421, !dbg !2249

if.then.i421:                                     ; preds = %S_SvREFCNT_dec.exit417
  %sv_refcnt.i419 = getelementptr inbounds %struct.sv, ptr %72, i64 0, i32 1, !dbg !2250
  %73 = load i32, ptr %sv_refcnt.i419, align 8, !dbg !2250
  call void @llvm.dbg.value(metadata i32 %73, metadata !1973, metadata !DIExpression()) #17, !dbg !2251
  %cmp1.i420 = icmp ugt i32 %73, 1, !dbg !2252
  br i1 %cmp1.i420, label %if.then4.i423, label %if.else.i424, !dbg !2253

if.then4.i423:                                    ; preds = %if.then.i421
  %sub.i422 = add i32 %73, -1, !dbg !2254
  store i32 %sub.i422, ptr %sv_refcnt.i419, align 8, !dbg !2255
  br label %S_SvREFCNT_dec.exit425, !dbg !2256

if.else.i424:                                     ; preds = %if.then.i421
  call void @Perl_sv_free2(ptr noundef nonnull %72, i32 noundef %73) #17, !dbg !2257
  br label %S_SvREFCNT_dec.exit425

S_SvREFCNT_dec.exit425:                           ; preds = %S_SvREFCNT_dec.exit417, %if.then4.i423, %if.else.i424
  %74 = load ptr, ptr @PL_checkav, align 8, !dbg !2258
  call void @llvm.dbg.value(metadata ptr %74, metadata !1967, metadata !DIExpression()) #17, !dbg !2259
  %cmp.not.i426 = icmp eq ptr %74, null, !dbg !2261
  br i1 %cmp.not.i426, label %S_SvREFCNT_dec.exit433, label %if.then.i429, !dbg !2262

if.then.i429:                                     ; preds = %S_SvREFCNT_dec.exit425
  %sv_refcnt.i427 = getelementptr inbounds %struct.sv, ptr %74, i64 0, i32 1, !dbg !2263
  %75 = load i32, ptr %sv_refcnt.i427, align 8, !dbg !2263
  call void @llvm.dbg.value(metadata i32 %75, metadata !1973, metadata !DIExpression()) #17, !dbg !2264
  %cmp1.i428 = icmp ugt i32 %75, 1, !dbg !2265
  br i1 %cmp1.i428, label %if.then4.i431, label %if.else.i432, !dbg !2266

if.then4.i431:                                    ; preds = %if.then.i429
  %sub.i430 = add i32 %75, -1, !dbg !2267
  store i32 %sub.i430, ptr %sv_refcnt.i427, align 8, !dbg !2268
  br label %S_SvREFCNT_dec.exit433, !dbg !2269

if.else.i432:                                     ; preds = %if.then.i429
  call void @Perl_sv_free2(ptr noundef nonnull %74, i32 noundef %75) #17, !dbg !2270
  br label %S_SvREFCNT_dec.exit433

S_SvREFCNT_dec.exit433:                           ; preds = %S_SvREFCNT_dec.exit425, %if.then4.i431, %if.else.i432
  %76 = load ptr, ptr @PL_checkav_save, align 8, !dbg !2271
  call void @llvm.dbg.value(metadata ptr %76, metadata !1967, metadata !DIExpression()) #17, !dbg !2272
  %cmp.not.i434 = icmp eq ptr %76, null, !dbg !2274
  br i1 %cmp.not.i434, label %S_SvREFCNT_dec.exit441, label %if.then.i437, !dbg !2275

if.then.i437:                                     ; preds = %S_SvREFCNT_dec.exit433
  %sv_refcnt.i435 = getelementptr inbounds %struct.sv, ptr %76, i64 0, i32 1, !dbg !2276
  %77 = load i32, ptr %sv_refcnt.i435, align 8, !dbg !2276
  call void @llvm.dbg.value(metadata i32 %77, metadata !1973, metadata !DIExpression()) #17, !dbg !2277
  %cmp1.i436 = icmp ugt i32 %77, 1, !dbg !2278
  br i1 %cmp1.i436, label %if.then4.i439, label %if.else.i440, !dbg !2279

if.then4.i439:                                    ; preds = %if.then.i437
  %sub.i438 = add i32 %77, -1, !dbg !2280
  store i32 %sub.i438, ptr %sv_refcnt.i435, align 8, !dbg !2281
  br label %S_SvREFCNT_dec.exit441, !dbg !2282

if.else.i440:                                     ; preds = %if.then.i437
  call void @Perl_sv_free2(ptr noundef nonnull %76, i32 noundef %77) #17, !dbg !2283
  br label %S_SvREFCNT_dec.exit441

S_SvREFCNT_dec.exit441:                           ; preds = %S_SvREFCNT_dec.exit433, %if.then4.i439, %if.else.i440
  %78 = load ptr, ptr @PL_unitcheckav, align 8, !dbg !2284
  call void @llvm.dbg.value(metadata ptr %78, metadata !1967, metadata !DIExpression()) #17, !dbg !2285
  %cmp.not.i442 = icmp eq ptr %78, null, !dbg !2287
  br i1 %cmp.not.i442, label %S_SvREFCNT_dec.exit449, label %if.then.i445, !dbg !2288

if.then.i445:                                     ; preds = %S_SvREFCNT_dec.exit441
  %sv_refcnt.i443 = getelementptr inbounds %struct.sv, ptr %78, i64 0, i32 1, !dbg !2289
  %79 = load i32, ptr %sv_refcnt.i443, align 8, !dbg !2289
  call void @llvm.dbg.value(metadata i32 %79, metadata !1973, metadata !DIExpression()) #17, !dbg !2290
  %cmp1.i444 = icmp ugt i32 %79, 1, !dbg !2291
  br i1 %cmp1.i444, label %if.then4.i447, label %if.else.i448, !dbg !2292

if.then4.i447:                                    ; preds = %if.then.i445
  %sub.i446 = add i32 %79, -1, !dbg !2293
  store i32 %sub.i446, ptr %sv_refcnt.i443, align 8, !dbg !2294
  br label %S_SvREFCNT_dec.exit449, !dbg !2295

if.else.i448:                                     ; preds = %if.then.i445
  call void @Perl_sv_free2(ptr noundef nonnull %78, i32 noundef %79) #17, !dbg !2296
  br label %S_SvREFCNT_dec.exit449

S_SvREFCNT_dec.exit449:                           ; preds = %S_SvREFCNT_dec.exit441, %if.then4.i447, %if.else.i448
  %80 = load ptr, ptr @PL_unitcheckav_save, align 8, !dbg !2297
  call void @llvm.dbg.value(metadata ptr %80, metadata !1967, metadata !DIExpression()) #17, !dbg !2298
  %cmp.not.i450 = icmp eq ptr %80, null, !dbg !2300
  br i1 %cmp.not.i450, label %S_SvREFCNT_dec.exit457, label %if.then.i453, !dbg !2301

if.then.i453:                                     ; preds = %S_SvREFCNT_dec.exit449
  %sv_refcnt.i451 = getelementptr inbounds %struct.sv, ptr %80, i64 0, i32 1, !dbg !2302
  %81 = load i32, ptr %sv_refcnt.i451, align 8, !dbg !2302
  call void @llvm.dbg.value(metadata i32 %81, metadata !1973, metadata !DIExpression()) #17, !dbg !2303
  %cmp1.i452 = icmp ugt i32 %81, 1, !dbg !2304
  br i1 %cmp1.i452, label %if.then4.i455, label %if.else.i456, !dbg !2305

if.then4.i455:                                    ; preds = %if.then.i453
  %sub.i454 = add i32 %81, -1, !dbg !2306
  store i32 %sub.i454, ptr %sv_refcnt.i451, align 8, !dbg !2307
  br label %S_SvREFCNT_dec.exit457, !dbg !2308

if.else.i456:                                     ; preds = %if.then.i453
  call void @Perl_sv_free2(ptr noundef nonnull %80, i32 noundef %81) #17, !dbg !2309
  br label %S_SvREFCNT_dec.exit457

S_SvREFCNT_dec.exit457:                           ; preds = %S_SvREFCNT_dec.exit449, %if.then4.i455, %if.else.i456
  %82 = load ptr, ptr @PL_initav, align 8, !dbg !2310
  call void @llvm.dbg.value(metadata ptr %82, metadata !1967, metadata !DIExpression()) #17, !dbg !2311
  %cmp.not.i458 = icmp eq ptr %82, null, !dbg !2313
  br i1 %cmp.not.i458, label %S_SvREFCNT_dec.exit465, label %if.then.i461, !dbg !2314

if.then.i461:                                     ; preds = %S_SvREFCNT_dec.exit457
  %sv_refcnt.i459 = getelementptr inbounds %struct.sv, ptr %82, i64 0, i32 1, !dbg !2315
  %83 = load i32, ptr %sv_refcnt.i459, align 8, !dbg !2315
  call void @llvm.dbg.value(metadata i32 %83, metadata !1973, metadata !DIExpression()) #17, !dbg !2316
  %cmp1.i460 = icmp ugt i32 %83, 1, !dbg !2317
  br i1 %cmp1.i460, label %if.then4.i463, label %if.else.i464, !dbg !2318

if.then4.i463:                                    ; preds = %if.then.i461
  %sub.i462 = add i32 %83, -1, !dbg !2319
  store i32 %sub.i462, ptr %sv_refcnt.i459, align 8, !dbg !2320
  br label %S_SvREFCNT_dec.exit465, !dbg !2321

if.else.i464:                                     ; preds = %if.then.i461
  call void @Perl_sv_free2(ptr noundef nonnull %82, i32 noundef %83) #17, !dbg !2322
  br label %S_SvREFCNT_dec.exit465

S_SvREFCNT_dec.exit465:                           ; preds = %S_SvREFCNT_dec.exit457, %if.then4.i463, %if.else.i464
  store ptr null, ptr @PL_beginav, align 8, !dbg !2323
  store ptr null, ptr @PL_beginav_save, align 8, !dbg !2324
  store ptr null, ptr @PL_endav, align 8, !dbg !2325
  store ptr null, ptr @PL_checkav, align 8, !dbg !2326
  store ptr null, ptr @PL_checkav_save, align 8, !dbg !2327
  store ptr null, ptr @PL_unitcheckav, align 8, !dbg !2328
  store ptr null, ptr @PL_unitcheckav_save, align 8, !dbg !2329
  store ptr null, ptr @PL_initav, align 8, !dbg !2330
  store ptr null, ptr @PL_hintgv, align 8, !dbg !2331
  store ptr null, ptr @PL_errgv, align 8, !dbg !2332
  store ptr null, ptr @PL_argvoutgv, align 8, !dbg !2333
  store ptr null, ptr @PL_stdingv, align 8, !dbg !2334
  store ptr null, ptr @PL_stderrgv, align 8, !dbg !2335
  store ptr null, ptr @PL_last_in_gv, align 8, !dbg !2336
  store ptr null, ptr @PL_DBsingle, align 8, !dbg !2337
  store ptr null, ptr @PL_DBtrace, align 8, !dbg !2338
  store ptr null, ptr @PL_DBsignal, align 8, !dbg !2339
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(24) @PL_DBcontrol, i8 0, i64 24, i1 false), !dbg !2340
  store ptr null, ptr @PL_DBcv, align 8, !dbg !2341
  store ptr null, ptr @PL_dbargs, align 8, !dbg !2342
  store ptr null, ptr @PL_debstash, align 8, !dbg !2343
  %84 = load ptr, ptr @PL_envgv, align 8, !dbg !2344
  call void @llvm.dbg.value(metadata ptr %84, metadata !1967, metadata !DIExpression()) #17, !dbg !2345
  %cmp.not.i466 = icmp eq ptr %84, null, !dbg !2347
  br i1 %cmp.not.i466, label %S_SvREFCNT_dec.exit473, label %if.then.i469, !dbg !2348

if.then.i469:                                     ; preds = %S_SvREFCNT_dec.exit465
  %sv_refcnt.i467 = getelementptr inbounds %struct.sv, ptr %84, i64 0, i32 1, !dbg !2349
  %85 = load i32, ptr %sv_refcnt.i467, align 8, !dbg !2349
  call void @llvm.dbg.value(metadata i32 %85, metadata !1973, metadata !DIExpression()) #17, !dbg !2350
  %cmp1.i468 = icmp ugt i32 %85, 1, !dbg !2351
  br i1 %cmp1.i468, label %if.then4.i471, label %if.else.i472, !dbg !2352

if.then4.i471:                                    ; preds = %if.then.i469
  %sub.i470 = add i32 %85, -1, !dbg !2353
  store i32 %sub.i470, ptr %sv_refcnt.i467, align 8, !dbg !2354
  br label %S_SvREFCNT_dec.exit473, !dbg !2355

if.else.i472:                                     ; preds = %if.then.i469
  call void @Perl_sv_free2(ptr noundef nonnull %84, i32 noundef %85) #17, !dbg !2356
  br label %S_SvREFCNT_dec.exit473

S_SvREFCNT_dec.exit473:                           ; preds = %S_SvREFCNT_dec.exit465, %if.then4.i471, %if.else.i472
  %86 = load ptr, ptr @PL_incgv, align 8, !dbg !2357
  call void @llvm.dbg.value(metadata ptr %86, metadata !1967, metadata !DIExpression()) #17, !dbg !2358
  %cmp.not.i474 = icmp eq ptr %86, null, !dbg !2360
  br i1 %cmp.not.i474, label %S_SvREFCNT_dec.exit481, label %if.then.i477, !dbg !2361

if.then.i477:                                     ; preds = %S_SvREFCNT_dec.exit473
  %sv_refcnt.i475 = getelementptr inbounds %struct.sv, ptr %86, i64 0, i32 1, !dbg !2362
  %87 = load i32, ptr %sv_refcnt.i475, align 8, !dbg !2362
  call void @llvm.dbg.value(metadata i32 %87, metadata !1973, metadata !DIExpression()) #17, !dbg !2363
  %cmp1.i476 = icmp ugt i32 %87, 1, !dbg !2364
  br i1 %cmp1.i476, label %if.then4.i479, label %if.else.i480, !dbg !2365

if.then4.i479:                                    ; preds = %if.then.i477
  %sub.i478 = add i32 %87, -1, !dbg !2366
  store i32 %sub.i478, ptr %sv_refcnt.i475, align 8, !dbg !2367
  br label %S_SvREFCNT_dec.exit481, !dbg !2368

if.else.i480:                                     ; preds = %if.then.i477
  call void @Perl_sv_free2(ptr noundef nonnull %86, i32 noundef %87) #17, !dbg !2369
  br label %S_SvREFCNT_dec.exit481

S_SvREFCNT_dec.exit481:                           ; preds = %S_SvREFCNT_dec.exit473, %if.then4.i479, %if.else.i480
  %88 = load ptr, ptr @PL_argvgv, align 8, !dbg !2370
  call void @llvm.dbg.value(metadata ptr %88, metadata !1967, metadata !DIExpression()) #17, !dbg !2371
  %cmp.not.i482 = icmp eq ptr %88, null, !dbg !2373
  br i1 %cmp.not.i482, label %S_SvREFCNT_dec.exit489, label %if.then.i485, !dbg !2374

if.then.i485:                                     ; preds = %S_SvREFCNT_dec.exit481
  %sv_refcnt.i483 = getelementptr inbounds %struct.sv, ptr %88, i64 0, i32 1, !dbg !2375
  %89 = load i32, ptr %sv_refcnt.i483, align 8, !dbg !2375
  call void @llvm.dbg.value(metadata i32 %89, metadata !1973, metadata !DIExpression()) #17, !dbg !2376
  %cmp1.i484 = icmp ugt i32 %89, 1, !dbg !2377
  br i1 %cmp1.i484, label %if.then4.i487, label %if.else.i488, !dbg !2378

if.then4.i487:                                    ; preds = %if.then.i485
  %sub.i486 = add i32 %89, -1, !dbg !2379
  store i32 %sub.i486, ptr %sv_refcnt.i483, align 8, !dbg !2380
  br label %S_SvREFCNT_dec.exit489, !dbg !2381

if.else.i488:                                     ; preds = %if.then.i485
  call void @Perl_sv_free2(ptr noundef nonnull %88, i32 noundef %89) #17, !dbg !2382
  br label %S_SvREFCNT_dec.exit489

S_SvREFCNT_dec.exit489:                           ; preds = %S_SvREFCNT_dec.exit481, %if.then4.i487, %if.else.i488
  %90 = load ptr, ptr @PL_replgv, align 8, !dbg !2383
  call void @llvm.dbg.value(metadata ptr %90, metadata !1967, metadata !DIExpression()) #17, !dbg !2384
  %cmp.not.i490 = icmp eq ptr %90, null, !dbg !2386
  br i1 %cmp.not.i490, label %S_SvREFCNT_dec.exit497, label %if.then.i493, !dbg !2387

if.then.i493:                                     ; preds = %S_SvREFCNT_dec.exit489
  %sv_refcnt.i491 = getelementptr inbounds %struct.sv, ptr %90, i64 0, i32 1, !dbg !2388
  %91 = load i32, ptr %sv_refcnt.i491, align 8, !dbg !2388
  call void @llvm.dbg.value(metadata i32 %91, metadata !1973, metadata !DIExpression()) #17, !dbg !2389
  %cmp1.i492 = icmp ugt i32 %91, 1, !dbg !2390
  br i1 %cmp1.i492, label %if.then4.i495, label %if.else.i496, !dbg !2391

if.then4.i495:                                    ; preds = %if.then.i493
  %sub.i494 = add i32 %91, -1, !dbg !2392
  store i32 %sub.i494, ptr %sv_refcnt.i491, align 8, !dbg !2393
  br label %S_SvREFCNT_dec.exit497, !dbg !2394

if.else.i496:                                     ; preds = %if.then.i493
  call void @Perl_sv_free2(ptr noundef nonnull %90, i32 noundef %91) #17, !dbg !2395
  br label %S_SvREFCNT_dec.exit497

S_SvREFCNT_dec.exit497:                           ; preds = %S_SvREFCNT_dec.exit489, %if.then4.i495, %if.else.i496
  %92 = load ptr, ptr @PL_DBgv, align 8, !dbg !2396
  call void @llvm.dbg.value(metadata ptr %92, metadata !1967, metadata !DIExpression()) #17, !dbg !2397
  %cmp.not.i498 = icmp eq ptr %92, null, !dbg !2399
  br i1 %cmp.not.i498, label %S_SvREFCNT_dec.exit505, label %if.then.i501, !dbg !2400

if.then.i501:                                     ; preds = %S_SvREFCNT_dec.exit497
  %sv_refcnt.i499 = getelementptr inbounds %struct.sv, ptr %92, i64 0, i32 1, !dbg !2401
  %93 = load i32, ptr %sv_refcnt.i499, align 8, !dbg !2401
  call void @llvm.dbg.value(metadata i32 %93, metadata !1973, metadata !DIExpression()) #17, !dbg !2402
  %cmp1.i500 = icmp ugt i32 %93, 1, !dbg !2403
  br i1 %cmp1.i500, label %if.then4.i503, label %if.else.i504, !dbg !2404

if.then4.i503:                                    ; preds = %if.then.i501
  %sub.i502 = add i32 %93, -1, !dbg !2405
  store i32 %sub.i502, ptr %sv_refcnt.i499, align 8, !dbg !2406
  br label %S_SvREFCNT_dec.exit505, !dbg !2407

if.else.i504:                                     ; preds = %if.then.i501
  call void @Perl_sv_free2(ptr noundef nonnull %92, i32 noundef %93) #17, !dbg !2408
  br label %S_SvREFCNT_dec.exit505

S_SvREFCNT_dec.exit505:                           ; preds = %S_SvREFCNT_dec.exit497, %if.then4.i503, %if.else.i504
  %94 = load ptr, ptr @PL_DBline, align 8, !dbg !2409
  call void @llvm.dbg.value(metadata ptr %94, metadata !1967, metadata !DIExpression()) #17, !dbg !2410
  %cmp.not.i506 = icmp eq ptr %94, null, !dbg !2412
  br i1 %cmp.not.i506, label %S_SvREFCNT_dec.exit513, label %if.then.i509, !dbg !2413

if.then.i509:                                     ; preds = %S_SvREFCNT_dec.exit505
  %sv_refcnt.i507 = getelementptr inbounds %struct.sv, ptr %94, i64 0, i32 1, !dbg !2414
  %95 = load i32, ptr %sv_refcnt.i507, align 8, !dbg !2414
  call void @llvm.dbg.value(metadata i32 %95, metadata !1973, metadata !DIExpression()) #17, !dbg !2415
  %cmp1.i508 = icmp ugt i32 %95, 1, !dbg !2416
  br i1 %cmp1.i508, label %if.then4.i511, label %if.else.i512, !dbg !2417

if.then4.i511:                                    ; preds = %if.then.i509
  %sub.i510 = add i32 %95, -1, !dbg !2418
  store i32 %sub.i510, ptr %sv_refcnt.i507, align 8, !dbg !2419
  br label %S_SvREFCNT_dec.exit513, !dbg !2420

if.else.i512:                                     ; preds = %if.then.i509
  call void @Perl_sv_free2(ptr noundef nonnull %94, i32 noundef %95) #17, !dbg !2421
  br label %S_SvREFCNT_dec.exit513

S_SvREFCNT_dec.exit513:                           ; preds = %S_SvREFCNT_dec.exit505, %if.then4.i511, %if.else.i512
  %96 = load ptr, ptr @PL_DBsub, align 8, !dbg !2422
  call void @llvm.dbg.value(metadata ptr %96, metadata !1967, metadata !DIExpression()) #17, !dbg !2423
  %cmp.not.i514 = icmp eq ptr %96, null, !dbg !2425
  br i1 %cmp.not.i514, label %S_SvREFCNT_dec.exit521, label %if.then.i517, !dbg !2426

if.then.i517:                                     ; preds = %S_SvREFCNT_dec.exit513
  %sv_refcnt.i515 = getelementptr inbounds %struct.sv, ptr %96, i64 0, i32 1, !dbg !2427
  %97 = load i32, ptr %sv_refcnt.i515, align 8, !dbg !2427
  call void @llvm.dbg.value(metadata i32 %97, metadata !1973, metadata !DIExpression()) #17, !dbg !2428
  %cmp1.i516 = icmp ugt i32 %97, 1, !dbg !2429
  br i1 %cmp1.i516, label %if.then4.i519, label %if.else.i520, !dbg !2430

if.then4.i519:                                    ; preds = %if.then.i517
  %sub.i518 = add i32 %97, -1, !dbg !2431
  store i32 %sub.i518, ptr %sv_refcnt.i515, align 8, !dbg !2432
  br label %S_SvREFCNT_dec.exit521, !dbg !2433

if.else.i520:                                     ; preds = %if.then.i517
  call void @Perl_sv_free2(ptr noundef nonnull %96, i32 noundef %97) #17, !dbg !2434
  br label %S_SvREFCNT_dec.exit521

S_SvREFCNT_dec.exit521:                           ; preds = %S_SvREFCNT_dec.exit513, %if.then4.i519, %if.else.i520
  store ptr null, ptr @PL_envgv, align 8, !dbg !2435
  store ptr null, ptr @PL_incgv, align 8, !dbg !2436
  store ptr null, ptr @PL_argvgv, align 8, !dbg !2437
  store ptr null, ptr @PL_replgv, align 8, !dbg !2438
  store ptr null, ptr @PL_DBgv, align 8, !dbg !2439
  store ptr null, ptr @PL_DBline, align 8, !dbg !2440
  store ptr null, ptr @PL_DBsub, align 8, !dbg !2441
  %98 = load ptr, ptr @PL_argvout_stack, align 8, !dbg !2442
  call void @llvm.dbg.value(metadata ptr %98, metadata !1967, metadata !DIExpression()) #17, !dbg !2443
  %cmp.not.i522 = icmp eq ptr %98, null, !dbg !2445
  br i1 %cmp.not.i522, label %S_SvREFCNT_dec.exit529, label %if.then.i525, !dbg !2446

if.then.i525:                                     ; preds = %S_SvREFCNT_dec.exit521
  %sv_refcnt.i523 = getelementptr inbounds %struct.sv, ptr %98, i64 0, i32 1, !dbg !2447
  %99 = load i32, ptr %sv_refcnt.i523, align 8, !dbg !2447
  call void @llvm.dbg.value(metadata i32 %99, metadata !1973, metadata !DIExpression()) #17, !dbg !2448
  %cmp1.i524 = icmp ugt i32 %99, 1, !dbg !2449
  br i1 %cmp1.i524, label %if.then4.i527, label %if.else.i528, !dbg !2450

if.then4.i527:                                    ; preds = %if.then.i525
  %sub.i526 = add i32 %99, -1, !dbg !2451
  store i32 %sub.i526, ptr %sv_refcnt.i523, align 8, !dbg !2452
  br label %S_SvREFCNT_dec.exit529, !dbg !2453

if.else.i528:                                     ; preds = %if.then.i525
  call void @Perl_sv_free2(ptr noundef nonnull %98, i32 noundef %99) #17, !dbg !2454
  br label %S_SvREFCNT_dec.exit529

S_SvREFCNT_dec.exit529:                           ; preds = %S_SvREFCNT_dec.exit521, %if.then4.i527, %if.else.i528
  store ptr null, ptr @PL_argvout_stack, align 8, !dbg !2455
  %100 = load ptr, ptr @PL_modglobal, align 8, !dbg !2456
  call void @llvm.dbg.value(metadata ptr %100, metadata !1967, metadata !DIExpression()) #17, !dbg !2457
  %cmp.not.i530 = icmp eq ptr %100, null, !dbg !2459
  br i1 %cmp.not.i530, label %S_SvREFCNT_dec.exit537, label %if.then.i533, !dbg !2460

if.then.i533:                                     ; preds = %S_SvREFCNT_dec.exit529
  %sv_refcnt.i531 = getelementptr inbounds %struct.sv, ptr %100, i64 0, i32 1, !dbg !2461
  %101 = load i32, ptr %sv_refcnt.i531, align 8, !dbg !2461
  call void @llvm.dbg.value(metadata i32 %101, metadata !1973, metadata !DIExpression()) #17, !dbg !2462
  %cmp1.i532 = icmp ugt i32 %101, 1, !dbg !2463
  br i1 %cmp1.i532, label %if.then4.i535, label %if.else.i536, !dbg !2464

if.then4.i535:                                    ; preds = %if.then.i533
  %sub.i534 = add i32 %101, -1, !dbg !2465
  store i32 %sub.i534, ptr %sv_refcnt.i531, align 8, !dbg !2466
  br label %S_SvREFCNT_dec.exit537, !dbg !2467

if.else.i536:                                     ; preds = %if.then.i533
  call void @Perl_sv_free2(ptr noundef nonnull %100, i32 noundef %101) #17, !dbg !2468
  br label %S_SvREFCNT_dec.exit537

S_SvREFCNT_dec.exit537:                           ; preds = %S_SvREFCNT_dec.exit529, %if.then4.i535, %if.else.i536
  store ptr null, ptr @PL_modglobal, align 8, !dbg !2469
  %102 = load ptr, ptr @PL_preambleav, align 8, !dbg !2470
  call void @llvm.dbg.value(metadata ptr %102, metadata !1967, metadata !DIExpression()) #17, !dbg !2471
  %cmp.not.i538 = icmp eq ptr %102, null, !dbg !2473
  br i1 %cmp.not.i538, label %S_SvREFCNT_dec.exit545, label %if.then.i541, !dbg !2474

if.then.i541:                                     ; preds = %S_SvREFCNT_dec.exit537
  %sv_refcnt.i539 = getelementptr inbounds %struct.sv, ptr %102, i64 0, i32 1, !dbg !2475
  %103 = load i32, ptr %sv_refcnt.i539, align 8, !dbg !2475
  call void @llvm.dbg.value(metadata i32 %103, metadata !1973, metadata !DIExpression()) #17, !dbg !2476
  %cmp1.i540 = icmp ugt i32 %103, 1, !dbg !2477
  br i1 %cmp1.i540, label %if.then4.i543, label %if.else.i544, !dbg !2478

if.then4.i543:                                    ; preds = %if.then.i541
  %sub.i542 = add i32 %103, -1, !dbg !2479
  store i32 %sub.i542, ptr %sv_refcnt.i539, align 8, !dbg !2480
  br label %S_SvREFCNT_dec.exit545, !dbg !2481

if.else.i544:                                     ; preds = %if.then.i541
  call void @Perl_sv_free2(ptr noundef nonnull %102, i32 noundef %103) #17, !dbg !2482
  br label %S_SvREFCNT_dec.exit545

S_SvREFCNT_dec.exit545:                           ; preds = %S_SvREFCNT_dec.exit537, %if.then4.i543, %if.else.i544
  store ptr null, ptr @PL_preambleav, align 8, !dbg !2483
  %104 = load ptr, ptr @PL_subname, align 8, !dbg !2484
  call void @llvm.dbg.value(metadata ptr %104, metadata !1967, metadata !DIExpression()) #17, !dbg !2485
  %cmp.not.i546 = icmp eq ptr %104, null, !dbg !2487
  br i1 %cmp.not.i546, label %S_SvREFCNT_dec.exit553, label %if.then.i549, !dbg !2488

if.then.i549:                                     ; preds = %S_SvREFCNT_dec.exit545
  %sv_refcnt.i547 = getelementptr inbounds %struct.sv, ptr %104, i64 0, i32 1, !dbg !2489
  %105 = load i32, ptr %sv_refcnt.i547, align 8, !dbg !2489
  call void @llvm.dbg.value(metadata i32 %105, metadata !1973, metadata !DIExpression()) #17, !dbg !2490
  %cmp1.i548 = icmp ugt i32 %105, 1, !dbg !2491
  br i1 %cmp1.i548, label %if.then4.i551, label %if.else.i552, !dbg !2492

if.then4.i551:                                    ; preds = %if.then.i549
  %sub.i550 = add i32 %105, -1, !dbg !2493
  store i32 %sub.i550, ptr %sv_refcnt.i547, align 8, !dbg !2494
  br label %S_SvREFCNT_dec.exit553, !dbg !2495

if.else.i552:                                     ; preds = %if.then.i549
  call void @Perl_sv_free2(ptr noundef nonnull %104, i32 noundef %105) #17, !dbg !2496
  br label %S_SvREFCNT_dec.exit553

S_SvREFCNT_dec.exit553:                           ; preds = %S_SvREFCNT_dec.exit545, %if.then4.i551, %if.else.i552
  store ptr null, ptr @PL_subname, align 8, !dbg !2497
  %106 = load ptr, ptr @PL_toptarget, align 8, !dbg !2498
  call void @llvm.dbg.value(metadata ptr %106, metadata !1967, metadata !DIExpression()) #17, !dbg !2499
  %cmp.not.i554 = icmp eq ptr %106, null, !dbg !2501
  br i1 %cmp.not.i554, label %S_SvREFCNT_dec.exit561, label %if.then.i557, !dbg !2502

if.then.i557:                                     ; preds = %S_SvREFCNT_dec.exit553
  %sv_refcnt.i555 = getelementptr inbounds %struct.sv, ptr %106, i64 0, i32 1, !dbg !2503
  %107 = load i32, ptr %sv_refcnt.i555, align 8, !dbg !2503
  call void @llvm.dbg.value(metadata i32 %107, metadata !1973, metadata !DIExpression()) #17, !dbg !2504
  %cmp1.i556 = icmp ugt i32 %107, 1, !dbg !2505
  br i1 %cmp1.i556, label %if.then4.i559, label %if.else.i560, !dbg !2506

if.then4.i559:                                    ; preds = %if.then.i557
  %sub.i558 = add i32 %107, -1, !dbg !2507
  store i32 %sub.i558, ptr %sv_refcnt.i555, align 8, !dbg !2508
  br label %S_SvREFCNT_dec.exit561, !dbg !2509

if.else.i560:                                     ; preds = %if.then.i557
  call void @Perl_sv_free2(ptr noundef nonnull %106, i32 noundef %107) #17, !dbg !2510
  br label %S_SvREFCNT_dec.exit561

S_SvREFCNT_dec.exit561:                           ; preds = %S_SvREFCNT_dec.exit553, %if.then4.i559, %if.else.i560
  store ptr null, ptr @PL_toptarget, align 8, !dbg !2511
  %108 = load ptr, ptr @PL_bodytarget, align 8, !dbg !2512
  call void @llvm.dbg.value(metadata ptr %108, metadata !1967, metadata !DIExpression()) #17, !dbg !2513
  %cmp.not.i562 = icmp eq ptr %108, null, !dbg !2515
  br i1 %cmp.not.i562, label %S_SvREFCNT_dec.exit569, label %if.then.i565, !dbg !2516

if.then.i565:                                     ; preds = %S_SvREFCNT_dec.exit561
  %sv_refcnt.i563 = getelementptr inbounds %struct.sv, ptr %108, i64 0, i32 1, !dbg !2517
  %109 = load i32, ptr %sv_refcnt.i563, align 8, !dbg !2517
  call void @llvm.dbg.value(metadata i32 %109, metadata !1973, metadata !DIExpression()) #17, !dbg !2518
  %cmp1.i564 = icmp ugt i32 %109, 1, !dbg !2519
  br i1 %cmp1.i564, label %if.then4.i567, label %if.else.i568, !dbg !2520

if.then4.i567:                                    ; preds = %if.then.i565
  %sub.i566 = add i32 %109, -1, !dbg !2521
  store i32 %sub.i566, ptr %sv_refcnt.i563, align 8, !dbg !2522
  br label %S_SvREFCNT_dec.exit569, !dbg !2523

if.else.i568:                                     ; preds = %if.then.i565
  call void @Perl_sv_free2(ptr noundef nonnull %108, i32 noundef %109) #17, !dbg !2524
  br label %S_SvREFCNT_dec.exit569

S_SvREFCNT_dec.exit569:                           ; preds = %S_SvREFCNT_dec.exit561, %if.then4.i567, %if.else.i568
  store ptr null, ptr @PL_bodytarget, align 8, !dbg !2525
  store ptr null, ptr @PL_formtarget, align 8, !dbg !2526
  call void @llvm.dbg.value(metadata i32 0, metadata !1640, metadata !DIExpression()), !dbg !1915
  br label %for.body68, !dbg !2527

for.body68:                                       ; preds = %S_SvREFCNT_dec.exit569, %S_SvREFCNT_dec.exit577
  %indvars.iv792 = phi i64 [ 0, %S_SvREFCNT_dec.exit569 ], [ %indvars.iv.next793, %S_SvREFCNT_dec.exit577 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv792, metadata !1640, metadata !DIExpression()), !dbg !1915
  %arrayidx70 = getelementptr inbounds [10 x ptr], ptr @PL_utf8_swash_ptrs, i64 0, i64 %indvars.iv792, !dbg !2529
  %110 = load ptr, ptr %arrayidx70, align 8, !dbg !2529
  call void @llvm.dbg.value(metadata ptr %110, metadata !1967, metadata !DIExpression()) #17, !dbg !2532
  %cmp.not.i570 = icmp eq ptr %110, null, !dbg !2534
  br i1 %cmp.not.i570, label %S_SvREFCNT_dec.exit577, label %if.then.i573, !dbg !2535

if.then.i573:                                     ; preds = %for.body68
  %sv_refcnt.i571 = getelementptr inbounds %struct.sv, ptr %110, i64 0, i32 1, !dbg !2536
  %111 = load i32, ptr %sv_refcnt.i571, align 8, !dbg !2536
  call void @llvm.dbg.value(metadata i32 %111, metadata !1973, metadata !DIExpression()) #17, !dbg !2537
  %cmp1.i572 = icmp ugt i32 %111, 1, !dbg !2538
  br i1 %cmp1.i572, label %if.then4.i575, label %if.else.i576, !dbg !2539

if.then4.i575:                                    ; preds = %if.then.i573
  %sub.i574 = add i32 %111, -1, !dbg !2540
  store i32 %sub.i574, ptr %sv_refcnt.i571, align 8, !dbg !2541
  br label %S_SvREFCNT_dec.exit577, !dbg !2542

if.else.i576:                                     ; preds = %if.then.i573
  call void @Perl_sv_free2(ptr noundef nonnull %110, i32 noundef %111) #17, !dbg !2543
  br label %S_SvREFCNT_dec.exit577

S_SvREFCNT_dec.exit577:                           ; preds = %for.body68, %if.then4.i575, %if.else.i576
  store ptr null, ptr %arrayidx70, align 8, !dbg !2544
  %indvars.iv.next793 = add nuw nsw i64 %indvars.iv792, 1, !dbg !2545
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next793, metadata !1640, metadata !DIExpression()), !dbg !1915
  %exitcond.not = icmp eq i64 %indvars.iv.next793, 10, !dbg !2546
  br i1 %exitcond.not, label %for.end75, label %for.body68, !dbg !2527, !llvm.loop !2547

for.end75:                                        ; preds = %S_SvREFCNT_dec.exit577
  %112 = load ptr, ptr @PL_utf8_mark, align 8, !dbg !2549
  call void @llvm.dbg.value(metadata ptr %112, metadata !1967, metadata !DIExpression()) #17, !dbg !2550
  %cmp.not.i578 = icmp eq ptr %112, null, !dbg !2552
  br i1 %cmp.not.i578, label %S_SvREFCNT_dec.exit585, label %if.then.i581, !dbg !2553

if.then.i581:                                     ; preds = %for.end75
  %sv_refcnt.i579 = getelementptr inbounds %struct.sv, ptr %112, i64 0, i32 1, !dbg !2554
  %113 = load i32, ptr %sv_refcnt.i579, align 8, !dbg !2554
  call void @llvm.dbg.value(metadata i32 %113, metadata !1973, metadata !DIExpression()) #17, !dbg !2555
  %cmp1.i580 = icmp ugt i32 %113, 1, !dbg !2556
  br i1 %cmp1.i580, label %if.then4.i583, label %if.else.i584, !dbg !2557

if.then4.i583:                                    ; preds = %if.then.i581
  %sub.i582 = add i32 %113, -1, !dbg !2558
  store i32 %sub.i582, ptr %sv_refcnt.i579, align 8, !dbg !2559
  br label %S_SvREFCNT_dec.exit585, !dbg !2560

if.else.i584:                                     ; preds = %if.then.i581
  call void @Perl_sv_free2(ptr noundef nonnull %112, i32 noundef %113) #17, !dbg !2561
  br label %S_SvREFCNT_dec.exit585

S_SvREFCNT_dec.exit585:                           ; preds = %for.end75, %if.then4.i583, %if.else.i584
  %114 = load ptr, ptr @PL_utf8_toupper, align 8, !dbg !2562
  call void @llvm.dbg.value(metadata ptr %114, metadata !1967, metadata !DIExpression()) #17, !dbg !2563
  %cmp.not.i586 = icmp eq ptr %114, null, !dbg !2565
  br i1 %cmp.not.i586, label %S_SvREFCNT_dec.exit593, label %if.then.i589, !dbg !2566

if.then.i589:                                     ; preds = %S_SvREFCNT_dec.exit585
  %sv_refcnt.i587 = getelementptr inbounds %struct.sv, ptr %114, i64 0, i32 1, !dbg !2567
  %115 = load i32, ptr %sv_refcnt.i587, align 8, !dbg !2567
  call void @llvm.dbg.value(metadata i32 %115, metadata !1973, metadata !DIExpression()) #17, !dbg !2568
  %cmp1.i588 = icmp ugt i32 %115, 1, !dbg !2569
  br i1 %cmp1.i588, label %if.then4.i591, label %if.else.i592, !dbg !2570

if.then4.i591:                                    ; preds = %if.then.i589
  %sub.i590 = add i32 %115, -1, !dbg !2571
  store i32 %sub.i590, ptr %sv_refcnt.i587, align 8, !dbg !2572
  br label %S_SvREFCNT_dec.exit593, !dbg !2573

if.else.i592:                                     ; preds = %if.then.i589
  call void @Perl_sv_free2(ptr noundef nonnull %114, i32 noundef %115) #17, !dbg !2574
  br label %S_SvREFCNT_dec.exit593

S_SvREFCNT_dec.exit593:                           ; preds = %S_SvREFCNT_dec.exit585, %if.then4.i591, %if.else.i592
  %116 = load ptr, ptr @PL_utf8_totitle, align 8, !dbg !2575
  call void @llvm.dbg.value(metadata ptr %116, metadata !1967, metadata !DIExpression()) #17, !dbg !2576
  %cmp.not.i594 = icmp eq ptr %116, null, !dbg !2578
  br i1 %cmp.not.i594, label %S_SvREFCNT_dec.exit601, label %if.then.i597, !dbg !2579

if.then.i597:                                     ; preds = %S_SvREFCNT_dec.exit593
  %sv_refcnt.i595 = getelementptr inbounds %struct.sv, ptr %116, i64 0, i32 1, !dbg !2580
  %117 = load i32, ptr %sv_refcnt.i595, align 8, !dbg !2580
  call void @llvm.dbg.value(metadata i32 %117, metadata !1973, metadata !DIExpression()) #17, !dbg !2581
  %cmp1.i596 = icmp ugt i32 %117, 1, !dbg !2582
  br i1 %cmp1.i596, label %if.then4.i599, label %if.else.i600, !dbg !2583

if.then4.i599:                                    ; preds = %if.then.i597
  %sub.i598 = add i32 %117, -1, !dbg !2584
  store i32 %sub.i598, ptr %sv_refcnt.i595, align 8, !dbg !2585
  br label %S_SvREFCNT_dec.exit601, !dbg !2586

if.else.i600:                                     ; preds = %if.then.i597
  call void @Perl_sv_free2(ptr noundef nonnull %116, i32 noundef %117) #17, !dbg !2587
  br label %S_SvREFCNT_dec.exit601

S_SvREFCNT_dec.exit601:                           ; preds = %S_SvREFCNT_dec.exit593, %if.then4.i599, %if.else.i600
  %118 = load ptr, ptr @PL_utf8_tolower, align 8, !dbg !2588
  call void @llvm.dbg.value(metadata ptr %118, metadata !1967, metadata !DIExpression()) #17, !dbg !2589
  %cmp.not.i602 = icmp eq ptr %118, null, !dbg !2591
  br i1 %cmp.not.i602, label %S_SvREFCNT_dec.exit609, label %if.then.i605, !dbg !2592

if.then.i605:                                     ; preds = %S_SvREFCNT_dec.exit601
  %sv_refcnt.i603 = getelementptr inbounds %struct.sv, ptr %118, i64 0, i32 1, !dbg !2593
  %119 = load i32, ptr %sv_refcnt.i603, align 8, !dbg !2593
  call void @llvm.dbg.value(metadata i32 %119, metadata !1973, metadata !DIExpression()) #17, !dbg !2594
  %cmp1.i604 = icmp ugt i32 %119, 1, !dbg !2595
  br i1 %cmp1.i604, label %if.then4.i607, label %if.else.i608, !dbg !2596

if.then4.i607:                                    ; preds = %if.then.i605
  %sub.i606 = add i32 %119, -1, !dbg !2597
  store i32 %sub.i606, ptr %sv_refcnt.i603, align 8, !dbg !2598
  br label %S_SvREFCNT_dec.exit609, !dbg !2599

if.else.i608:                                     ; preds = %if.then.i605
  call void @Perl_sv_free2(ptr noundef nonnull %118, i32 noundef %119) #17, !dbg !2600
  br label %S_SvREFCNT_dec.exit609

S_SvREFCNT_dec.exit609:                           ; preds = %S_SvREFCNT_dec.exit601, %if.then4.i607, %if.else.i608
  %120 = load ptr, ptr @PL_utf8_tofold, align 8, !dbg !2601
  call void @llvm.dbg.value(metadata ptr %120, metadata !1967, metadata !DIExpression()) #17, !dbg !2602
  %cmp.not.i610 = icmp eq ptr %120, null, !dbg !2604
  br i1 %cmp.not.i610, label %S_SvREFCNT_dec.exit617, label %if.then.i613, !dbg !2605

if.then.i613:                                     ; preds = %S_SvREFCNT_dec.exit609
  %sv_refcnt.i611 = getelementptr inbounds %struct.sv, ptr %120, i64 0, i32 1, !dbg !2606
  %121 = load i32, ptr %sv_refcnt.i611, align 8, !dbg !2606
  call void @llvm.dbg.value(metadata i32 %121, metadata !1973, metadata !DIExpression()) #17, !dbg !2607
  %cmp1.i612 = icmp ugt i32 %121, 1, !dbg !2608
  br i1 %cmp1.i612, label %if.then4.i615, label %if.else.i616, !dbg !2609

if.then4.i615:                                    ; preds = %if.then.i613
  %sub.i614 = add i32 %121, -1, !dbg !2610
  store i32 %sub.i614, ptr %sv_refcnt.i611, align 8, !dbg !2611
  br label %S_SvREFCNT_dec.exit617, !dbg !2612

if.else.i616:                                     ; preds = %if.then.i613
  call void @Perl_sv_free2(ptr noundef nonnull %120, i32 noundef %121) #17, !dbg !2613
  br label %S_SvREFCNT_dec.exit617

S_SvREFCNT_dec.exit617:                           ; preds = %S_SvREFCNT_dec.exit609, %if.then4.i615, %if.else.i616
  %122 = load ptr, ptr @PL_utf8_idstart, align 8, !dbg !2614
  call void @llvm.dbg.value(metadata ptr %122, metadata !1967, metadata !DIExpression()) #17, !dbg !2615
  %cmp.not.i618 = icmp eq ptr %122, null, !dbg !2617
  br i1 %cmp.not.i618, label %S_SvREFCNT_dec.exit625, label %if.then.i621, !dbg !2618

if.then.i621:                                     ; preds = %S_SvREFCNT_dec.exit617
  %sv_refcnt.i619 = getelementptr inbounds %struct.sv, ptr %122, i64 0, i32 1, !dbg !2619
  %123 = load i32, ptr %sv_refcnt.i619, align 8, !dbg !2619
  call void @llvm.dbg.value(metadata i32 %123, metadata !1973, metadata !DIExpression()) #17, !dbg !2620
  %cmp1.i620 = icmp ugt i32 %123, 1, !dbg !2621
  br i1 %cmp1.i620, label %if.then4.i623, label %if.else.i624, !dbg !2622

if.then4.i623:                                    ; preds = %if.then.i621
  %sub.i622 = add i32 %123, -1, !dbg !2623
  store i32 %sub.i622, ptr %sv_refcnt.i619, align 8, !dbg !2624
  br label %S_SvREFCNT_dec.exit625, !dbg !2625

if.else.i624:                                     ; preds = %if.then.i621
  call void @Perl_sv_free2(ptr noundef nonnull %122, i32 noundef %123) #17, !dbg !2626
  br label %S_SvREFCNT_dec.exit625

S_SvREFCNT_dec.exit625:                           ; preds = %S_SvREFCNT_dec.exit617, %if.then4.i623, %if.else.i624
  %124 = load ptr, ptr @PL_utf8_idcont, align 8, !dbg !2627
  call void @llvm.dbg.value(metadata ptr %124, metadata !1967, metadata !DIExpression()) #17, !dbg !2628
  %cmp.not.i626 = icmp eq ptr %124, null, !dbg !2630
  br i1 %cmp.not.i626, label %S_SvREFCNT_dec.exit633, label %if.then.i629, !dbg !2631

if.then.i629:                                     ; preds = %S_SvREFCNT_dec.exit625
  %sv_refcnt.i627 = getelementptr inbounds %struct.sv, ptr %124, i64 0, i32 1, !dbg !2632
  %125 = load i32, ptr %sv_refcnt.i627, align 8, !dbg !2632
  call void @llvm.dbg.value(metadata i32 %125, metadata !1973, metadata !DIExpression()) #17, !dbg !2633
  %cmp1.i628 = icmp ugt i32 %125, 1, !dbg !2634
  br i1 %cmp1.i628, label %if.then4.i631, label %if.else.i632, !dbg !2635

if.then4.i631:                                    ; preds = %if.then.i629
  %sub.i630 = add i32 %125, -1, !dbg !2636
  store i32 %sub.i630, ptr %sv_refcnt.i627, align 8, !dbg !2637
  br label %S_SvREFCNT_dec.exit633, !dbg !2638

if.else.i632:                                     ; preds = %if.then.i629
  call void @Perl_sv_free2(ptr noundef nonnull %124, i32 noundef %125) #17, !dbg !2639
  br label %S_SvREFCNT_dec.exit633

S_SvREFCNT_dec.exit633:                           ; preds = %S_SvREFCNT_dec.exit625, %if.then4.i631, %if.else.i632
  %126 = load ptr, ptr @PL_utf8_foldable, align 8, !dbg !2640
  call void @llvm.dbg.value(metadata ptr %126, metadata !1967, metadata !DIExpression()) #17, !dbg !2641
  %cmp.not.i634 = icmp eq ptr %126, null, !dbg !2643
  br i1 %cmp.not.i634, label %S_SvREFCNT_dec.exit641, label %if.then.i637, !dbg !2644

if.then.i637:                                     ; preds = %S_SvREFCNT_dec.exit633
  %sv_refcnt.i635 = getelementptr inbounds %struct.sv, ptr %126, i64 0, i32 1, !dbg !2645
  %127 = load i32, ptr %sv_refcnt.i635, align 8, !dbg !2645
  call void @llvm.dbg.value(metadata i32 %127, metadata !1973, metadata !DIExpression()) #17, !dbg !2646
  %cmp1.i636 = icmp ugt i32 %127, 1, !dbg !2647
  br i1 %cmp1.i636, label %if.then4.i639, label %if.else.i640, !dbg !2648

if.then4.i639:                                    ; preds = %if.then.i637
  %sub.i638 = add i32 %127, -1, !dbg !2649
  store i32 %sub.i638, ptr %sv_refcnt.i635, align 8, !dbg !2650
  br label %S_SvREFCNT_dec.exit641, !dbg !2651

if.else.i640:                                     ; preds = %if.then.i637
  call void @Perl_sv_free2(ptr noundef nonnull %126, i32 noundef %127) #17, !dbg !2652
  br label %S_SvREFCNT_dec.exit641

S_SvREFCNT_dec.exit641:                           ; preds = %S_SvREFCNT_dec.exit633, %if.then4.i639, %if.else.i640
  %128 = load ptr, ptr @PL_utf8_foldclosures, align 8, !dbg !2653
  call void @llvm.dbg.value(metadata ptr %128, metadata !1967, metadata !DIExpression()) #17, !dbg !2654
  %cmp.not.i642 = icmp eq ptr %128, null, !dbg !2656
  br i1 %cmp.not.i642, label %S_SvREFCNT_dec.exit649, label %if.then.i645, !dbg !2657

if.then.i645:                                     ; preds = %S_SvREFCNT_dec.exit641
  %sv_refcnt.i643 = getelementptr inbounds %struct.sv, ptr %128, i64 0, i32 1, !dbg !2658
  %129 = load i32, ptr %sv_refcnt.i643, align 8, !dbg !2658
  call void @llvm.dbg.value(metadata i32 %129, metadata !1973, metadata !DIExpression()) #17, !dbg !2659
  %cmp1.i644 = icmp ugt i32 %129, 1, !dbg !2660
  br i1 %cmp1.i644, label %if.then4.i647, label %if.else.i648, !dbg !2661

if.then4.i647:                                    ; preds = %if.then.i645
  %sub.i646 = add i32 %129, -1, !dbg !2662
  store i32 %sub.i646, ptr %sv_refcnt.i643, align 8, !dbg !2663
  br label %S_SvREFCNT_dec.exit649, !dbg !2664

if.else.i648:                                     ; preds = %if.then.i645
  call void @Perl_sv_free2(ptr noundef nonnull %128, i32 noundef %129) #17, !dbg !2665
  br label %S_SvREFCNT_dec.exit649

S_SvREFCNT_dec.exit649:                           ; preds = %S_SvREFCNT_dec.exit641, %if.then4.i647, %if.else.i648
  %130 = load ptr, ptr @PL_AboveLatin1, align 8, !dbg !2666
  call void @llvm.dbg.value(metadata ptr %130, metadata !1967, metadata !DIExpression()) #17, !dbg !2667
  %cmp.not.i650 = icmp eq ptr %130, null, !dbg !2669
  br i1 %cmp.not.i650, label %S_SvREFCNT_dec.exit657, label %if.then.i653, !dbg !2670

if.then.i653:                                     ; preds = %S_SvREFCNT_dec.exit649
  %sv_refcnt.i651 = getelementptr inbounds %struct.sv, ptr %130, i64 0, i32 1, !dbg !2671
  %131 = load i32, ptr %sv_refcnt.i651, align 8, !dbg !2671
  call void @llvm.dbg.value(metadata i32 %131, metadata !1973, metadata !DIExpression()) #17, !dbg !2672
  %cmp1.i652 = icmp ugt i32 %131, 1, !dbg !2673
  br i1 %cmp1.i652, label %if.then4.i655, label %if.else.i656, !dbg !2674

if.then4.i655:                                    ; preds = %if.then.i653
  %sub.i654 = add i32 %131, -1, !dbg !2675
  store i32 %sub.i654, ptr %sv_refcnt.i651, align 8, !dbg !2676
  br label %S_SvREFCNT_dec.exit657, !dbg !2677

if.else.i656:                                     ; preds = %if.then.i653
  call void @Perl_sv_free2(ptr noundef nonnull %130, i32 noundef %131) #17, !dbg !2678
  br label %S_SvREFCNT_dec.exit657

S_SvREFCNT_dec.exit657:                           ; preds = %S_SvREFCNT_dec.exit649, %if.then4.i655, %if.else.i656
  %132 = load ptr, ptr @PL_InBitmap, align 8, !dbg !2679
  call void @llvm.dbg.value(metadata ptr %132, metadata !1967, metadata !DIExpression()) #17, !dbg !2680
  %cmp.not.i658 = icmp eq ptr %132, null, !dbg !2682
  br i1 %cmp.not.i658, label %S_SvREFCNT_dec.exit665, label %if.then.i661, !dbg !2683

if.then.i661:                                     ; preds = %S_SvREFCNT_dec.exit657
  %sv_refcnt.i659 = getelementptr inbounds %struct.sv, ptr %132, i64 0, i32 1, !dbg !2684
  %133 = load i32, ptr %sv_refcnt.i659, align 8, !dbg !2684
  call void @llvm.dbg.value(metadata i32 %133, metadata !1973, metadata !DIExpression()) #17, !dbg !2685
  %cmp1.i660 = icmp ugt i32 %133, 1, !dbg !2686
  br i1 %cmp1.i660, label %if.then4.i663, label %if.else.i664, !dbg !2687

if.then4.i663:                                    ; preds = %if.then.i661
  %sub.i662 = add i32 %133, -1, !dbg !2688
  store i32 %sub.i662, ptr %sv_refcnt.i659, align 8, !dbg !2689
  br label %S_SvREFCNT_dec.exit665, !dbg !2690

if.else.i664:                                     ; preds = %if.then.i661
  call void @Perl_sv_free2(ptr noundef nonnull %132, i32 noundef %133) #17, !dbg !2691
  br label %S_SvREFCNT_dec.exit665

S_SvREFCNT_dec.exit665:                           ; preds = %S_SvREFCNT_dec.exit657, %if.then4.i663, %if.else.i664
  %134 = load ptr, ptr @PL_UpperLatin1, align 8, !dbg !2692
  call void @llvm.dbg.value(metadata ptr %134, metadata !1967, metadata !DIExpression()) #17, !dbg !2693
  %cmp.not.i666 = icmp eq ptr %134, null, !dbg !2695
  br i1 %cmp.not.i666, label %S_SvREFCNT_dec.exit673, label %if.then.i669, !dbg !2696

if.then.i669:                                     ; preds = %S_SvREFCNT_dec.exit665
  %sv_refcnt.i667 = getelementptr inbounds %struct.sv, ptr %134, i64 0, i32 1, !dbg !2697
  %135 = load i32, ptr %sv_refcnt.i667, align 8, !dbg !2697
  call void @llvm.dbg.value(metadata i32 %135, metadata !1973, metadata !DIExpression()) #17, !dbg !2698
  %cmp1.i668 = icmp ugt i32 %135, 1, !dbg !2699
  br i1 %cmp1.i668, label %if.then4.i671, label %if.else.i672, !dbg !2700

if.then4.i671:                                    ; preds = %if.then.i669
  %sub.i670 = add i32 %135, -1, !dbg !2701
  store i32 %sub.i670, ptr %sv_refcnt.i667, align 8, !dbg !2702
  br label %S_SvREFCNT_dec.exit673, !dbg !2703

if.else.i672:                                     ; preds = %if.then.i669
  call void @Perl_sv_free2(ptr noundef nonnull %134, i32 noundef %135) #17, !dbg !2704
  br label %S_SvREFCNT_dec.exit673

S_SvREFCNT_dec.exit673:                           ; preds = %S_SvREFCNT_dec.exit665, %if.then4.i671, %if.else.i672
  %136 = load ptr, ptr @PL_Latin1, align 8, !dbg !2705
  call void @llvm.dbg.value(metadata ptr %136, metadata !1967, metadata !DIExpression()) #17, !dbg !2706
  %cmp.not.i674 = icmp eq ptr %136, null, !dbg !2708
  br i1 %cmp.not.i674, label %S_SvREFCNT_dec.exit681, label %if.then.i677, !dbg !2709

if.then.i677:                                     ; preds = %S_SvREFCNT_dec.exit673
  %sv_refcnt.i675 = getelementptr inbounds %struct.sv, ptr %136, i64 0, i32 1, !dbg !2710
  %137 = load i32, ptr %sv_refcnt.i675, align 8, !dbg !2710
  call void @llvm.dbg.value(metadata i32 %137, metadata !1973, metadata !DIExpression()) #17, !dbg !2711
  %cmp1.i676 = icmp ugt i32 %137, 1, !dbg !2712
  br i1 %cmp1.i676, label %if.then4.i679, label %if.else.i680, !dbg !2713

if.then4.i679:                                    ; preds = %if.then.i677
  %sub.i678 = add i32 %137, -1, !dbg !2714
  store i32 %sub.i678, ptr %sv_refcnt.i675, align 8, !dbg !2715
  br label %S_SvREFCNT_dec.exit681, !dbg !2716

if.else.i680:                                     ; preds = %if.then.i677
  call void @Perl_sv_free2(ptr noundef nonnull %136, i32 noundef %137) #17, !dbg !2717
  br label %S_SvREFCNT_dec.exit681

S_SvREFCNT_dec.exit681:                           ; preds = %S_SvREFCNT_dec.exit673, %if.then4.i679, %if.else.i680
  %138 = load ptr, ptr @PL_NonL1NonFinalFold, align 8, !dbg !2718
  call void @llvm.dbg.value(metadata ptr %138, metadata !1967, metadata !DIExpression()) #17, !dbg !2719
  %cmp.not.i682 = icmp eq ptr %138, null, !dbg !2721
  br i1 %cmp.not.i682, label %S_SvREFCNT_dec.exit689, label %if.then.i685, !dbg !2722

if.then.i685:                                     ; preds = %S_SvREFCNT_dec.exit681
  %sv_refcnt.i683 = getelementptr inbounds %struct.sv, ptr %138, i64 0, i32 1, !dbg !2723
  %139 = load i32, ptr %sv_refcnt.i683, align 8, !dbg !2723
  call void @llvm.dbg.value(metadata i32 %139, metadata !1973, metadata !DIExpression()) #17, !dbg !2724
  %cmp1.i684 = icmp ugt i32 %139, 1, !dbg !2725
  br i1 %cmp1.i684, label %if.then4.i687, label %if.else.i688, !dbg !2726

if.then4.i687:                                    ; preds = %if.then.i685
  %sub.i686 = add i32 %139, -1, !dbg !2727
  store i32 %sub.i686, ptr %sv_refcnt.i683, align 8, !dbg !2728
  br label %S_SvREFCNT_dec.exit689, !dbg !2729

if.else.i688:                                     ; preds = %if.then.i685
  call void @Perl_sv_free2(ptr noundef nonnull %138, i32 noundef %139) #17, !dbg !2730
  br label %S_SvREFCNT_dec.exit689

S_SvREFCNT_dec.exit689:                           ; preds = %S_SvREFCNT_dec.exit681, %if.then4.i687, %if.else.i688
  %140 = load ptr, ptr @PL_HasMultiCharFold, align 8, !dbg !2731
  call void @llvm.dbg.value(metadata ptr %140, metadata !1967, metadata !DIExpression()) #17, !dbg !2732
  %cmp.not.i690 = icmp eq ptr %140, null, !dbg !2734
  br i1 %cmp.not.i690, label %S_SvREFCNT_dec.exit697, label %if.then.i693, !dbg !2735

if.then.i693:                                     ; preds = %S_SvREFCNT_dec.exit689
  %sv_refcnt.i691 = getelementptr inbounds %struct.sv, ptr %140, i64 0, i32 1, !dbg !2736
  %141 = load i32, ptr %sv_refcnt.i691, align 8, !dbg !2736
  call void @llvm.dbg.value(metadata i32 %141, metadata !1973, metadata !DIExpression()) #17, !dbg !2737
  %cmp1.i692 = icmp ugt i32 %141, 1, !dbg !2738
  br i1 %cmp1.i692, label %if.then4.i695, label %if.else.i696, !dbg !2739

if.then4.i695:                                    ; preds = %if.then.i693
  %sub.i694 = add i32 %141, -1, !dbg !2740
  store i32 %sub.i694, ptr %sv_refcnt.i691, align 8, !dbg !2741
  br label %S_SvREFCNT_dec.exit697, !dbg !2742

if.else.i696:                                     ; preds = %if.then.i693
  call void @Perl_sv_free2(ptr noundef nonnull %140, i32 noundef %141) #17, !dbg !2743
  br label %S_SvREFCNT_dec.exit697

S_SvREFCNT_dec.exit697:                           ; preds = %S_SvREFCNT_dec.exit689, %if.then4.i695, %if.else.i696
  store ptr null, ptr @PL_utf8_mark, align 8, !dbg !2744
  store ptr null, ptr @PL_utf8_toupper, align 8, !dbg !2745
  store ptr null, ptr @PL_utf8_totitle, align 8, !dbg !2746
  store ptr null, ptr @PL_utf8_tolower, align 8, !dbg !2747
  store ptr null, ptr @PL_utf8_tofold, align 8, !dbg !2748
  store ptr null, ptr @PL_utf8_idstart, align 8, !dbg !2749
  store ptr null, ptr @PL_utf8_idcont, align 8, !dbg !2750
  store ptr null, ptr @PL_utf8_foldclosures, align 8, !dbg !2751
  store ptr null, ptr @PL_AboveLatin1, align 8, !dbg !2752
  store ptr null, ptr @PL_InBitmap, align 8, !dbg !2753
  store ptr null, ptr @PL_HasMultiCharFold, align 8, !dbg !2754
  store ptr null, ptr @PL_Latin1, align 8, !dbg !2755
  store ptr null, ptr @PL_NonL1NonFinalFold, align 8, !dbg !2756
  store ptr null, ptr @PL_UpperLatin1, align 8, !dbg !2757
  call void @llvm.dbg.value(metadata i32 0, metadata !1640, metadata !DIExpression()), !dbg !1915
  br label %for.body79, !dbg !2758

for.body79:                                       ; preds = %S_SvREFCNT_dec.exit697, %S_SvREFCNT_dec.exit705
  %indvars.iv795 = phi i64 [ 0, %S_SvREFCNT_dec.exit697 ], [ %indvars.iv.next796, %S_SvREFCNT_dec.exit705 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv795, metadata !1640, metadata !DIExpression()), !dbg !1915
  %arrayidx81 = getelementptr inbounds [16 x ptr], ptr @PL_XPosix_ptrs, i64 0, i64 %indvars.iv795, !dbg !2760
  %142 = load ptr, ptr %arrayidx81, align 8, !dbg !2760
  call void @llvm.dbg.value(metadata ptr %142, metadata !1967, metadata !DIExpression()) #17, !dbg !2763
  %cmp.not.i698 = icmp eq ptr %142, null, !dbg !2765
  br i1 %cmp.not.i698, label %S_SvREFCNT_dec.exit705, label %if.then.i701, !dbg !2766

if.then.i701:                                     ; preds = %for.body79
  %sv_refcnt.i699 = getelementptr inbounds %struct.sv, ptr %142, i64 0, i32 1, !dbg !2767
  %143 = load i32, ptr %sv_refcnt.i699, align 8, !dbg !2767
  call void @llvm.dbg.value(metadata i32 %143, metadata !1973, metadata !DIExpression()) #17, !dbg !2768
  %cmp1.i700 = icmp ugt i32 %143, 1, !dbg !2769
  br i1 %cmp1.i700, label %if.then4.i703, label %if.else.i704, !dbg !2770

if.then4.i703:                                    ; preds = %if.then.i701
  %sub.i702 = add i32 %143, -1, !dbg !2771
  store i32 %sub.i702, ptr %sv_refcnt.i699, align 8, !dbg !2772
  br label %S_SvREFCNT_dec.exit705, !dbg !2773

if.else.i704:                                     ; preds = %if.then.i701
  call void @Perl_sv_free2(ptr noundef nonnull %142, i32 noundef %143) #17, !dbg !2774
  br label %S_SvREFCNT_dec.exit705

S_SvREFCNT_dec.exit705:                           ; preds = %for.body79, %if.then4.i703, %if.else.i704
  store ptr null, ptr %arrayidx81, align 8, !dbg !2775
  %indvars.iv.next796 = add nuw nsw i64 %indvars.iv795, 1, !dbg !2776
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next796, metadata !1640, metadata !DIExpression()), !dbg !1915
  %exitcond798.not = icmp eq i64 %indvars.iv.next796, 16, !dbg !2777
  br i1 %exitcond798.not, label %for.end86, label %for.body79, !dbg !2758, !llvm.loop !2778

for.end86:                                        ; preds = %S_SvREFCNT_dec.exit705
  store ptr null, ptr @PL_GCB_invlist, align 8, !dbg !2780
  store ptr null, ptr @PL_SB_invlist, align 8, !dbg !2781
  store ptr null, ptr @PL_WB_invlist, align 8, !dbg !2782
  %144 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !dbg !2783
  %magicptr = ptrtoint ptr %144 to i64, !dbg !2783
  switch i64 %magicptr, label %if.then94 [
    i64 16, label %if.end95
    i64 8, label %if.end95
    i64 0, label %if.end95
  ], !dbg !2783

if.then94:                                        ; preds = %for.end86
  call void @free(ptr noundef %144) #17, !dbg !2785
  br label %if.end95, !dbg !2785

if.end95:                                         ; preds = %for.end86, %for.end86, %for.end86, %if.then94
  store ptr null, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !dbg !2786
  %145 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !dbg !2787
  call void @Perl_refcounted_he_free(ptr noundef %145) #17, !dbg !2787
  store ptr null, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 13), align 8, !dbg !2788
  %146 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !dbg !2789
  call void @llvm.dbg.value(metadata ptr %146, metadata !1967, metadata !DIExpression()) #17, !dbg !2790
  %cmp.not.i706 = icmp eq ptr %146, null, !dbg !2792
  br i1 %cmp.not.i706, label %S_SvREFCNT_dec.exit713, label %if.then.i709, !dbg !2793

if.then.i709:                                     ; preds = %if.end95
  %sv_refcnt.i707 = getelementptr inbounds %struct.sv, ptr %146, i64 0, i32 1, !dbg !2794
  %147 = load i32, ptr %sv_refcnt.i707, align 8, !dbg !2794
  call void @llvm.dbg.value(metadata i32 %147, metadata !1973, metadata !DIExpression()) #17, !dbg !2795
  %cmp1.i708 = icmp ugt i32 %147, 1, !dbg !2796
  br i1 %cmp1.i708, label %if.then4.i711, label %if.else.i712, !dbg !2797

if.then4.i711:                                    ; preds = %if.then.i709
  %sub.i710 = add i32 %147, -1, !dbg !2798
  store i32 %sub.i710, ptr %sv_refcnt.i707, align 8, !dbg !2799
  br label %S_SvREFCNT_dec.exit713, !dbg !2800

if.else.i712:                                     ; preds = %if.then.i709
  call void @Perl_sv_free2(ptr noundef nonnull %146, i32 noundef %147) #17, !dbg !2801
  br label %S_SvREFCNT_dec.exit713

S_SvREFCNT_dec.exit713:                           ; preds = %if.end95, %if.then4.i711, %if.else.i712
  store ptr null, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 9), align 8, !dbg !2789
  %148 = load ptr, ptr @PL_defstash, align 8, !dbg !2802
  call void @llvm.dbg.value(metadata ptr %148, metadata !1639, metadata !DIExpression()), !dbg !1915
  %call96 = call ptr @Perl_hv_common_key_len(ptr noundef %148, ptr noundef nonnull @.str.4, i32 noundef 6, i32 noundef 68, ptr noundef null, i32 noundef 0) #17, !dbg !2803
  store ptr null, ptr @PL_defstash, align 8, !dbg !2804
  call void @llvm.dbg.value(metadata ptr %148, metadata !1967, metadata !DIExpression()) #17, !dbg !2805
  %cmp.not.i714 = icmp eq ptr %148, null, !dbg !2807
  br i1 %cmp.not.i714, label %S_SvREFCNT_dec.exit721, label %if.then.i717, !dbg !2808

if.then.i717:                                     ; preds = %S_SvREFCNT_dec.exit713
  %sv_refcnt.i715 = getelementptr inbounds %struct.sv, ptr %148, i64 0, i32 1, !dbg !2809
  %149 = load i32, ptr %sv_refcnt.i715, align 8, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %149, metadata !1973, metadata !DIExpression()) #17, !dbg !2810
  %cmp1.i716 = icmp ugt i32 %149, 1, !dbg !2811
  br i1 %cmp1.i716, label %if.then4.i719, label %if.else.i720, !dbg !2812

if.then4.i719:                                    ; preds = %if.then.i717
  %sub.i718 = add i32 %149, -1, !dbg !2813
  store i32 %sub.i718, ptr %sv_refcnt.i715, align 8, !dbg !2814
  br label %S_SvREFCNT_dec.exit721, !dbg !2815

if.else.i720:                                     ; preds = %if.then.i717
  call void @Perl_sv_free2(ptr noundef nonnull %148, i32 noundef %149) #17, !dbg !2816
  br label %S_SvREFCNT_dec.exit721

S_SvREFCNT_dec.exit721:                           ; preds = %S_SvREFCNT_dec.exit713, %if.then4.i719, %if.else.i720
  %150 = load ptr, ptr @PL_curstname, align 8, !dbg !2817
  call void @llvm.dbg.value(metadata ptr %150, metadata !1967, metadata !DIExpression()) #17, !dbg !2818
  %cmp.not.i722 = icmp eq ptr %150, null, !dbg !2820
  br i1 %cmp.not.i722, label %S_SvREFCNT_dec.exit729, label %if.then.i725, !dbg !2821

if.then.i725:                                     ; preds = %S_SvREFCNT_dec.exit721
  %sv_refcnt.i723 = getelementptr inbounds %struct.sv, ptr %150, i64 0, i32 1, !dbg !2822
  %151 = load i32, ptr %sv_refcnt.i723, align 8, !dbg !2822
  call void @llvm.dbg.value(metadata i32 %151, metadata !1973, metadata !DIExpression()) #17, !dbg !2823
  %cmp1.i724 = icmp ugt i32 %151, 1, !dbg !2824
  br i1 %cmp1.i724, label %if.then4.i727, label %if.else.i728, !dbg !2825

if.then4.i727:                                    ; preds = %if.then.i725
  %sub.i726 = add i32 %151, -1, !dbg !2826
  store i32 %sub.i726, ptr %sv_refcnt.i723, align 8, !dbg !2827
  br label %S_SvREFCNT_dec.exit729, !dbg !2828

if.else.i728:                                     ; preds = %if.then.i725
  call void @Perl_sv_free2(ptr noundef nonnull %150, i32 noundef %151) #17, !dbg !2829
  br label %S_SvREFCNT_dec.exit729

S_SvREFCNT_dec.exit729:                           ; preds = %S_SvREFCNT_dec.exit721, %if.then4.i727, %if.else.i728
  store ptr null, ptr @PL_curstname, align 8, !dbg !2830
  %152 = load ptr, ptr @PL_errors, align 8, !dbg !2831
  call void @llvm.dbg.value(metadata ptr %152, metadata !1967, metadata !DIExpression()) #17, !dbg !2832
  %cmp.not.i730 = icmp eq ptr %152, null, !dbg !2834
  br i1 %cmp.not.i730, label %S_SvREFCNT_dec.exit737, label %if.then.i733, !dbg !2835

if.then.i733:                                     ; preds = %S_SvREFCNT_dec.exit729
  %sv_refcnt.i731 = getelementptr inbounds %struct.sv, ptr %152, i64 0, i32 1, !dbg !2836
  %153 = load i32, ptr %sv_refcnt.i731, align 8, !dbg !2836
  call void @llvm.dbg.value(metadata i32 %153, metadata !1973, metadata !DIExpression()) #17, !dbg !2837
  %cmp1.i732 = icmp ugt i32 %153, 1, !dbg !2838
  br i1 %cmp1.i732, label %if.then4.i735, label %if.else.i736, !dbg !2839

if.then4.i735:                                    ; preds = %if.then.i733
  %sub.i734 = add i32 %153, -1, !dbg !2840
  store i32 %sub.i734, ptr %sv_refcnt.i731, align 8, !dbg !2841
  br label %S_SvREFCNT_dec.exit737, !dbg !2842

if.else.i736:                                     ; preds = %if.then.i733
  call void @Perl_sv_free2(ptr noundef nonnull %152, i32 noundef %153) #17, !dbg !2843
  br label %S_SvREFCNT_dec.exit737

S_SvREFCNT_dec.exit737:                           ; preds = %S_SvREFCNT_dec.exit729, %if.then4.i735, %if.else.i736
  store ptr null, ptr @PL_errors, align 8, !dbg !2844
  %154 = load ptr, ptr @PL_isarev, align 8, !dbg !2845
  call void @llvm.dbg.value(metadata ptr %154, metadata !1967, metadata !DIExpression()) #17, !dbg !2846
  %cmp.not.i738 = icmp eq ptr %154, null, !dbg !2848
  br i1 %cmp.not.i738, label %S_SvREFCNT_dec.exit745, label %if.then.i741, !dbg !2849

if.then.i741:                                     ; preds = %S_SvREFCNT_dec.exit737
  %sv_refcnt.i739 = getelementptr inbounds %struct.sv, ptr %154, i64 0, i32 1, !dbg !2850
  %155 = load i32, ptr %sv_refcnt.i739, align 8, !dbg !2850
  call void @llvm.dbg.value(metadata i32 %155, metadata !1973, metadata !DIExpression()) #17, !dbg !2851
  %cmp1.i740 = icmp ugt i32 %155, 1, !dbg !2852
  br i1 %cmp1.i740, label %if.then4.i743, label %if.else.i744, !dbg !2853

if.then4.i743:                                    ; preds = %if.then.i741
  %sub.i742 = add i32 %155, -1, !dbg !2854
  store i32 %sub.i742, ptr %sv_refcnt.i739, align 8, !dbg !2855
  br label %S_SvREFCNT_dec.exit745, !dbg !2856

if.else.i744:                                     ; preds = %if.then.i741
  call void @Perl_sv_free2(ptr noundef nonnull %154, i32 noundef %155) #17, !dbg !2857
  br label %S_SvREFCNT_dec.exit745

S_SvREFCNT_dec.exit745:                           ; preds = %S_SvREFCNT_dec.exit737, %if.then4.i743, %if.else.i744
  %156 = load i64, ptr @PL_tmps_ix, align 8, !dbg !2858
  %157 = load i64, ptr @PL_tmps_floor, align 8, !dbg !2858
  %cmp97 = icmp sgt i64 %156, %157, !dbg !2858
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !2860

if.then99:                                        ; preds = %S_SvREFCNT_dec.exit745
  call void @Perl_free_tmps() #17, !dbg !2858
  br label %if.end100, !dbg !2858

if.end100:                                        ; preds = %if.then99, %S_SvREFCNT_dec.exit745
  %destruct_level.0.destruct_level.0.destruct_level.0.299 = load volatile i8, ptr %destruct_level, align 1, !dbg !2861
  %cmp102 = icmp sgt i8 %destruct_level.0.destruct_level.0.destruct_level.0.299, 1, !dbg !2863
  br i1 %cmp102, label %if.then104, label %while.cond127.preheader, !dbg !2864

if.then104:                                       ; preds = %if.end100
  %158 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !2865
  %cmp105.not = icmp eq i32 %158, 0, !dbg !2868
  br i1 %cmp105.not, label %if.end109, label %if.then107, !dbg !2869

if.then107:                                       ; preds = %if.then104
  %conv108 = sext i32 %158 to i64, !dbg !2870
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.5, i64 noundef %conv108) #17, !dbg !2871
  br label %if.end109, !dbg !2871

if.end109:                                        ; preds = %if.then107, %if.then104
  %159 = load i32, ptr @PL_savestack_ix, align 4, !dbg !2872
  %cmp110.not = icmp eq i32 %159, 0, !dbg !2874
  br i1 %cmp110.not, label %if.end114, label %if.then112, !dbg !2875

if.then112:                                       ; preds = %if.end109
  %conv113 = sext i32 %159 to i64, !dbg !2876
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.6, i64 noundef %conv113) #17, !dbg !2877
  br label %if.end114, !dbg !2877

if.end114:                                        ; preds = %if.then112, %if.end109
  %160 = load i64, ptr @PL_tmps_floor, align 8, !dbg !2878
  %cmp115.not = icmp eq i64 %160, -1, !dbg !2880
  br i1 %cmp115.not, label %if.end118, label %if.then117, !dbg !2881

if.then117:                                       ; preds = %if.end114
  %add = add nuw nsw i64 %160, 1, !dbg !2882
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.7, i64 noundef %add) #17, !dbg !2883
  br label %if.end118, !dbg !2883

if.end118:                                        ; preds = %if.then117, %if.end114
  %161 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !2884
  %si_cxix = getelementptr inbounds %struct.stackinfo, ptr %161, i64 0, i32 4, !dbg !2884
  %162 = load i32, ptr %si_cxix, align 8, !dbg !2884
  %cmp119.not = icmp eq i32 %162, -1, !dbg !2886
  br i1 %cmp119.not, label %while.cond127.preheader, label %if.then121, !dbg !2887

if.then121:                                       ; preds = %if.end118
  %conv123 = sext i32 %162 to i64, !dbg !2888
  %add124 = add nsw i64 %conv123, 1, !dbg !2889
  call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 24, ptr noundef nonnull @.str.8, i64 noundef %add124) #17, !dbg !2890
  br label %while.cond127.preheader, !dbg !2890

while.cond127.preheader:                          ; preds = %if.end118, %if.then121, %if.end100
  br label %while.cond127, !dbg !2891

while.cond127:                                    ; preds = %while.cond127.preheader, %while.cond127
  %call128 = call i32 @Perl_sv_clean_all() #17, !dbg !2892
  %cmp129 = icmp sgt i32 %call128, 2, !dbg !2893
  br i1 %cmp129, label %while.cond127, label %if.then.i749, !dbg !2891, !llvm.loop !2894

if.then.i749:                                     ; preds = %while.cond127
  %163 = load ptr, ptr @PL_fdpid, align 8, !dbg !2896
  %sv_flags = getelementptr inbounds %struct.av, ptr %163, i64 0, i32 2, !dbg !2896
  %164 = load i32, ptr %sv_flags, align 4, !dbg !2896
  %and133 = and i32 %164, -1073741825, !dbg !2896
  store i32 %and133, ptr %sv_flags, align 4, !dbg !2896
  call void @llvm.dbg.value(metadata ptr %163, metadata !1967, metadata !DIExpression()) #17, !dbg !2897
  %sv_refcnt.i747 = getelementptr inbounds %struct.sv, ptr %163, i64 0, i32 1, !dbg !2899
  %165 = load i32, ptr %sv_refcnt.i747, align 8, !dbg !2899
  call void @llvm.dbg.value(metadata i32 %165, metadata !1973, metadata !DIExpression()) #17, !dbg !2900
  %cmp1.i748 = icmp ugt i32 %165, 1, !dbg !2901
  br i1 %cmp1.i748, label %if.then4.i751, label %if.else.i752, !dbg !2902

if.then4.i751:                                    ; preds = %if.then.i749
  %sub.i750 = add i32 %165, -1, !dbg !2903
  store i32 %sub.i750, ptr %sv_refcnt.i747, align 8, !dbg !2904
  br label %S_SvREFCNT_dec.exit753, !dbg !2905

if.else.i752:                                     ; preds = %if.then.i749
  call void @Perl_sv_free2(ptr noundef nonnull %163, i32 noundef %165) #17, !dbg !2906
  br label %S_SvREFCNT_dec.exit753

S_SvREFCNT_dec.exit753:                           ; preds = %if.then4.i751, %if.else.i752
  store ptr null, ptr @PL_fdpid, align 8, !dbg !2907
  call void @llvm.dbg.value(metadata i32 0, metadata !1640, metadata !DIExpression()), !dbg !1915
  br label %for.body137, !dbg !2908

for.body137:                                      ; preds = %S_SvREFCNT_dec.exit753, %S_SvREFCNT_dec.exit761
  %indvars.iv799 = phi i64 [ 0, %S_SvREFCNT_dec.exit753 ], [ %indvars.iv.next800, %S_SvREFCNT_dec.exit761 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv799, metadata !1640, metadata !DIExpression()), !dbg !1915
  %arrayidx139 = getelementptr inbounds [35 x ptr], ptr @PL_sv_consts, i64 0, i64 %indvars.iv799, !dbg !2910
  %166 = load ptr, ptr %arrayidx139, align 8, !dbg !2910
  call void @llvm.dbg.value(metadata ptr %166, metadata !1967, metadata !DIExpression()) #17, !dbg !2913
  %cmp.not.i754 = icmp eq ptr %166, null, !dbg !2915
  br i1 %cmp.not.i754, label %S_SvREFCNT_dec.exit761, label %if.then.i757, !dbg !2916

if.then.i757:                                     ; preds = %for.body137
  %sv_refcnt.i755 = getelementptr inbounds %struct.sv, ptr %166, i64 0, i32 1, !dbg !2917
  %167 = load i32, ptr %sv_refcnt.i755, align 8, !dbg !2917
  call void @llvm.dbg.value(metadata i32 %167, metadata !1973, metadata !DIExpression()) #17, !dbg !2918
  %cmp1.i756 = icmp ugt i32 %167, 1, !dbg !2919
  br i1 %cmp1.i756, label %if.then4.i759, label %if.else.i760, !dbg !2920

if.then4.i759:                                    ; preds = %if.then.i757
  %sub.i758 = add i32 %167, -1, !dbg !2921
  store i32 %sub.i758, ptr %sv_refcnt.i755, align 8, !dbg !2922
  br label %S_SvREFCNT_dec.exit761, !dbg !2923

if.else.i760:                                     ; preds = %if.then.i757
  call void @Perl_sv_free2(ptr noundef nonnull %166, i32 noundef %167) #17, !dbg !2924
  br label %S_SvREFCNT_dec.exit761

S_SvREFCNT_dec.exit761:                           ; preds = %for.body137, %if.then4.i759, %if.else.i760
  store ptr null, ptr %arrayidx139, align 8, !dbg !2925
  %indvars.iv.next800 = add nuw nsw i64 %indvars.iv799, 1, !dbg !2926
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next800, metadata !1640, metadata !DIExpression()), !dbg !1915
  %exitcond802.not = icmp eq i64 %indvars.iv.next800, 35, !dbg !2927
  br i1 %exitcond802.not, label %for.end144, label %for.body137, !dbg !2908, !llvm.loop !2928

for.end144:                                       ; preds = %S_SvREFCNT_dec.exit761
  call void @llvm.dbg.value(metadata i32 0, metadata !1675, metadata !DIExpression()), !dbg !2930
  %168 = load ptr, ptr @PL_strtab, align 8, !dbg !2931
  %169 = load ptr, ptr %168, align 8, !dbg !2931
  %xhv_max = getelementptr inbounds %struct.xpvhv, ptr %169, i64 0, i32 3, !dbg !2931
  %170 = load i64, ptr %xhv_max, align 8, !dbg !2931
  %conv146 = trunc i64 %170 to i32, !dbg !2931
  call void @llvm.dbg.value(metadata i32 %conv146, metadata !1677, metadata !DIExpression()), !dbg !2930
  %sv_u147 = getelementptr inbounds %struct.hv, ptr %168, i64 0, i32 3, !dbg !2932
  %171 = load ptr, ptr %sv_u147, align 8, !dbg !2932
  call void @llvm.dbg.value(metadata ptr %171, metadata !1678, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.value(metadata ptr undef, metadata !1682, metadata !DIExpression()), !dbg !2930
  br label %for.cond149.sink.split, !dbg !2933

for.cond149.sink.split:                           ; preds = %for.end144, %if.end163
  %arrayidx165.sink = phi ptr [ %arrayidx165, %if.end163 ], [ %171, %for.end144 ]
  %riter.0.ph = phi i32 [ %inc159, %if.end163 ], [ 0, %for.end144 ]
  %172 = load ptr, ptr %arrayidx165.sink, align 8, !dbg !2930
  br label %for.cond149.outer, !dbg !2934

for.cond149.outer:                                ; preds = %for.cond149.sink.split, %if.end156
  %hent.0.ph = phi ptr [ %172, %for.cond149.sink.split ], [ %173, %if.end156 ]
  %tobool150.not = icmp eq ptr %hent.0.ph, null
  br label %for.cond149, !dbg !2935

for.cond149:                                      ; preds = %for.cond149.outer, %land.lhs.true151
  call void @llvm.dbg.value(metadata ptr %hent.0.ph, metadata !1682, metadata !DIExpression()), !dbg !2930
  call void @llvm.dbg.value(metadata i32 %riter.0.ph, metadata !1675, metadata !DIExpression()), !dbg !2930
  br i1 %tobool150.not, label %if.then158, label %land.lhs.true151, !dbg !2936

land.lhs.true151:                                 ; preds = %for.cond149
  %call152 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 24) #17, !dbg !2937
  br i1 %call152, label %if.end156, label %for.cond149, !dbg !2938, !llvm.loop !2939

if.end156:                                        ; preds = %land.lhs.true151
  %173 = load ptr, ptr %hent.0.ph, align 8, !dbg !2941
  call void @llvm.dbg.value(metadata ptr %173, metadata !1683, metadata !DIExpression()), !dbg !2942
  %he_valu = getelementptr inbounds %struct.he, ptr %hent.0.ph, i64 0, i32 2, !dbg !2943
  %174 = load i64, ptr %he_valu, align 8, !dbg !2944
  %hent_hek = getelementptr inbounds %struct.he, ptr %hent.0.ph, i64 0, i32 1, !dbg !2945
  %175 = load ptr, ptr %hent_hek, align 8, !dbg !2945
  %hek_key = getelementptr inbounds %struct.hek, ptr %175, i64 0, i32 2, !dbg !2945
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 24, ptr noundef nonnull @.str.9, i64 noundef %174, ptr noundef nonnull %hek_key) #17, !dbg !2946
  call void @Perl_safesysfree(ptr noundef nonnull %hent.0.ph) #17, !dbg !2947
  call void @llvm.dbg.value(metadata ptr %173, metadata !1682, metadata !DIExpression()), !dbg !2930
  %tobool157.not = icmp eq ptr %173, null, !dbg !2948
  br i1 %tobool157.not, label %if.then158, label %for.cond149.outer, !dbg !2950, !llvm.loop !2939

if.then158:                                       ; preds = %if.end156, %for.cond149
  call void @llvm.dbg.value(metadata i32 %riter.0.ph, metadata !1675, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2930
  %cmp160.not = icmp slt i32 %riter.0.ph, %conv146, !dbg !2951
  br i1 %cmp160.not, label %if.end163, label %if.then.i765, !dbg !2954

if.end163:                                        ; preds = %if.then158
  %inc159 = add nuw nsw i32 %riter.0.ph, 1, !dbg !2955
  call void @llvm.dbg.value(metadata i32 %inc159, metadata !1675, metadata !DIExpression()), !dbg !2930
  %idxprom164 = zext i32 %inc159 to i64, !dbg !2956
  %arrayidx165 = getelementptr inbounds ptr, ptr %171, i64 %idxprom164, !dbg !2956
  call void @llvm.dbg.value(metadata ptr %172, metadata !1682, metadata !DIExpression()), !dbg !2930
  br label %for.cond149.sink.split, !dbg !2957, !llvm.loop !2939

if.then.i765:                                     ; preds = %if.then158
  call void @Perl_safesysfree(ptr noundef nonnull %171) #17, !dbg !2958
  %176 = load ptr, ptr @PL_strtab, align 8, !dbg !2959
  %sv_u168 = getelementptr inbounds %struct.hv, ptr %176, i64 0, i32 3, !dbg !2959
  store ptr null, ptr %sv_u168, align 8, !dbg !2960
  %177 = load ptr, ptr %176, align 8, !dbg !2961
  %xhv_keys = getelementptr inbounds %struct.xpvhv, ptr %177, i64 0, i32 2, !dbg !2961
  store i64 0, ptr %xhv_keys, align 8, !dbg !2962
  call void @llvm.dbg.value(metadata ptr %176, metadata !1967, metadata !DIExpression()) #17, !dbg !2963
  %sv_refcnt.i763 = getelementptr inbounds %struct.sv, ptr %176, i64 0, i32 1, !dbg !2965
  %178 = load i32, ptr %sv_refcnt.i763, align 8, !dbg !2965
  call void @llvm.dbg.value(metadata i32 %178, metadata !1973, metadata !DIExpression()) #17, !dbg !2966
  %cmp1.i764 = icmp ugt i32 %178, 1, !dbg !2967
  br i1 %cmp1.i764, label %if.then4.i767, label %if.else.i768, !dbg !2968

if.then4.i767:                                    ; preds = %if.then.i765
  %sub.i766 = add i32 %178, -1, !dbg !2969
  store i32 %sub.i766, ptr %sv_refcnt.i763, align 8, !dbg !2970
  br label %S_SvREFCNT_dec.exit769, !dbg !2971

if.else.i768:                                     ; preds = %if.then.i765
  call void @Perl_sv_free2(ptr noundef nonnull %176, i32 noundef %178) #17, !dbg !2972
  br label %S_SvREFCNT_dec.exit769

S_SvREFCNT_dec.exit769:                           ; preds = %if.then4.i767, %if.else.i768
  store i32 0, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_yes, i64 0, i32 1), align 8, !dbg !2973
  call void @Perl_sv_clear(ptr noundef nonnull @PL_sv_yes) #17, !dbg !2974
  store ptr null, ptr @PL_sv_yes, align 8, !dbg !2975
  store i32 0, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_yes, i64 0, i32 2), align 4, !dbg !2976
  store i32 0, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_no, i64 0, i32 1), align 8, !dbg !2977
  call void @Perl_sv_clear(ptr noundef nonnull @PL_sv_no) #17, !dbg !2978
  store ptr null, ptr @PL_sv_no, align 8, !dbg !2979
  store i32 0, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_no, i64 0, i32 2), align 4, !dbg !2980
  call void @llvm.dbg.value(metadata i32 0, metadata !1689, metadata !DIExpression()), !dbg !2981
  br label %for.body174, !dbg !2982

for.body174:                                      ; preds = %S_SvREFCNT_dec.exit769, %for.body174
  %indvars.iv803 = phi i64 [ 0, %S_SvREFCNT_dec.exit769 ], [ %indvars.iv.next804, %for.body174 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv803, metadata !1689, metadata !DIExpression()), !dbg !2981
  %arrayidx176 = getelementptr inbounds [3 x %struct.sv], ptr @PL_debug_pad, i64 0, i64 %indvars.iv803, !dbg !2984
  %sv_refcnt = getelementptr inbounds [3 x %struct.sv], ptr @PL_debug_pad, i64 0, i64 %indvars.iv803, i32 1, !dbg !2984
  store i32 0, ptr %sv_refcnt, align 8, !dbg !2987
  call void @Perl_sv_clear(ptr noundef nonnull %arrayidx176) #17, !dbg !2988
  store ptr null, ptr %arrayidx176, align 8, !dbg !2989
  %sv_flags184 = getelementptr inbounds [3 x %struct.sv], ptr @PL_debug_pad, i64 0, i64 %indvars.iv803, i32 2, !dbg !2990
  store i32 0, ptr %sv_flags184, align 4, !dbg !2991
  %indvars.iv.next804 = add nuw nsw i64 %indvars.iv803, 1, !dbg !2992
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next804, metadata !1689, metadata !DIExpression()), !dbg !2981
  %exitcond806.not = icmp eq i64 %indvars.iv.next804, 3, !dbg !2993
  br i1 %exitcond806.not, label %for.end187, label %for.body174, !dbg !2982, !llvm.loop !2994

for.end187:                                       ; preds = %for.body174
  %179 = load i64, ptr @PL_sv_count, align 8, !dbg !2996
  %cmp188.not = icmp eq i64 %179, 0, !dbg !2998
  br i1 %cmp188.not, label %if.end194, label %land.lhs.true190, !dbg !2999

land.lhs.true190:                                 ; preds = %for.end187
  %call191 = call zeroext i1 @Perl_ckwarn_d(i32 noundef 24) #17, !dbg !3000
  br i1 %call191, label %if.then193, label %if.end194, !dbg !3001

if.then193:                                       ; preds = %land.lhs.true190
  %180 = load i64, ptr @PL_sv_count, align 8, !dbg !3002
  call void (i32, ptr, ...) @Perl_warner(i32 noundef 24, ptr noundef nonnull @.str.10, i64 noundef %180) #17, !dbg !3003
  br label %if.end194, !dbg !3003

if.end194:                                        ; preds = %if.then193, %land.lhs.true190, %for.end187
  store i64 0, ptr @PL_sv_count, align 8, !dbg !3004
  call void @PerlIO_cleanup() #17, !dbg !3005
  store i32 0, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_undef, i64 0, i32 1), align 8, !dbg !3006
  %181 = load i32, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_undef, i64 0, i32 2), align 4, !dbg !3007
  %and195 = and i32 %181, -134283265, !dbg !3007
  store i32 %and195, ptr getelementptr inbounds (%struct.sv, ptr @PL_sv_undef, i64 0, i32 2), align 4, !dbg !3007
  %182 = load ptr, ptr @PL_origfilename, align 8, !dbg !3008
  call void @Perl_safesysfree(ptr noundef %182) #17, !dbg !3008
  store ptr null, ptr @PL_origfilename, align 8, !dbg !3009
  %183 = load ptr, ptr @PL_reg_curpm, align 8, !dbg !3010
  call void @Perl_safesysfree(ptr noundef %183) #17, !dbg !3010
  call void @Perl_free_tied_hv_pool() #17, !dbg !3011
  %184 = load ptr, ptr @PL_op_mask, align 8, !dbg !3012
  call void @Perl_safesysfree(ptr noundef %184) #17, !dbg !3012
  %185 = load ptr, ptr @PL_psig_name, align 8, !dbg !3013
  call void @Perl_safesysfree(ptr noundef %185) #17, !dbg !3013
  store ptr null, ptr @PL_psig_name, align 8, !dbg !3014
  store ptr null, ptr @PL_psig_ptr, align 8, !dbg !3015
  %186 = load ptr, ptr @PL_psig_pend, align 8, !dbg !3016
  call void @llvm.dbg.value(metadata ptr %186, metadata !1691, metadata !DIExpression()), !dbg !3017
  store ptr null, ptr @PL_psig_pend, align 8, !dbg !3018
  call void @Perl_safesysfree(ptr noundef %186) #17, !dbg !3019
  %PL_curstackinfo.promoted.i = load ptr, ptr @PL_curstackinfo, align 8
  %si_next7.i = getelementptr inbounds %struct.stackinfo, ptr %PL_curstackinfo.promoted.i, i64 0, i32 3, !dbg !3020
  %187 = load ptr, ptr %si_next7.i, align 8, !dbg !3020
  %tobool.not8.i = icmp eq ptr %187, null, !dbg !3185
  br i1 %tobool.not8.i, label %while.body4.i.preheader, label %while.body.i, !dbg !3185

while.body4.i.preheader:                          ; preds = %while.cond.while.cond2.preheader_crit_edge.i, %if.end194
  %.ph = phi ptr [ %PL_curstackinfo.promoted.i, %if.end194 ], [ %188, %while.cond.while.cond2.preheader_crit_edge.i ]
  br label %while.body4.i, !dbg !3186

while.cond.while.cond2.preheader_crit_edge.i:     ; preds = %while.body.i
  store ptr %188, ptr @PL_curstackinfo, align 8, !dbg !3187
  br label %while.body4.i.preheader, !dbg !3185

while.body.i:                                     ; preds = %if.end194, %while.body.i
  %188 = phi ptr [ %189, %while.body.i ], [ %187, %if.end194 ]
  %si_next.i = getelementptr inbounds %struct.stackinfo, ptr %188, i64 0, i32 3, !dbg !3020
  %189 = load ptr, ptr %si_next.i, align 8, !dbg !3020
  %tobool.not.i = icmp eq ptr %189, null, !dbg !3185
  br i1 %tobool.not.i, label %while.cond.while.cond2.preheader_crit_edge.i, label %while.body.i, !dbg !3185, !llvm.loop !3188

while.body4.i:                                    ; preds = %while.body4.i.preheader, %while.body4.i
  %190 = phi ptr [ %191, %while.body4.i ], [ %.ph, %while.body4.i.preheader ]
  %si_prev.i = getelementptr inbounds %struct.stackinfo, ptr %190, i64 0, i32 2, !dbg !3190
  %191 = load ptr, ptr %si_prev.i, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata ptr %191, metadata !3023, metadata !DIExpression()) #17, !dbg !3191
  %si_cxstack.i = getelementptr inbounds %struct.stackinfo, ptr %190, i64 0, i32 1, !dbg !3192
  %192 = load ptr, ptr %si_cxstack.i, align 8, !dbg !3192
  call void @Perl_safesysfree(ptr noundef %192) #17, !dbg !3192
  %193 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !3193
  call void @Perl_safesysfree(ptr noundef %193) #17, !dbg !3193
  store ptr %191, ptr @PL_curstackinfo, align 8, !dbg !3194
  %tobool3.not.i = icmp eq ptr %191, null, !dbg !3186
  br i1 %tobool3.not.i, label %S_nuke_stacks.exit, label %while.body4.i, !dbg !3186, !llvm.loop !3195

S_nuke_stacks.exit:                               ; preds = %while.body4.i
  %194 = load ptr, ptr @PL_tmps_stack, align 8, !dbg !3197
  call void @Perl_safesysfree(ptr noundef %194) #17, !dbg !3197
  %195 = load ptr, ptr @PL_markstack, align 8, !dbg !3198
  call void @Perl_safesysfree(ptr noundef %195) #17, !dbg !3198
  %196 = load ptr, ptr @PL_scopestack, align 8, !dbg !3199
  call void @Perl_safesysfree(ptr noundef %196) #17, !dbg !3199
  %197 = load ptr, ptr @PL_savestack, align 8, !dbg !3200
  call void @Perl_safesysfree(ptr noundef %197) #17, !dbg !3200
  store i8 0, ptr @PL_tainting, align 1, !dbg !3201
  store i8 0, ptr @PL_taint_warn, align 1, !dbg !3202
  store i32 0, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 10), align 8, !dbg !3203
  store volatile i32 0, ptr @PL_debug, align 4, !dbg !3204
  store ptr null, ptr @PL_custom_op_names, align 8, !dbg !3205
  store ptr null, ptr @PL_custom_op_descs, align 8, !dbg !3206
  store ptr null, ptr @PL_custom_ops, align 8, !dbg !3207
  call void @Perl_sv_free_arenas() #17, !dbg !3208
  %198 = load ptr, ptr @PL_regmatch_slab, align 8, !dbg !3209
  %tobool197.not786 = icmp eq ptr %198, null, !dbg !3210
  br i1 %tobool197.not786, label %while.end200, label %while.body198, !dbg !3210

while.body198:                                    ; preds = %S_nuke_stacks.exit, %while.body198
  %199 = phi ptr [ %201, %while.body198 ], [ %198, %S_nuke_stacks.exit ]
  call void @llvm.dbg.value(metadata ptr %199, metadata !1693, metadata !DIExpression()), !dbg !3211
  %next199 = getelementptr inbounds %struct.regmatch_slab, ptr %199, i64 0, i32 2, !dbg !3212
  %200 = load ptr, ptr %next199, align 8, !dbg !3212
  store ptr %200, ptr @PL_regmatch_slab, align 8, !dbg !3213
  call void @Perl_safesysfree(ptr noundef nonnull %199) #17, !dbg !3214
  %201 = load ptr, ptr @PL_regmatch_slab, align 8, !dbg !3209
  %tobool197.not = icmp eq ptr %201, null, !dbg !3210
  br i1 %tobool197.not, label %while.end200, label %while.body198, !dbg !3210, !llvm.loop !3215

while.end200:                                     ; preds = %while.body198, %S_nuke_stacks.exit
  %202 = load ptr, ptr @PL_mess_sv, align 8, !dbg !3217
  %tobool201.not = icmp eq ptr %202, null, !dbg !3217
  br i1 %tobool201.not, label %cleanup, label %if.then202, !dbg !3218

if.then202:                                       ; preds = %while.end200
  %203 = load ptr, ptr %202, align 8, !dbg !3219
  %xmg_u = getelementptr inbounds %struct.xpvmg, ptr %203, i64 0, i32 1, !dbg !3219
  %204 = load ptr, ptr %xmg_u, align 8, !dbg !3219
  call void @llvm.dbg.value(metadata ptr %204, metadata !1905, metadata !DIExpression()), !dbg !3221
  %tobool205.not787 = icmp eq ptr %204, null, !dbg !3222
  br i1 %tobool205.not787, label %do.body220, label %for.body206, !dbg !3222

for.body206:                                      ; preds = %if.then202, %if.end217
  %mg.0788 = phi ptr [ %205, %if.end217 ], [ %204, %if.then202 ]
  call void @llvm.dbg.value(metadata ptr %mg.0788, metadata !1905, metadata !DIExpression()), !dbg !3221
  %205 = load ptr, ptr %mg.0788, align 8, !dbg !3223
  call void @llvm.dbg.value(metadata ptr %205, metadata !1908, metadata !DIExpression()), !dbg !3221
  %mg_ptr = getelementptr inbounds %struct.magic, ptr %mg.0788, i64 0, i32 7, !dbg !3226
  %206 = load ptr, ptr %mg_ptr, align 8, !dbg !3226
  %tobool207.not = icmp eq ptr %206, null, !dbg !3228
  br i1 %tobool207.not, label %if.end217, label %land.lhs.true208, !dbg !3229

land.lhs.true208:                                 ; preds = %for.body206
  %mg_type = getelementptr inbounds %struct.magic, ptr %mg.0788, i64 0, i32 3, !dbg !3230
  %207 = load i8, ptr %mg_type, align 2, !dbg !3230
  %cmp210.not = icmp eq i8 %207, 103, !dbg !3231
  br i1 %cmp210.not, label %if.end217, label %land.lhs.true212, !dbg !3232

land.lhs.true212:                                 ; preds = %land.lhs.true208
  %mg_len = getelementptr inbounds %struct.magic, ptr %mg.0788, i64 0, i32 5, !dbg !3233
  %208 = load i64, ptr %mg_len, align 8, !dbg !3233
  %cmp213 = icmp sgt i64 %208, -1, !dbg !3234
  br i1 %cmp213, label %if.then215, label %if.end217, !dbg !3235

if.then215:                                       ; preds = %land.lhs.true212
  call void @Perl_safesysfree(ptr noundef nonnull %206) #17, !dbg !3236
  br label %if.end217, !dbg !3236

if.end217:                                        ; preds = %if.then215, %land.lhs.true212, %land.lhs.true208, %for.body206
  call void @Perl_safesysfree(ptr noundef nonnull %mg.0788) #17, !dbg !3237
  call void @llvm.dbg.value(metadata ptr %205, metadata !1905, metadata !DIExpression()), !dbg !3221
  %tobool205.not = icmp eq ptr %205, null, !dbg !3222
  br i1 %tobool205.not, label %do.body220.loopexit, label %for.body206, !dbg !3222, !llvm.loop !3238

do.body220.loopexit:                              ; preds = %if.end217
  %.pre = load ptr, ptr @PL_mess_sv, align 8, !dbg !3240
  %.pre807 = load ptr, ptr %.pre, align 8, !dbg !3240
  br label %do.body220, !dbg !3240

do.body220:                                       ; preds = %do.body220.loopexit, %if.then202
  %209 = phi ptr [ %.pre807, %do.body220.loopexit ], [ %203, %if.then202 ], !dbg !3240
  %210 = phi ptr [ %.pre, %do.body220.loopexit ], [ %202, %if.then202 ], !dbg !3240
  %xpv_len_u = getelementptr inbounds %struct.xpv, ptr %209, i64 0, i32 3, !dbg !3240
  %211 = load i64, ptr %xpv_len_u, align 8, !dbg !3240
  %tobool222.not = icmp eq i64 %211, 0, !dbg !3240
  br i1 %tobool222.not, label %do.end259, label %if.then223, !dbg !3241

if.then223:                                       ; preds = %do.body220
  %sv_flags224 = getelementptr inbounds %struct.sv, ptr %210, i64 0, i32 2, !dbg !3242
  %212 = load i32, ptr %sv_flags224, align 4, !dbg !3242
  %and225 = and i32 %212, 33554432, !dbg !3242
  %tobool226.not = icmp eq i32 %and225, 0, !dbg !3242
  %sv_u256.phi.trans.insert = getelementptr inbounds %struct.sv, ptr %210, i64 0, i32 3
  %.pre808 = load ptr, ptr %sv_u256.phi.trans.insert, align 8, !dbg !3243
  br i1 %tobool226.not, label %if.end255, label %if.then232, !dbg !3244

if.then232:                                       ; preds = %if.then223
  %arrayidx234 = getelementptr inbounds i8, ptr %.pre808, i64 -1, !dbg !3245
  %213 = load i8, ptr %arrayidx234, align 1, !dbg !3245
  %conv235 = zext i8 %213 to i64, !dbg !3245
  call void @llvm.dbg.value(metadata i64 %conv235, metadata !1909, metadata !DIExpression()), !dbg !3249
  %tobool236.not = icmp eq i8 %213, 0, !dbg !3250
  br i1 %tobool236.not, label %if.then237, label %do.body246, !dbg !3245

if.then237:                                       ; preds = %if.then232
  %add.ptr241 = getelementptr inbounds i8, ptr %.pre808, i64 -9, !dbg !3252
  %zok.0.copyload = load i64, ptr %add.ptr241, align 1, !dbg !3252
  call void @llvm.dbg.value(metadata i64 %zok.0.copyload, metadata !1909, metadata !DIExpression()), !dbg !3249
  br label %do.body246, !dbg !3252

do.body246:                                       ; preds = %if.then237, %if.then232
  %zok.0 = phi i64 [ %conv235, %if.then232 ], [ %zok.0.copyload, %if.then237 ], !dbg !3254
  call void @llvm.dbg.value(metadata i64 %zok.0, metadata !1909, metadata !DIExpression()), !dbg !3249
  %idx.neg = sub i64 0, %zok.0, !dbg !3255
  %add.ptr249 = getelementptr inbounds i8, ptr %.pre808, i64 %idx.neg, !dbg !3255
  store ptr %add.ptr249, ptr %sv_u256.phi.trans.insert, align 8, !dbg !3255
  %and254 = and i32 %212, -33554433, !dbg !3257
  store i32 %and254, ptr %sv_flags224, align 4, !dbg !3257
  br label %if.end255, !dbg !3257

if.end255:                                        ; preds = %if.then223, %do.body246
  %214 = phi ptr [ %add.ptr249, %do.body246 ], [ %.pre808, %if.then223 ], !dbg !3244
  call void @Perl_safesysfree(ptr noundef %214) #17, !dbg !3244
  %.pre809 = load ptr, ptr @PL_mess_sv, align 8, !dbg !3258
  %.pre810 = load ptr, ptr %.pre809, align 8, !dbg !3258
  br label %do.end259, !dbg !3244

do.end259:                                        ; preds = %if.end255, %do.body220
  %215 = phi ptr [ %.pre810, %if.end255 ], [ %209, %do.body220 ], !dbg !3258
  call void @Perl_safesysfree(ptr noundef %215) #17, !dbg !3258
  %216 = load ptr, ptr @PL_mess_sv, align 8, !dbg !3259
  call void @Perl_safesysfree(ptr noundef %216) #17, !dbg !3259
  store ptr null, ptr @PL_mess_sv, align 8, !dbg !3260
  br label %cleanup, !dbg !3261

cleanup:                                          ; preds = %while.end200, %do.end259, %S_SvREFCNT_dec.exit345, %if.then16
  %retval.0 = load i32, ptr @PL_statusvalue, align 4, !dbg !1915
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %destruct_level), !dbg !3262
  ret i32 %retval.0, !dbg !3262
}

; Function Attrs: nounwind returns_twice
declare i32 @__sigsetjmp(ptr noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: nounwind uwtable
define dso_local void @Perl_call_list(i32 noundef %oldscope, ptr noundef %paramList) local_unnamed_addr #0 !dbg !3263 {
entry:
  %oldline = alloca i32, align 4
  %len = alloca i64, align 8
  %cur_env = alloca %struct.jmpenv, align 8
  call void @llvm.dbg.value(metadata i32 %oldscope, metadata !3267, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.value(metadata ptr %paramList, metadata !3268, metadata !DIExpression()), !dbg !3281
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %oldline), !dbg !3282
  call void @llvm.dbg.declare(metadata ptr %oldline, metadata !3270, metadata !DIExpression()), !dbg !3283
  %0 = load ptr, ptr @PL_curcop, align 8, !dbg !3284
  %tobool.not = icmp eq ptr %0, null, !dbg !3284
  br i1 %tobool.not, label %cond.end, label %cond.true, !dbg !3284

cond.true:                                        ; preds = %entry
  %cop_line = getelementptr inbounds %struct.cop, ptr %0, i64 0, i32 7, !dbg !3285
  %1 = load i32, ptr %cop_line, align 4, !dbg !3285
  br label %cond.end, !dbg !3284

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 0, %entry ], !dbg !3284
  store volatile i32 %cond, ptr %oldline, align 4, !dbg !3283
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %len) #17, !dbg !3286
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !3287
  call void @llvm.dbg.declare(metadata ptr %cur_env, metadata !3276, metadata !DIExpression()), !dbg !3287
  %sv_flags.i = getelementptr inbounds %struct.sv, ptr %paramList, i64 0, i32 2
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 1
  %je_ret = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 2
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 3
  br label %while.cond, !dbg !3288

while.cond:                                       ; preds = %do.body146, %cond.end
  call void @llvm.dbg.value(metadata ptr %paramList, metadata !3289, metadata !DIExpression()) #17, !dbg !3294
  %2 = load i32, ptr %sv_flags.i, align 4, !dbg !3296
  %and.i = and i32 %2, 8388608, !dbg !3296
  %tobool.not.i = icmp eq i32 %and.i, 0, !dbg !3296
  br i1 %tobool.not.i, label %cond.false.i, label %cond.true.i, !dbg !3296

cond.true.i:                                      ; preds = %while.cond
  %call.i = call i32 @Perl_mg_size(ptr noundef nonnull %paramList) #17, !dbg !3296
  %conv.i = sext i32 %call.i to i64, !dbg !3296
  br label %S_av_top_index.exit, !dbg !3296

cond.false.i:                                     ; preds = %while.cond
  %3 = load ptr, ptr %paramList, align 8, !dbg !3296
  %xav_fill.i = getelementptr inbounds %struct.xpvav, ptr %3, i64 0, i32 2, !dbg !3296
  %4 = load i64, ptr %xav_fill.i, align 8, !dbg !3296
  br label %S_av_top_index.exit, !dbg !3296

S_av_top_index.exit:                              ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv.i, %cond.true.i ], [ %4, %cond.false.i ], !dbg !3296
  %cmp = icmp sgt i64 %cond.i, -1, !dbg !3297
  br i1 %cmp, label %while.body, label %while.end150, !dbg !3288

while.body:                                       ; preds = %S_av_top_index.exit
  %call1 = call ptr @Perl_av_shift(ptr noundef nonnull %paramList) #17, !dbg !3298
  call void @llvm.dbg.value(metadata ptr %call1, metadata !3273, metadata !DIExpression()), !dbg !3281
  %5 = load i8, ptr @PL_savebegin, align 1, !dbg !3299, !range !1483
  %tobool2.not = icmp eq i8 %5, 0, !dbg !3299
  br i1 %tobool2.not, label %if.else12, label %if.then, !dbg !3301

if.then:                                          ; preds = %while.body
  %6 = load ptr, ptr @PL_beginav, align 8, !dbg !3302
  %cmp3 = icmp eq ptr %6, %paramList, !dbg !3305
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !3306

if.then4:                                         ; preds = %if.then
  call void @Perl_av_create_and_push(ptr noundef nonnull @PL_beginav_save, ptr noundef %call1) #17, !dbg !3307
  br label %do.body, !dbg !3309

if.else:                                          ; preds = %if.then
  %7 = load ptr, ptr @PL_checkav, align 8, !dbg !3310
  %cmp5 = icmp eq ptr %7, %paramList, !dbg !3312
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !3313

if.then6:                                         ; preds = %if.else
  call void @Perl_av_create_and_push(ptr noundef nonnull @PL_checkav_save, ptr noundef %call1) #17, !dbg !3314
  br label %do.body, !dbg !3316

if.else7:                                         ; preds = %if.else
  %8 = load ptr, ptr @PL_unitcheckav, align 8, !dbg !3317
  %cmp8 = icmp eq ptr %8, %paramList, !dbg !3319
  br i1 %cmp8, label %if.then9, label %do.body, !dbg !3320

if.then9:                                         ; preds = %if.else7
  call void @Perl_av_create_and_push(ptr noundef nonnull @PL_unitcheckav_save, ptr noundef %call1) #17, !dbg !3321
  br label %do.body, !dbg !3323

if.else12:                                        ; preds = %while.body
  call void @Perl_save_pushptr(ptr noundef %call1, i32 noundef 11) #17, !dbg !3324
  br label %do.body

do.body:                                          ; preds = %if.else12, %if.then6, %if.then9, %if.else7, %if.then4
  %9 = load ptr, ptr @PL_top_env, align 8, !dbg !3326
  store ptr %9, ptr %je_prev, align 8, !dbg !3326
  %call14 = call i32 @__sigsetjmp(ptr noundef nonnull %cur_env, i32 noundef 0) #19, !dbg !3326
  store i32 %call14, ptr %je_ret, align 8, !dbg !3326
  store ptr %cur_env, ptr @PL_top_env, align 8, !dbg !3326
  store i8 0, ptr %je_mustcatch, align 4, !dbg !3326
  call void @llvm.dbg.value(metadata i32 %call14, metadata !3275, metadata !DIExpression()), !dbg !3281
  switch i32 %call14, label %do.body146 [
    i32 0, label %do.body16
    i32 1, label %sw.bb79
    i32 2, label %sw.bb80
    i32 3, label %sw.bb100
  ], !dbg !3328

do.body16:                                        ; preds = %do.body
  %10 = load ptr, ptr @PL_markstack_ptr, align 8, !dbg !3329
  %incdec.ptr = getelementptr inbounds i32, ptr %10, i64 1, !dbg !3329
  store ptr %incdec.ptr, ptr @PL_markstack_ptr, align 8, !dbg !3329
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !3277, metadata !DIExpression()), !dbg !3331
  %11 = load ptr, ptr @PL_markstack_max, align 8, !dbg !3329
  %cmp17 = icmp eq ptr %incdec.ptr, %11, !dbg !3329
  br i1 %cmp17, label %if.then20, label %if.end22, !dbg !3332

if.then20:                                        ; preds = %do.body16
  %call21 = call ptr @Perl_markstack_grow() #17, !dbg !3329
  call void @llvm.dbg.value(metadata ptr %call21, metadata !3277, metadata !DIExpression()), !dbg !3331
  br label %if.end22, !dbg !3329

if.end22:                                         ; preds = %do.body16, %if.then20
  %mark_stack_entry.0 = phi ptr [ %call21, %if.then20 ], [ %incdec.ptr, %do.body16 ], !dbg !3329
  call void @llvm.dbg.value(metadata ptr %mark_stack_entry.0, metadata !3277, metadata !DIExpression()), !dbg !3331
  %12 = load ptr, ptr @PL_stack_sp, align 8, !dbg !3332
  %13 = load ptr, ptr @PL_stack_base, align 8, !dbg !3332
  %sub.ptr.lhs.cast = ptrtoint ptr %12 to i64, !dbg !3332
  %sub.ptr.rhs.cast = ptrtoint ptr %13 to i64, !dbg !3332
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3332
  %14 = lshr exact i64 %sub.ptr.sub, 3, !dbg !3332
  %conv = trunc i64 %14 to i32, !dbg !3332
  store i32 %conv, ptr %mark_stack_entry.0, align 4, !dbg !3332
  %call25 = call i32 @Perl_call_sv(ptr noundef %call1, i32 noundef 13), !dbg !3333
  %15 = load ptr, ptr @PL_errgv, align 8, !dbg !3334
  %sv_u = getelementptr inbounds %struct.gv, ptr %15, i64 0, i32 3, !dbg !3334
  %16 = load ptr, ptr %sv_u, align 8, !dbg !3334
  %17 = load ptr, ptr %16, align 8, !dbg !3334
  %tobool26.not = icmp eq ptr %17, null, !dbg !3334
  br i1 %tobool26.not, label %cond.false31, label %cond.end36, !dbg !3334

cond.false31:                                     ; preds = %if.end22
  %call32 = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %15, i32 noundef 0) #17, !dbg !3334
  %sv_u33 = getelementptr inbounds %struct.gv, ptr %call32, i64 0, i32 3, !dbg !3334
  %18 = load ptr, ptr %sv_u33, align 8, !dbg !3334
  %.pre = load ptr, ptr %18, align 8, !dbg !3334
  br label %cond.end36, !dbg !3334

cond.end36:                                       ; preds = %if.end22, %cond.false31
  %19 = phi ptr [ %.pre, %cond.false31 ], [ %17, %if.end22 ], !dbg !3334
  call void @llvm.dbg.value(metadata ptr %19, metadata !3269, metadata !DIExpression()), !dbg !3281
  %sv_flags = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2, !dbg !3335
  %20 = load i32, ptr %sv_flags, align 4, !dbg !3335
  %and = and i32 %20, 2098176, !dbg !3335
  %cmp38 = icmp eq i32 %and, 1024, !dbg !3335
  br i1 %cmp38, label %cond.true40, label %cond.false43, !dbg !3335

cond.true40:                                      ; preds = %cond.end36
  %21 = load ptr, ptr %19, align 8, !dbg !3335
  %xpv_cur = getelementptr inbounds %struct.xpv, ptr %21, i64 0, i32 2, !dbg !3335
  %22 = load i64, ptr %xpv_cur, align 8, !dbg !3335
  call void @llvm.dbg.value(metadata i64 %22, metadata !3274, metadata !DIExpression()), !dbg !3281
  store i64 %22, ptr %len, align 8, !dbg !3335
  br label %cond.end45, !dbg !3335

cond.false43:                                     ; preds = %cond.end36
  call void @llvm.dbg.value(metadata ptr %len, metadata !3274, metadata !DIExpression(DW_OP_deref)), !dbg !3281
  %call44 = call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %19, ptr noundef nonnull %len, i32 noundef 34) #17, !dbg !3335
  %.pr = load i64, ptr %len, align 8, !dbg !3336
  br label %cond.end45, !dbg !3335

cond.end45:                                       ; preds = %cond.false43, %cond.true40
  %23 = phi i64 [ %.pr, %cond.false43 ], [ %22, %cond.true40 ], !dbg !3336
  call void @llvm.dbg.value(metadata i64 %23, metadata !3274, metadata !DIExpression()), !dbg !3281
  %tobool47.not = icmp eq i64 %23, 0, !dbg !3336
  br i1 %tobool47.not, label %do.body146, label %if.then48, !dbg !3338

if.then48:                                        ; preds = %cond.end45
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !dbg !3339
  %oldline.0.oldline.0.oldline.0. = load volatile i32, ptr %oldline, align 4, !dbg !3341
  store i32 %oldline.0.oldline.0.oldline.0., ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7), align 4, !dbg !3341
  %24 = load ptr, ptr @PL_beginav, align 8, !dbg !3342
  %cmp50 = icmp eq ptr %24, %paramList, !dbg !3344
  br i1 %cmp50, label %if.then52, label %if.else53, !dbg !3345

if.then52:                                        ; preds = %if.then48
  call void @Perl_sv_catpvn_flags(ptr noundef nonnull %19, ptr noundef nonnull @.str.49, i64 noundef 33, i32 noundef 2) #17, !dbg !3346
  br label %if.end69, !dbg !3346

if.else53:                                        ; preds = %if.then48
  %25 = load ptr, ptr @PL_checkav, align 8, !dbg !3347
  %cmp54 = icmp eq ptr %25, %paramList, !dbg !3348
  br i1 %cmp54, label %cond.end67, label %cond.false57, !dbg !3349

cond.false57:                                     ; preds = %if.else53
  %26 = load ptr, ptr @PL_initav, align 8, !dbg !3350
  %cmp58 = icmp eq ptr %26, %paramList, !dbg !3351
  br i1 %cmp58, label %cond.end67, label %cond.false61, !dbg !3352

cond.false61:                                     ; preds = %cond.false57
  %27 = load ptr, ptr @PL_unitcheckav, align 8, !dbg !3353
  %cmp62 = icmp eq ptr %27, %paramList, !dbg !3354
  %cond64 = select i1 %cmp62, ptr @.str.53, ptr @.str.54, !dbg !3355
  br label %cond.end67, !dbg !3352

cond.end67:                                       ; preds = %cond.false61, %cond.false57, %if.else53
  %cond68 = phi ptr [ @.str.51, %if.else53 ], [ %cond64, %cond.false61 ], [ @.str.52, %cond.false57 ], !dbg !3349
  call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef nonnull %19, ptr noundef nonnull @.str.50, ptr noundef nonnull %cond68) #17, !dbg !3356
  br label %if.end69

if.end69:                                         ; preds = %cond.end67, %if.then52
  %28 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !3357
  %cmp71183 = icmp sgt i32 %28, %oldscope, !dbg !3358
  br i1 %cmp71183, label %while.body73, label %do.body74, !dbg !3359

while.body73:                                     ; preds = %if.end69, %while.body73
  call void @Perl_pop_scope() #17, !dbg !3360
  %29 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !3357
  %cmp71 = icmp sgt i32 %29, %oldscope, !dbg !3358
  br i1 %cmp71, label %while.body73, label %do.body74, !dbg !3359, !llvm.loop !3361

do.body74:                                        ; preds = %while.body73, %if.end69
  %30 = load ptr, ptr %je_prev, align 8, !dbg !3362
  store ptr %30, ptr @PL_top_env, align 8, !dbg !3362
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.55, ptr noundef %19) #17, !dbg !3364
  br label %do.body146, !dbg !3365

sw.bb79:                                          ; preds = %do.body
  store i32 1, ptr @PL_statusvalue, align 4, !dbg !3366
  store i32 1, ptr @PL_statusvalue_posix, align 4, !dbg !3366
  br label %sw.bb80, !dbg !3366

sw.bb80:                                          ; preds = %do.body, %sw.bb79
  %31 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !3367
  %cmp82184 = icmp sgt i32 %31, %oldscope, !dbg !3368
  br i1 %cmp82184, label %while.body84, label %while.end85, !dbg !3369

while.body84:                                     ; preds = %sw.bb80, %while.body84
  call void @Perl_pop_scope() #17, !dbg !3370
  %32 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !3367
  %cmp82 = icmp sgt i32 %32, %oldscope, !dbg !3368
  br i1 %cmp82, label %while.body84, label %while.end85, !dbg !3369, !llvm.loop !3371

while.end85:                                      ; preds = %while.body84, %sw.bb80
  %33 = load i64, ptr @PL_tmps_ix, align 8, !dbg !3372
  %34 = load i64, ptr @PL_tmps_floor, align 8, !dbg !3372
  %cmp86 = icmp sgt i64 %33, %34, !dbg !3372
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !3374

if.then88:                                        ; preds = %while.end85
  call void @Perl_free_tmps() #17, !dbg !3372
  br label %if.end89, !dbg !3372

if.end89:                                         ; preds = %if.then88, %while.end85
  %35 = load ptr, ptr @PL_curstash, align 8, !dbg !3375
  %36 = load ptr, ptr @PL_defstash, align 8, !dbg !3375
  %cmp90.not = icmp eq ptr %35, %36, !dbg !3375
  br i1 %cmp90.not, label %if.end94, label %if.then92, !dbg !3377

if.then92:                                        ; preds = %if.end89
  call void @llvm.dbg.value(metadata ptr %35, metadata !1967, metadata !DIExpression()) #17, !dbg !3378
  %cmp.not.i = icmp eq ptr %35, null, !dbg !3381
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i, !dbg !3382

if.then.i:                                        ; preds = %if.then92
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %35, i64 0, i32 1, !dbg !3383
  %37 = load i32, ptr %sv_refcnt.i, align 8, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %37, metadata !1973, metadata !DIExpression()) #17, !dbg !3384
  %cmp1.i = icmp ugt i32 %37, 1, !dbg !3385
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !3386

if.then4.i:                                       ; preds = %if.then.i
  %sub.i = add i32 %37, -1, !dbg !3387
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !3388
  br label %S_SvREFCNT_dec.exit, !dbg !3389

if.else.i:                                        ; preds = %if.then.i
  call void @Perl_sv_free2(ptr noundef nonnull %35, i32 noundef %37) #17, !dbg !3390
  %.pr179.pre = load ptr, ptr @PL_defstash, align 8, !dbg !3391
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.then4.i, %if.else.i, %if.then92
  %38 = phi ptr [ %36, %if.then92 ], [ %.pr179.pre, %if.else.i ], [ %36, %if.then4.i ], !dbg !3391
  call void @llvm.dbg.value(metadata ptr %38, metadata !3392, metadata !DIExpression()), !dbg !3397
  %cmp.not.i176 = icmp eq ptr %38, null, !dbg !3399
  br i1 %cmp.not.i176, label %S_SvREFCNT_inc.exit, label %if.then.i178, !dbg !3401

if.then.i178:                                     ; preds = %S_SvREFCNT_dec.exit
  %sv_refcnt.i177 = getelementptr inbounds %struct.sv, ptr %38, i64 0, i32 1, !dbg !3402
  %39 = load i32, ptr %sv_refcnt.i177, align 8, !dbg !3403
  %inc.i = add i32 %39, 1, !dbg !3403
  store i32 %inc.i, ptr %sv_refcnt.i177, align 8, !dbg !3403
  br label %S_SvREFCNT_inc.exit, !dbg !3402

S_SvREFCNT_inc.exit:                              ; preds = %S_SvREFCNT_dec.exit, %if.then.i178
  store ptr %38, ptr @PL_curstash, align 8, !dbg !3391
  br label %if.end94, !dbg !3391

if.end94:                                         ; preds = %S_SvREFCNT_inc.exit, %if.end89
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !dbg !3404
  %oldline.0.oldline.0.oldline.0.155 = load volatile i32, ptr %oldline, align 4, !dbg !3405
  store i32 %oldline.0.oldline.0.oldline.0.155, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7), align 4, !dbg !3405
  %40 = load ptr, ptr %je_prev, align 8, !dbg !3406
  store ptr %40, ptr @PL_top_env, align 8, !dbg !3406
  call fastcc void @S_my_exit_jump(), !dbg !3408
  unreachable, !dbg !3409

sw.bb100:                                         ; preds = %do.body
  %41 = load ptr, ptr @PL_restartop, align 8, !dbg !3410
  %tobool101.not = icmp eq ptr %41, null, !dbg !3410
  br i1 %tobool101.not, label %if.end115, label %if.then102, !dbg !3412

if.then102:                                       ; preds = %sw.bb100
  store ptr @PL_compiling, ptr @PL_curcop, align 8, !dbg !3413
  %oldline.0.oldline.0.oldline.0.156 = load volatile i32, ptr %oldline, align 4, !dbg !3415
  store i32 %oldline.0.oldline.0.oldline.0.156, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 7), align 4, !dbg !3415
  %42 = load ptr, ptr %je_prev, align 8, !dbg !3416
  %tobool106.not = icmp eq ptr %42, null, !dbg !3416
  br i1 %tobool106.not, label %if.end110, label %if.then107, !dbg !3419

if.then107:                                       ; preds = %if.then102
  call void @siglongjmp(ptr noundef nonnull %cur_env, i32 noundef 3) #20, !dbg !3416
  unreachable, !dbg !3416

if.end110:                                        ; preds = %if.then102
  %call111 = call ptr @Perl_PerlIO_stderr() #17, !dbg !3419
  %call112 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %call111, ptr noundef nonnull @.str.56, i32 noundef 3) #17, !dbg !3419
  call void @exit(i32 noundef 1) #20, !dbg !3419
  unreachable, !dbg !3419

if.end115:                                        ; preds = %sw.bb100
  %43 = load ptr, ptr @PL_stderrgv, align 8, !dbg !3420
  %tobool116.not = icmp eq ptr %43, null, !dbg !3420
  br i1 %tobool116.not, label %cond.false137, label %land.lhs.true, !dbg !3420

land.lhs.true:                                    ; preds = %if.end115
  %sv_flags117 = getelementptr inbounds %struct.gv, ptr %43, i64 0, i32 2, !dbg !3420
  %44 = load i32, ptr %sv_flags117, align 4, !dbg !3420
  %and118 = and i32 %44, 255, !dbg !3420
  %cmp119 = icmp eq i32 %and118, 9, !dbg !3420
  br i1 %cmp119, label %land.lhs.true121, label %cond.false137, !dbg !3420

land.lhs.true121:                                 ; preds = %land.lhs.true
  %sv_u122 = getelementptr inbounds %struct.gv, ptr %43, i64 0, i32 3, !dbg !3420
  %45 = load ptr, ptr %sv_u122, align 8, !dbg !3420
  %gp_io = getelementptr inbounds %struct.gp, ptr %45, i64 0, i32 1, !dbg !3420
  %46 = load ptr, ptr %gp_io, align 8, !dbg !3420
  %tobool124.not = icmp eq ptr %46, null, !dbg !3420
  br i1 %tobool124.not, label %cond.false137, label %land.lhs.true125, !dbg !3420

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %47 = load ptr, ptr %46, align 8, !dbg !3420
  %xio_ofp = getelementptr inbounds %struct.xpvio, ptr %47, i64 0, i32 5, !dbg !3420
  %48 = load ptr, ptr %xio_ofp, align 8, !dbg !3420
  %tobool130.not = icmp eq ptr %48, null, !dbg !3420
  br i1 %tobool130.not, label %cond.false137, label %cond.end139, !dbg !3420

cond.false137:                                    ; preds = %land.lhs.true125, %land.lhs.true121, %land.lhs.true, %if.end115
  %call138 = call ptr @Perl_PerlIO_stderr() #17, !dbg !3420
  br label %cond.end139, !dbg !3420

cond.end139:                                      ; preds = %land.lhs.true125, %cond.false137
  %cond140 = phi ptr [ %call138, %cond.false137 ], [ %48, %land.lhs.true125 ], !dbg !3420
  %call141 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %cond140, ptr noundef nonnull @.str.57) #17, !dbg !3421
  %49 = load i64, ptr @PL_tmps_ix, align 8, !dbg !3422
  %50 = load i64, ptr @PL_tmps_floor, align 8, !dbg !3422
  %cmp142 = icmp sgt i64 %49, %50, !dbg !3422
  br i1 %cmp142, label %if.then144, label %do.body146, !dbg !3424

if.then144:                                       ; preds = %cond.end139
  call void @Perl_free_tmps() #17, !dbg !3422
  br label %do.body146, !dbg !3422

do.body146:                                       ; preds = %do.body, %do.body74, %cond.end45, %if.then144, %cond.end139
  %51 = load ptr, ptr %je_prev, align 8, !dbg !3425
  store ptr %51, ptr @PL_top_env, align 8, !dbg !3425
  br label %while.cond, !dbg !3288, !llvm.loop !3427

while.end150:                                     ; preds = %S_av_top_index.exit
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !3429
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %len) #17, !dbg !3429
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %oldline), !dbg !3429
  ret void, !dbg !3429
}

declare !dbg !3430 void @Perl_pop_scope() local_unnamed_addr #3

declare !dbg !3431 void @Perl_free_tmps() local_unnamed_addr #3

declare !dbg !3432 i32 @Perl_my_fflush_all() local_unnamed_addr #3

declare !dbg !3435 void @Perl_op_free(ptr noundef) local_unnamed_addr #3

declare !dbg !3438 void @PerlIO_destruct() local_unnamed_addr #3

declare !dbg !3439 void @Perl_sv_clean_objs() local_unnamed_addr #3

declare !dbg !3440 void @Perl_safesysfree(ptr noundef) local_unnamed_addr #3

declare !dbg !3441 void @PerlIO_cleanup() local_unnamed_addr #3

declare !dbg !3442 i32 @Perl_PerlIO_close(ptr noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn
declare void @free(ptr nocapture noundef) local_unnamed_addr #10

declare !dbg !3445 void @Perl_refcounted_he_free(ptr noundef) local_unnamed_addr #3

declare !dbg !3448 ptr @Perl_hv_common_key_len(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !3451 void @Perl_ck_warner_d(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare !dbg !3454 i32 @Perl_sv_clean_all() local_unnamed_addr #3

declare !dbg !3455 zeroext i1 @Perl_ckwarn_d(i32 noundef) local_unnamed_addr #3

declare !dbg !3458 void @Perl_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare !dbg !3459 void @Perl_sv_clear(ptr noundef) local_unnamed_addr #3

declare !dbg !3462 void @Perl_free_tied_hv_pool() local_unnamed_addr #3

declare !dbg !3463 void @Perl_sv_free_arenas() local_unnamed_addr #3

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @perl_free(ptr nocapture noundef %my_perl) local_unnamed_addr #11 !dbg !3464 {
entry:
  call void @llvm.dbg.value(metadata ptr %my_perl, metadata !3466, metadata !DIExpression()), !dbg !3467
  %0 = load i32, ptr @PL_veto_cleanup, align 4, !dbg !3468
  %tobool.not = icmp eq i32 %0, 0, !dbg !3468
  br i1 %tobool.not, label %if.end, label %return, !dbg !3470

if.end:                                           ; preds = %entry
  tail call void @free(ptr noundef %my_perl) #17, !dbg !3471
  br label %return, !dbg !3472

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !3472
}

; Function Attrs: nounwind uwtable
define dso_local void @Perl_call_atexit(ptr noundef %fn, ptr noundef %ptr) local_unnamed_addr #0 !dbg !3473 {
entry:
  call void @llvm.dbg.value(metadata ptr %fn, metadata !3478, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.value(metadata ptr %ptr, metadata !3479, metadata !DIExpression()), !dbg !3480
  %0 = load ptr, ptr @PL_exitlist, align 8, !dbg !3481
  %1 = load i32, ptr @PL_exitlistlen, align 4, !dbg !3481
  %add = add nsw i32 %1, 1, !dbg !3481
  %conv = sext i32 %add to i64, !dbg !3481
  %mul = shl nsw i64 %conv, 4, !dbg !3481
  %call = tail call ptr @Perl_safesysrealloc(ptr noundef %0, i64 noundef %mul) #17, !dbg !3481
  store ptr %call, ptr @PL_exitlist, align 8, !dbg !3481
  %2 = load i32, ptr @PL_exitlistlen, align 4, !dbg !3482
  %idxprom = sext i32 %2 to i64, !dbg !3483
  %arrayidx = getelementptr inbounds %struct.exitlistentry, ptr %call, i64 %idxprom, !dbg !3483
  store ptr %fn, ptr %arrayidx, align 8, !dbg !3484
  %3 = load ptr, ptr @PL_exitlist, align 8, !dbg !3485
  %4 = load i32, ptr @PL_exitlistlen, align 4, !dbg !3486
  %idxprom2 = sext i32 %4 to i64, !dbg !3485
  %ptr4 = getelementptr inbounds %struct.exitlistentry, ptr %3, i64 %idxprom2, i32 1, !dbg !3487
  store ptr %ptr, ptr %ptr4, align 8, !dbg !3488
  %5 = load i32, ptr @PL_exitlistlen, align 4, !dbg !3489
  %inc = add nsw i32 %5, 1, !dbg !3489
  store i32 %inc, ptr @PL_exitlistlen, align 4, !dbg !3489
  ret void, !dbg !3490
}

declare !dbg !3491 ptr @Perl_safesysrealloc(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @perl_parse(ptr nocapture noundef readnone %my_perl, ptr noundef readonly %xsinit, i32 noundef %argc, ptr noundef %argv, ptr noundef %env) local_unnamed_addr #0 !dbg !3494 {
entry:
  %tmpstatbuf.i.i = alloca %struct.stat, align 8
  %s.i.i = alloca ptr, align 8
  %uv.i.i = alloca i64, align 8
  %dosearch.i = alloca i8, align 1
  %cur_env = alloca %struct.jmpenv, align 8
  call void @llvm.dbg.value(metadata ptr %my_perl, metadata !3500, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata ptr %xsinit, metadata !3501, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata i32 %argc, metadata !3502, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata ptr %argv, metadata !3503, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.value(metadata ptr %env, metadata !3504, metadata !DIExpression()), !dbg !3514
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !3515
  call void @llvm.dbg.declare(metadata ptr %cur_env, metadata !3507, metadata !DIExpression()), !dbg !3515
  store i32 %argc, ptr @PL_origargc, align 4, !dbg !3516
  store ptr %argv, ptr @PL_origargv, align 8, !dbg !3517
  %0 = load i32, ptr @PL_origalen, align 4, !dbg !3518
  %cmp.not = icmp eq i32 %0, 0, !dbg !3519
  br i1 %cmp.not, label %if.else, label %if.end109, !dbg !3520

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata ptr null, metadata !3508, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata i64 -8, metadata !3512, metadata !DIExpression()), !dbg !3521
  %1 = load ptr, ptr %argv, align 8, !dbg !3522
  %2 = ptrtoint ptr %1 to i64, !dbg !3522
  %and = and i64 %2, -8, !dbg !3523
  %cmp2 = icmp eq i64 %and, %2, !dbg !3524
  call void @llvm.dbg.value(metadata i1 %cmp2, metadata !3513, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3521
  %cmp3 = icmp slt i32 %argc, 1
  %tobool7.not = icmp eq ptr %1, null
  %or.cond = select i1 %cmp3, i1 true, i1 %tobool7.not, !dbg !3525
  call void @llvm.dbg.value(metadata ptr %1, metadata !3508, metadata !DIExpression()), !dbg !3521
  br i1 %or.cond, label %if.end37, label %while.cond, !dbg !3525

while.cond:                                       ; preds = %if.else, %while.cond
  %s.0 = phi ptr [ %incdec.ptr, %while.cond ], [ %1, %if.else ], !dbg !3527
  call void @llvm.dbg.value(metadata ptr %s.0, metadata !3508, metadata !DIExpression()), !dbg !3521
  %3 = load i8, ptr %s.0, align 1, !dbg !3528
  %tobool9.not = icmp eq i8 %3, 0, !dbg !3530
  %incdec.ptr = getelementptr inbounds i8, ptr %s.0, i64 1, !dbg !3531
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !3508, metadata !DIExpression()), !dbg !3521
  br i1 %tobool9.not, label %for.cond.preheader, label %while.cond, !dbg !3530, !llvm.loop !3532

for.cond.preheader:                               ; preds = %while.cond
  call void @llvm.dbg.value(metadata i32 1, metadata !3511, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata ptr %s.0, metadata !3508, metadata !DIExpression()), !dbg !3521
  %cmp10309 = icmp sgt i32 %argc, 1, !dbg !3533
  br i1 %cmp10309, label %for.body.lr.ph, label %if.end37, !dbg !3536

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %not.cmp2266 = xor i1 %cmp2, true
  %wide.trip.count = zext i32 %argc to i64, !dbg !3533
  br label %for.body, !dbg !3536

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %s.1310 = phi ptr [ %s.0, %for.body.lr.ph ], [ %s.2, %for.inc ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3511, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata ptr %s.1310, metadata !3508, metadata !DIExpression()), !dbg !3521
  %arrayidx12 = getelementptr inbounds ptr, ptr %argv, i64 %indvars.iv, !dbg !3537
  %4 = load ptr, ptr %arrayidx12, align 8, !dbg !3537
  %add.ptr = getelementptr inbounds i8, ptr %s.1310, i64 1, !dbg !3540
  %cmp13 = icmp eq ptr %4, %add.ptr, !dbg !3541
  br i1 %cmp13, label %while.cond31.preheader, label %lor.lhs.false, !dbg !3542

lor.lhs.false:                                    ; preds = %for.body
  %cmp19 = icmp ule ptr %4, %s.1310
  %or.cond236 = select i1 %not.cmp2266, i1 true, i1 %cmp19, !dbg !3543
  %add.ptr24 = getelementptr inbounds i8, ptr %s.1310, i64 8
  %5 = ptrtoint ptr %add.ptr24 to i64
  %and25 = and i64 %5, -8
  %6 = inttoptr i64 %and25 to ptr
  %cmp26.not = icmp ugt ptr %4, %6
  %or.cond238 = select i1 %or.cond236, i1 true, i1 %cmp26.not, !dbg !3543
  br i1 %or.cond238, label %if.end37, label %while.cond31.preheader, !dbg !3543

while.cond31.preheader:                           ; preds = %lor.lhs.false, %for.body
  br label %while.cond31, !dbg !3544

while.cond31:                                     ; preds = %while.cond31.preheader, %while.cond31
  %s.2 = phi ptr [ %incdec.ptr34, %while.cond31 ], [ %4, %while.cond31.preheader ], !dbg !3546
  call void @llvm.dbg.value(metadata ptr %s.2, metadata !3508, metadata !DIExpression()), !dbg !3521
  %7 = load i8, ptr %s.2, align 1, !dbg !3547
  %tobool32.not = icmp eq i8 %7, 0, !dbg !3544
  %incdec.ptr34 = getelementptr inbounds i8, ptr %s.2, i64 1, !dbg !3548
  call void @llvm.dbg.value(metadata ptr %incdec.ptr34, metadata !3508, metadata !DIExpression()), !dbg !3521
  br i1 %tobool32.not, label %for.inc, label %while.cond31, !dbg !3544, !llvm.loop !3549

for.inc:                                          ; preds = %while.cond31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3550
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next, metadata !3511, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata ptr %s.2, metadata !3508, metadata !DIExpression()), !dbg !3521
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !3533
  br i1 %exitcond.not, label %if.end37, label %for.body, !dbg !3536, !llvm.loop !3551

if.end37:                                         ; preds = %lor.lhs.false, %for.inc, %for.cond.preheader, %if.else
  %s.3 = phi ptr [ null, %if.else ], [ %s.0, %for.cond.preheader ], [ %s.1310, %lor.lhs.false ], [ %s.2, %for.inc ], !dbg !3521
  call void @llvm.dbg.value(metadata ptr %s.3, metadata !3508, metadata !DIExpression()), !dbg !3521
  %tobool38 = icmp ne ptr %s.3, null, !dbg !3553
  %8 = load ptr, ptr @PL_origenviron, align 8
  %tobool40 = icmp ne ptr %8, null
  %or.cond180 = select i1 %tobool38, i1 %tobool40, i1 false, !dbg !3555
  %9 = load i8, ptr @PL_use_safe_putenv, align 1
  %tobool42.not = icmp eq i8 %9, 0
  %or.cond239 = select i1 %or.cond180, i1 %tobool42.not, i1 false, !dbg !3555
  br i1 %or.cond239, label %if.then43, label %if.end105, !dbg !3555

if.then43:                                        ; preds = %if.end37
  %10 = load ptr, ptr %8, align 8, !dbg !3556
  %add.ptr45 = getelementptr inbounds i8, ptr %s.3, i64 1, !dbg !3559
  %cmp46 = icmp eq ptr %10, %add.ptr45, !dbg !3560
  br i1 %cmp46, label %while.cond62.preheader, label %lor.lhs.false48, !dbg !3561

lor.lhs.false48:                                  ; preds = %if.then43
  %cmp52 = icmp ule ptr %10, %s.3
  %not.cmp2 = xor i1 %cmp2, true, !dbg !3562
  %or.cond240 = select i1 %not.cmp2, i1 true, i1 %cmp52, !dbg !3562
  %add.ptr56 = getelementptr inbounds i8, ptr %s.3, i64 8
  %11 = ptrtoint ptr %add.ptr56 to i64
  %and57 = and i64 %11, -8
  %12 = inttoptr i64 %and57 to ptr
  %cmp58.not = icmp ugt ptr %10, %12
  %or.cond242 = select i1 %or.cond240, i1 true, i1 %cmp58.not, !dbg !3562
  br i1 %or.cond242, label %cond.true, label %while.cond62.preheader, !dbg !3562

while.cond62.preheader:                           ; preds = %lor.lhs.false48, %if.then43
  br label %while.cond62, !dbg !3563

while.cond62:                                     ; preds = %while.cond62.preheader, %while.cond62
  %s.4 = phi ptr [ %incdec.ptr65, %while.cond62 ], [ %10, %while.cond62.preheader ], !dbg !3565
  call void @llvm.dbg.value(metadata ptr %s.4, metadata !3508, metadata !DIExpression()), !dbg !3521
  %13 = load i8, ptr %s.4, align 1, !dbg !3566
  %tobool63.not = icmp eq i8 %13, 0, !dbg !3563
  %incdec.ptr65 = getelementptr inbounds i8, ptr %s.4, i64 1, !dbg !3567
  call void @llvm.dbg.value(metadata ptr %incdec.ptr65, metadata !3508, metadata !DIExpression()), !dbg !3521
  br i1 %tobool63.not, label %while.end66, label %while.cond62, !dbg !3563, !llvm.loop !3568

while.end66:                                      ; preds = %while.cond62
  call void @Perl_my_setenv(ptr noundef nonnull @.str.11, ptr noundef null) #17, !dbg !3569
  call void @llvm.dbg.value(metadata i32 1, metadata !3511, metadata !DIExpression()), !dbg !3521
  %14 = load ptr, ptr @PL_origenviron, align 8
  call void @llvm.dbg.value(metadata ptr %s.4, metadata !3508, metadata !DIExpression()), !dbg !3521
  %arrayidx69313 = getelementptr inbounds ptr, ptr %14, i64 1, !dbg !3570
  %15 = load ptr, ptr %arrayidx69313, align 8, !dbg !3570
  %tobool70.not314 = icmp eq ptr %15, null, !dbg !3573
  br i1 %tobool70.not314, label %cond.true, label %for.body71.lr.ph, !dbg !3573

for.body71.lr.ph:                                 ; preds = %while.end66
  %not.cmp2265 = xor i1 %cmp2, true
  br label %for.body71, !dbg !3573

for.body71:                                       ; preds = %for.body71.lr.ph, %for.inc101
  %indvars.iv366 = phi i64 [ 1, %for.body71.lr.ph ], [ %indvars.iv.next367, %for.inc101 ]
  %16 = phi ptr [ %15, %for.body71.lr.ph ], [ %20, %for.inc101 ]
  %s.5315 = phi ptr [ %s.4, %for.body71.lr.ph ], [ %s.6, %for.inc101 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv366, metadata !3511, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata ptr %s.5315, metadata !3508, metadata !DIExpression()), !dbg !3521
  %add.ptr74 = getelementptr inbounds i8, ptr %s.5315, i64 1, !dbg !3574
  %cmp75 = icmp eq ptr %16, %add.ptr74, !dbg !3577
  br i1 %cmp75, label %while.cond94.preheader, label %lor.lhs.false77, !dbg !3578

lor.lhs.false77:                                  ; preds = %for.body71
  %cmp82 = icmp ule ptr %16, %s.5315
  %or.cond243 = select i1 %not.cmp2265, i1 true, i1 %cmp82, !dbg !3579
  %add.ptr87 = getelementptr inbounds i8, ptr %s.5315, i64 8
  %17 = ptrtoint ptr %add.ptr87 to i64
  %and88 = and i64 %17, -8
  %18 = inttoptr i64 %and88 to ptr
  %cmp89.not = icmp ugt ptr %16, %18
  %or.cond245 = select i1 %or.cond243, i1 true, i1 %cmp89.not, !dbg !3579
  br i1 %or.cond245, label %cond.true, label %while.cond94.preheader, !dbg !3579

while.cond94.preheader:                           ; preds = %lor.lhs.false77, %for.body71
  br label %while.cond94, !dbg !3580

while.cond94:                                     ; preds = %while.cond94.preheader, %while.cond94
  %s.6 = phi ptr [ %incdec.ptr97, %while.cond94 ], [ %16, %while.cond94.preheader ], !dbg !3582
  call void @llvm.dbg.value(metadata ptr %s.6, metadata !3508, metadata !DIExpression()), !dbg !3521
  %19 = load i8, ptr %s.6, align 1, !dbg !3583
  %tobool95.not = icmp eq i8 %19, 0, !dbg !3580
  %incdec.ptr97 = getelementptr inbounds i8, ptr %s.6, i64 1, !dbg !3584
  call void @llvm.dbg.value(metadata ptr %incdec.ptr97, metadata !3508, metadata !DIExpression()), !dbg !3521
  br i1 %tobool95.not, label %for.inc101, label %while.cond94, !dbg !3580, !llvm.loop !3585

for.inc101:                                       ; preds = %while.cond94
  %indvars.iv.next367 = add nuw i64 %indvars.iv366, 1, !dbg !3586
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next367, metadata !3511, metadata !DIExpression()), !dbg !3521
  call void @llvm.dbg.value(metadata ptr %s.6, metadata !3508, metadata !DIExpression()), !dbg !3521
  %arrayidx69 = getelementptr inbounds ptr, ptr %14, i64 %indvars.iv.next367, !dbg !3570
  %20 = load ptr, ptr %arrayidx69, align 8, !dbg !3570
  %tobool70.not = icmp eq ptr %20, null, !dbg !3573
  br i1 %tobool70.not, label %cond.true, label %for.body71, !dbg !3573, !llvm.loop !3587

if.end105:                                        ; preds = %if.end37
  call void @llvm.dbg.value(metadata ptr %s.3, metadata !3508, metadata !DIExpression()), !dbg !3521
  %tobool106.not = icmp eq ptr %s.3, null, !dbg !3589
  br i1 %tobool106.not, label %cond.end, label %cond.true, !dbg !3589

cond.true:                                        ; preds = %lor.lhs.false77, %for.inc101, %while.end66, %lor.lhs.false48, %if.end105
  %s.7264 = phi ptr [ %s.3, %if.end105 ], [ %s.3, %lor.lhs.false48 ], [ %s.4, %while.end66 ], [ %s.5315, %lor.lhs.false77 ], [ %s.6, %for.inc101 ]
  %21 = load ptr, ptr @PL_origargv, align 8, !dbg !3590
  %22 = load ptr, ptr %21, align 8, !dbg !3590
  %sub.ptr.lhs.cast = ptrtoint ptr %s.7264 to i64, !dbg !3591
  %sub.ptr.rhs.cast = ptrtoint ptr %22 to i64, !dbg !3591
  %sub.ptr.sub = add i64 %sub.ptr.lhs.cast, 1, !dbg !3591
  %add = sub i64 %sub.ptr.sub, %sub.ptr.rhs.cast, !dbg !3592
  br label %cond.end, !dbg !3589

cond.end:                                         ; preds = %if.end105, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ 0, %if.end105 ], !dbg !3589
  %conv108 = trunc i64 %cond to i32, !dbg !3589
  br label %if.end109

if.end109:                                        ; preds = %entry, %cond.end
  %storemerge = phi i32 [ %conv108, %cond.end ], [ 1, %entry ], !dbg !3593
  store i32 %storemerge, ptr @PL_origalen, align 4, !dbg !3593
  %23 = load i8, ptr @PL_do_undump, align 1, !dbg !3594, !range !1483
  %tobool110.not = icmp eq i8 %23, 0, !dbg !3594
  br i1 %tobool110.not, label %if.end113, label %if.then111, !dbg !3596

if.then111:                                       ; preds = %if.end109
  %24 = load ptr, ptr %argv, align 8, !dbg !3597
  %call = call ptr @Perl_savepv(ptr noundef %24) #17, !dbg !3597
  store ptr %call, ptr @PL_origfilename, align 8, !dbg !3599
  store i8 0, ptr @PL_do_undump, align 1, !dbg !3600
  %25 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !3601
  %si_cxix = getelementptr inbounds %struct.stackinfo, ptr %25, i64 0, i32 4, !dbg !3601
  store i32 -1, ptr %si_cxix, align 8, !dbg !3602
  %call.i = call i32 @getuid() #17, !dbg !3603
  call void @llvm.dbg.value(metadata i32 %call.i, metadata !1467, metadata !DIExpression()) #17, !dbg !3605
  %call1.i = call i32 @geteuid() #17, !dbg !3606
  call void @llvm.dbg.value(metadata i32 %call1.i, metadata !1471, metadata !DIExpression()) #17, !dbg !3605
  %call2.i = call i32 @getgid() #17, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %call2.i, metadata !1472, metadata !DIExpression()) #17, !dbg !3605
  %call3.i = call i32 @getegid() #17, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %call3.i, metadata !1476, metadata !DIExpression()) #17, !dbg !3605
  %26 = load i8, ptr @PL_tainting, align 1, !dbg !3609, !range !1483
  %tobool4.not.i = icmp eq i32 %call.i, 0, !dbg !3609
  br i1 %tobool4.not.i, label %S_init_ids.exit, label %land.rhs.i, !dbg !3609

land.rhs.i:                                       ; preds = %if.then111
  %cmp.not.i = icmp eq i32 %call1.i, %call.i, !dbg !3609
  br i1 %cmp.not.i, label %lor.rhs.i, label %S_init_ids.exit, !dbg !3609

lor.rhs.i:                                        ; preds = %land.rhs.i
  %cmp6.i = icmp ne i32 %call3.i, %call2.i, !dbg !3609
  %phi.cast.i = zext i1 %cmp6.i to i8, !dbg !3609
  br label %S_init_ids.exit, !dbg !3609

S_init_ids.exit:                                  ; preds = %if.then111, %land.rhs.i, %lor.rhs.i
  %27 = phi i8 [ 0, %if.then111 ], [ 1, %land.rhs.i ], [ %phi.cast.i, %lor.rhs.i ]
  %or.i = or i8 %27, %26, !dbg !3609
  store i8 %or.i, ptr @PL_tainting, align 1, !dbg !3609
  store i8 1, ptr @PL_tainted, align 1, !dbg !3610
  call void @Perl_set_caret_X() #17, !dbg !3611
  store i8 0, ptr @PL_tainted, align 1, !dbg !3612
  call fastcc void @S_init_postdump_symbols(i32 noundef %argc, ptr noundef nonnull %argv, ptr noundef %env), !dbg !3613
  br label %cleanup, !dbg !3614

if.end113:                                        ; preds = %if.end109
  %28 = load ptr, ptr @PL_main_root, align 8, !dbg !3615
  %tobool114.not = icmp eq ptr %28, null, !dbg !3615
  br i1 %tobool114.not, label %if.end116, label %if.then115, !dbg !3617

if.then115:                                       ; preds = %if.end113
  call void @Perl_op_free(ptr noundef nonnull %28) #17, !dbg !3618
  store ptr null, ptr @PL_main_root, align 8, !dbg !3620
  br label %if.end116, !dbg !3621

if.end116:                                        ; preds = %if.then115, %if.end113
  store ptr null, ptr @PL_main_start, align 8, !dbg !3622
  %29 = load ptr, ptr @PL_main_cv, align 8, !dbg !3623
  call void @llvm.dbg.value(metadata ptr %29, metadata !1967, metadata !DIExpression()) #17, !dbg !3624
  %cmp.not.i246 = icmp eq ptr %29, null, !dbg !3626
  br i1 %cmp.not.i246, label %S_SvREFCNT_dec.exit, label %if.then.i, !dbg !3627

if.then.i:                                        ; preds = %if.end116
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 1, !dbg !3628
  %30 = load i32, ptr %sv_refcnt.i, align 8, !dbg !3628
  call void @llvm.dbg.value(metadata i32 %30, metadata !1973, metadata !DIExpression()) #17, !dbg !3629
  %cmp1.i = icmp ugt i32 %30, 1, !dbg !3630
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !3631

if.then4.i:                                       ; preds = %if.then.i
  %sub.i = add i32 %30, -1, !dbg !3632
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !3633
  br label %S_SvREFCNT_dec.exit, !dbg !3634

if.else.i:                                        ; preds = %if.then.i
  call void @Perl_sv_free2(ptr noundef nonnull %29, i32 noundef %30) #17, !dbg !3635
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.end116, %if.then4.i, %if.else.i
  store ptr null, ptr @PL_main_cv, align 8, !dbg !3636
  %call117 = call i64 @time(ptr noundef nonnull @PL_basetime) #17, !dbg !3637
  %31 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !3638
  call void @llvm.dbg.value(metadata i32 %31, metadata !3505, metadata !DIExpression()), !dbg !3514
  store i8 0, ptr @PL_dowarn, align 1, !dbg !3639
  %32 = load ptr, ptr @PL_top_env, align 8, !dbg !3640
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 1, !dbg !3640
  store ptr %32, ptr %je_prev, align 8, !dbg !3640
  %call118 = call i32 @__sigsetjmp(ptr noundef nonnull %cur_env, i32 noundef 0) #19, !dbg !3640
  %je_ret = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 2, !dbg !3640
  store i32 %call118, ptr %je_ret, align 8, !dbg !3640
  store ptr %cur_env, ptr @PL_top_env, align 8, !dbg !3640
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 3, !dbg !3640
  store i8 0, ptr %je_mustcatch, align 4, !dbg !3640
  call void @llvm.dbg.value(metadata i32 %call118, metadata !3506, metadata !DIExpression()), !dbg !3514
  switch i32 %call118, label %do.body174 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb127
    i32 2, label %sw.bb128
    i32 3, label %sw.bb149
  ], !dbg !3642

sw.bb:                                            ; preds = %S_SvREFCNT_dec.exit
  call void @llvm.dbg.value(metadata ptr %env, metadata !3643, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %xsinit, metadata !3648, metadata !DIExpression()) #17, !dbg !3691
  %33 = load i32, ptr @PL_origargc, align 4, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %33, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  %34 = load ptr, ptr @PL_origargv, align 8, !dbg !3695
  call void @llvm.dbg.value(metadata ptr %34, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr null, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %dosearch.i), !dbg !3696
  call void @llvm.dbg.declare(metadata ptr %dosearch.i, metadata !3653, metadata !DIExpression()) #17, !dbg !3697
  store volatile i8 0, ptr %dosearch.i, align 1, !dbg !3697
  call void @llvm.dbg.value(metadata i8 0, metadata !3656, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr null, metadata !3657, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr null, metadata !3658, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 0, metadata !3659, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i32 0, metadata !3660, metadata !DIExpression()) #17, !dbg !3691
  store i32 1, ptr @PL_phase, align 4, !dbg !3698
  %call.i.i = call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !3699
  %sv_refcnt.i.i = getelementptr inbounds %struct.hv, ptr %call.i.i, i64 0, i32 1, !dbg !3699
  %35 = load i32, ptr %sv_refcnt.i.i, align 8, !dbg !3699
  %inc.i.i = add i32 %35, 1, !dbg !3699
  store i32 %inc.i.i, ptr %sv_refcnt.i.i, align 8, !dbg !3699
  %call1.i.i = call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !3699
  store ptr %call1.i.i, ptr @PL_defstash, align 8, !dbg !3712
  store ptr %call1.i.i, ptr @PL_curstash, align 8, !dbg !3713
  %call2.i.i = call ptr @Perl_newSVpvn_share(ptr noundef nonnull @.str.77, i32 noundef 4, i32 noundef 0) #17, !dbg !3714
  store ptr %call2.i.i, ptr @PL_curstname, align 8, !dbg !3715
  %call3.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.4, i64 noundef 6, i32 noundef 129, i32 noundef 12) #17, !dbg !3716
  call void @llvm.dbg.value(metadata ptr %call3.i.i, metadata !3702, metadata !DIExpression()) #17, !dbg !3717
  %sv_u.i.i = getelementptr inbounds %struct.gv, ptr %call3.i.i, i64 0, i32 3, !dbg !3718
  %36 = load ptr, ptr %sv_u.i.i, align 8, !dbg !3718
  %gp_hv.i.i = getelementptr inbounds %struct.gp, ptr %36, i64 0, i32 5, !dbg !3718
  %37 = load ptr, ptr %gp_hv.i.i, align 8, !dbg !3718
  call void @llvm.dbg.value(metadata ptr %37, metadata !1967, metadata !DIExpression()) #17, !dbg !3719
  %cmp.not.i.i.i = icmp eq ptr %37, null, !dbg !3721
  br i1 %cmp.not.i.i.i, label %S_SvREFCNT_dec.exit.i.i, label %if.then.i.i.i, !dbg !3722

if.then.i.i.i:                                    ; preds = %sw.bb
  %sv_refcnt.i.i.i = getelementptr inbounds %struct.sv, ptr %37, i64 0, i32 1, !dbg !3723
  %38 = load i32, ptr %sv_refcnt.i.i.i, align 8, !dbg !3723
  call void @llvm.dbg.value(metadata i32 %38, metadata !1973, metadata !DIExpression()) #17, !dbg !3724
  %cmp1.i.i.i = icmp ugt i32 %38, 1, !dbg !3725
  br i1 %cmp1.i.i.i, label %if.then4.i.i.i, label %if.else.i.i.i, !dbg !3726

if.then4.i.i.i:                                   ; preds = %if.then.i.i.i
  %sub.i.i.i = add i32 %38, -1, !dbg !3727
  store i32 %sub.i.i.i, ptr %sv_refcnt.i.i.i, align 8, !dbg !3728
  br label %S_SvREFCNT_dec.exit.i.i, !dbg !3729

if.else.i.i.i:                                    ; preds = %if.then.i.i.i
  call void @Perl_sv_free2(ptr noundef nonnull %37, i32 noundef %38) #17, !dbg !3730
  br label %S_SvREFCNT_dec.exit.i.i

S_SvREFCNT_dec.exit.i.i:                          ; preds = %if.else.i.i.i, %if.then4.i.i.i, %sw.bb
  %39 = load ptr, ptr @PL_defstash, align 8, !dbg !3731
  call void @Perl_hv_name_set(ptr noundef %39, ptr noundef nonnull @.str.77, i32 noundef 4, i32 noundef 0) #17, !dbg !3731
  %40 = load ptr, ptr @PL_defstash, align 8, !dbg !3732
  call void @llvm.dbg.value(metadata ptr %40, metadata !3392, metadata !DIExpression()) #17, !dbg !3733
  %cmp.not.i120.i.i = icmp eq ptr %40, null, !dbg !3735
  br i1 %cmp.not.i120.i.i, label %S_SvREFCNT_inc.exit.i.i, label %if.then.i122.i.i, !dbg !3736

if.then.i122.i.i:                                 ; preds = %S_SvREFCNT_dec.exit.i.i
  %sv_refcnt.i121.i.i = getelementptr inbounds %struct.sv, ptr %40, i64 0, i32 1, !dbg !3737
  %41 = load i32, ptr %sv_refcnt.i121.i.i, align 8, !dbg !3738
  %inc.i.i.i = add i32 %41, 1, !dbg !3738
  store i32 %inc.i.i.i, ptr %sv_refcnt.i121.i.i, align 8, !dbg !3738
  br label %S_SvREFCNT_inc.exit.i.i, !dbg !3737

S_SvREFCNT_inc.exit.i.i:                          ; preds = %if.then.i122.i.i, %S_SvREFCNT_dec.exit.i.i
  %42 = load ptr, ptr %sv_u.i.i, align 8, !dbg !3739
  %gp_hv7.i.i = getelementptr inbounds %struct.gp, ptr %42, i64 0, i32 5, !dbg !3739
  store ptr %40, ptr %gp_hv7.i.i, align 8, !dbg !3740
  %sv_flags.i.i = getelementptr inbounds %struct.gv, ptr %call3.i.i, i64 0, i32 2, !dbg !3741
  %43 = load i32, ptr %sv_flags.i.i, align 4, !dbg !3741
  %or.i.i = or i32 %43, 134283264, !dbg !3741
  store i32 %or.i.i, ptr %sv_flags.i.i, align 4, !dbg !3741
  %call8.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.80, i64 noundef 3, i32 noundef 129, i32 noundef 11) #17, !dbg !3742
  %call9.i.i = call ptr @Perl_gv_add_by_type(ptr noundef %call8.i.i, i32 noundef 11) #17, !dbg !3742
  %call10.i.i = call ptr @Perl_gv_add_by_type(ptr noundef %call9.i.i, i32 noundef 12) #17, !dbg !3742
  store ptr %call10.i.i, ptr @PL_incgv, align 8, !dbg !3743
  %tobool.not.i.i = icmp eq ptr %call10.i.i, null, !dbg !3744
  br i1 %tobool.not.i.i, label %do.end.i.i, label %if.then.i.i, !dbg !3747

if.then.i.i:                                      ; preds = %S_SvREFCNT_inc.exit.i.i
  %sv_refcnt11.i.i = getelementptr inbounds %struct.gv, ptr %call10.i.i, i64 0, i32 1, !dbg !3744
  %44 = load i32, ptr %sv_refcnt11.i.i, align 8, !dbg !3744
  %inc12.i.i = add i32 %44, 1, !dbg !3744
  store i32 %inc12.i.i, ptr %sv_refcnt11.i.i, align 8, !dbg !3744
  br label %do.end.i.i, !dbg !3744

do.end.i.i:                                       ; preds = %if.then.i.i, %S_SvREFCNT_inc.exit.i.i
  %45 = load ptr, ptr %call10.i.i, align 8, !dbg !3748
  %xpv_cur.i.i = getelementptr inbounds %struct.xpvgv, ptr %45, i64 0, i32 2, !dbg !3748
  %46 = load i64, ptr %xpv_cur.i.i, align 8, !dbg !3748
  %or13.i.i = or i64 %46, 2, !dbg !3748
  store i64 %or13.i.i, ptr %xpv_cur.i.i, align 8, !dbg !3748
  %call14.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.81, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17, !dbg !3749
  store ptr %call14.i.i, ptr @PL_hintgv, align 8, !dbg !3750
  %tobool16.not.i.i = icmp eq ptr %call14.i.i, null, !dbg !3751
  br i1 %tobool16.not.i.i, label %do.end22.i.i, label %if.then17.i.i, !dbg !3754

if.then17.i.i:                                    ; preds = %do.end.i.i
  %sv_refcnt18.i.i = getelementptr inbounds %struct.gv, ptr %call14.i.i, i64 0, i32 1, !dbg !3751
  %47 = load i32, ptr %sv_refcnt18.i.i, align 8, !dbg !3751
  %inc19.i.i = add i32 %47, 1, !dbg !3751
  store i32 %inc19.i.i, ptr %sv_refcnt18.i.i, align 8, !dbg !3751
  br label %do.end22.i.i, !dbg !3751

do.end22.i.i:                                     ; preds = %if.then17.i.i, %do.end.i.i
  %48 = load ptr, ptr %call14.i.i, align 8, !dbg !3755
  %xpv_cur24.i.i = getelementptr inbounds %struct.xpvgv, ptr %48, i64 0, i32 2, !dbg !3755
  %49 = load i64, ptr %xpv_cur24.i.i, align 8, !dbg !3755
  %or25.i.i = or i64 %49, 2, !dbg !3755
  store i64 %or25.i.i, ptr %xpv_cur24.i.i, align 8, !dbg !3755
  %call26.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.82, i64 noundef 1, i32 noundef 129, i32 noundef 11) #17, !dbg !3756
  store ptr %call26.i.i, ptr @PL_defgv, align 8, !dbg !3757
  %tobool28.not.i.i = icmp eq ptr %call26.i.i, null, !dbg !3758
  br i1 %tobool28.not.i.i, label %do.end34.i.i, label %if.then29.i.i, !dbg !3761

if.then29.i.i:                                    ; preds = %do.end22.i.i
  %sv_refcnt30.i.i = getelementptr inbounds %struct.gv, ptr %call26.i.i, i64 0, i32 1, !dbg !3758
  %50 = load i32, ptr %sv_refcnt30.i.i, align 8, !dbg !3758
  %inc31.i.i = add i32 %50, 1, !dbg !3758
  store i32 %inc31.i.i, ptr %sv_refcnt30.i.i, align 8, !dbg !3758
  br label %do.end34.i.i, !dbg !3758

do.end34.i.i:                                     ; preds = %if.then29.i.i, %do.end22.i.i
  %call35.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.83, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17, !dbg !3762
  store ptr %call35.i.i, ptr @PL_errgv, align 8, !dbg !3763
  %tobool37.not.i.i = icmp eq ptr %call35.i.i, null, !dbg !3764
  br i1 %tobool37.not.i.i, label %do.end43.i.i, label %if.then38.i.i, !dbg !3767

if.then38.i.i:                                    ; preds = %do.end34.i.i
  %sv_refcnt39.i.i = getelementptr inbounds %struct.gv, ptr %call35.i.i, i64 0, i32 1, !dbg !3764
  %51 = load i32, ptr %sv_refcnt39.i.i, align 8, !dbg !3764
  %inc40.i.i = add i32 %51, 1, !dbg !3764
  store i32 %inc40.i.i, ptr %sv_refcnt39.i.i, align 8, !dbg !3764
  br label %do.end43.i.i, !dbg !3764

do.end43.i.i:                                     ; preds = %if.then38.i.i, %do.end34.i.i
  %52 = load ptr, ptr %call35.i.i, align 8, !dbg !3768
  %xpv_cur45.i.i = getelementptr inbounds %struct.xpvgv, ptr %52, i64 0, i32 2, !dbg !3768
  %53 = load i64, ptr %xpv_cur45.i.i, align 8, !dbg !3768
  %or46.i.i = or i64 %53, 2, !dbg !3768
  store i64 %or46.i.i, ptr %xpv_cur45.i.i, align 8, !dbg !3768
  %call47.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.84, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17, !dbg !3769
  store ptr %call47.i.i, ptr @PL_replgv, align 8, !dbg !3770
  %tobool49.not.i.i = icmp eq ptr %call47.i.i, null, !dbg !3771
  br i1 %tobool49.not.i.i, label %do.end55.i.i, label %if.then50.i.i, !dbg !3774

if.then50.i.i:                                    ; preds = %do.end43.i.i
  %sv_refcnt51.i.i = getelementptr inbounds %struct.gv, ptr %call47.i.i, i64 0, i32 1, !dbg !3771
  %54 = load i32, ptr %sv_refcnt51.i.i, align 8, !dbg !3771
  %inc52.i.i = add i32 %54, 1, !dbg !3771
  store i32 %inc52.i.i, ptr %sv_refcnt51.i.i, align 8, !dbg !3771
  br label %do.end55.i.i, !dbg !3771

do.end55.i.i:                                     ; preds = %if.then50.i.i, %do.end43.i.i
  %55 = load ptr, ptr %call47.i.i, align 8, !dbg !3775
  %xpv_cur57.i.i = getelementptr inbounds %struct.xpvgv, ptr %55, i64 0, i32 2, !dbg !3775
  %56 = load i64, ptr %xpv_cur57.i.i, align 8, !dbg !3775
  %or58.i.i = or i64 %56, 2, !dbg !3775
  store i64 %or58.i.i, ptr %xpv_cur57.i.i, align 8, !dbg !3775
  %call59.i.i = call ptr (ptr, ...) @Perl_form(ptr noundef nonnull @.str.85, ptr noundef nonnull @.str.1) #17, !dbg !3776
  %57 = load ptr, ptr @PL_errgv, align 8, !dbg !3777
  %call60.i.i = call ptr @Perl_gv_add_by_type(ptr noundef %57, i32 noundef 0) #17, !dbg !3777
  %58 = load ptr, ptr @PL_errgv, align 8, !dbg !3778
  %sv_u61.i.i = getelementptr inbounds %struct.gv, ptr %58, i64 0, i32 3, !dbg !3778
  %59 = load ptr, ptr %sv_u61.i.i, align 8, !dbg !3778
  %60 = load ptr, ptr %59, align 8, !dbg !3778
  %tobool63.not.i.i = icmp eq ptr %60, null, !dbg !3778
  br i1 %tobool63.not.i.i, label %cond.false.i.i, label %cond.end.i.i, !dbg !3778

cond.false.i.i:                                   ; preds = %do.end55.i.i
  %call67.i.i = call ptr @Perl_gv_add_by_type(ptr noundef nonnull %58, i32 noundef 0) #17, !dbg !3778
  %sv_u68.i.i = getelementptr inbounds %struct.gv, ptr %call67.i.i, i64 0, i32 3, !dbg !3778
  %61 = load ptr, ptr %sv_u68.i.i, align 8, !dbg !3778
  %.pre.i.i = load ptr, ptr %61, align 8, !dbg !3778
  br label %cond.end.i.i, !dbg !3778

cond.end.i.i:                                     ; preds = %cond.false.i.i, %do.end55.i.i
  %62 = phi ptr [ %.pre.i.i, %cond.false.i.i ], [ %60, %do.end55.i.i ], !dbg !3778
  %call71.i.i = call ptr @Perl_sv_grow(ptr noundef %62, i64 noundef 240) #17, !dbg !3778
  %63 = load ptr, ptr @PL_errgv, align 8, !dbg !3779
  %sv_u73.i.i = getelementptr inbounds %struct.gv, ptr %63, i64 0, i32 3, !dbg !3779
  %64 = load ptr, ptr %sv_u73.i.i, align 8, !dbg !3779
  call void @llvm.dbg.value(metadata ptr %64, metadata !3703, metadata !DIExpression()) #17, !dbg !3780
  %65 = load ptr, ptr %64, align 8, !dbg !3781
  %tobool76.not.i.i = icmp eq ptr %65, null, !dbg !3781
  br i1 %tobool76.not.i.i, label %clresv_newemptypv.i.i, label %if.else.i.i, !dbg !3779

if.else.i.i:                                      ; preds = %cond.end.i.i
  %sv_flags78.i.i = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 2, !dbg !3782
  %66 = load i32, ptr %sv_flags78.i.i, align 4, !dbg !3782
  %and.i.i = and i32 %66, 134283264, !dbg !3782
  %tobool79.not.i.i = icmp eq i32 %and.i.i, 0, !dbg !3782
  br i1 %tobool79.not.i.i, label %if.else82.i.i, label %if.then80.i.i, !dbg !3781

if.then80.i.i:                                    ; preds = %if.else.i.i
  call void @llvm.dbg.value(metadata ptr %65, metadata !3783, metadata !DIExpression()) #17, !dbg !3787
  %sv_refcnt.i123.i.i = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 1, !dbg !3789
  %67 = load i32, ptr %sv_refcnt.i123.i.i, align 8, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %67, metadata !3786, metadata !DIExpression()) #17, !dbg !3787
  %cmp.i.i.i = icmp ugt i32 %67, 1, !dbg !3790
  br i1 %cmp.i.i.i, label %if.then.i125.i.i, label %if.else.i126.i.i, !dbg !3792

if.then.i125.i.i:                                 ; preds = %if.then80.i.i
  %sub.i124.i.i = add i32 %67, -1, !dbg !3793
  store i32 %sub.i124.i.i, ptr %sv_refcnt.i123.i.i, align 8, !dbg !3794
  br label %clresv_newemptypv.i.i, !dbg !3795

if.else.i126.i.i:                                 ; preds = %if.then80.i.i
  call void @Perl_sv_free2(ptr noundef nonnull %65, i32 noundef %67) #17, !dbg !3796
  br label %clresv_newemptypv.i.i

clresv_newemptypv.i.i:                            ; preds = %if.else.i126.i.i, %if.then.i125.i.i, %cond.end.i.i
  call void @llvm.dbg.label(metadata !3709) #17, !dbg !3797
  %call81.i.i = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !3797
  store ptr %call81.i.i, ptr %64, align 8, !dbg !3797
  br label %if.end94.i.i, !dbg !3797

if.else82.i.i:                                    ; preds = %if.else.i.i
  call void @llvm.dbg.value(metadata ptr %65, metadata !3705, metadata !DIExpression()) #17, !dbg !3798
  call void @Perl_sv_setpvn(ptr noundef nonnull %65, ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !3799
  %68 = load i32, ptr %sv_flags78.i.i, align 4, !dbg !3799
  %and84.i.i = and i32 %68, 1610547455, !dbg !3799
  %or86.i.i = or i32 %and84.i.i, 17408, !dbg !3799
  store i32 %or86.i.i, ptr %sv_flags78.i.i, align 4, !dbg !3799
  %and88.i.i = and i32 %68, 14680064, !dbg !3800
  %tobool89.not.i.i = icmp eq i32 %and88.i.i, 0, !dbg !3800
  br i1 %tobool89.not.i.i, label %if.end94.i.i, label %if.then90.i.i, !dbg !3799

if.then90.i.i:                                    ; preds = %if.else82.i.i
  %call91.i.i = call i32 @Perl_mg_free(ptr noundef nonnull %65) #17, !dbg !3802
  br label %if.end94.i.i, !dbg !3802

if.end94.i.i:                                     ; preds = %if.then90.i.i, %if.else82.i.i, %clresv_newemptypv.i.i
  %69 = load ptr, ptr @PL_curstash, align 8, !dbg !3804
  %70 = load ptr, ptr @PL_defstash, align 8, !dbg !3804
  %cmp.not.i.i = icmp eq ptr %69, %70, !dbg !3804
  br i1 %cmp.not.i.i, label %if.end99.i.i, label %if.then97.i.i, !dbg !3806

if.then97.i.i:                                    ; preds = %if.end94.i.i
  call void @llvm.dbg.value(metadata ptr %69, metadata !1967, metadata !DIExpression()) #17, !dbg !3807
  %cmp.not.i127.i.i = icmp eq ptr %69, null, !dbg !3810
  br i1 %cmp.not.i127.i.i, label %S_SvREFCNT_dec.exit134.i.i, label %if.then.i130.i.i, !dbg !3811

if.then.i130.i.i:                                 ; preds = %if.then97.i.i
  %sv_refcnt.i128.i.i = getelementptr inbounds %struct.sv, ptr %69, i64 0, i32 1, !dbg !3812
  %71 = load i32, ptr %sv_refcnt.i128.i.i, align 8, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %71, metadata !1973, metadata !DIExpression()) #17, !dbg !3813
  %cmp1.i129.i.i = icmp ugt i32 %71, 1, !dbg !3814
  br i1 %cmp1.i129.i.i, label %if.then4.i132.i.i, label %if.else.i133.i.i, !dbg !3815

if.then4.i132.i.i:                                ; preds = %if.then.i130.i.i
  %sub.i131.i.i = add i32 %71, -1, !dbg !3816
  store i32 %sub.i131.i.i, ptr %sv_refcnt.i128.i.i, align 8, !dbg !3817
  br label %S_SvREFCNT_dec.exit134.i.i, !dbg !3818

if.else.i133.i.i:                                 ; preds = %if.then.i130.i.i
  call void @Perl_sv_free2(ptr noundef nonnull %69, i32 noundef %71) #17, !dbg !3819
  %.pr.pre.i.i = load ptr, ptr @PL_defstash, align 8, !dbg !3820
  br label %S_SvREFCNT_dec.exit134.i.i

S_SvREFCNT_dec.exit134.i.i:                       ; preds = %if.else.i133.i.i, %if.then4.i132.i.i, %if.then97.i.i
  %72 = phi ptr [ %70, %if.then97.i.i ], [ %.pr.pre.i.i, %if.else.i133.i.i ], [ %70, %if.then4.i132.i.i ], !dbg !3820
  call void @llvm.dbg.value(metadata ptr %72, metadata !3392, metadata !DIExpression()) #17, !dbg !3821
  %cmp.not.i135.i.i = icmp eq ptr %72, null, !dbg !3823
  br i1 %cmp.not.i135.i.i, label %S_SvREFCNT_inc.exit139.i.i, label %if.then.i138.i.i, !dbg !3824

if.then.i138.i.i:                                 ; preds = %S_SvREFCNT_dec.exit134.i.i
  %sv_refcnt.i136.i.i = getelementptr inbounds %struct.sv, ptr %72, i64 0, i32 1, !dbg !3825
  %73 = load i32, ptr %sv_refcnt.i136.i.i, align 8, !dbg !3826
  %inc.i137.i.i = add i32 %73, 1, !dbg !3826
  store i32 %inc.i137.i.i, ptr %sv_refcnt.i136.i.i, align 8, !dbg !3826
  br label %S_SvREFCNT_inc.exit139.i.i, !dbg !3825

S_SvREFCNT_inc.exit139.i.i:                       ; preds = %if.then.i138.i.i, %S_SvREFCNT_dec.exit134.i.i
  store ptr %72, ptr @PL_curstash, align 8, !dbg !3820
  br label %if.end99.i.i, !dbg !3820

if.end99.i.i:                                     ; preds = %S_SvREFCNT_inc.exit139.i.i, %if.end94.i.i
  %74 = phi ptr [ %72, %S_SvREFCNT_inc.exit139.i.i ], [ %69, %if.end94.i.i ], !dbg !3827
  store ptr %74, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 8), align 8, !dbg !3827
  %call100.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.86, i64 noundef 4, i32 noundef 2, i32 noundef 12) #17, !dbg !3828
  %sv_u101.i.i = getelementptr inbounds %struct.gv, ptr %call100.i.i, i64 0, i32 3, !dbg !3828
  %75 = load ptr, ptr %sv_u101.i.i, align 8, !dbg !3828
  %gp_hv103.i.i = getelementptr inbounds %struct.gp, ptr %75, i64 0, i32 5, !dbg !3828
  %76 = load ptr, ptr %gp_hv103.i.i, align 8, !dbg !3828
  store ptr %76, ptr @PL_debstash, align 8, !dbg !3829
  %call104.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.87, i64 noundef 14, i32 noundef 2, i32 noundef 12) #17, !dbg !3830
  %sv_u105.i.i = getelementptr inbounds %struct.gv, ptr %call104.i.i, i64 0, i32 3, !dbg !3830
  %77 = load ptr, ptr %sv_u105.i.i, align 8, !dbg !3830
  %gp_hv107.i.i = getelementptr inbounds %struct.gp, ptr %77, i64 0, i32 5, !dbg !3830
  %78 = load ptr, ptr %gp_hv107.i.i, align 8, !dbg !3830
  store ptr %78, ptr @PL_globalstash, align 8, !dbg !3831
  call void @llvm.dbg.value(metadata ptr @.str.17, metadata !3832, metadata !DIExpression()) #17, !dbg !3839
  call void @llvm.dbg.value(metadata i32 1, metadata !3837, metadata !DIExpression()) #17, !dbg !3839
  %call.i.i.i = call ptr @Perl_gv_fetchpv(ptr noundef nonnull @.str.17, i32 noundef 1, i32 noundef 3) #17, !dbg !3841
  call void @llvm.dbg.value(metadata ptr %call.i.i.i, metadata !3838, metadata !DIExpression()) #17, !dbg !3839
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null, !dbg !3842
  br i1 %tobool.not.i.i.i, label %S_init_main_stash.exit.i, label %if.then.i140.i.i, !dbg !3844

if.then.i140.i.i:                                 ; preds = %if.end99.i.i
  %sv_u.i.i.i = getelementptr inbounds %struct.gv, ptr %call.i.i.i, i64 0, i32 3, !dbg !3845
  %79 = load ptr, ptr %sv_u.i.i.i, align 8, !dbg !3845
  %80 = load ptr, ptr %79, align 8, !dbg !3845
  br label %S_init_main_stash.exit.i, !dbg !3846

S_init_main_stash.exit.i:                         ; preds = %if.then.i140.i.i, %if.end99.i.i
  %retval.0.i.i.i = phi ptr [ %80, %if.then.i140.i.i ], [ null, %if.end99.i.i ], !dbg !3839
  call void @Perl_sv_setpvn(ptr noundef %retval.0.i.i.i, ptr noundef nonnull @.str, i64 noundef 1) #17, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %33, metadata !3650, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %34, metadata !3651, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)) #17, !dbg !3691
  %argv.0165.i = getelementptr inbounds ptr, ptr %34, i64 1, !dbg !3848
  %argc.0166.i = add nsw i32 %33, -1, !dbg !3848
  call void @llvm.dbg.value(metadata i32 %argc.0166.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %argv.0165.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr null, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 0, metadata !3656, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr null, metadata !3657, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 0, metadata !3659, metadata !DIExpression()) #17, !dbg !3691
  %cmp167.i = icmp sgt i32 %33, 1, !dbg !3849
  br i1 %cmp167.i, label %for.body.i, label %switch_end.i, !dbg !3850

for.body.i:                                       ; preds = %S_init_main_stash.exit.i, %for.inc.i
  %argc.0184.i = phi i32 [ %argc.0.i, %for.inc.i ], [ %argc.0166.i, %S_init_main_stash.exit.i ]
  %argv.0183.i = phi ptr [ %argv.0.i, %for.inc.i ], [ %argv.0165.i, %S_init_main_stash.exit.i ]
  %argc.0.in182.i = phi i32 [ %argc.3.i, %for.inc.i ], [ %33, %S_init_main_stash.exit.i ]
  %.pn181.i = phi ptr [ %argv.3.i, %for.inc.i ], [ %34, %S_init_main_stash.exit.i ]
  %scriptname.0180.i = phi ptr [ %scriptname.1.ph.i, %for.inc.i ], [ null, %S_init_main_stash.exit.i ]
  %doextract.0176.i = phi i8 [ %doextract.1.i, %for.inc.i ], [ 0, %S_init_main_stash.exit.i ]
  %cddir.0172.i = phi ptr [ %cddir.1.i, %for.inc.i ], [ null, %S_init_main_stash.exit.i ]
  %add_read_e_script.0168.i = phi i8 [ %add_read_e_script.2.i, %for.inc.i ], [ 0, %S_init_main_stash.exit.i ]
  call void @llvm.dbg.value(metadata ptr %scriptname.0180.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 %doextract.0176.i, metadata !3656, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %cddir.0172.i, metadata !3657, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 %add_read_e_script.0168.i, metadata !3659, metadata !DIExpression()) #17, !dbg !3691
  %81 = load ptr, ptr %argv.0183.i, align 8, !dbg !3851
  %82 = load i8, ptr %81, align 1, !dbg !3851
  %cmp2.not.i = icmp eq i8 %82, 45, !dbg !3853
  br i1 %cmp2.not.i, label %lor.lhs.false.i, label %switch_end.i, !dbg !3854

lor.lhs.false.i:                                  ; preds = %for.body.i
  %arrayidx5.i = getelementptr inbounds i8, ptr %81, i64 1, !dbg !3855
  %83 = load i8, ptr %arrayidx5.i, align 1, !dbg !3855
  %tobool.not.i = icmp eq i8 %83, 0, !dbg !3855
  br i1 %tobool.not.i, label %switch_end.i, label %reswitch.outer.i, !dbg !3856

reswitch.outer.i:                                 ; preds = %lor.lhs.false.i, %if.end71.i
  %s.0.ph.i = phi ptr [ %s.2.i, %if.end71.i ], [ %arrayidx5.i, %lor.lhs.false.i ]
  %scriptname.1.ph.i = phi ptr [ @.str.63, %if.end71.i ], [ %scriptname.0180.i, %lor.lhs.false.i ]
  br label %reswitch.i, !dbg !3857

reswitch.i:                                       ; preds = %reswitch.i.backedge, %reswitch.outer.i
  %s.0.i = phi ptr [ %s.0.ph.i, %reswitch.outer.i ], [ %s.0.i.be, %reswitch.i.backedge ], !dbg !3858
  call void @llvm.dbg.value(metadata ptr %scriptname.1.ph.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %s.0.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  call void @llvm.dbg.label(metadata !3689) #17, !dbg !3860
  %84 = load i8, ptr %s.0.i, align 1, !dbg !3861
  call void @llvm.dbg.value(metadata i8 %84, metadata !3655, metadata !DIExpression()) #17, !dbg !3691
  %conv7.i = sext i8 %84 to i32, !dbg !3862
  switch i32 %conv7.i, label %sw.default.i [
    i32 67, label %sw.bb.i
    i32 13, label %sw.bb.i
    i32 32, label %sw.bb.i
    i32 48, label %sw.bb.i
    i32 70, label %sw.bb.i
    i32 97, label %sw.bb.i
    i32 99, label %sw.bb.i
    i32 100, label %sw.bb.i
    i32 68, label %sw.bb.i
    i32 104, label %sw.bb.i
    i32 105, label %sw.bb.i
    i32 108, label %sw.bb.i
    i32 77, label %sw.bb.i
    i32 109, label %sw.bb.i
    i32 110, label %sw.bb.i
    i32 112, label %sw.bb.i
    i32 115, label %sw.bb.i
    i32 117, label %sw.bb.i
    i32 85, label %sw.bb.i
    i32 118, label %sw.bb.i
    i32 87, label %sw.bb.i
    i32 88, label %sw.bb.i
    i32 119, label %sw.bb.i
    i32 116, label %sw.bb11.i
    i32 84, label %sw.bb16.i
    i32 69, label %sw.bb18.i
    i32 101, label %sw.bb19.i
    i32 102, label %sw.bb37.i
    i32 73, label %sw.bb39.i
    i32 83, label %sw.bb57.i
    i32 86, label %sw.bb59.i
    i32 120, label %sw.bb72.i
    i32 0, label %for.inc.i
    i32 45, label %sw.bb77.i
  ], !dbg !3857

sw.bb.i:                                          ; preds = %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i, %reswitch.i
  %call.i247 = call ptr @Perl_moreswitches(ptr noundef nonnull %s.0.i) #17, !dbg !3863
  call void @llvm.dbg.value(metadata ptr %call.i247, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %tobool8.not.i = icmp eq ptr %call.i247, null, !dbg !3865
  br i1 %tobool8.not.i, label %for.inc.i, label %reswitch.i.backedge, !dbg !3866

sw.bb11.i:                                        ; preds = %reswitch.i
  %85 = load i8, ptr @PL_tainting, align 1, !dbg !3867, !range !1483
  %tobool12.not.i = icmp eq i8 %85, 0, !dbg !3867
  br i1 %tobool12.not.i, label %if.then13.i, label %if.end14.i, !dbg !3869

if.then13.i:                                      ; preds = %sw.bb11.i
  store i8 1, ptr @PL_taint_warn, align 1, !dbg !3870
  store i8 1, ptr @PL_tainting, align 1, !dbg !3872
  br label %if.end14.i, !dbg !3873

if.end14.i:                                       ; preds = %if.then13.i, %sw.bb11.i
  %incdec.ptr15.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3874
  call void @llvm.dbg.value(metadata ptr %incdec.ptr15.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  br label %reswitch.i.backedge, !dbg !3875

sw.bb16.i:                                        ; preds = %reswitch.i
  store i8 1, ptr @PL_tainting, align 1, !dbg !3876
  store i8 0, ptr @PL_taint_warn, align 1, !dbg !3877
  %incdec.ptr17.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3878
  call void @llvm.dbg.value(metadata ptr %incdec.ptr17.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  br label %reswitch.i.backedge, !dbg !3879

sw.bb18.i:                                        ; preds = %reswitch.i
  store i8 1, ptr @PL_minus_E, align 1, !dbg !3880
  br label %sw.bb19.i, !dbg !3881

sw.bb19.i:                                        ; preds = %reswitch.i, %sw.bb18.i
  %conv7.i377 = sext i8 %84 to i32, !dbg !3862
  %86 = load ptr, ptr @PL_e_script, align 8, !dbg !3882
  %tobool20.not.i = icmp eq ptr %86, null, !dbg !3882
  br i1 %tobool20.not.i, label %if.then21.i, label %if.end23.i, !dbg !3884

if.then21.i:                                      ; preds = %sw.bb19.i
  %call22.i = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !3885
  store ptr %call22.i, ptr @PL_e_script, align 8, !dbg !3887
  call void @llvm.dbg.value(metadata i8 1, metadata !3659, metadata !DIExpression()) #17, !dbg !3691
  br label %if.end23.i, !dbg !3888

if.end23.i:                                       ; preds = %if.then21.i, %sw.bb19.i
  %87 = phi ptr [ %86, %sw.bb19.i ], [ %call22.i, %if.then21.i ]
  %add_read_e_script.1.i = phi i8 [ %add_read_e_script.0168.i, %sw.bb19.i ], [ 1, %if.then21.i ], !dbg !3691
  call void @llvm.dbg.value(metadata i8 %add_read_e_script.1.i, metadata !3659, metadata !DIExpression()) #17, !dbg !3691
  %incdec.ptr24.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3889
  call void @llvm.dbg.value(metadata ptr %incdec.ptr24.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %88 = load i8, ptr %incdec.ptr24.i, align 1, !dbg !3891
  %tobool25.not.i = icmp eq i8 %88, 0, !dbg !3891
  br i1 %tobool25.not.i, label %if.else.i248, label %if.then26.i, !dbg !3892

if.then26.i:                                      ; preds = %if.end23.i
  call void @Perl_sv_catpv(ptr noundef %87, ptr noundef nonnull %incdec.ptr24.i) #17, !dbg !3893
  br label %if.end36.i, !dbg !3893

if.else.i248:                                     ; preds = %if.end23.i
  %arrayidx27.i = getelementptr inbounds ptr, ptr %.pn181.i, i64 2, !dbg !3894
  %89 = load ptr, ptr %arrayidx27.i, align 8, !dbg !3894
  %tobool28.not.i = icmp eq ptr %89, null, !dbg !3894
  br i1 %tobool28.not.i, label %if.else33.i, label %if.then29.i, !dbg !3896

if.then29.i:                                      ; preds = %if.else.i248
  call void @Perl_sv_catpv(ptr noundef %87, ptr noundef nonnull %89) #17, !dbg !3897
  %dec31.i = add nsw i32 %argc.0.in182.i, -2, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %dec31.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %arrayidx27.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  br label %if.end36.i, !dbg !3900

if.else33.i:                                      ; preds = %if.else.i248
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.60, i32 noundef %conv7.i377) #17, !dbg !3901
  br label %if.end36.i

if.end36.i:                                       ; preds = %if.else33.i, %if.then29.i, %if.then26.i
  %argv.1.i = phi ptr [ %argv.0183.i, %if.then26.i ], [ %arrayidx27.i, %if.then29.i ], [ %argv.0183.i, %if.else33.i ], !dbg !3848
  %argc.1.i = phi i32 [ %argc.0184.i, %if.then26.i ], [ %dec31.i, %if.then29.i ], [ %argc.0184.i, %if.else33.i ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %argc.1.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %argv.1.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  %90 = load ptr, ptr @PL_e_script, align 8, !dbg !3902
  call void @Perl_sv_catpvn_flags(ptr noundef %90, ptr noundef nonnull @.str, i64 noundef 1, i32 noundef 2) #17, !dbg !3902
  br label %for.inc.i, !dbg !3903

sw.bb37.i:                                        ; preds = %reswitch.i
  %incdec.ptr38.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3904
  call void @llvm.dbg.value(metadata ptr %incdec.ptr38.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  br label %reswitch.i.backedge, !dbg !3905

sw.bb39.i:                                        ; preds = %reswitch.i
  %incdec.ptr40.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3906
  call void @llvm.dbg.value(metadata ptr %incdec.ptr40.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %91 = load i8, ptr %incdec.ptr40.i, align 1, !dbg !3908
  %tobool41.not.i = icmp eq i8 %91, 0, !dbg !3908
  br i1 %tobool41.not.i, label %land.lhs.true.i, label %if.then53.i, !dbg !3909

land.lhs.true.i:                                  ; preds = %sw.bb39.i
  %arrayidx42.i = getelementptr inbounds ptr, ptr %.pn181.i, i64 2, !dbg !3910
  %92 = load ptr, ptr %arrayidx42.i, align 8, !dbg !3910
  call void @llvm.dbg.value(metadata ptr %92, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %cmp43.not.i = icmp eq ptr %92, null, !dbg !3911
  br i1 %cmp43.not.i, label %if.else55.i, label %land.lhs.true50.i, !dbg !3912

land.lhs.true50.i:                                ; preds = %land.lhs.true.i
  %dec46.i = add nsw i32 %argc.0.in182.i, -2, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %dec46.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %arrayidx42.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  %.pr.i = load i8, ptr %92, align 1, !dbg !3915
  call void @llvm.dbg.value(metadata i32 undef, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr undef, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr undef, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %tobool52.not.i = icmp eq i8 %.pr.i, 0, !dbg !3915
  br i1 %tobool52.not.i, label %if.else55.i, label %if.then53.i, !dbg !3916

if.then53.i:                                      ; preds = %land.lhs.true50.i, %sw.bb39.i
  %argc.2.ph98.i = phi i32 [ %dec46.i, %land.lhs.true50.i ], [ %argc.0184.i, %sw.bb39.i ]
  %argv.2.ph97.i = phi ptr [ %arrayidx42.i, %land.lhs.true50.i ], [ %argv.0183.i, %sw.bb39.i ]
  %s.1.ph96.i = phi ptr [ %92, %land.lhs.true50.i ], [ %incdec.ptr40.i, %sw.bb39.i ]
  %call54.i = call i64 @strlen(ptr noundef nonnull %s.1.ph96.i) #21, !dbg !3917
  call void @llvm.dbg.value(metadata i64 %call54.i, metadata !3663, metadata !DIExpression()) #17, !dbg !3918
  call fastcc void @S_incpush(ptr noundef nonnull %s.1.ph96.i, i64 noundef %call54.i, i32 noundef 14) #17, !dbg !3919
  br label %for.inc.i, !dbg !3920

if.else55.i:                                      ; preds = %land.lhs.true50.i, %land.lhs.true.i
  %argc.291.i = phi i32 [ %dec46.i, %land.lhs.true50.i ], [ %argc.0184.i, %land.lhs.true.i ]
  %argv.289.i = phi ptr [ %arrayidx42.i, %land.lhs.true50.i ], [ %argv.0183.i, %land.lhs.true.i ]
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.25) #17, !dbg !3921
  br label %for.inc.i

sw.bb57.i:                                        ; preds = %reswitch.i
  store volatile i8 1, ptr %dosearch.i, align 1, !dbg !3922
  %incdec.ptr58.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3923
  call void @llvm.dbg.value(metadata ptr %incdec.ptr58.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  br label %reswitch.i.backedge, !dbg !3924

reswitch.i.backedge:                              ; preds = %sw.bb57.i, %sw.bb37.i, %sw.bb16.i, %if.end14.i, %sw.bb.i
  %s.0.i.be = phi ptr [ %incdec.ptr58.i, %sw.bb57.i ], [ %incdec.ptr38.i, %sw.bb37.i ], [ %incdec.ptr17.i, %sw.bb16.i ], [ %incdec.ptr15.i, %if.end14.i ], [ %call.i247, %sw.bb.i ]
  br label %reswitch.i, !dbg !3691

sw.bb59.i:                                        ; preds = %reswitch.i
  %incdec.ptr60.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3925
  call void @llvm.dbg.value(metadata ptr %incdec.ptr60.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %93 = load i8, ptr %incdec.ptr60.i, align 1, !dbg !3927
  %cmp62.not.i = icmp eq i8 %93, 58, !dbg !3928
  br i1 %cmp62.not.i, label %if.else66.i, label %if.then64.i, !dbg !3929

if.then64.i:                                      ; preds = %sw.bb59.i
  %call65.i = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.61, i64 noundef 24) #17, !dbg !3930
  call void @llvm.dbg.value(metadata ptr %call65.i, metadata !3670, metadata !DIExpression()) #17, !dbg !3932
  br label %if.end71.i, !dbg !3933

if.else66.i:                                      ; preds = %sw.bb59.i
  %incdec.ptr67.i = getelementptr inbounds i8, ptr %s.0.i, i64 2, !dbg !3934
  call void @llvm.dbg.value(metadata ptr %incdec.ptr67.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %call68.i = call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.62, i32 noundef 0, ptr noundef nonnull %incdec.ptr67.i, i32 noundef 0) #17, !dbg !3936
  call void @llvm.dbg.value(metadata ptr %call68.i, metadata !3670, metadata !DIExpression()) #17, !dbg !3932
  %call69.i = call i64 @strlen(ptr noundef nonnull %incdec.ptr67.i) #21, !dbg !3937
  %add.ptr70.i = getelementptr inbounds i8, ptr %incdec.ptr67.i, i64 %call69.i, !dbg !3938
  call void @llvm.dbg.value(metadata ptr %add.ptr70.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  br label %if.end71.i

if.end71.i:                                       ; preds = %if.else66.i, %if.then64.i
  %s.2.i = phi ptr [ %incdec.ptr60.i, %if.then64.i ], [ %add.ptr70.i, %if.else66.i ], !dbg !3939
  %opts_prog.0.i = phi ptr [ %call65.i, %if.then64.i ], [ %call68.i, %if.else66.i ], !dbg !3939
  call void @llvm.dbg.value(metadata ptr %opts_prog.0.i, metadata !3670, metadata !DIExpression()) #17, !dbg !3932
  call void @llvm.dbg.value(metadata ptr %s.2.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  call void @Perl_av_create_and_push(ptr noundef nonnull @PL_preambleav, ptr noundef %opts_prog.0.i) #17, !dbg !3940
  call void @llvm.dbg.value(metadata ptr @.str.63, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  br label %reswitch.outer.i

sw.bb72.i:                                        ; preds = %reswitch.i
  call void @llvm.dbg.value(metadata i8 1, metadata !3656, metadata !DIExpression()) #17, !dbg !3691
  %incdec.ptr73.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3941
  call void @llvm.dbg.value(metadata ptr %incdec.ptr73.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %94 = load i8, ptr %incdec.ptr73.i, align 1, !dbg !3942
  %tobool74.not.i = icmp eq i8 %94, 0, !dbg !3942
  %spec.select.i = select i1 %tobool74.not.i, ptr %cddir.0172.i, ptr %incdec.ptr73.i, !dbg !3944
  br label %for.inc.i, !dbg !3944

sw.bb77.i:                                        ; preds = %reswitch.i
  %incdec.ptr78.i = getelementptr inbounds i8, ptr %s.0.i, i64 1, !dbg !3945
  call void @llvm.dbg.value(metadata ptr %incdec.ptr78.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  %95 = load i8, ptr %incdec.ptr78.i, align 1, !dbg !3947
  %tobool79.not.i = icmp eq i8 %95, 0, !dbg !3947
  br i1 %tobool79.not.i, label %if.then84.i, label %lor.lhs.false80.i, !dbg !3948

lor.lhs.false80.i:                                ; preds = %sw.bb77.i
  %idxprom.i = zext i8 %95 to i64, !dbg !3949
  %arrayidx81.i = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom.i, !dbg !3949
  %96 = load i32, ptr %arrayidx81.i, align 4, !dbg !3949
  %and.i = and i32 %96, 17408, !dbg !3949
  %cmp82.i = icmp eq i32 %and.i, 17408, !dbg !3949
  br i1 %cmp82.i, label %if.then84.i, label %if.end87.i, !dbg !3950

if.then84.i:                                      ; preds = %lor.lhs.false80.i, %sw.bb77.i
  %dec85.i = add nsw i32 %argc.0.in182.i, -2, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %dec85.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  %incdec.ptr86.i = getelementptr inbounds ptr, ptr %.pn181.i, i64 2, !dbg !3953
  call void @llvm.dbg.value(metadata ptr %incdec.ptr86.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  br label %switch_end.i, !dbg !3954

if.end87.i:                                       ; preds = %lor.lhs.false80.i
  %call88.i = call i32 @strcmp(ptr noundef nonnull %incdec.ptr78.i, ptr noundef nonnull dereferenceable(8) @.str.64) #21, !dbg !3955
  %tobool89.not.i = icmp eq i32 %call88.i, 0, !dbg !3955
  br i1 %tobool89.not.i, label %if.then90.i, label %if.end91.i, !dbg !3957

if.then90.i:                                      ; preds = %if.end87.i
  call fastcc void @S_minus_v() #17, !dbg !3958
  unreachable, !dbg !3958

if.end91.i:                                       ; preds = %if.end87.i
  %call92.i = call i32 @strcmp(ptr noundef nonnull %incdec.ptr78.i, ptr noundef nonnull dereferenceable(5) @.str.65) #21, !dbg !3959
  %tobool93.not.i = icmp eq i32 %call92.i, 0, !dbg !3959
  br i1 %tobool93.not.i, label %if.then94.i, label %sw.default.i, !dbg !3961

if.then94.i:                                      ; preds = %if.end91.i
  call fastcc void @S_usage() #17, !dbg !3962
  unreachable, !dbg !3962

sw.default.i:                                     ; preds = %reswitch.i, %if.end91.i
  call void @llvm.dbg.value(metadata ptr %s.0.i, metadata !3661, metadata !DIExpression()) #17, !dbg !3859
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.66, ptr noundef nonnull %s.0.i) #17, !dbg !3963
  br label %for.inc.i, !dbg !3964

for.inc.i:                                        ; preds = %sw.bb.i, %reswitch.i, %sw.default.i, %sw.bb72.i, %if.else55.i, %if.then53.i, %if.end36.i
  %add_read_e_script.2.i = phi i8 [ %add_read_e_script.0168.i, %sw.default.i ], [ %add_read_e_script.0168.i, %if.then53.i ], [ %add_read_e_script.0168.i, %if.else55.i ], [ %add_read_e_script.1.i, %if.end36.i ], [ %add_read_e_script.0168.i, %sw.bb72.i ], [ %add_read_e_script.0168.i, %reswitch.i ], [ %add_read_e_script.0168.i, %sw.bb.i ], !dbg !3965
  %cddir.1.i = phi ptr [ %cddir.0172.i, %sw.default.i ], [ %cddir.0172.i, %if.then53.i ], [ %cddir.0172.i, %if.else55.i ], [ %cddir.0172.i, %if.end36.i ], [ %spec.select.i, %sw.bb72.i ], [ %cddir.0172.i, %reswitch.i ], [ %cddir.0172.i, %sw.bb.i ], !dbg !3691
  %doextract.1.i = phi i8 [ %doextract.0176.i, %sw.default.i ], [ %doextract.0176.i, %if.then53.i ], [ %doextract.0176.i, %if.else55.i ], [ %doextract.0176.i, %if.end36.i ], [ 1, %sw.bb72.i ], [ %doextract.0176.i, %reswitch.i ], [ %doextract.0176.i, %sw.bb.i ], !dbg !3691
  %argv.3.i = phi ptr [ %argv.0183.i, %sw.default.i ], [ %argv.2.ph97.i, %if.then53.i ], [ %argv.289.i, %if.else55.i ], [ %argv.1.i, %if.end36.i ], [ %argv.0183.i, %sw.bb72.i ], [ %argv.0183.i, %reswitch.i ], [ %argv.0183.i, %sw.bb.i ], !dbg !3966
  %argc.3.i = phi i32 [ %argc.0184.i, %sw.default.i ], [ %argc.2.ph98.i, %if.then53.i ], [ %argc.291.i, %if.else55.i ], [ %argc.1.i, %if.end36.i ], [ %argc.0184.i, %sw.bb72.i ], [ %argc.0184.i, %reswitch.i ], [ %argc.0184.i, %sw.bb.i ], !dbg !3967
  call void @llvm.dbg.value(metadata i8 %doextract.1.i, metadata !3656, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %cddir.1.i, metadata !3657, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i8 %add_read_e_script.2.i, metadata !3659, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %argc.3.i, metadata !3650, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %argv.3.i, metadata !3651, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)) #17, !dbg !3691
  %argv.0.i = getelementptr inbounds ptr, ptr %argv.3.i, i64 1, !dbg !3848
  %argc.0.i = add nsw i32 %argc.3.i, -1, !dbg !3848
  call void @llvm.dbg.value(metadata i32 %argc.0.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %argv.0.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %scriptname.1.ph.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  %cmp.i = icmp sgt i32 %argc.3.i, 1, !dbg !3849
  br i1 %cmp.i, label %for.body.i, label %switch_end.i, !dbg !3850, !llvm.loop !3968

switch_end.i:                                     ; preds = %for.inc.i, %lor.lhs.false.i, %for.body.i, %if.then84.i, %S_init_main_stash.exit.i
  %add_read_e_script.0161.i = phi i8 [ %add_read_e_script.0168.i, %if.then84.i ], [ 0, %S_init_main_stash.exit.i ], [ %add_read_e_script.0168.i, %for.body.i ], [ %add_read_e_script.0168.i, %lor.lhs.false.i ], [ %add_read_e_script.2.i, %for.inc.i ]
  %cddir.0157.i = phi ptr [ %cddir.0172.i, %if.then84.i ], [ null, %S_init_main_stash.exit.i ], [ %cddir.0172.i, %for.body.i ], [ %cddir.0172.i, %lor.lhs.false.i ], [ %cddir.1.i, %for.inc.i ]
  %doextract.0153.i = phi i8 [ %doextract.0176.i, %if.then84.i ], [ 0, %S_init_main_stash.exit.i ], [ %doextract.0176.i, %for.body.i ], [ %doextract.0176.i, %lor.lhs.false.i ], [ %doextract.1.i, %for.inc.i ]
  %scriptname.2.i = phi ptr [ %scriptname.1.ph.i, %if.then84.i ], [ null, %S_init_main_stash.exit.i ], [ %scriptname.0180.i, %for.body.i ], [ %scriptname.0180.i, %lor.lhs.false.i ], [ %scriptname.1.ph.i, %for.inc.i ], !dbg !3970
  %argv.4.i = phi ptr [ %incdec.ptr86.i, %if.then84.i ], [ %argv.0165.i, %S_init_main_stash.exit.i ], [ %argv.0183.i, %for.body.i ], [ %argv.0183.i, %lor.lhs.false.i ], [ %argv.0.i, %for.inc.i ], !dbg !3848
  %argc.4.i = phi i32 [ %dec85.i, %if.then84.i ], [ %argc.0166.i, %S_init_main_stash.exit.i ], [ %argc.0184.i, %for.body.i ], [ %argc.0184.i, %lor.lhs.false.i ], [ %argc.0.i, %for.inc.i ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %argc.4.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %argv.4.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %scriptname.2.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.label(metadata !3690) #17, !dbg !3971
  store i8 1, ptr @PL_tainted, align 1, !dbg !3972
  call void @Perl_set_caret_X() #17, !dbg !3973
  store i8 0, ptr @PL_tainted, align 1, !dbg !3974
  %tobool100.not.i = icmp eq ptr %scriptname.2.i, null, !dbg !3975
  br i1 %tobool100.not.i, label %if.then101.i, label %if.end103.i, !dbg !3977

if.then101.i:                                     ; preds = %switch_end.i
  %97 = load ptr, ptr %argv.4.i, align 8, !dbg !3978
  call void @llvm.dbg.value(metadata ptr %97, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  br label %if.end103.i, !dbg !3979

if.end103.i:                                      ; preds = %if.then101.i, %switch_end.i
  %scriptname.3.i = phi ptr [ %scriptname.2.i, %switch_end.i ], [ %97, %if.then101.i ], !dbg !3691
  call void @llvm.dbg.value(metadata ptr %scriptname.3.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  %98 = load ptr, ptr @PL_e_script, align 8, !dbg !3980
  %tobool104.not.i = icmp eq ptr %98, null, !dbg !3980
  br i1 %tobool104.not.i, label %if.else107.i, label %if.then105.i, !dbg !3982

if.then105.i:                                     ; preds = %if.end103.i
  %inc.i = add nsw i32 %argc.4.i, 1, !dbg !3983
  call void @llvm.dbg.value(metadata i32 %inc.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  %incdec.ptr106.i = getelementptr inbounds ptr, ptr %argv.4.i, i64 -1, !dbg !3985
  call void @llvm.dbg.value(metadata ptr %incdec.ptr106.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr @.str.63, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  br label %if.end112.i, !dbg !3986

if.else107.i:                                     ; preds = %if.end103.i
  %cmp108.i = icmp eq ptr %scriptname.3.i, null, !dbg !3987
  %spec.store.select.i = select i1 %cmp108.i, ptr @.str.67, ptr %scriptname.3.i, !dbg !3989
  call void @llvm.dbg.value(metadata ptr %spec.store.select.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  br label %if.end112.i

if.end112.i:                                      ; preds = %if.else107.i, %if.then105.i
  %scriptname.4.i = phi ptr [ @.str.63, %if.then105.i ], [ %spec.store.select.i, %if.else107.i ], !dbg !3990
  %argv.5.i = phi ptr [ %incdec.ptr106.i, %if.then105.i ], [ %argv.4.i, %if.else107.i ], !dbg !3691
  %argc.5.i = phi i32 [ %inc.i, %if.then105.i ], [ %argc.4.i, %if.else107.i ], !dbg !3691
  call void @llvm.dbg.value(metadata i32 %argc.5.i, metadata !3650, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %argv.5.i, metadata !3651, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %scriptname.4.i, metadata !3652, metadata !DIExpression()) #17, !dbg !3691
  call fastcc void @S_incpush_use_sep(ptr noundef nonnull @.str.88) #17, !dbg !3991
  call fastcc void @S_incpush_use_sep(ptr noundef nonnull @.str.89) #17, !dbg !3994
  call void @llvm.dbg.value(metadata i8 0, metadata !3674, metadata !DIExpression()) #17, !dbg !3995
  %dosearch.i.0.dosearch.i.0.dosearch.0.dosearch.0.dosearch.0..i = load volatile i8, ptr %dosearch.i, align 1, !dbg !3996
  call void @llvm.dbg.value(metadata ptr %scriptname.4.i, metadata !3997, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.dbg.value(metadata i1 undef, metadata !4002, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)) #17, !dbg !4045
  call void @llvm.dbg.value(metadata ptr undef, metadata !4003, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.dbg.value(metadata i32 -1, metadata !4004, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.dbg.value(metadata ptr null, metadata !4005, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %tmpstatbuf.i.i) #17, !dbg !4047
  call void @llvm.dbg.declare(metadata ptr %tmpstatbuf.i.i, metadata !4006, metadata !DIExpression()) #17, !dbg !4048
  %99 = load ptr, ptr @PL_e_script, align 8, !dbg !4049
  %tobool.not.i4.i = icmp eq ptr %99, null, !dbg !4049
  br i1 %tobool.not.i4.i, label %if.else.i9.i, label %if.then.i6.i, !dbg !4050

if.then.i6.i:                                     ; preds = %if.end112.i
  %call.i5.i = call ptr @Perl_savepvn(ptr noundef nonnull @.str.90, i32 noundef 2) #17, !dbg !4051
  store ptr %call.i5.i, ptr @PL_origfilename, align 8, !dbg !4053
  br label %if.end25.i.i, !dbg !4054

if.else.i9.i:                                     ; preds = %if.end112.i
  %100 = and i8 %dosearch.i.0.dosearch.i.0.dosearch.0.dosearch.0.dosearch.0..i, 1, !dbg !3996
  %tobool113.i = icmp ne i8 %100, 0, !dbg !3996
  call void @llvm.dbg.value(metadata i1 %tobool113.i, metadata !4002, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)) #17, !dbg !4045
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %s.i.i) #17, !dbg !4055
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %uv.i.i) #17, !dbg !4056
  %call2.i7.i = call ptr @Perl_find_script(ptr noundef %scriptname.4.i, i1 noundef zeroext %tobool113.i, ptr noundef null, i32 noundef 1) #17, !dbg !4057
  store ptr %call2.i7.i, ptr @PL_origfilename, align 8, !dbg !4058
  call void @llvm.dbg.value(metadata ptr %call2.i7.i, metadata !3997, metadata !DIExpression()) #17, !dbg !4045
  %call3.i8.i = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %call2.i7.i, ptr noundef nonnull dereferenceable(9) @.str.91, i64 noundef 8) #21, !dbg !4059
  %tobool4.not.i.i = icmp eq i32 %call3.i8.i, 0, !dbg !4059
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i, label %if.end24.i.i, !dbg !4061

land.lhs.true.i.i:                                ; preds = %if.else.i9.i
  %arrayidx.i.i = getelementptr inbounds i8, ptr %call2.i7.i, i64 8, !dbg !4062
  %101 = load i8, ptr %arrayidx.i.i, align 1, !dbg !4062
  %idxprom.i.i = zext i8 %101 to i64, !dbg !4062
  %arrayidx5.i.i = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom.i.i, !dbg !4062
  %102 = load i32, ptr %arrayidx5.i.i, align 4, !dbg !4062
  %and.i10.i = and i32 %102, 2, !dbg !4062
  %tobool6.not.i.i = icmp eq i32 %and.i10.i, 0, !dbg !4062
  br i1 %tobool6.not.i.i, label %if.end24.i.i, label %land.lhs.true7.i.i, !dbg !4063

land.lhs.true7.i.i:                               ; preds = %land.lhs.true.i.i
  call void @llvm.dbg.value(metadata ptr %s.i.i, metadata !4041, metadata !DIExpression(DW_OP_deref)) #17, !dbg !4064
  call void @llvm.dbg.value(metadata ptr %uv.i.i, metadata !4044, metadata !DIExpression(DW_OP_deref)) #17, !dbg !4064
  %call8.i11.i = call zeroext i1 @Perl_grok_atoUV(ptr noundef nonnull %arrayidx.i.i, ptr noundef nonnull %uv.i.i, ptr noundef nonnull %s.i.i) #17, !dbg !4065
  %103 = load i64, ptr %uv.i.i, align 8
  call void @llvm.dbg.value(metadata i64 %103, metadata !4044, metadata !DIExpression()) #17, !dbg !4064
  %cmp.i.i = icmp ult i64 %103, 2147483648
  %or.cond.i.i = select i1 %call8.i11.i, i1 %cmp.i.i, i1 false, !dbg !4066
  br i1 %or.cond.i.i, label %if.then10.i.i, label %if.end24.i.i, !dbg !4066

if.then10.i.i:                                    ; preds = %land.lhs.true7.i.i
  %conv.i.i = trunc i64 %103 to i32, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %conv.i.i, metadata !4004, metadata !DIExpression()) #17, !dbg !4045
  %104 = load ptr, ptr %s.i.i, align 8, !dbg !4069
  call void @llvm.dbg.value(metadata ptr %104, metadata !4041, metadata !DIExpression()) #17, !dbg !4064
  %105 = load i8, ptr %104, align 1, !dbg !4071
  switch i8 %105, label %if.then16.i.i [
    i8 0, label %if.end24.i.i
    i8 47, label %if.end.i.i
  ], !dbg !4072

if.then16.i.i:                                    ; preds = %if.then10.i.i
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.92, ptr noundef nonnull %104) #17, !dbg !4073
  %.pre.i12.i = load ptr, ptr %s.i.i, align 8, !dbg !4077
  br label %if.end.i.i, !dbg !4079

if.end.i.i:                                       ; preds = %if.then16.i.i, %if.then10.i.i
  %106 = phi ptr [ %.pre.i12.i, %if.then16.i.i ], [ %104, %if.then10.i.i ], !dbg !4077
  call void @llvm.dbg.value(metadata ptr %106, metadata !4041, metadata !DIExpression()) #17, !dbg !4064
  %add.ptr17.i.i = getelementptr inbounds i8, ptr %106, i64 1, !dbg !4080
  %107 = load i8, ptr %add.ptr17.i.i, align 1, !dbg !4081
  %tobool18.not.i.i = icmp eq i8 %107, 0, !dbg !4081
  br i1 %tobool18.not.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4082

if.then19.i.i:                                    ; preds = %if.end.i.i
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.93) #17, !dbg !4083
  %.pre140.i.i = load ptr, ptr %s.i.i, align 8, !dbg !4085
  br label %if.end20.i.i, !dbg !4086

if.end20.i.i:                                     ; preds = %if.then19.i.i, %if.end.i.i
  %108 = phi ptr [ %.pre140.i.i, %if.then19.i.i ], [ %106, %if.end.i.i ], !dbg !4085
  call void @llvm.dbg.value(metadata ptr %108, metadata !4041, metadata !DIExpression()) #17, !dbg !4064
  %add.ptr21.i.i = getelementptr inbounds i8, ptr %108, i64 1, !dbg !4085
  %call22.i.i = call ptr @Perl_savepv(ptr noundef nonnull %add.ptr21.i.i) #17, !dbg !4085
  call void @llvm.dbg.value(metadata ptr %call22.i.i, metadata !3997, metadata !DIExpression()) #17, !dbg !4045
  %109 = load ptr, ptr @PL_origfilename, align 8, !dbg !4087
  call void @Perl_safesysfree(ptr noundef %109) #17, !dbg !4087
  store ptr %call22.i.i, ptr @PL_origfilename, align 8, !dbg !4088
  br label %if.end24.i.i, !dbg !4089

if.end24.i.i:                                     ; preds = %if.end20.i.i, %if.then10.i.i, %land.lhs.true7.i.i, %land.lhs.true.i.i, %if.else.i9.i
  %scriptname.addr.0.i.i = phi ptr [ %call2.i7.i, %if.else.i9.i ], [ %call22.i.i, %if.end20.i.i ], [ %call2.i7.i, %if.then10.i.i ], [ %call2.i7.i, %land.lhs.true7.i.i ], [ %call2.i7.i, %land.lhs.true.i.i ], !dbg !4064
  %fdscript.0.i.i = phi i32 [ -1, %if.else.i9.i ], [ %conv.i.i, %if.end20.i.i ], [ %conv.i.i, %if.then10.i.i ], [ -1, %land.lhs.true7.i.i ], [ -1, %land.lhs.true.i.i ], !dbg !4045
  call void @llvm.dbg.value(metadata i32 %fdscript.0.i.i, metadata !4004, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.dbg.value(metadata ptr %scriptname.addr.0.i.i, metadata !3997, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %uv.i.i) #17, !dbg !4090
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %s.i.i) #17, !dbg !4090
  br label %if.end25.i.i

if.end25.i.i:                                     ; preds = %if.end24.i.i, %if.then.i6.i
  %scriptname.addr.1.i.i = phi ptr [ %scriptname.4.i, %if.then.i6.i ], [ %scriptname.addr.0.i.i, %if.end24.i.i ]
  %fdscript.1.i.i = phi i32 [ -1, %if.then.i6.i ], [ %fdscript.0.i.i, %if.end24.i.i ], !dbg !4091
  call void @llvm.dbg.value(metadata i32 %fdscript.1.i.i, metadata !4004, metadata !DIExpression()) #17, !dbg !4045
  call void @llvm.dbg.value(metadata ptr %scriptname.addr.1.i.i, metadata !3997, metadata !DIExpression()) #17, !dbg !4045
  %110 = load ptr, ptr @PL_curcop, align 8, !dbg !4092
  %cop_filegv.i.i = getelementptr inbounds %struct.cop, ptr %110, i64 0, i32 9, !dbg !4092
  %111 = load ptr, ptr %cop_filegv.i.i, align 8, !dbg !4092
  call void @llvm.dbg.value(metadata ptr %111, metadata !1967, metadata !DIExpression()) #17, !dbg !4093
  %cmp.not.i.i13.i = icmp eq ptr %111, null, !dbg !4095
  br i1 %cmp.not.i.i13.i, label %S_SvREFCNT_dec.exit.i20.i, label %if.then.i.i16.i, !dbg !4096

if.then.i.i16.i:                                  ; preds = %if.end25.i.i
  %sv_refcnt.i.i14.i = getelementptr inbounds %struct.sv, ptr %111, i64 0, i32 1, !dbg !4097
  %112 = load i32, ptr %sv_refcnt.i.i14.i, align 8, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %112, metadata !1973, metadata !DIExpression()) #17, !dbg !4098
  %cmp1.i.i15.i = icmp ugt i32 %112, 1, !dbg !4099
  br i1 %cmp1.i.i15.i, label %if.then4.i.i18.i, label %if.else.i.i19.i, !dbg !4100

if.then4.i.i18.i:                                 ; preds = %if.then.i.i16.i
  %sub.i.i17.i = add i32 %112, -1, !dbg !4101
  store i32 %sub.i.i17.i, ptr %sv_refcnt.i.i14.i, align 8, !dbg !4102
  br label %S_SvREFCNT_dec.exit.i20.i, !dbg !4103

if.else.i.i19.i:                                  ; preds = %if.then.i.i16.i
  call void @Perl_sv_free2(ptr noundef nonnull %111, i32 noundef %112) #17, !dbg !4104
  %.pre141.i.i = load ptr, ptr @PL_curcop, align 8, !dbg !4092
  br label %S_SvREFCNT_dec.exit.i20.i

S_SvREFCNT_dec.exit.i20.i:                        ; preds = %if.else.i.i19.i, %if.then4.i.i18.i, %if.end25.i.i
  %113 = phi ptr [ %110, %if.end25.i.i ], [ %110, %if.then4.i.i18.i ], [ %.pre141.i.i, %if.else.i.i19.i ], !dbg !4092
  %cop_filegv26.i.i = getelementptr inbounds %struct.cop, ptr %113, i64 0, i32 9, !dbg !4092
  store ptr null, ptr %cop_filegv26.i.i, align 8, !dbg !4092
  %114 = load ptr, ptr @PL_origfilename, align 8, !dbg !4105
  %call27.i.i = call ptr @Perl_gv_fetchfile(ptr noundef %114) #17, !dbg !4105
  call void @llvm.dbg.value(metadata ptr %call27.i.i, metadata !3392, metadata !DIExpression()) #17, !dbg !4106
  %cmp.not.i136.i.i = icmp eq ptr %call27.i.i, null, !dbg !4108
  br i1 %cmp.not.i136.i.i, label %S_SvREFCNT_inc.exit.i23.i, label %if.then.i138.i22.i, !dbg !4109

if.then.i138.i22.i:                               ; preds = %S_SvREFCNT_dec.exit.i20.i
  %sv_refcnt.i137.i.i = getelementptr inbounds %struct.sv, ptr %call27.i.i, i64 0, i32 1, !dbg !4110
  %115 = load i32, ptr %sv_refcnt.i137.i.i, align 8, !dbg !4111
  %inc.i.i21.i = add i32 %115, 1, !dbg !4111
  store i32 %inc.i.i21.i, ptr %sv_refcnt.i137.i.i, align 8, !dbg !4111
  br label %S_SvREFCNT_inc.exit.i23.i, !dbg !4110

S_SvREFCNT_inc.exit.i23.i:                        ; preds = %if.then.i138.i22.i, %S_SvREFCNT_dec.exit.i20.i
  %116 = load ptr, ptr @PL_curcop, align 8, !dbg !4105
  %cop_filegv29.i.i = getelementptr inbounds %struct.cop, ptr %116, i64 0, i32 9, !dbg !4105
  store ptr %call27.i.i, ptr %cop_filegv29.i.i, align 8, !dbg !4105
  %117 = load ptr, ptr @PL_origfilename, align 8, !dbg !4112
  %118 = load i8, ptr %117, align 1, !dbg !4114
  %cmp31.i.i = icmp eq i8 %118, 45, !dbg !4115
  br i1 %cmp31.i.i, label %land.lhs.true33.i.i, label %if.end39.i.i, !dbg !4116

land.lhs.true33.i.i:                              ; preds = %S_SvREFCNT_inc.exit.i23.i
  %arrayidx34.i.i = getelementptr inbounds i8, ptr %117, i64 1, !dbg !4117
  %119 = load i8, ptr %arrayidx34.i.i, align 1, !dbg !4117
  %cmp36.i.i = icmp eq i8 %119, 0, !dbg !4118
  %spec.select.i.i = select i1 %cmp36.i.i, ptr @.str.1, ptr %scriptname.addr.1.i.i, !dbg !4119
  br label %if.end39.i.i, !dbg !4119

if.end39.i.i:                                     ; preds = %land.lhs.true33.i.i, %S_SvREFCNT_inc.exit.i23.i
  %scriptname.addr.2.i.i = phi ptr [ %scriptname.addr.1.i.i, %S_SvREFCNT_inc.exit.i23.i ], [ %spec.select.i.i, %land.lhs.true33.i.i ]
  call void @llvm.dbg.value(metadata ptr %scriptname.addr.2.i.i, metadata !3997, metadata !DIExpression()) #17, !dbg !4045
  %cmp40.i.i = icmp sgt i32 %fdscript.1.i.i, -1, !dbg !4120
  br i1 %cmp40.i.i, label %if.then42.i.i, label %if.else44.i.i, !dbg !4122

if.then42.i.i:                                    ; preds = %if.end39.i.i
  %call43.i.i = call ptr @PerlIO_fdopen(i32 noundef %fdscript.1.i.i, ptr noundef nonnull @.str.94) #17, !dbg !4123
  call void @llvm.dbg.value(metadata ptr %call43.i.i, metadata !4005, metadata !DIExpression()) #17, !dbg !4045
  br label %if.end51.i.i, !dbg !4125

if.else44.i.i:                                    ; preds = %if.end39.i.i
  %120 = load i8, ptr %scriptname.addr.2.i.i, align 1, !dbg !4126
  %tobool45.not.i.i = icmp eq i8 %120, 0, !dbg !4126
  br i1 %tobool45.not.i.i, label %S_open_script.exit.thread.i, label %if.else48.i.i, !dbg !4128

S_open_script.exit.thread.i:                      ; preds = %if.else44.i.i
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %tmpstatbuf.i.i) #17, !dbg !4129
  call void @llvm.dbg.value(metadata ptr %rsfp.0.i.i, metadata !3649, metadata !DIExpression()) #17, !dbg !3691
  br label %if.then116.i, !dbg !4130

if.else48.i.i:                                    ; preds = %if.else44.i.i
  %call49.i.i = call ptr @PerlIO_open(ptr noundef nonnull %scriptname.addr.2.i.i, ptr noundef nonnull @.str.94) #17, !dbg !4131
  call void @llvm.dbg.value(metadata ptr %call49.i.i, metadata !4005, metadata !DIExpression()) #17, !dbg !4045
  br label %if.end51.i.i

if.end51.i.i:                                     ; preds = %if.else48.i.i, %if.then42.i.i
  %rsfp.0.i.i = phi ptr [ %call43.i.i, %if.then42.i.i ], [ %call49.i.i, %if.else48.i.i ], !dbg !4133
  call void @llvm.dbg.value(metadata ptr %rsfp.0.i.i, metadata !4005, metadata !DIExpression()) #17, !dbg !4045
  %tobool52.not.i.i = icmp eq ptr %rsfp.0.i.i, null, !dbg !4134
  br i1 %tobool52.not.i.i, label %if.then53.i.i, label %if.end68.i.i, !dbg !4136

if.then53.i.i:                                    ; preds = %if.end51.i.i
  %121 = load ptr, ptr @PL_e_script, align 8, !dbg !4137
  %tobool54.not.i.i = icmp eq ptr %121, null, !dbg !4137
  br i1 %tobool54.not.i.i, label %if.else58.i.i, label %if.then55.i.i, !dbg !4140

if.then55.i.i:                                    ; preds = %if.then53.i.i
  %call56.i.i = call ptr @__errno_location() #22, !dbg !4141
  %122 = load i32, ptr %call56.i.i, align 4, !dbg !4141
  %call57.i.i = call ptr @strerror(i32 noundef %122) #17, !dbg !4141
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.95, ptr noundef %call57.i.i) #17, !dbg !4142
  br label %if.end68.i.i, !dbg !4142

if.else58.i.i:                                    ; preds = %if.then53.i.i
  %123 = load ptr, ptr @PL_curcop, align 8, !dbg !4143
  %cop_filegv59.i.i = getelementptr inbounds %struct.cop, ptr %123, i64 0, i32 9, !dbg !4143
  %124 = load ptr, ptr %cop_filegv59.i.i, align 8, !dbg !4143
  %tobool60.not.i.i = icmp eq ptr %124, null, !dbg !4143
  br i1 %tobool60.not.i.i, label %cond.end.i24.i, label %cond.true61.i.i, !dbg !4143

cond.true61.i.i:                                  ; preds = %if.else58.i.i
  %125 = load ptr, ptr %124, align 8, !dbg !4143
  %xiv_u.i.i = getelementptr inbounds %struct.xpvgv, ptr %125, i64 0, i32 4, !dbg !4143
  %126 = load ptr, ptr %xiv_u.i.i, align 8, !dbg !4143
  %hek_key.i.i = getelementptr inbounds %struct.hek, ptr %126, i64 0, i32 2, !dbg !4143
  %add.ptr63.i.i = getelementptr inbounds i8, ptr %hek_key.i.i, i64 2, !dbg !4143
  br label %cond.end.i24.i, !dbg !4143

cond.end.i24.i:                                   ; preds = %cond.true61.i.i, %if.else58.i.i
  %cond.i.i = phi ptr [ %add.ptr63.i.i, %cond.true61.i.i ], [ null, %if.else58.i.i ], !dbg !4143
  %call65.i.i = call ptr @__errno_location() #22, !dbg !4144
  %127 = load i32, ptr %call65.i.i, align 4, !dbg !4144
  %call66.i.i = call ptr @strerror(i32 noundef %127) #17, !dbg !4144
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.96, ptr noundef %cond.i.i, ptr noundef %call66.i.i) #17, !dbg !4145
  br label %if.end68.i.i

if.end68.i.i:                                     ; preds = %cond.end.i24.i, %if.then55.i.i, %if.end51.i.i
  %call69.i.i = call i32 @Perl_PerlIO_fileno(ptr noundef %rsfp.0.i.i) #17, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %call69.i.i, metadata !4040, metadata !DIExpression()) #17, !dbg !4045
  %cmp70.i.i = icmp sgt i32 %call69.i.i, -1, !dbg !4147
  br i1 %cmp70.i.i, label %if.then72.i.i, label %if.then102.i.i, !dbg !4149

if.then72.i.i:                                    ; preds = %if.end68.i.i
  %call73.i.i = call i32 (i32, i32, ...) @fcntl(i32 noundef %call69.i.i, i32 noundef 2, i32 noundef 1) #17, !dbg !4150
  %cmp74.i.i = icmp slt i32 %call73.i.i, 0, !dbg !4153
  br i1 %cmp74.i.i, label %if.then76.i.i, label %lor.lhs.false.i.i, !dbg !4154

if.then76.i.i:                                    ; preds = %if.then72.i.i
  %128 = load ptr, ptr @PL_curcop, align 8, !dbg !4155
  %cop_filegv77.i.i = getelementptr inbounds %struct.cop, ptr %128, i64 0, i32 9, !dbg !4155
  %129 = load ptr, ptr %cop_filegv77.i.i, align 8, !dbg !4155
  %tobool78.not.i.i = icmp eq ptr %129, null, !dbg !4155
  br i1 %tobool78.not.i.i, label %cond.end87.i.i, label %cond.true79.i.i, !dbg !4155

cond.true79.i.i:                                  ; preds = %if.then76.i.i
  %130 = load ptr, ptr %129, align 8, !dbg !4155
  %xiv_u82.i.i = getelementptr inbounds %struct.xpvgv, ptr %130, i64 0, i32 4, !dbg !4155
  %131 = load ptr, ptr %xiv_u82.i.i, align 8, !dbg !4155
  %hek_key83.i.i = getelementptr inbounds %struct.hek, ptr %131, i64 0, i32 2, !dbg !4155
  %add.ptr85.i.i = getelementptr inbounds i8, ptr %hek_key83.i.i, i64 2, !dbg !4155
  br label %cond.end87.i.i, !dbg !4155

cond.end87.i.i:                                   ; preds = %cond.true79.i.i, %if.then76.i.i
  %cond88.i.i = phi ptr [ %add.ptr85.i.i, %cond.true79.i.i ], [ null, %if.then76.i.i ], !dbg !4155
  %call89.i.i = call ptr @__errno_location() #22, !dbg !4157
  %132 = load i32, ptr %call89.i.i, align 4, !dbg !4157
  %call90.i.i = call ptr @strerror(i32 noundef %132) #17, !dbg !4157
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.96, ptr noundef %cond88.i.i, ptr noundef %call90.i.i) #17, !dbg !4158
  br label %lor.lhs.false.i.i, !dbg !4159

lor.lhs.false.i.i:                                ; preds = %cond.end87.i.i, %if.then72.i.i
  call void @llvm.dbg.value(metadata i32 %call69.i.i, metadata !4160, metadata !DIExpression()) #17, !dbg !4168
  call void @llvm.dbg.value(metadata ptr %tmpstatbuf.i.i, metadata !4167, metadata !DIExpression()) #17, !dbg !4168
  %call.i.i25.i = call i32 @__fxstat(i32 noundef 1, i32 noundef %call69.i.i, ptr noundef nonnull %tmpstatbuf.i.i) #17, !dbg !4171
  %cmp96.i.i = icmp sgt i32 %call.i.i25.i, -1, !dbg !4172
  br i1 %cmp96.i.i, label %land.lhs.true98.i.i, label %S_open_script.exit.i, !dbg !4173

land.lhs.true98.i.i:                              ; preds = %lor.lhs.false.i.i
  %st_mode.i.i = getelementptr inbounds %struct.stat, ptr %tmpstatbuf.i.i, i64 0, i32 3, !dbg !4174
  %133 = load i32, ptr %st_mode.i.i, align 8, !dbg !4174
  %and99.i.i = and i32 %133, 61440, !dbg !4174
  %cmp100.i.i = icmp eq i32 %and99.i.i, 16384, !dbg !4174
  br i1 %cmp100.i.i, label %if.then102.i.i, label %S_open_script.exit.i, !dbg !4175

if.then102.i.i:                                   ; preds = %land.lhs.true98.i.i, %if.end68.i.i
  %134 = load ptr, ptr @PL_curcop, align 8, !dbg !4176
  %cop_filegv103.i.i = getelementptr inbounds %struct.cop, ptr %134, i64 0, i32 9, !dbg !4176
  %135 = load ptr, ptr %cop_filegv103.i.i, align 8, !dbg !4176
  %tobool104.not.i.i = icmp eq ptr %135, null, !dbg !4176
  br i1 %tobool104.not.i.i, label %cond.end113.i.i, label %cond.true105.i.i, !dbg !4176

cond.true105.i.i:                                 ; preds = %if.then102.i.i
  %136 = load ptr, ptr %135, align 8, !dbg !4176
  %xiv_u108.i.i = getelementptr inbounds %struct.xpvgv, ptr %136, i64 0, i32 4, !dbg !4176
  %137 = load ptr, ptr %xiv_u108.i.i, align 8, !dbg !4176
  %hek_key109.i.i = getelementptr inbounds %struct.hek, ptr %137, i64 0, i32 2, !dbg !4176
  %add.ptr111.i.i = getelementptr inbounds i8, ptr %hek_key109.i.i, i64 2, !dbg !4176
  br label %cond.end113.i.i, !dbg !4176

cond.end113.i.i:                                  ; preds = %cond.true105.i.i, %if.then102.i.i
  %cond114.i.i = phi ptr [ %add.ptr111.i.i, %cond.true105.i.i ], [ null, %if.then102.i.i ], !dbg !4176
  %call115.i.i = call ptr @strerror(i32 noundef 21) #17, !dbg !4177
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.96, ptr noundef %cond114.i.i, ptr noundef %call115.i.i) #17, !dbg !4178
  br label %S_open_script.exit.i, !dbg !4178

S_open_script.exit.i:                             ; preds = %cond.end113.i.i, %land.lhs.true98.i.i, %lor.lhs.false.i.i
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %tmpstatbuf.i.i) #17, !dbg !4129
  call void @llvm.dbg.value(metadata ptr %rsfp.0.i.i, metadata !3649, metadata !DIExpression()) #17, !dbg !3691
  br i1 %tobool52.not.i.i, label %if.then116.i, label %if.end118.i, !dbg !4130

if.then116.i:                                     ; preds = %S_open_script.exit.i, %S_open_script.exit.thread.i
  %call117.i = call ptr @Perl_PerlIO_stdin() #17, !dbg !4179
  call void @llvm.dbg.value(metadata ptr %call117.i, metadata !3649, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i32 16, metadata !3660, metadata !DIExpression()) #17, !dbg !3691
  br label %if.end118.i, !dbg !4182

if.end118.i:                                      ; preds = %if.then116.i, %S_open_script.exit.i
  %lex_start_flags.0.i = phi i32 [ 0, %S_open_script.exit.i ], [ 16, %if.then116.i ], !dbg !3691
  %rsfp.0.i = phi ptr [ %rsfp.0.i.i, %S_open_script.exit.i ], [ %call117.i, %if.then116.i ], !dbg !3995
  call void @llvm.dbg.value(metadata ptr %rsfp.0.i, metadata !3649, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata i32 %lex_start_flags.0.i, metadata !3660, metadata !DIExpression()) #17, !dbg !3691
  %call119.i = call ptr @Perl_rsignal_state(i32 noundef 17) #17, !dbg !4183
  call void @llvm.dbg.value(metadata ptr %call119.i, metadata !3676, metadata !DIExpression()) #17, !dbg !4184
  %cmp120.i = icmp eq ptr %call119.i, inttoptr (i64 1 to ptr), !dbg !4185
  br i1 %cmp120.i, label %if.then122.i, label %if.end124.i, !dbg !4187

if.then122.i:                                     ; preds = %if.end118.i
  call void (i32, ptr, ...) @Perl_ck_warner(i32 noundef 26, ptr noundef nonnull @.str.68) #17, !dbg !4188
  %call123.i = call ptr @Perl_rsignal(i32 noundef 17, ptr noundef null) #17, !dbg !4190
  br label %if.end124.i, !dbg !4191

if.end124.i:                                      ; preds = %if.then122.i, %if.end118.i
  %138 = and i8 %doextract.0153.i, 1, !dbg !4192
  %tobool125.not.i = icmp eq i8 %138, 0, !dbg !4192
  br i1 %tobool125.not.i, label %if.end136.i, label %if.then126.i, !dbg !4194

if.then126.i:                                     ; preds = %if.end124.i
  call void @llvm.dbg.value(metadata i8 undef, metadata !3674, metadata !DIExpression()) #17, !dbg !3995
  %call128.i = call ptr @Perl_newSV_type(i32 noundef 3) #17, !dbg !4195
  call void @llvm.dbg.value(metadata ptr %call128.i, metadata !3658, metadata !DIExpression()) #17, !dbg !3691
  %or.i249 = or i32 %lex_start_flags.0.i, 8, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %or.i249, metadata !3660, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %call128.i, metadata !4198, metadata !DIExpression()) #17, !dbg !4206
  call void @llvm.dbg.value(metadata ptr %rsfp.0.i, metadata !4203, metadata !DIExpression()) #17, !dbg !4206
  br label %do.body.i.i, !dbg !4208

do.body.i.i:                                      ; preds = %do.body.i.i.backedge, %if.then126.i
  %call.i26.i = call ptr @Perl_sv_gets(ptr noundef %call128.i, ptr noundef %rsfp.0.i, i32 noundef 0) #17, !dbg !4209
  call void @llvm.dbg.value(metadata ptr %call.i26.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %cmp.i27.i = icmp eq ptr %call.i26.i, null, !dbg !4212
  br i1 %cmp.i27.i, label %if.then.i28.i, label %if.end.i29.i, !dbg !4213

if.then.i28.i:                                    ; preds = %do.body.i.i
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.97) #17, !dbg !4214
  br label %if.end.i29.i, !dbg !4214

if.end.i29.i:                                     ; preds = %if.then.i28.i, %do.body.i.i
  call void @llvm.dbg.value(metadata ptr %call.i26.i, metadata !4205, metadata !DIExpression()) #17, !dbg !4206
  %139 = load i8, ptr %call.i26.i, align 1, !dbg !4215
  %cmp1.i.i = icmp eq i8 %139, 35, !dbg !4216
  br i1 %cmp1.i.i, label %land.lhs.true.i31.i, label %do.body.i.i.backedge, !dbg !4217

land.lhs.true.i31.i:                              ; preds = %if.end.i29.i
  %arrayidx.i30.i = getelementptr inbounds i8, ptr %call.i26.i, i64 1, !dbg !4218
  %140 = load i8, ptr %arrayidx.i30.i, align 1, !dbg !4218
  %cmp4.i.i = icmp eq i8 %140, 33, !dbg !4219
  br i1 %cmp4.i.i, label %land.rhs.i.i, label %do.body.i.i.backedge, !dbg !4220

land.rhs.i.i:                                     ; preds = %land.lhs.true.i31.i
  %call6.i.i = call ptr @Perl_instr(ptr noundef nonnull %call.i26.i, ptr noundef nonnull @.str.98) #17, !dbg !4221
  call void @llvm.dbg.value(metadata ptr %call6.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %tobool.not.i32.i = icmp eq ptr %call6.i.i, null, !dbg !4222
  br i1 %tobool.not.i32.i, label %lor.rhs.i.i, label %do.end.i34.i, !dbg !4223

lor.rhs.i.i:                                      ; preds = %land.rhs.i.i
  %call7.i.i = call ptr @Perl_instr(ptr noundef nonnull %call.i26.i, ptr noundef nonnull @.str.99) #17, !dbg !4224
  call void @llvm.dbg.value(metadata ptr %call7.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %tobool8.not.i.i = icmp eq ptr %call7.i.i, null, !dbg !4223
  call void @llvm.dbg.value(metadata ptr %call.i26.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  br i1 %tobool8.not.i.i, label %do.body.i.i.backedge, label %do.end.i34.i, !dbg !4225

do.body.i.i.backedge:                             ; preds = %lor.rhs.i.i, %land.lhs.true.i31.i, %if.end.i29.i
  br label %do.body.i.i, !dbg !4209, !llvm.loop !4226

do.end.i34.i:                                     ; preds = %lor.rhs.i.i, %land.rhs.i.i
  %s.099.i.i = phi ptr [ %call7.i.i, %lor.rhs.i.i ], [ %call6.i.i, %land.rhs.i.i ]
  %call9.i33.i = call i32 @PerlIO_ungetc(ptr noundef %rsfp.0.i, i32 noundef 10) #17, !dbg !4228
  call void @llvm.dbg.value(metadata ptr %s.099.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %141 = load i8, ptr %s.099.i.i, align 1, !dbg !4229
  %tobool11.not100.i.i = icmp eq i8 %141, 0, !dbg !4229
  br i1 %tobool11.not100.i.i, label %while.end.i.i, label %land.rhs12.i.i, !dbg !4230

land.rhs12.i.i:                                   ; preds = %do.end.i34.i, %while.body.i.i
  %142 = phi i8 [ %144, %while.body.i.i ], [ %141, %do.end.i34.i ]
  %s.1101.i.i = phi ptr [ %incdec.ptr.i.i, %while.body.i.i ], [ %s.099.i.i, %do.end.i34.i ]
  call void @llvm.dbg.value(metadata ptr %s.1101.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %idxprom.i35.i = zext i8 %142 to i64, !dbg !4231
  %arrayidx13.i.i = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom.i35.i, !dbg !4231
  %143 = load i32, ptr %arrayidx13.i.i, align 4, !dbg !4231
  %and.i36.i = and i32 %143, 17408, !dbg !4231
  %cmp14.i.i = icmp eq i32 %and.i36.i, 17408, !dbg !4231
  %cmp18.i.i = icmp eq i8 %142, 35
  %spec.select.i37.i = select i1 %cmp14.i.i, i1 true, i1 %cmp18.i.i, !dbg !4232
  br i1 %spec.select.i37.i, label %while.end.i.i, label %while.body.i.i, !dbg !4233

while.body.i.i:                                   ; preds = %land.rhs12.i.i
  %incdec.ptr.i.i = getelementptr inbounds i8, ptr %s.1101.i.i, i64 1, !dbg !4234
  call void @llvm.dbg.value(metadata ptr %incdec.ptr.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %144 = load i8, ptr %incdec.ptr.i.i, align 1, !dbg !4229
  %tobool11.not.i38.i = icmp eq i8 %144, 0, !dbg !4229
  br i1 %tobool11.not.i38.i, label %while.end.i.i, label %land.rhs12.i.i, !dbg !4230, !llvm.loop !4235

while.end.i.i:                                    ; preds = %while.body.i.i, %land.rhs12.i.i, %do.end.i34.i
  %145 = phi i8 [ 0, %do.end.i34.i ], [ 0, %while.body.i.i ], [ %142, %land.rhs12.i.i ]
  %s.1.lcssa.i.i = phi ptr [ %s.099.i.i, %do.end.i34.i ], [ %incdec.ptr.i.i, %while.body.i.i ], [ %s.1101.i.i, %land.rhs12.i.i ], !dbg !4206
  call void @llvm.dbg.value(metadata ptr %s.1.lcssa.i.i, metadata !4205, metadata !DIExpression()) #17, !dbg !4206
  br label %while.cond23.i.i, !dbg !4236

while.cond23.i.i:                                 ; preds = %while.body32.i.i, %while.end.i.i
  %146 = phi i8 [ %145, %while.end.i.i ], [ %.pre.i39.i, %while.body32.i.i ], !dbg !4237
  %s.2.i.i = phi ptr [ %s.1.lcssa.i.i, %while.end.i.i ], [ %incdec.ptr33.i.i, %while.body32.i.i ], !dbg !4206
  call void @llvm.dbg.value(metadata ptr %s.2.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  switch i8 %146, label %while.end34.i.i [
    i8 32, label %while.body32.i.i
    i8 9, label %while.body32.i.i
  ], !dbg !4238

while.body32.i.i:                                 ; preds = %while.cond23.i.i, %while.cond23.i.i
  %incdec.ptr33.i.i = getelementptr inbounds i8, ptr %s.2.i.i, i64 1, !dbg !4239
  call void @llvm.dbg.value(metadata ptr %incdec.ptr33.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %.pre.i39.i = load i8, ptr %incdec.ptr33.i.i, align 1, !dbg !4237
  br label %while.cond23.i.i, !dbg !4236, !llvm.loop !4240

while.end34.i.i:                                  ; preds = %while.cond23.i.i
  %incdec.ptr35.i.i = getelementptr inbounds i8, ptr %s.2.i.i, i64 1, !dbg !4241
  call void @llvm.dbg.value(metadata ptr %incdec.ptr35.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %cmp37.i.i = icmp eq i8 %146, 45, !dbg !4243
  br i1 %cmp37.i.i, label %while.cond40.i.i, label %S_find_beginning.exit.i, !dbg !4244

while.cond40.i.i:                                 ; preds = %while.end34.i.i, %while.cond40.i.i.backedge
  %s2.0.i.i = phi ptr [ %arrayidx41.i.i, %while.cond40.i.i.backedge ], [ %s.1.lcssa.i.i, %while.end34.i.i ], !dbg !4206
  call void @llvm.dbg.value(metadata ptr %s2.0.i.i, metadata !4205, metadata !DIExpression()) #17, !dbg !4206
  %arrayidx41.i.i = getelementptr inbounds i8, ptr %s2.0.i.i, i64 -1, !dbg !4245
  %147 = load i8, ptr %arrayidx41.i.i, align 1, !dbg !4245
  %idxprom42.i.i = zext i8 %147 to i64, !dbg !4245
  %arrayidx43.i.i = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom42.i.i, !dbg !4245
  %148 = load i32, ptr %arrayidx43.i.i, align 4, !dbg !4245
  %.fr.i.i = freeze i32 %148
  %and44.i.i = and i32 %.fr.i.i, 2, !dbg !4245
  %tobool45.not.not.i.i = icmp eq i32 %and44.i.i, 0, !dbg !4245
  br i1 %tobool45.not.not.i.i, label %switch.early.test.i.i, label %while.cond40.i.i.backedge, !dbg !4247

switch.early.test.i.i:                            ; preds = %while.cond40.i.i
  switch i8 %147, label %while.end63.i.i [
    i8 95, label %while.cond40.i.i.backedge
    i8 46, label %while.cond40.i.i.backedge
    i8 45, label %while.cond40.i.i.backedge
  ], !dbg !4247

while.cond40.i.i.backedge:                        ; preds = %switch.early.test.i.i, %switch.early.test.i.i, %switch.early.test.i.i, %while.cond40.i.i
  br label %while.cond40.i.i, !dbg !4206, !llvm.loop !4248

while.end63.i.i:                                  ; preds = %switch.early.test.i.i
  %add.ptr.i.i = getelementptr inbounds i8, ptr %s2.0.i.i, i64 -4, !dbg !4251
  %call64.i.i = call i32 @strncmp(ptr noundef nonnull %add.ptr.i.i, ptr noundef nonnull dereferenceable(5) @.str.98, i64 noundef 4) #21, !dbg !4251
  %tobool65.not.i.i = icmp eq i32 %call64.i.i, 0, !dbg !4251
  br i1 %tobool65.not.i.i, label %while.cond67.i.i, label %S_find_beginning.exit.i, !dbg !4253

while.cond67.i.i:                                 ; preds = %while.end63.i.i, %while.cond67.i.i
  %s.3.i.i = phi ptr [ %call68.i.i, %while.cond67.i.i ], [ %incdec.ptr35.i.i, %while.end63.i.i ], !dbg !4254
  call void @llvm.dbg.value(metadata ptr %s.3.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %call68.i.i = call ptr @Perl_moreswitches(ptr noundef %s.3.i.i) #17, !dbg !4255
  call void @llvm.dbg.value(metadata ptr %call68.i.i, metadata !4204, metadata !DIExpression()) #17, !dbg !4206
  %tobool69.not.i.i = icmp eq ptr %call68.i.i, null, !dbg !4256
  br i1 %tobool69.not.i.i, label %S_find_beginning.exit.i, label %while.cond67.i.i, !dbg !4256, !llvm.loop !4257

S_find_beginning.exit.i:                          ; preds = %while.cond67.i.i, %while.end63.i.i, %while.end34.i.i
  %tobool129.not.i = icmp eq ptr %cddir.0157.i, null, !dbg !4259
  br i1 %tobool129.not.i, label %if.end136.i, label %land.lhs.true130.i, !dbg !4261

land.lhs.true130.i:                               ; preds = %S_find_beginning.exit.i
  %call131.i = call i32 @chdir(ptr noundef nonnull %cddir.0157.i) #17, !dbg !4262
  %cmp132.i = icmp slt i32 %call131.i, 0, !dbg !4263
  br i1 %cmp132.i, label %if.then134.i, label %if.end136.i, !dbg !4264

if.then134.i:                                     ; preds = %land.lhs.true130.i
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.69, ptr noundef nonnull %cddir.0157.i) #17, !dbg !4265
  br label %if.end136.i, !dbg !4265

if.end136.i:                                      ; preds = %if.then134.i, %land.lhs.true130.i, %S_find_beginning.exit.i, %if.end124.i
  %linestr_sv.0.i = phi ptr [ %call128.i, %if.then134.i ], [ %call128.i, %land.lhs.true130.i ], [ %call128.i, %S_find_beginning.exit.i ], [ null, %if.end124.i ], !dbg !3691
  %lex_start_flags.1.i = phi i32 [ %or.i249, %if.then134.i ], [ %or.i249, %land.lhs.true130.i ], [ %or.i249, %S_find_beginning.exit.i ], [ %lex_start_flags.0.i, %if.end124.i ], !dbg !3691
  call void @llvm.dbg.value(metadata i32 %lex_start_flags.1.i, metadata !3660, metadata !DIExpression()) #17, !dbg !3691
  call void @llvm.dbg.value(metadata ptr %linestr_sv.0.i, metadata !3658, metadata !DIExpression()) #17, !dbg !3691
  %call137.i = call ptr @Perl_newSV_type(i32 noundef 13) #17, !dbg !4266
  store ptr %call137.i, ptr @PL_compcv, align 8, !dbg !4267
  store ptr %call137.i, ptr @PL_main_cv, align 8, !dbg !4268
  %149 = load ptr, ptr %call137.i, align 8, !dbg !4269
  %xcv_flags.i = getelementptr inbounds %struct.xpvcv, ptr %149, i64 0, i32 12, !dbg !4269
  %150 = load i32, ptr %xcv_flags.i, align 4, !dbg !4269
  %or138.i = or i32 %150, 256, !dbg !4269
  store i32 %or138.i, ptr %xcv_flags.i, align 4, !dbg !4269
  %call139.i = call ptr @Perl_pad_new(i32 noundef 0) #17, !dbg !4270
  %151 = load ptr, ptr @PL_compcv, align 8, !dbg !4270
  %152 = load ptr, ptr %151, align 8, !dbg !4270
  %xcv_padlist_u.i = getelementptr inbounds %struct.xpvcv, ptr %152, i64 0, i32 9, !dbg !4270
  store ptr %call139.i, ptr %xcv_padlist_u.i, align 8, !dbg !4270
  %call141.i = call ptr @Perl_newSV_type(i32 noundef 12) #17, !dbg !4271
  store ptr %call141.i, ptr @PL_isarev, align 8, !dbg !4272
  call void @Perl_boot_core_PerlIO() #17, !dbg !4273
  call void @Perl_boot_core_UNIVERSAL() #17, !dbg !4274
  call void @Perl_boot_core_mro() #17, !dbg !4275
  %call142.i = call ptr @Perl_newXS(ptr noundef nonnull @.str.70, ptr noundef nonnull @S_Internals_V, ptr noundef nonnull @.str.71) #17, !dbg !4276
  %tobool143.not.i = icmp eq ptr %xsinit, null, !dbg !4277
  br i1 %tobool143.not.i, label %if.end145.i, label %if.then144.i, !dbg !4279

if.then144.i:                                     ; preds = %if.end136.i
  call void %xsinit() #17, !dbg !4280
  br label %if.end145.i, !dbg !4280

if.end145.i:                                      ; preds = %if.then144.i, %if.end136.i
  call void @llvm.dbg.value(metadata ptr @.str.100, metadata !3832, metadata !DIExpression()) #17, !dbg !4281
  call void @llvm.dbg.value(metadata i32 1, metadata !3837, metadata !DIExpression()) #17, !dbg !4281
  %call.i.i40.i = call ptr @Perl_gv_fetchpv(ptr noundef nonnull @.str.100, i32 noundef 1, i32 noundef 3) #17, !dbg !4288
  call void @llvm.dbg.value(metadata ptr %call.i.i40.i, metadata !3838, metadata !DIExpression()) #17, !dbg !4281
  %tobool.not.i.i41.i = icmp eq ptr %call.i.i40.i, null, !dbg !4289
  br i1 %tobool.not.i.i41.i, label %Perl_get_sv.exit.i.i, label %if.then.i.i43.i, !dbg !4290

if.then.i.i43.i:                                  ; preds = %if.end145.i
  %sv_u.i.i42.i = getelementptr inbounds %struct.gv, ptr %call.i.i40.i, i64 0, i32 3, !dbg !4291
  %153 = load ptr, ptr %sv_u.i.i42.i, align 8, !dbg !4291
  %154 = load ptr, ptr %153, align 8, !dbg !4291
  br label %Perl_get_sv.exit.i.i, !dbg !4292

Perl_get_sv.exit.i.i:                             ; preds = %if.then.i.i43.i, %if.end145.i
  %retval.0.i.i44.i = phi ptr [ %154, %if.then.i.i43.i ], [ null, %if.end145.i ], !dbg !4281
  call void @Perl_sv_setpvn(ptr noundef %retval.0.i.i44.i, ptr noundef nonnull @.str.101, i64 noundef 1) #17, !dbg !4293
  %call1.i45.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.102, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17, !dbg !4294
  call void @llvm.dbg.value(metadata ptr %call1.i45.i, metadata !3392, metadata !DIExpression()) #17, !dbg !4295
  %cmp.not.i.i46.i = icmp eq ptr %call1.i45.i, null, !dbg !4297
  br i1 %cmp.not.i.i46.i, label %S_init_predump_symbols.exit.i, label %if.then.i75.i.i, !dbg !4298

if.then.i75.i.i:                                  ; preds = %Perl_get_sv.exit.i.i
  %sv_refcnt.i.i47.i = getelementptr inbounds %struct.sv, ptr %call1.i45.i, i64 0, i32 1, !dbg !4299
  %155 = load i32, ptr %sv_refcnt.i.i47.i, align 8, !dbg !4300
  %inc.i.i48.i = add i32 %155, 1, !dbg !4300
  store i32 %inc.i.i48.i, ptr %sv_refcnt.i.i47.i, align 8, !dbg !4300
  br label %S_init_predump_symbols.exit.i, !dbg !4299

S_init_predump_symbols.exit.i:                    ; preds = %if.then.i75.i.i, %Perl_get_sv.exit.i.i
  store ptr %call1.i45.i, ptr @PL_ofsgv, align 8, !dbg !4301
  call void (ptr, i64, ...) @Perl_populate_isa(ptr noundef nonnull @.str.103, i64 noundef 13, ptr noundef nonnull @.str.104, i64 noundef 12, ptr noundef nonnull @.str.105, i64 noundef 14, ptr noundef nonnull @.str.106, i64 noundef 10, ptr noundef null) #17, !dbg !4302
  %call3.i49.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.107, i64 noundef 5, i32 noundef 129, i32 noundef 15) #17, !dbg !4303
  store ptr %call3.i49.i, ptr @PL_stdingv, align 8, !dbg !4304
  %156 = load ptr, ptr %call3.i49.i, align 8, !dbg !4305
  %xpv_cur.i50.i = getelementptr inbounds %struct.xpvgv, ptr %156, i64 0, i32 2, !dbg !4305
  %157 = load i64, ptr %xpv_cur.i50.i, align 8, !dbg !4305
  %or.i51.i = or i64 %157, 2, !dbg !4305
  store i64 %or.i51.i, ptr %xpv_cur.i50.i, align 8, !dbg !4305
  %sv_u.i52.i = getelementptr inbounds %struct.gv, ptr %call3.i49.i, i64 0, i32 3, !dbg !4306
  %158 = load ptr, ptr %sv_u.i52.i, align 8, !dbg !4306
  %gp_io.i.i = getelementptr inbounds %struct.gp, ptr %158, i64 0, i32 1, !dbg !4306
  %159 = load ptr, ptr %gp_io.i.i, align 8, !dbg !4306
  call void @llvm.dbg.value(metadata ptr %159, metadata !4286, metadata !DIExpression()) #17, !dbg !4307
  %160 = load ptr, ptr %159, align 8, !dbg !4308
  %xio_type.i.i = getelementptr inbounds %struct.xpvio, ptr %160, i64 0, i32 16, !dbg !4308
  store i8 60, ptr %xio_type.i.i, align 8, !dbg !4309
  %call5.i.i = call ptr @Perl_PerlIO_stdin() #17, !dbg !4310
  %sv_u6.i.i = getelementptr inbounds %struct.io, ptr %159, i64 0, i32 3, !dbg !4311
  store ptr %call5.i.i, ptr %sv_u6.i.i, align 8, !dbg !4312
  %call7.i53.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.108, i64 noundef 5, i32 noundef 129, i32 noundef 3) #17, !dbg !4313
  call void @llvm.dbg.value(metadata ptr %call7.i53.i, metadata !4285, metadata !DIExpression()) #17, !dbg !4307
  %161 = load ptr, ptr %call7.i53.i, align 8, !dbg !4314
  %xpv_cur9.i.i = getelementptr inbounds %struct.xpvgv, ptr %161, i64 0, i32 2, !dbg !4314
  %162 = load i64, ptr %xpv_cur9.i.i, align 8, !dbg !4314
  %or10.i.i = or i64 %162, 2, !dbg !4314
  store i64 %or10.i.i, ptr %xpv_cur9.i.i, align 8, !dbg !4314
  call void @llvm.dbg.value(metadata ptr %159, metadata !3392, metadata !DIExpression()) #17, !dbg !4315
  %sv_refcnt.i77.i.i = getelementptr inbounds %struct.sv, ptr %159, i64 0, i32 1, !dbg !4317
  %163 = load i32, ptr %sv_refcnt.i77.i.i, align 8, !dbg !4318
  %inc.i78.i.i = add i32 %163, 1, !dbg !4318
  store i32 %inc.i78.i.i, ptr %sv_refcnt.i77.i.i, align 8, !dbg !4318
  %sv_u12.i.i = getelementptr inbounds %struct.gv, ptr %call7.i53.i, i64 0, i32 3, !dbg !4319
  %164 = load ptr, ptr %sv_u12.i.i, align 8, !dbg !4319
  %gp_io14.i.i = getelementptr inbounds %struct.gp, ptr %164, i64 0, i32 1, !dbg !4319
  store ptr %159, ptr %gp_io14.i.i, align 8, !dbg !4320
  %call15.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.109, i64 noundef 6, i32 noundef 129, i32 noundef 15) #17, !dbg !4321
  call void @llvm.dbg.value(metadata ptr %call15.i.i, metadata !4285, metadata !DIExpression()) #17, !dbg !4307
  %165 = load ptr, ptr %call15.i.i, align 8, !dbg !4322
  %xpv_cur17.i.i = getelementptr inbounds %struct.xpvgv, ptr %165, i64 0, i32 2, !dbg !4322
  %166 = load i64, ptr %xpv_cur17.i.i, align 8, !dbg !4322
  %or18.i.i = or i64 %166, 2, !dbg !4322
  store i64 %or18.i.i, ptr %xpv_cur17.i.i, align 8, !dbg !4322
  %sv_u19.i.i = getelementptr inbounds %struct.gv, ptr %call15.i.i, i64 0, i32 3, !dbg !4323
  %167 = load ptr, ptr %sv_u19.i.i, align 8, !dbg !4323
  %gp_io21.i.i = getelementptr inbounds %struct.gp, ptr %167, i64 0, i32 1, !dbg !4323
  %168 = load ptr, ptr %gp_io21.i.i, align 8, !dbg !4323
  call void @llvm.dbg.value(metadata ptr %168, metadata !4286, metadata !DIExpression()) #17, !dbg !4307
  %169 = load ptr, ptr %168, align 8, !dbg !4324
  %xio_type23.i.i = getelementptr inbounds %struct.xpvio, ptr %169, i64 0, i32 16, !dbg !4324
  store i8 62, ptr %xio_type23.i.i, align 8, !dbg !4325
  %call24.i.i = call ptr @Perl_PerlIO_stdout() #17, !dbg !4326
  %sv_u25.i.i = getelementptr inbounds %struct.io, ptr %168, i64 0, i32 3, !dbg !4327
  store ptr %call24.i.i, ptr %sv_u25.i.i, align 8, !dbg !4328
  %170 = load ptr, ptr %168, align 8, !dbg !4329
  %xio_ofp.i.i = getelementptr inbounds %struct.xpvio, ptr %170, i64 0, i32 5, !dbg !4329
  store ptr %call24.i.i, ptr %xio_ofp.i.i, align 8, !dbg !4330
  call void @Perl_setdefout(ptr noundef nonnull %call15.i.i) #17, !dbg !4331
  %call27.i54.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.110, i64 noundef 6, i32 noundef 129, i32 noundef 3) #17, !dbg !4332
  call void @llvm.dbg.value(metadata ptr %call27.i54.i, metadata !4285, metadata !DIExpression()) #17, !dbg !4307
  %171 = load ptr, ptr %call27.i54.i, align 8, !dbg !4333
  %xpv_cur29.i.i = getelementptr inbounds %struct.xpvgv, ptr %171, i64 0, i32 2, !dbg !4333
  %172 = load i64, ptr %xpv_cur29.i.i, align 8, !dbg !4333
  %or30.i.i = or i64 %172, 2, !dbg !4333
  store i64 %or30.i.i, ptr %xpv_cur29.i.i, align 8, !dbg !4333
  call void @llvm.dbg.value(metadata ptr %168, metadata !3392, metadata !DIExpression()) #17, !dbg !4334
  %sv_refcnt.i82.i.i = getelementptr inbounds %struct.sv, ptr %168, i64 0, i32 1, !dbg !4336
  %173 = load i32, ptr %sv_refcnt.i82.i.i, align 8, !dbg !4337
  %inc.i83.i.i = add i32 %173, 1, !dbg !4337
  store i32 %inc.i83.i.i, ptr %sv_refcnt.i82.i.i, align 8, !dbg !4337
  %sv_u32.i.i = getelementptr inbounds %struct.gv, ptr %call27.i54.i, i64 0, i32 3, !dbg !4338
  %174 = load ptr, ptr %sv_u32.i.i, align 8, !dbg !4338
  %gp_io34.i.i = getelementptr inbounds %struct.gp, ptr %174, i64 0, i32 1, !dbg !4338
  store ptr %168, ptr %gp_io34.i.i, align 8, !dbg !4339
  %call35.i55.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.111, i64 noundef 6, i32 noundef 129, i32 noundef 15) #17, !dbg !4340
  store ptr %call35.i55.i, ptr @PL_stderrgv, align 8, !dbg !4341
  %175 = load ptr, ptr %call35.i55.i, align 8, !dbg !4342
  %xpv_cur37.i.i = getelementptr inbounds %struct.xpvgv, ptr %175, i64 0, i32 2, !dbg !4342
  %176 = load i64, ptr %xpv_cur37.i.i, align 8, !dbg !4342
  %or38.i.i = or i64 %176, 2, !dbg !4342
  store i64 %or38.i.i, ptr %xpv_cur37.i.i, align 8, !dbg !4342
  %sv_u39.i.i = getelementptr inbounds %struct.gv, ptr %call35.i55.i, i64 0, i32 3, !dbg !4343
  %177 = load ptr, ptr %sv_u39.i.i, align 8, !dbg !4343
  %gp_io41.i.i = getelementptr inbounds %struct.gp, ptr %177, i64 0, i32 1, !dbg !4343
  %178 = load ptr, ptr %gp_io41.i.i, align 8, !dbg !4343
  call void @llvm.dbg.value(metadata ptr %178, metadata !4286, metadata !DIExpression()) #17, !dbg !4307
  %179 = load ptr, ptr %178, align 8, !dbg !4344
  %xio_type43.i.i = getelementptr inbounds %struct.xpvio, ptr %179, i64 0, i32 16, !dbg !4344
  store i8 62, ptr %xio_type43.i.i, align 8, !dbg !4345
  %call44.i.i = call ptr @Perl_PerlIO_stderr() #17, !dbg !4346
  %sv_u45.i.i = getelementptr inbounds %struct.io, ptr %178, i64 0, i32 3, !dbg !4347
  store ptr %call44.i.i, ptr %sv_u45.i.i, align 8, !dbg !4348
  %180 = load ptr, ptr %178, align 8, !dbg !4349
  %xio_ofp47.i.i = getelementptr inbounds %struct.xpvio, ptr %180, i64 0, i32 5, !dbg !4349
  store ptr %call44.i.i, ptr %xio_ofp47.i.i, align 8, !dbg !4350
  %call48.i.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.112, i64 noundef 6, i32 noundef 129, i32 noundef 3) #17, !dbg !4351
  call void @llvm.dbg.value(metadata ptr %call48.i.i, metadata !4285, metadata !DIExpression()) #17, !dbg !4307
  %181 = load ptr, ptr %call48.i.i, align 8, !dbg !4352
  %xpv_cur50.i.i = getelementptr inbounds %struct.xpvgv, ptr %181, i64 0, i32 2, !dbg !4352
  %182 = load i64, ptr %xpv_cur50.i.i, align 8, !dbg !4352
  %or51.i.i = or i64 %182, 2, !dbg !4352
  store i64 %or51.i.i, ptr %xpv_cur50.i.i, align 8, !dbg !4352
  call void @llvm.dbg.value(metadata ptr %178, metadata !3392, metadata !DIExpression()) #17, !dbg !4353
  %sv_refcnt.i87.i.i = getelementptr inbounds %struct.sv, ptr %178, i64 0, i32 1, !dbg !4355
  %183 = load i32, ptr %sv_refcnt.i87.i.i, align 8, !dbg !4356
  %inc.i88.i.i = add i32 %183, 1, !dbg !4356
  store i32 %inc.i88.i.i, ptr %sv_refcnt.i87.i.i, align 8, !dbg !4356
  %sv_u53.i.i = getelementptr inbounds %struct.gv, ptr %call48.i.i, i64 0, i32 3, !dbg !4357
  %184 = load ptr, ptr %sv_u53.i.i, align 8, !dbg !4357
  %gp_io55.i.i = getelementptr inbounds %struct.gp, ptr %184, i64 0, i32 1, !dbg !4357
  store ptr %178, ptr %gp_io55.i.i, align 8, !dbg !4358
  %call56.i56.i = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !4359
  store ptr %call56.i56.i, ptr @PL_statname, align 8, !dbg !4360
  %185 = load i8, ptr @PL_do_undump, align 1, !dbg !4361, !range !1483
  %tobool146.not.i = icmp eq i8 %185, 0, !dbg !4361
  br i1 %tobool146.not.i, label %if.then147.i, label %if.end148.i, !dbg !4363

if.then147.i:                                     ; preds = %S_init_predump_symbols.exit.i
  call fastcc void @S_init_postdump_symbols(i32 noundef %argc.5.i, ptr noundef %argv.5.i, ptr noundef %env) #17, !dbg !4364
  br label %if.end148.i, !dbg !4364

if.end148.i:                                      ; preds = %if.then147.i, %S_init_predump_symbols.exit.i
  %186 = load i32, ptr @PL_unicode, align 4, !dbg !4365
  %tobool149.not.i = icmp eq i32 %186, 0, !dbg !4365
  br i1 %tobool149.not.i, label %if.end292.i, label %if.then150.i, !dbg !4366

if.then150.i:                                     ; preds = %if.end148.i
  %and151.i = and i32 %186, 64, !dbg !4367
  %tobool152.not.i = icmp ne i32 %and151.i, 0, !dbg !4367
  %187 = load i8, ptr @PL_utf8locale, align 1
  %tobool154.not.i = icmp eq i8 %187, 0
  %or.cond1.i = select i1 %tobool152.not.i, i1 %tobool154.not.i, i1 false, !dbg !4368
  br i1 %or.cond1.i, label %if.end292.i, label %if.then156.i, !dbg !4368

if.then156.i:                                     ; preds = %if.then150.i
  %and157.i = and i32 %186, 1, !dbg !4369
  %tobool158.i = icmp ne i32 %and157.i, 0, !dbg !4369
  %188 = load ptr, ptr @PL_stdingv, align 8
  %tobool160.i = icmp ne ptr %188, null
  %or.cond.i = select i1 %tobool158.i, i1 %tobool160.i, i1 false, !dbg !4371
  br i1 %or.cond.i, label %land.lhs.true163.i, label %if.end185.i, !dbg !4371

land.lhs.true163.i:                               ; preds = %if.then156.i
  %sv_flags.i = getelementptr inbounds %struct.sv, ptr %188, i64 0, i32 2, !dbg !4372
  %189 = load i32, ptr %sv_flags.i, align 4, !dbg !4372
  %and164.i = and i32 %189, 255, !dbg !4372
  %and164.off.i = add nsw i32 %and164.i, -9, !dbg !4372
  %switch.i = icmp ult i32 %and164.off.i, 2, !dbg !4372
  br i1 %switch.i, label %land.lhs.true172.i, label %if.end185.i, !dbg !4372

land.lhs.true172.i:                               ; preds = %land.lhs.true163.i
  %sv_u.i = getelementptr inbounds %struct.gv, ptr %188, i64 0, i32 3, !dbg !4372
  %190 = load ptr, ptr %sv_u.i, align 8, !dbg !4372
  %tobool174.not.i = icmp eq ptr %190, null, !dbg !4372
  br i1 %tobool174.not.i, label %if.end185.i, label %cond.end.i, !dbg !4372

cond.end.i:                                       ; preds = %land.lhs.true172.i
  %gp_io.i = getelementptr inbounds %struct.gp, ptr %190, i64 0, i32 1, !dbg !4372
  %191 = load ptr, ptr %gp_io.i, align 8, !dbg !4372
  call void @llvm.dbg.value(metadata ptr %191, metadata !3678, metadata !DIExpression()) #17, !dbg !4373
  %tobool177.not.i = icmp eq ptr %191, null, !dbg !4374
  br i1 %tobool177.not.i, label %if.end185.i, label %land.lhs.true178.i, !dbg !4375

land.lhs.true178.i:                               ; preds = %cond.end.i
  %sv_u179.i = getelementptr inbounds %struct.io, ptr %191, i64 0, i32 3, !dbg !4376
  %192 = load ptr, ptr %sv_u179.i, align 8, !dbg !4376
  call void @llvm.dbg.value(metadata ptr %192, metadata !3683, metadata !DIExpression()) #17, !dbg !4373
  %tobool180.not.i = icmp eq ptr %192, null, !dbg !4377
  br i1 %tobool180.not.i, label %if.end185.i, label %if.then181.i, !dbg !4378

if.then181.i:                                     ; preds = %land.lhs.true178.i
  %193 = load ptr, ptr %191, align 8, !dbg !4379
  %xio_type.i = getelementptr inbounds %struct.xpvio, ptr %193, i64 0, i32 16, !dbg !4379
  %194 = load i8, ptr %xio_type.i, align 8, !dbg !4379
  %conv183.i = sext i8 %194 to i32, !dbg !4379
  %call184.i = call i32 @PerlIO_binmode(ptr noundef nonnull %192, i32 noundef %conv183.i, i32 noundef 0, ptr noundef nonnull @.str.72) #17, !dbg !4380
  %.pre.i = load i32, ptr @PL_unicode, align 4, !dbg !4381
  br label %if.end185.i, !dbg !4380

if.end185.i:                                      ; preds = %if.then181.i, %land.lhs.true178.i, %cond.end.i, %land.lhs.true172.i, %land.lhs.true163.i, %if.then156.i
  %195 = phi i32 [ %186, %land.lhs.true163.i ], [ %186, %land.lhs.true172.i ], [ %.pre.i, %if.then181.i ], [ %186, %land.lhs.true178.i ], [ %186, %cond.end.i ], [ %186, %if.then156.i ], !dbg !4381
  %and186.i = and i32 %195, 2, !dbg !4383
  %tobool187.i = icmp ne i32 %and186.i, 0, !dbg !4383
  %196 = load ptr, ptr @PL_defoutgv, align 8
  %tobool189.i = icmp ne ptr %196, null
  %or.cond342.i = select i1 %tobool187.i, i1 %tobool189.i, i1 false, !dbg !4384
  br i1 %or.cond342.i, label %land.lhs.true192.i, label %if.end222.i, !dbg !4384

land.lhs.true192.i:                               ; preds = %if.end185.i
  %sv_flags193.i = getelementptr inbounds %struct.sv, ptr %196, i64 0, i32 2, !dbg !4385
  %197 = load i32, ptr %sv_flags193.i, align 4, !dbg !4385
  %and194.i = and i32 %197, 255, !dbg !4385
  %and194.off.i = add nsw i32 %and194.i, -9, !dbg !4385
  %switch2.i = icmp ult i32 %and194.off.i, 2, !dbg !4385
  br i1 %switch2.i, label %land.lhs.true202.i, label %if.end222.i, !dbg !4385

land.lhs.true202.i:                               ; preds = %land.lhs.true192.i
  %sv_u203.i = getelementptr inbounds %struct.gv, ptr %196, i64 0, i32 3, !dbg !4385
  %198 = load ptr, ptr %sv_u203.i, align 8, !dbg !4385
  %tobool205.not.i = icmp eq ptr %198, null, !dbg !4385
  br i1 %tobool205.not.i, label %if.end222.i, label %cond.end211.i, !dbg !4385

cond.end211.i:                                    ; preds = %land.lhs.true202.i
  %gp_io209.i = getelementptr inbounds %struct.gp, ptr %198, i64 0, i32 1, !dbg !4385
  %199 = load ptr, ptr %gp_io209.i, align 8, !dbg !4385
  call void @llvm.dbg.value(metadata ptr %199, metadata !3678, metadata !DIExpression()) #17, !dbg !4373
  %tobool213.not.i = icmp eq ptr %199, null, !dbg !4386
  br i1 %tobool213.not.i, label %if.end222.i, label %land.lhs.true214.i, !dbg !4387

land.lhs.true214.i:                               ; preds = %cond.end211.i
  %200 = load ptr, ptr %199, align 8, !dbg !4388
  %xio_ofp.i = getelementptr inbounds %struct.xpvio, ptr %200, i64 0, i32 5, !dbg !4388
  %201 = load ptr, ptr %xio_ofp.i, align 8, !dbg !4388
  call void @llvm.dbg.value(metadata ptr %201, metadata !3683, metadata !DIExpression()) #17, !dbg !4373
  %tobool216.not.i = icmp eq ptr %201, null, !dbg !4389
  br i1 %tobool216.not.i, label %if.end222.i, label %if.then217.i, !dbg !4390

if.then217.i:                                     ; preds = %land.lhs.true214.i
  %xio_type219.i = getelementptr inbounds %struct.xpvio, ptr %200, i64 0, i32 16, !dbg !4391
  %202 = load i8, ptr %xio_type219.i, align 8, !dbg !4391
  %conv220.i = sext i8 %202 to i32, !dbg !4391
  %call221.i = call i32 @PerlIO_binmode(ptr noundef nonnull %201, i32 noundef %conv220.i, i32 noundef 0, ptr noundef nonnull @.str.72) #17, !dbg !4392
  %.pre244.i = load i32, ptr @PL_unicode, align 4, !dbg !4393
  br label %if.end222.i, !dbg !4392

if.end222.i:                                      ; preds = %if.then217.i, %land.lhs.true214.i, %cond.end211.i, %land.lhs.true202.i, %land.lhs.true192.i, %if.end185.i
  %203 = phi i32 [ %195, %land.lhs.true192.i ], [ %195, %land.lhs.true202.i ], [ %.pre244.i, %if.then217.i ], [ %195, %land.lhs.true214.i ], [ %195, %cond.end211.i ], [ %195, %if.end185.i ], !dbg !4393
  %and223.i = and i32 %203, 4, !dbg !4395
  %tobool224.i = icmp ne i32 %and223.i, 0, !dbg !4395
  %204 = load ptr, ptr @PL_stderrgv, align 8
  %tobool226.i = icmp ne ptr %204, null
  %or.cond343.i = select i1 %tobool224.i, i1 %tobool226.i, i1 false, !dbg !4396
  br i1 %or.cond343.i, label %land.lhs.true229.i, label %if.end260.i, !dbg !4396

land.lhs.true229.i:                               ; preds = %if.end222.i
  %sv_flags230.i = getelementptr inbounds %struct.sv, ptr %204, i64 0, i32 2, !dbg !4397
  %205 = load i32, ptr %sv_flags230.i, align 4, !dbg !4397
  %and231.i = and i32 %205, 255, !dbg !4397
  %and231.off.i = add nsw i32 %and231.i, -9, !dbg !4397
  %switch3.i = icmp ult i32 %and231.off.i, 2, !dbg !4397
  br i1 %switch3.i, label %land.lhs.true239.i, label %if.end260.i, !dbg !4397

land.lhs.true239.i:                               ; preds = %land.lhs.true229.i
  %sv_u240.i = getelementptr inbounds %struct.gv, ptr %204, i64 0, i32 3, !dbg !4397
  %206 = load ptr, ptr %sv_u240.i, align 8, !dbg !4397
  %tobool242.not.i = icmp eq ptr %206, null, !dbg !4397
  br i1 %tobool242.not.i, label %if.end260.i, label %cond.end248.i, !dbg !4397

cond.end248.i:                                    ; preds = %land.lhs.true239.i
  %gp_io246.i = getelementptr inbounds %struct.gp, ptr %206, i64 0, i32 1, !dbg !4397
  %207 = load ptr, ptr %gp_io246.i, align 8, !dbg !4397
  call void @llvm.dbg.value(metadata ptr %207, metadata !3678, metadata !DIExpression()) #17, !dbg !4373
  %tobool250.not.i = icmp eq ptr %207, null, !dbg !4398
  br i1 %tobool250.not.i, label %if.end260.i, label %land.lhs.true251.i, !dbg !4399

land.lhs.true251.i:                               ; preds = %cond.end248.i
  %208 = load ptr, ptr %207, align 8, !dbg !4400
  %xio_ofp253.i = getelementptr inbounds %struct.xpvio, ptr %208, i64 0, i32 5, !dbg !4400
  %209 = load ptr, ptr %xio_ofp253.i, align 8, !dbg !4400
  call void @llvm.dbg.value(metadata ptr %209, metadata !3683, metadata !DIExpression()) #17, !dbg !4373
  %tobool254.not.i = icmp eq ptr %209, null, !dbg !4401
  br i1 %tobool254.not.i, label %if.end260.i, label %if.then255.i, !dbg !4402

if.then255.i:                                     ; preds = %land.lhs.true251.i
  %xio_type257.i = getelementptr inbounds %struct.xpvio, ptr %208, i64 0, i32 16, !dbg !4403
  %210 = load i8, ptr %xio_type257.i, align 8, !dbg !4403
  %conv258.i = sext i8 %210 to i32, !dbg !4403
  %call259.i = call i32 @PerlIO_binmode(ptr noundef nonnull %209, i32 noundef %conv258.i, i32 noundef 0, ptr noundef nonnull @.str.72) #17, !dbg !4404
  %.pre245.i = load i32, ptr @PL_unicode, align 4, !dbg !4405
  br label %if.end260.i, !dbg !4404

if.end260.i:                                      ; preds = %if.then255.i, %land.lhs.true251.i, %cond.end248.i, %land.lhs.true239.i, %land.lhs.true229.i, %if.end222.i
  %211 = phi i32 [ %203, %land.lhs.true229.i ], [ %203, %land.lhs.true239.i ], [ %.pre245.i, %if.then255.i ], [ %203, %land.lhs.true251.i ], [ %203, %cond.end248.i ], [ %203, %if.end222.i ], !dbg !4405
  %and261.i = and i32 %211, 24, !dbg !4406
  %tobool262.not.i = icmp eq i32 %and261.i, 0, !dbg !4406
  br i1 %tobool262.not.i, label %if.end292.i, label %land.lhs.true263.i, !dbg !4407

land.lhs.true263.i:                               ; preds = %if.end260.i
  %call264.i = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.73, i64 noundef 4, i32 noundef 129, i32 noundef 3) #17, !dbg !4408
  %sv_u265.i = getelementptr inbounds %struct.gv, ptr %call264.i, i64 0, i32 3, !dbg !4408
  %212 = load ptr, ptr %sv_u265.i, align 8, !dbg !4408
  %213 = load ptr, ptr %212, align 8, !dbg !4408
  call void @llvm.dbg.value(metadata ptr %213, metadata !3684, metadata !DIExpression()) #17, !dbg !4373
  %tobool267.not.i = icmp eq ptr %213, null, !dbg !4409
  br i1 %tobool267.not.i, label %if.end292.i, label %if.then268.i, !dbg !4410

if.then268.i:                                     ; preds = %land.lhs.true263.i
  %214 = load i32, ptr @PL_unicode, align 4, !dbg !4411
  %and269.i = and i32 %214, 8, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %and269.i, metadata !3685, metadata !DIExpression()) #17, !dbg !4413
  %and270.i = and i32 %214, 16, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %and270.i, metadata !3688, metadata !DIExpression()) #17, !dbg !4413
  %tobool271.not.i = icmp eq i32 %and269.i, 0, !dbg !4415
  %tobool278.not.i = icmp eq i32 %and270.i, 0, !dbg !4417
  br i1 %tobool271.not.i, label %if.else277.i, label %if.then272.i, !dbg !4418

if.then272.i:                                     ; preds = %if.then268.i
  br i1 %tobool278.not.i, label %if.else275.i, label %if.then274.i, !dbg !4419

if.then274.i:                                     ; preds = %if.then272.i
  call void @Perl_sv_setpvn(ptr noundef nonnull %213, ptr noundef nonnull @.str.74, i64 noundef 11) #17, !dbg !4421
  br label %do.body.i, !dbg !4421

if.else275.i:                                     ; preds = %if.then272.i
  call void @Perl_sv_setpvn(ptr noundef nonnull %213, ptr noundef nonnull @.str.75, i64 noundef 6) #17, !dbg !4423
  br label %do.body.i

if.else277.i:                                     ; preds = %if.then268.i
  br i1 %tobool278.not.i, label %do.body.i, label %if.then279.i, !dbg !4424

if.then279.i:                                     ; preds = %if.else277.i
  call void @Perl_sv_setpvn(ptr noundef nonnull %213, ptr noundef nonnull @.str.76, i64 noundef 6) #17, !dbg !4425
  br label %do.body.i, !dbg !4425

do.body.i:                                        ; preds = %if.then279.i, %if.else277.i, %if.else275.i, %if.then274.i
  %sv_flags282.i = getelementptr inbounds %struct.sv, ptr %213, i64 0, i32 2, !dbg !4427
  %215 = load i32, ptr %sv_flags282.i, align 4, !dbg !4427
  %and283.i = and i32 %215, 4194304, !dbg !4427
  %tobool284.not.i = icmp eq i32 %and283.i, 0, !dbg !4427
  br i1 %tobool284.not.i, label %if.end292.i, label %if.then287.i, !dbg !4430

if.then287.i:                                     ; preds = %do.body.i
  %call288.i = call i32 @Perl_mg_set(ptr noundef nonnull %213) #17, !dbg !4427
  br label %if.end292.i, !dbg !4427

if.end292.i:                                      ; preds = %if.then287.i, %do.body.i, %land.lhs.true263.i, %if.end260.i, %if.then150.i, %if.end148.i
  call void @Perl_lex_start(ptr noundef %linestr_sv.0.i, ptr noundef %rsfp.0.i, i32 noundef %lex_start_flags.1.i) #17, !dbg !4431
  call void @llvm.dbg.value(metadata ptr %linestr_sv.0.i, metadata !1967, metadata !DIExpression()) #17, !dbg !4432
  %cmp.not.i57.i = icmp eq ptr %linestr_sv.0.i, null, !dbg !4434
  br i1 %cmp.not.i57.i, label %S_SvREFCNT_dec.exit.i, label %if.then.i60.i, !dbg !4435

if.then.i60.i:                                    ; preds = %if.end292.i
  %sv_refcnt.i58.i = getelementptr inbounds %struct.sv, ptr %linestr_sv.0.i, i64 0, i32 1, !dbg !4436
  %216 = load i32, ptr %sv_refcnt.i58.i, align 8, !dbg !4436
  call void @llvm.dbg.value(metadata i32 %216, metadata !1973, metadata !DIExpression()) #17, !dbg !4437
  %cmp1.i59.i = icmp ugt i32 %216, 1, !dbg !4438
  br i1 %cmp1.i59.i, label %if.then4.i.i, label %if.else.i61.i, !dbg !4439

if.then4.i.i:                                     ; preds = %if.then.i60.i
  %sub.i.i = add i32 %216, -1, !dbg !4440
  store i32 %sub.i.i, ptr %sv_refcnt.i58.i, align 8, !dbg !4441
  br label %S_SvREFCNT_dec.exit.i, !dbg !4442

if.else.i61.i:                                    ; preds = %if.then.i60.i
  call void @Perl_sv_free2(ptr noundef nonnull %linestr_sv.0.i, i32 noundef %216) #17, !dbg !4443
  br label %S_SvREFCNT_dec.exit.i

S_SvREFCNT_dec.exit.i:                            ; preds = %if.else.i61.i, %if.then4.i.i, %if.end292.i
  %call293.i = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.77, i64 noundef 4) #17, !dbg !4444
  store ptr %call293.i, ptr @PL_subname, align 8, !dbg !4445
  %217 = and i8 %add_read_e_script.0161.i, 1, !dbg !4446
  %tobool294.not.i = icmp eq i8 %217, 0, !dbg !4446
  br i1 %tobool294.not.i, label %if.end297.i, label %if.then295.i, !dbg !4448

if.then295.i:                                     ; preds = %S_SvREFCNT_dec.exit.i
  %call296.i = call ptr @Perl_filter_add(ptr noundef nonnull @read_e_script, ptr noundef null) #17, !dbg !4449
  br label %if.end297.i, !dbg !4449

if.end297.i:                                      ; preds = %if.then295.i, %S_SvREFCNT_dec.exit.i
  %call298.i = call ptr @__errno_location() #22, !dbg !4450
  store i32 0, ptr %call298.i, align 4, !dbg !4450
  %call299.i = call i32 @Perl_yyparse(i32 noundef 258) #17, !dbg !4451
  %tobool300.not.i = icmp eq i32 %call299.i, 0, !dbg !4451
  br i1 %tobool300.not.i, label %lor.lhs.false301.i, label %if.then304.i, !dbg !4453

lor.lhs.false301.i:                               ; preds = %if.end297.i
  %218 = load ptr, ptr @PL_parser, align 8, !dbg !4454
  %error_count.i = getelementptr inbounds %struct.yy_parser, ptr %218, i64 0, i32 44, !dbg !4455
  %219 = load i8, ptr %error_count.i, align 1, !dbg !4455
  %tobool303.not.i = icmp eq i8 %219, 0, !dbg !4454
  br i1 %tobool303.not.i, label %if.end309.i, label %if.then304.i, !dbg !4456

if.then304.i:                                     ; preds = %lor.lhs.false301.i, %if.end297.i
  %220 = load i8, ptr @PL_minus_c, align 1, !dbg !4457, !range !1483
  %tobool305.not.i = icmp eq i8 %220, 0, !dbg !4457
  %221 = load ptr, ptr @PL_origfilename, align 8, !dbg !4460
  %.str.79..str.78.i = select i1 %tobool305.not.i, ptr @.str.79, ptr @.str.78
  call void (ptr, ...) @Perl_croak(ptr noundef nonnull %.str.79..str.78.i, ptr noundef %221) #17, !dbg !4460
  br label %if.end309.i, !dbg !4461

if.end309.i:                                      ; preds = %if.then304.i, %lor.lhs.false301.i
  %222 = load ptr, ptr @PL_curcop, align 8, !dbg !4461
  %cop_line.i = getelementptr inbounds %struct.cop, ptr %222, i64 0, i32 7, !dbg !4461
  store i32 0, ptr %cop_line.i, align 4, !dbg !4461
  %223 = load ptr, ptr @PL_curstash, align 8, !dbg !4462
  %224 = load ptr, ptr @PL_defstash, align 8, !dbg !4462
  %cmp310.not.i = icmp eq ptr %223, %224, !dbg !4462
  br i1 %cmp310.not.i, label %if.end314.i, label %if.then312.i, !dbg !4464

if.then312.i:                                     ; preds = %if.end309.i
  call void @llvm.dbg.value(metadata ptr %223, metadata !1967, metadata !DIExpression()) #17, !dbg !4465
  %cmp.not.i62.i = icmp eq ptr %223, null, !dbg !4468
  br i1 %cmp.not.i62.i, label %S_SvREFCNT_dec.exit69.i, label %if.then.i65.i, !dbg !4469

if.then.i65.i:                                    ; preds = %if.then312.i
  %sv_refcnt.i63.i = getelementptr inbounds %struct.sv, ptr %223, i64 0, i32 1, !dbg !4470
  %225 = load i32, ptr %sv_refcnt.i63.i, align 8, !dbg !4470
  call void @llvm.dbg.value(metadata i32 %225, metadata !1973, metadata !DIExpression()) #17, !dbg !4471
  %cmp1.i64.i = icmp ugt i32 %225, 1, !dbg !4472
  br i1 %cmp1.i64.i, label %if.then4.i67.i, label %if.else.i68.i, !dbg !4473

if.then4.i67.i:                                   ; preds = %if.then.i65.i
  %sub.i66.i = add i32 %225, -1, !dbg !4474
  store i32 %sub.i66.i, ptr %sv_refcnt.i63.i, align 8, !dbg !4475
  br label %S_SvREFCNT_dec.exit69.i, !dbg !4476

if.else.i68.i:                                    ; preds = %if.then.i65.i
  call void @Perl_sv_free2(ptr noundef nonnull %223, i32 noundef %225) #17, !dbg !4477
  %.pr107.pre.i = load ptr, ptr @PL_defstash, align 8, !dbg !4478
  br label %S_SvREFCNT_dec.exit69.i

S_SvREFCNT_dec.exit69.i:                          ; preds = %if.else.i68.i, %if.then4.i67.i, %if.then312.i
  %226 = phi ptr [ %224, %if.then312.i ], [ %.pr107.pre.i, %if.else.i68.i ], [ %224, %if.then4.i67.i ], !dbg !4478
  call void @llvm.dbg.value(metadata ptr %226, metadata !3392, metadata !DIExpression()) #17, !dbg !4479
  %cmp.not.i70.i = icmp eq ptr %226, null, !dbg !4481
  br i1 %cmp.not.i70.i, label %S_SvREFCNT_inc.exit.i, label %if.then.i73.i, !dbg !4482

if.then.i73.i:                                    ; preds = %S_SvREFCNT_dec.exit69.i
  %sv_refcnt.i71.i = getelementptr inbounds %struct.sv, ptr %226, i64 0, i32 1, !dbg !4483
  %227 = load i32, ptr %sv_refcnt.i71.i, align 8, !dbg !4484
  %inc.i72.i = add i32 %227, 1, !dbg !4484
  store i32 %inc.i72.i, ptr %sv_refcnt.i71.i, align 8, !dbg !4484
  br label %S_SvREFCNT_inc.exit.i, !dbg !4483

S_SvREFCNT_inc.exit.i:                            ; preds = %if.then.i73.i, %S_SvREFCNT_dec.exit69.i
  store ptr %226, ptr @PL_curstash, align 8, !dbg !4478
  br label %if.end314.i, !dbg !4478

if.end314.i:                                      ; preds = %S_SvREFCNT_inc.exit.i, %if.end309.i
  %228 = load ptr, ptr @PL_e_script, align 8, !dbg !4485
  %tobool315.not.i = icmp eq ptr %228, null, !dbg !4485
  br i1 %tobool315.not.i, label %if.end320.i, label %if.then.i78.i, !dbg !4487

if.then.i78.i:                                    ; preds = %if.end314.i
  call void @llvm.dbg.value(metadata ptr %228, metadata !1967, metadata !DIExpression()) #17, !dbg !4488
  %sv_refcnt.i76.i = getelementptr inbounds %struct.sv, ptr %228, i64 0, i32 1, !dbg !4491
  %229 = load i32, ptr %sv_refcnt.i76.i, align 8, !dbg !4491
  call void @llvm.dbg.value(metadata i32 %229, metadata !1973, metadata !DIExpression()) #17, !dbg !4492
  %cmp1.i77.i = icmp ugt i32 %229, 1, !dbg !4493
  br i1 %cmp1.i77.i, label %if.then4.i80.i, label %if.else.i81.i, !dbg !4494

if.then4.i80.i:                                   ; preds = %if.then.i78.i
  %sub.i79.i = add i32 %229, -1, !dbg !4495
  store i32 %sub.i79.i, ptr %sv_refcnt.i76.i, align 8, !dbg !4496
  br label %S_SvREFCNT_dec.exit82.i, !dbg !4497

if.else.i81.i:                                    ; preds = %if.then.i78.i
  call void @Perl_sv_free2(ptr noundef nonnull %228, i32 noundef %229) #17, !dbg !4498
  br label %S_SvREFCNT_dec.exit82.i

S_SvREFCNT_dec.exit82.i:                          ; preds = %if.else.i81.i, %if.then4.i80.i
  store ptr null, ptr @PL_e_script, align 8, !dbg !4499
  br label %if.end320.i, !dbg !4500

if.end320.i:                                      ; preds = %S_SvREFCNT_dec.exit82.i, %if.end314.i
  %230 = load i8, ptr @PL_dowarn, align 1, !dbg !4501
  %231 = and i8 %230, 9, !dbg !4501
  %tobool323.not.i = icmp eq i8 %231, 0, !dbg !4501
  br i1 %tobool323.not.i, label %if.end326.i, label %if.then324.i, !dbg !4503

if.then324.i:                                     ; preds = %if.end320.i
  %232 = load ptr, ptr @PL_curcop, align 8, !dbg !4504
  %cop_filegv.i = getelementptr inbounds %struct.cop, ptr %232, i64 0, i32 9, !dbg !4504
  call void @Perl_save_sptr(ptr noundef nonnull %cop_filegv.i) #17, !dbg !4504
  %233 = load ptr, ptr @PL_curcop, align 8, !dbg !4506
  %cop_line325.i = getelementptr inbounds %struct.cop, ptr %233, i64 0, i32 7, !dbg !4506
  call void @Perl_save_I32(ptr noundef nonnull %cop_line325.i) #17, !dbg !4506
  %234 = load ptr, ptr @PL_defstash, align 8, !dbg !4507
  call void @Perl_gv_check(ptr noundef %234) #17, !dbg !4507
  br label %if.end326.i, !dbg !4508

if.end326.i:                                      ; preds = %if.then324.i, %if.end320.i
  call void @Perl_pop_scope() #17, !dbg !4509
  %235 = load i64, ptr @PL_tmps_ix, align 8, !dbg !4510
  %236 = load i64, ptr @PL_tmps_floor, align 8, !dbg !4510
  %cmp327.i = icmp sgt i64 %235, %236, !dbg !4510
  br i1 %cmp327.i, label %if.then329.i, label %S_parse_body.exit, !dbg !4512

if.then329.i:                                     ; preds = %if.end326.i
  call void @Perl_free_tmps() #17, !dbg !4510
  br label %S_parse_body.exit, !dbg !4510

S_parse_body.exit:                                ; preds = %if.end326.i, %if.then329.i
  call void @Perl_push_scope() #17, !dbg !4513
  store ptr null, ptr @PL_restartjmpenv, align 8, !dbg !4514
  store ptr null, ptr @PL_restartop, align 8, !dbg !4515
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %dosearch.i), !dbg !4516
  %237 = load ptr, ptr @PL_unitcheckav, align 8, !dbg !4517
  %tobool121.not = icmp eq ptr %237, null, !dbg !4517
  br i1 %tobool121.not, label %if.end123, label %if.then122, !dbg !4519

if.then122:                                       ; preds = %S_parse_body.exit
  call void @Perl_call_list(i32 noundef %31, ptr noundef nonnull %237), !dbg !4520
  br label %if.end123, !dbg !4522

if.end123:                                        ; preds = %if.then122, %S_parse_body.exit
  %238 = load ptr, ptr @PL_checkav, align 8, !dbg !4523
  %tobool124.not = icmp eq ptr %238, null, !dbg !4523
  br i1 %tobool124.not, label %do.body174, label %if.then125, !dbg !4525

if.then125:                                       ; preds = %if.end123
  store i32 2, ptr @PL_phase, align 4, !dbg !4526
  call void @Perl_call_list(i32 noundef %31, ptr noundef nonnull %238), !dbg !4528
  br label %do.body174, !dbg !4529

sw.bb127:                                         ; preds = %S_SvREFCNT_dec.exit
  store i32 1, ptr @PL_statusvalue, align 4, !dbg !4530
  store i32 1, ptr @PL_statusvalue_posix, align 4, !dbg !4530
  br label %sw.bb128, !dbg !4530

sw.bb128:                                         ; preds = %S_SvREFCNT_dec.exit, %sw.bb127
  %239 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !4531
  %cmp130319 = icmp sgt i32 %239, %31, !dbg !4532
  br i1 %cmp130319, label %while.body132, label %while.end133, !dbg !4533

while.body132:                                    ; preds = %sw.bb128, %while.body132
  call void @Perl_pop_scope() #17, !dbg !4534
  %240 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !4531
  %cmp130 = icmp sgt i32 %240, %31, !dbg !4532
  br i1 %cmp130, label %while.body132, label %while.end133, !dbg !4533, !llvm.loop !4535

while.end133:                                     ; preds = %while.body132, %sw.bb128
  %241 = load i64, ptr @PL_tmps_ix, align 8, !dbg !4536
  %242 = load i64, ptr @PL_tmps_floor, align 8, !dbg !4536
  %cmp134 = icmp sgt i64 %241, %242, !dbg !4536
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !4538

if.then136:                                       ; preds = %while.end133
  call void @Perl_free_tmps() #17, !dbg !4536
  br label %if.end137, !dbg !4536

if.end137:                                        ; preds = %if.then136, %while.end133
  %243 = load ptr, ptr @PL_curstash, align 8, !dbg !4539
  %244 = load ptr, ptr @PL_defstash, align 8, !dbg !4539
  %cmp138.not = icmp eq ptr %243, %244, !dbg !4539
  br i1 %cmp138.not, label %if.end142, label %if.then140, !dbg !4541

if.then140:                                       ; preds = %if.end137
  call void @llvm.dbg.value(metadata ptr %243, metadata !1967, metadata !DIExpression()) #17, !dbg !4542
  %cmp.not.i250 = icmp eq ptr %243, null, !dbg !4545
  br i1 %cmp.not.i250, label %S_SvREFCNT_dec.exit257, label %if.then.i253, !dbg !4546

if.then.i253:                                     ; preds = %if.then140
  %sv_refcnt.i251 = getelementptr inbounds %struct.sv, ptr %243, i64 0, i32 1, !dbg !4547
  %245 = load i32, ptr %sv_refcnt.i251, align 8, !dbg !4547
  call void @llvm.dbg.value(metadata i32 %245, metadata !1973, metadata !DIExpression()) #17, !dbg !4548
  %cmp1.i252 = icmp ugt i32 %245, 1, !dbg !4549
  br i1 %cmp1.i252, label %if.then4.i255, label %if.else.i256, !dbg !4550

if.then4.i255:                                    ; preds = %if.then.i253
  %sub.i254 = add i32 %245, -1, !dbg !4551
  store i32 %sub.i254, ptr %sv_refcnt.i251, align 8, !dbg !4552
  br label %S_SvREFCNT_dec.exit257, !dbg !4553

if.else.i256:                                     ; preds = %if.then.i253
  call void @Perl_sv_free2(ptr noundef nonnull %243, i32 noundef %245) #17, !dbg !4554
  %.pr.pre = load ptr, ptr @PL_defstash, align 8, !dbg !4555
  br label %S_SvREFCNT_dec.exit257

S_SvREFCNT_dec.exit257:                           ; preds = %if.then4.i255, %if.else.i256, %if.then140
  %246 = phi ptr [ %244, %if.then140 ], [ %.pr.pre, %if.else.i256 ], [ %244, %if.then4.i255 ], !dbg !4555
  call void @llvm.dbg.value(metadata ptr %246, metadata !3392, metadata !DIExpression()), !dbg !4556
  %cmp.not.i258 = icmp eq ptr %246, null, !dbg !4558
  br i1 %cmp.not.i258, label %S_SvREFCNT_inc.exit, label %if.then.i261, !dbg !4559

if.then.i261:                                     ; preds = %S_SvREFCNT_dec.exit257
  %sv_refcnt.i259 = getelementptr inbounds %struct.sv, ptr %246, i64 0, i32 1, !dbg !4560
  %247 = load i32, ptr %sv_refcnt.i259, align 8, !dbg !4561
  %inc.i260 = add i32 %247, 1, !dbg !4561
  store i32 %inc.i260, ptr %sv_refcnt.i259, align 8, !dbg !4561
  br label %S_SvREFCNT_inc.exit, !dbg !4560

S_SvREFCNT_inc.exit:                              ; preds = %S_SvREFCNT_dec.exit257, %if.then.i261
  store ptr %246, ptr @PL_curstash, align 8, !dbg !4555
  br label %if.end142, !dbg !4555

if.end142:                                        ; preds = %S_SvREFCNT_inc.exit, %if.end137
  %248 = load ptr, ptr @PL_unitcheckav, align 8, !dbg !4562
  %tobool143.not = icmp eq ptr %248, null, !dbg !4562
  br i1 %tobool143.not, label %if.end145, label %if.then144, !dbg !4564

if.then144:                                       ; preds = %if.end142
  call void @Perl_call_list(i32 noundef %31, ptr noundef nonnull %248), !dbg !4565
  br label %if.end145, !dbg !4567

if.end145:                                        ; preds = %if.then144, %if.end142
  %249 = load ptr, ptr @PL_checkav, align 8, !dbg !4568
  %tobool146.not = icmp eq ptr %249, null, !dbg !4568
  br i1 %tobool146.not, label %if.end148, label %if.then147, !dbg !4570

if.then147:                                       ; preds = %if.end145
  store i32 2, ptr @PL_phase, align 4, !dbg !4571
  call void @Perl_call_list(i32 noundef %31, ptr noundef nonnull %249), !dbg !4573
  br label %if.end148, !dbg !4574

if.end148:                                        ; preds = %if.then147, %if.end145
  %250 = load i32, ptr @PL_statusvalue, align 4, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %250, metadata !3506, metadata !DIExpression()), !dbg !3514
  br label %do.body174, !dbg !4576

sw.bb149:                                         ; preds = %S_SvREFCNT_dec.exit
  %251 = load ptr, ptr @PL_stderrgv, align 8, !dbg !4577
  %tobool150.not = icmp eq ptr %251, null, !dbg !4577
  br i1 %tobool150.not, label %cond.false169, label %land.lhs.true151, !dbg !4577

land.lhs.true151:                                 ; preds = %sw.bb149
  %sv_flags = getelementptr inbounds %struct.gv, ptr %251, i64 0, i32 2, !dbg !4577
  %252 = load i32, ptr %sv_flags, align 4, !dbg !4577
  %and152 = and i32 %252, 255, !dbg !4577
  %cmp153 = icmp eq i32 %and152, 9, !dbg !4577
  br i1 %cmp153, label %land.lhs.true155, label %cond.false169, !dbg !4577

land.lhs.true155:                                 ; preds = %land.lhs.true151
  %sv_u = getelementptr inbounds %struct.gv, ptr %251, i64 0, i32 3, !dbg !4577
  %253 = load ptr, ptr %sv_u, align 8, !dbg !4577
  %gp_io = getelementptr inbounds %struct.gp, ptr %253, i64 0, i32 1, !dbg !4577
  %254 = load ptr, ptr %gp_io, align 8, !dbg !4577
  %tobool157.not = icmp eq ptr %254, null, !dbg !4577
  br i1 %tobool157.not, label %cond.false169, label %land.lhs.true158, !dbg !4577

land.lhs.true158:                                 ; preds = %land.lhs.true155
  %255 = load ptr, ptr %254, align 8, !dbg !4577
  %xio_ofp = getelementptr inbounds %struct.xpvio, ptr %255, i64 0, i32 5, !dbg !4577
  %256 = load ptr, ptr %xio_ofp, align 8, !dbg !4577
  %tobool162.not = icmp eq ptr %256, null, !dbg !4577
  br i1 %tobool162.not, label %cond.false169, label %cond.end171, !dbg !4577

cond.false169:                                    ; preds = %land.lhs.true158, %land.lhs.true155, %land.lhs.true151, %sw.bb149
  %call170 = call ptr @Perl_PerlIO_stderr() #17, !dbg !4577
  br label %cond.end171, !dbg !4577

cond.end171:                                      ; preds = %land.lhs.true158, %cond.false169
  %cond172 = phi ptr [ %call170, %cond.false169 ], [ %256, %land.lhs.true158 ], !dbg !4577
  %call173 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %cond172, ptr noundef nonnull @.str.12) #17, !dbg !4578
  call void @llvm.dbg.value(metadata i32 1, metadata !3506, metadata !DIExpression()), !dbg !3514
  br label %do.body174, !dbg !4579

do.body174:                                       ; preds = %if.end123, %if.then125, %if.end148, %cond.end171, %S_SvREFCNT_dec.exit
  %ret.0 = phi i32 [ %call118, %S_SvREFCNT_dec.exit ], [ 1, %cond.end171 ], [ %250, %if.end148 ], [ 0, %if.then125 ], [ 0, %if.end123 ], !dbg !3514
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !3506, metadata !DIExpression()), !dbg !3514
  %257 = load ptr, ptr %je_prev, align 8, !dbg !4580
  store ptr %257, ptr @PL_top_env, align 8, !dbg !4580
  br label %cleanup, !dbg !4582

cleanup:                                          ; preds = %do.body174, %S_init_ids.exit
  %retval.0 = phi i32 [ 0, %S_init_ids.exit ], [ %ret.0, %do.body174 ], !dbg !3514
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !4583
  ret i32 %retval.0, !dbg !4583
}

declare !dbg !4584 void @Perl_my_setenv(ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !4587 ptr @Perl_savepv(ptr noundef) local_unnamed_addr #3

declare !dbg !4590 void @Perl_set_caret_X() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @S_init_postdump_symbols(i32 noundef %argc, ptr nocapture noundef readonly %argv, ptr noundef readonly %env) unnamed_addr #0 !dbg !4591 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !4595, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata ptr %argv, metadata !4596, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata ptr %env, metadata !4597, metadata !DIExpression()), !dbg !4608
  %call = tail call ptr @Perl_newSV_type(i32 noundef 5) #17, !dbg !4609
  store ptr %call, ptr @PL_toptarget, align 8, !dbg !4610
  tail call void @Perl_sv_setpvn(ptr noundef %call, ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !4611
  %call1 = tail call ptr @Perl_newSV_type(i32 noundef 5) #17, !dbg !4612
  store ptr %call1, ptr @PL_bodytarget, align 8, !dbg !4613
  tail call void @Perl_sv_setpvn(ptr noundef %call1, ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !4614
  %0 = load ptr, ptr @PL_bodytarget, align 8, !dbg !4615
  store ptr %0, ptr @PL_formtarget, align 8, !dbg !4616
  store i8 1, ptr @PL_tainted, align 1, !dbg !4617
  tail call void @Perl_init_argv_symbols(i32 noundef %argc, ptr noundef %argv), !dbg !4618
  %call2 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.124, i64 noundef 1, i32 noundef 129, i32 noundef 3) #17, !dbg !4619
  call void @llvm.dbg.value(metadata ptr %call2, metadata !4598, metadata !DIExpression()), !dbg !4608
  %tobool.not = icmp eq ptr %call2, null, !dbg !4621
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !4622

if.then:                                          ; preds = %entry
  %sv_u = getelementptr inbounds %struct.gv, ptr %call2, i64 0, i32 3, !dbg !4623
  %1 = load ptr, ptr %sv_u, align 8, !dbg !4623
  %2 = load ptr, ptr %1, align 8, !dbg !4623
  %3 = load ptr, ptr @PL_origfilename, align 8, !dbg !4623
  tail call void @Perl_sv_setpv(ptr noundef %2, ptr noundef %3) #17, !dbg !4623
  br label %if.end, !dbg !4625

if.end:                                           ; preds = %if.then, %entry
  %call3 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.125, i64 noundef 3, i32 noundef 129, i32 noundef 12) #17, !dbg !4626
  store ptr %call3, ptr @PL_envgv, align 8, !dbg !4627
  %tobool4.not = icmp eq ptr %call3, null, !dbg !4627
  br i1 %tobool4.not, label %if.end38, label %if.then5, !dbg !4628

if.then5:                                         ; preds = %if.end
  %sv_refcnt = getelementptr inbounds %struct.sv, ptr %call3, i64 0, i32 1, !dbg !4629
  %4 = load i32, ptr %sv_refcnt, align 8, !dbg !4629
  %inc = add i32 %4, 1, !dbg !4629
  store i32 %inc, ptr %sv_refcnt, align 8, !dbg !4629
  %5 = load ptr, ptr %call3, align 8, !dbg !4630
  %xpv_cur = getelementptr inbounds %struct.xpvgv, ptr %5, i64 0, i32 2, !dbg !4630
  %6 = load i64, ptr %xpv_cur, align 8, !dbg !4630
  %or = or i64 %6, 2, !dbg !4630
  store i64 %or, ptr %xpv_cur, align 8, !dbg !4630
  %sv_u6 = getelementptr inbounds %struct.gv, ptr %call3, i64 0, i32 3, !dbg !4631
  %7 = load ptr, ptr %sv_u6, align 8, !dbg !4631
  %gp_hv = getelementptr inbounds %struct.gp, ptr %7, i64 0, i32 5, !dbg !4631
  %8 = load ptr, ptr %gp_hv, align 8, !dbg !4631
  %tobool8.not = icmp eq ptr %8, null, !dbg !4631
  br i1 %tobool8.not, label %cond.false, label %cond.end, !dbg !4631

cond.false:                                       ; preds = %if.then5
  %call12 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %call3, i32 noundef 12) #17, !dbg !4631
  %sv_u13 = getelementptr inbounds %struct.gv, ptr %call12, i64 0, i32 3, !dbg !4631
  %9 = load ptr, ptr %sv_u13, align 8, !dbg !4631
  %gp_hv15 = getelementptr inbounds %struct.gp, ptr %9, i64 0, i32 5, !dbg !4631
  %10 = load ptr, ptr %gp_hv15, align 8, !dbg !4631
  br label %cond.end, !dbg !4631

cond.end:                                         ; preds = %if.then5, %cond.false
  %cond = phi ptr [ %10, %cond.false ], [ %8, %if.then5 ], !dbg !4631
  call void @llvm.dbg.value(metadata ptr %cond, metadata !4599, metadata !DIExpression()), !dbg !4632
  tail call void @Perl_sv_magic(ptr noundef %cond, ptr noundef null, i32 noundef 69, ptr noundef null, i32 noundef 0) #17, !dbg !4633
  %tobool16.not = icmp eq ptr %env, null, !dbg !4634
  %11 = load ptr, ptr @environ, align 8
  %spec.select = select i1 %tobool16.not, ptr %11, ptr %env, !dbg !4636
  call void @llvm.dbg.value(metadata ptr %spec.select, metadata !4597, metadata !DIExpression()), !dbg !4608
  %cmp.not = icmp eq ptr %spec.select, %11, !dbg !4637
  call void @llvm.dbg.value(metadata i1 %cmp.not, metadata !4602, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4632
  br i1 %cmp.not, label %if.end21, label %if.then20, !dbg !4638

if.then20:                                        ; preds = %cond.end
  store ptr null, ptr %11, align 8, !dbg !4639
  br label %if.end21, !dbg !4642

if.end21:                                         ; preds = %if.then20, %cond.end
  %tobool22.not = icmp eq ptr %spec.select, null, !dbg !4643
  br i1 %tobool22.not, label %if.end38, label %for.cond.preheader, !dbg !4644

for.cond.preheader:                               ; preds = %if.end21
  call void @llvm.dbg.value(metadata ptr %spec.select, metadata !4597, metadata !DIExpression()), !dbg !4608
  %12 = load ptr, ptr %spec.select, align 8, !dbg !4645
  %tobool24.not58 = icmp eq ptr %12, null, !dbg !4648
  br i1 %tobool24.not58, label %if.end38, label %for.body.lr.ph, !dbg !4648

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  br i1 %cmp.not, label %for.body.us, label %for.body, !dbg !4649

for.body.us:                                      ; preds = %for.body.lr.ph, %for.inc.us
  %13 = phi ptr [ %14, %for.inc.us ], [ %12, %for.body.lr.ph ]
  %env.addr.159.us = phi ptr [ %incdec.ptr.us, %for.inc.us ], [ %11, %for.body.lr.ph ]
  call void @llvm.dbg.value(metadata ptr %env.addr.159.us, metadata !4597, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata ptr %13, metadata !4606, metadata !DIExpression()), !dbg !4651
  %call25.us = tail call ptr @strchr(ptr noundef nonnull %13, i32 noundef 61) #21, !dbg !4652
  call void @llvm.dbg.value(metadata ptr %call25.us, metadata !4603, metadata !DIExpression()), !dbg !4651
  %tobool26.not.us = icmp eq ptr %call25.us, null, !dbg !4654
  %cmp27.us = icmp eq ptr %call25.us, %13
  %or.cond.us = or i1 %tobool26.not.us, %cmp27.us, !dbg !4655
  br i1 %or.cond.us, label %for.inc.us, label %if.end29.us, !dbg !4655

if.end29.us:                                      ; preds = %for.body.us
  %add.ptr30.us = getelementptr inbounds i8, ptr %call25.us, i64 1, !dbg !4656
  %call31.us = tail call ptr @Perl_newSVpv(ptr noundef nonnull %add.ptr30.us, i64 noundef 0) #17, !dbg !4656
  call void @llvm.dbg.value(metadata ptr %call31.us, metadata !4607, metadata !DIExpression()), !dbg !4651
  %sub.ptr.lhs.cast.us = ptrtoint ptr %call25.us to i64, !dbg !4657
  %sub.ptr.rhs.cast.us = ptrtoint ptr %13 to i64, !dbg !4657
  %sub.ptr.sub.us = sub i64 %sub.ptr.lhs.cast.us, %sub.ptr.rhs.cast.us, !dbg !4657
  %conv.us = trunc i64 %sub.ptr.sub.us to i32, !dbg !4657
  %call32.us = tail call ptr @Perl_hv_common_key_len(ptr noundef %cond, ptr noundef nonnull %13, i32 noundef %conv.us, i32 noundef 36, ptr noundef %call31.us, i32 noundef 0) #17, !dbg !4657
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.end29.us, %for.body.us
  %incdec.ptr.us = getelementptr inbounds ptr, ptr %env.addr.159.us, i64 1, !dbg !4658
  call void @llvm.dbg.value(metadata ptr %incdec.ptr.us, metadata !4597, metadata !DIExpression()), !dbg !4608
  %14 = load ptr, ptr %incdec.ptr.us, align 8, !dbg !4645
  %tobool24.not.us = icmp eq ptr %14, null, !dbg !4648
  br i1 %tobool24.not.us, label %if.end38, label %for.body.us, !dbg !4648, !llvm.loop !4659

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %15 = phi ptr [ %16, %for.inc ], [ %12, %for.body.lr.ph ]
  %env.addr.159 = phi ptr [ %incdec.ptr, %for.inc ], [ %spec.select, %for.body.lr.ph ]
  call void @llvm.dbg.value(metadata ptr %env.addr.159, metadata !4597, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata ptr %15, metadata !4606, metadata !DIExpression()), !dbg !4651
  %call25 = tail call ptr @strchr(ptr noundef nonnull %15, i32 noundef 61) #21, !dbg !4652
  call void @llvm.dbg.value(metadata ptr %call25, metadata !4603, metadata !DIExpression()), !dbg !4651
  %tobool26.not = icmp eq ptr %call25, null, !dbg !4654
  %cmp27 = icmp eq ptr %call25, %15
  %or.cond = or i1 %tobool26.not, %cmp27, !dbg !4655
  br i1 %or.cond, label %for.inc, label %if.end29, !dbg !4655

if.end29:                                         ; preds = %for.body
  %add.ptr30 = getelementptr inbounds i8, ptr %call25, i64 1, !dbg !4656
  %call31 = tail call ptr @Perl_newSVpv(ptr noundef nonnull %add.ptr30, i64 noundef 0) #17, !dbg !4656
  call void @llvm.dbg.value(metadata ptr %call31, metadata !4607, metadata !DIExpression()), !dbg !4651
  %sub.ptr.lhs.cast = ptrtoint ptr %call25 to i64, !dbg !4657
  %sub.ptr.rhs.cast = ptrtoint ptr %15 to i64, !dbg !4657
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4657
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !4657
  %call32 = tail call ptr @Perl_hv_common_key_len(ptr noundef %cond, ptr noundef nonnull %15, i32 noundef %conv, i32 noundef 36, ptr noundef %call31, i32 noundef 0) #17, !dbg !4657
  %call35 = tail call i32 @Perl_mg_set(ptr noundef %call31) #17, !dbg !4661
  br label %for.inc, !dbg !4661

for.inc:                                          ; preds = %if.end29, %for.body
  %incdec.ptr = getelementptr inbounds ptr, ptr %env.addr.159, i64 1, !dbg !4658
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !4597, metadata !DIExpression()), !dbg !4608
  %16 = load ptr, ptr %incdec.ptr, align 8, !dbg !4645
  %tobool24.not = icmp eq ptr %16, null, !dbg !4648
  br i1 %tobool24.not, label %if.end38, label %for.body, !dbg !4648, !llvm.loop !4659

if.end38:                                         ; preds = %for.inc, %for.inc.us, %for.cond.preheader, %if.end21, %if.end
  store i8 0, ptr @PL_tainted, align 1, !dbg !4663
  %17 = load i8, ptr @PL_minus_a, align 1, !dbg !4664, !range !1483
  %tobool39.not = icmp eq i8 %17, 0, !dbg !4664
  br i1 %tobool39.not, label %if.end42, label %if.then40, !dbg !4666

if.then40:                                        ; preds = %if.end38
  call void @llvm.dbg.value(metadata ptr @.str.126, metadata !4667, metadata !DIExpression()) #17, !dbg !4675
  call void @llvm.dbg.value(metadata i32 3, metadata !4672, metadata !DIExpression()) #17, !dbg !4675
  %call.i = tail call ptr @Perl_gv_fetchpv(ptr noundef nonnull @.str.126, i32 noundef 3, i32 noundef 11) #17, !dbg !4678
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !4673, metadata !DIExpression()) #17, !dbg !4675
  %sv_u.i = getelementptr inbounds %struct.gv, ptr %call.i, i64 0, i32 3, !dbg !4679
  %18 = load ptr, ptr %sv_u.i, align 8, !dbg !4679
  %gp_av.i = getelementptr inbounds %struct.gp, ptr %18, i64 0, i32 6, !dbg !4679
  %19 = load ptr, ptr %gp_av.i, align 8, !dbg !4679
  %tobool1.not.i = icmp eq ptr %19, null, !dbg !4679
  br i1 %tobool1.not.i, label %cond.false.i, label %if.end42, !dbg !4679

cond.false.i:                                     ; preds = %if.then40
  %call5.i = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %call.i, i32 noundef 11) #17, !dbg !4679
  br label %if.end42, !dbg !4681

if.end42:                                         ; preds = %cond.false.i, %if.then40, %if.end38
  ret void, !dbg !4682
}

; Function Attrs: nounwind
declare !dbg !4683 i64 @time(ptr noundef) local_unnamed_addr #2

declare !dbg !4690 i32 @PerlIO_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

declare !dbg !4693 ptr @Perl_PerlIO_stderr() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @perl_run(ptr nocapture noundef readnone %my_perl) local_unnamed_addr #0 !dbg !4696 {
entry:
  %cur_env = alloca %struct.jmpenv, align 8
  call void @llvm.dbg.value(metadata ptr %my_perl, metadata !4698, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.value(metadata i32 0, metadata !4700, metadata !DIExpression()), !dbg !4712
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !4713
  call void @llvm.dbg.declare(metadata ptr %cur_env, metadata !4701, metadata !DIExpression()), !dbg !4713
  %0 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %0, metadata !4699, metadata !DIExpression()), !dbg !4712
  %1 = load ptr, ptr @PL_top_env, align 8, !dbg !4715
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 1, !dbg !4715
  store ptr %1, ptr %je_prev, align 8, !dbg !4715
  %call = call i32 @__sigsetjmp(ptr noundef nonnull %cur_env, i32 noundef 0) #19, !dbg !4715
  %je_ret = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 2, !dbg !4715
  store i32 %call, ptr %je_ret, align 8, !dbg !4715
  store ptr %cur_env, ptr @PL_top_env, align 8, !dbg !4715
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 3, !dbg !4715
  store i8 0, ptr %je_mustcatch, align 4, !dbg !4715
  call void @llvm.dbg.value(metadata i32 %call, metadata !4700, metadata !DIExpression()), !dbg !4712
  switch i32 %call, label %do.body68 [
    i32 1, label %sw.bb
    i32 0, label %redo_body
    i32 2, label %while.cond.preheader
    i32 3, label %sw.bb14
  ], !dbg !4717

while.cond.preheader:                             ; preds = %entry
  %2 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !4718
  %cmp92 = icmp sgt i32 %2, %0, !dbg !4719
  br i1 %cmp92, label %while.body, label %while.end, !dbg !4720

sw.bb:                                            ; preds = %entry
  %3 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !4721
  %si_cxix = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 4, !dbg !4721
  store i32 -1, ptr %si_cxix, align 8, !dbg !4722
  br label %redo_body, !dbg !4723

redo_body:                                        ; preds = %do.body26, %while.cond18.preheader, %entry, %sw.bb
  call void @llvm.dbg.label(metadata !4711), !dbg !4724
  call void @llvm.dbg.value(metadata i32 %0, metadata !4725, metadata !DIExpression()) #17, !dbg !4730
  %4 = load ptr, ptr @PL_restartop, align 8, !dbg !4732
  %tobool.not.i = icmp eq ptr %4, null, !dbg !4732
  br i1 %tobool.not.i, label %if.then.i, label %if.end26.thread.i, !dbg !4734

if.end26.thread.i:                                ; preds = %redo_body
  store i32 4, ptr @PL_phase, align 4, !dbg !4735
  br label %if.then28.i, !dbg !4736

if.then.i:                                        ; preds = %redo_body
  %5 = load i8, ptr @PL_minus_c, align 1, !dbg !4737, !range !1483
  %tobool1.not.i = icmp eq i8 %5, 0, !dbg !4737
  br i1 %tobool1.not.i, label %if.end.i, label %if.then2.i, !dbg !4740

if.then2.i:                                       ; preds = %if.then.i
  %6 = load ptr, ptr @PL_stderrgv, align 8, !dbg !4741
  %tobool3.not.i = icmp eq ptr %6, null, !dbg !4741
  br i1 %tobool3.not.i, label %cond.false.i, label %land.lhs.true.i, !dbg !4741

land.lhs.true.i:                                  ; preds = %if.then2.i
  %sv_flags.i = getelementptr inbounds %struct.gv, ptr %6, i64 0, i32 2, !dbg !4741
  %7 = load i32, ptr %sv_flags.i, align 4, !dbg !4741
  %and.i = and i32 %7, 255, !dbg !4741
  %cmp.i = icmp eq i32 %and.i, 9, !dbg !4741
  br i1 %cmp.i, label %land.lhs.true4.i, label %cond.false.i, !dbg !4741

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %sv_u.i = getelementptr inbounds %struct.gv, ptr %6, i64 0, i32 3, !dbg !4741
  %8 = load ptr, ptr %sv_u.i, align 8, !dbg !4741
  %gp_io.i = getelementptr inbounds %struct.gp, ptr %8, i64 0, i32 1, !dbg !4741
  %9 = load ptr, ptr %gp_io.i, align 8, !dbg !4741
  %tobool5.not.i = icmp eq ptr %9, null, !dbg !4741
  br i1 %tobool5.not.i, label %cond.false.i, label %land.lhs.true6.i, !dbg !4741

land.lhs.true6.i:                                 ; preds = %land.lhs.true4.i
  %10 = load ptr, ptr %9, align 8, !dbg !4741
  %xio_ofp.i = getelementptr inbounds %struct.xpvio, ptr %10, i64 0, i32 5, !dbg !4741
  %11 = load ptr, ptr %xio_ofp.i, align 8, !dbg !4741
  %tobool10.not.i = icmp eq ptr %11, null, !dbg !4741
  br i1 %tobool10.not.i, label %cond.false.i, label %cond.end.i, !dbg !4741

cond.false.i:                                     ; preds = %land.lhs.true6.i, %land.lhs.true4.i, %land.lhs.true.i, %if.then2.i
  %call.i = call ptr @Perl_PerlIO_stderr() #17, !dbg !4741
  br label %cond.end.i, !dbg !4741

cond.end.i:                                       ; preds = %cond.false.i, %land.lhs.true6.i
  %cond.i = phi ptr [ %call.i, %cond.false.i ], [ %11, %land.lhs.true6.i ], !dbg !4741
  %12 = load ptr, ptr @PL_origfilename, align 8, !dbg !4743
  %call16.i = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %cond.i, ptr noundef nonnull @.str.113, ptr noundef %12) #17, !dbg !4744
  call void @llvm.dbg.value(metadata i32 0, metadata !4745, metadata !DIExpression()) #17, !dbg !4750
  %13 = load i8, ptr @PL_exit_flags, align 1, !dbg !4752
  %conv.i.i = zext i8 %13 to i32, !dbg !4752
  %and.i.i = and i32 %conv.i.i, 8, !dbg !4754
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0, !dbg !4754
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4755

if.then.i.i:                                      ; preds = %cond.end.i
  call void @abort() #20, !dbg !4756
  unreachable, !dbg !4756

if.end.i.i:                                       ; preds = %cond.end.i
  %and2.i.i = and i32 %conv.i.i, 4, !dbg !4758
  %tobool3.not.i.i = icmp eq i32 %and2.i.i, 0, !dbg !4758
  br i1 %tobool3.not.i.i, label %if.end11.i.i, label %if.then4.i.i, !dbg !4760

if.then4.i.i:                                     ; preds = %if.end.i.i
  %or.i.i = or i8 %13, 8, !dbg !4761
  store i8 %or.i.i, ptr @PL_exit_flags, align 1, !dbg !4761
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.58, i64 noundef 0) #17, !dbg !4763
  %14 = load i8, ptr @PL_exit_flags, align 1, !dbg !4764
  %15 = and i8 %14, -9, !dbg !4764
  store i8 %15, ptr @PL_exit_flags, align 1, !dbg !4764
  br label %if.end11.i.i, !dbg !4765

if.end11.i.i:                                     ; preds = %if.then4.i.i, %if.end.i.i
  store i32 0, ptr @PL_statusvalue, align 4, !dbg !4766
  store i32 0, ptr @PL_statusvalue_posix, align 4, !dbg !4768
  call fastcc void @S_my_exit_jump() #17, !dbg !4769
  unreachable, !dbg !4770

if.end.i:                                         ; preds = %if.then.i
  %16 = load i32, ptr @PL_perldb, align 4, !dbg !4771
  %and17.i = and i32 %16, 32, !dbg !4771
  %tobool18.i = icmp ne i32 %and17.i, 0, !dbg !4771
  %17 = load ptr, ptr @PL_DBsingle, align 8
  %tobool20.i = icmp ne ptr %17, null
  %or.cond.i = select i1 %tobool18.i, i1 %tobool20.i, i1 false, !dbg !4773
  br i1 %or.cond.i, label %if.then21.i, label %if.end22.i, !dbg !4773

if.then21.i:                                      ; preds = %if.end.i
  store i64 1, ptr @PL_DBcontrol, align 16, !dbg !4774
  br label %if.end22.i, !dbg !4775

if.end22.i:                                       ; preds = %if.then21.i, %if.end.i
  %18 = load ptr, ptr @PL_initav, align 8, !dbg !4776
  %tobool23.not.i = icmp eq ptr %18, null, !dbg !4776
  br i1 %tobool23.not.i, label %if.end26.thread51.i, label %if.end26.i, !dbg !4778

if.end26.thread51.i:                              ; preds = %if.end22.i
  store i32 4, ptr @PL_phase, align 4, !dbg !4735
  br label %if.else.i, !dbg !4736

if.end26.i:                                       ; preds = %if.end22.i
  store i32 3, ptr @PL_phase, align 4, !dbg !4779
  call void @Perl_call_list(i32 noundef %0, ptr noundef nonnull %18) #17, !dbg !4781
  %.pr.pre.i = load ptr, ptr @PL_restartop, align 8, !dbg !4782
  store i32 4, ptr @PL_phase, align 4, !dbg !4735
  %tobool27.not.i = icmp eq ptr %.pr.pre.i, null, !dbg !4782
  br i1 %tobool27.not.i, label %if.else.i, label %if.then28.i, !dbg !4736

if.then28.i:                                      ; preds = %if.end26.i, %if.end26.thread.i
  %19 = phi ptr [ %4, %if.end26.thread.i ], [ %.pr.pre.i, %if.end26.i ]
  store ptr null, ptr @PL_restartjmpenv, align 8, !dbg !4784
  store ptr %19, ptr @PL_op, align 8, !dbg !4786
  store ptr null, ptr @PL_restartop, align 8, !dbg !4787
  br label %if.end35.sink.split.i, !dbg !4788

if.else.i:                                        ; preds = %if.end26.i, %if.end26.thread51.i
  %20 = load ptr, ptr @PL_main_start, align 8, !dbg !4789
  %tobool30.not.i = icmp eq ptr %20, null, !dbg !4789
  br i1 %tobool30.not.i, label %if.end35.i, label %if.then31.i, !dbg !4791

if.then31.i:                                      ; preds = %if.else.i
  %21 = load ptr, ptr @PL_main_cv, align 8, !dbg !4792
  %.val.i = load ptr, ptr %21, align 8, !dbg !4792
  call void @llvm.dbg.value(metadata ptr undef, metadata !4794, metadata !DIExpression()) #17, !dbg !4800
  %xcv_depth.i.i = getelementptr inbounds %struct.xpvcv, ptr %.val.i, i64 0, i32 13, !dbg !4802
  store i32 1, ptr %xcv_depth.i.i, align 4, !dbg !4803
  store ptr %20, ptr @PL_op, align 8, !dbg !4804
  br label %if.end35.sink.split.i, !dbg !4805

if.end35.sink.split.i:                            ; preds = %if.then31.i, %if.then28.i
  %22 = load ptr, ptr @PL_runops, align 8, !dbg !4806
  %call33.i = call i32 %22() #17, !dbg !4806
  br label %if.end35.i, !dbg !4807

if.end35.i:                                       ; preds = %if.end35.sink.split.i, %if.else.i
  call void @llvm.dbg.value(metadata i32 0, metadata !4745, metadata !DIExpression()) #17, !dbg !4809
  %23 = load i8, ptr @PL_exit_flags, align 1, !dbg !4807
  %conv.i38.i = zext i8 %23 to i32, !dbg !4807
  %and.i39.i = and i32 %conv.i38.i, 8, !dbg !4810
  %tobool.not.i40.i = icmp eq i32 %and.i39.i, 0, !dbg !4810
  br i1 %tobool.not.i40.i, label %if.end.i44.i, label %if.then.i41.i, !dbg !4811

if.then.i41.i:                                    ; preds = %if.end35.i
  call void @abort() #20, !dbg !4812
  unreachable, !dbg !4812

if.end.i44.i:                                     ; preds = %if.end35.i
  %and2.i42.i = and i32 %conv.i38.i, 4, !dbg !4813
  %tobool3.not.i43.i = icmp eq i32 %and2.i42.i, 0, !dbg !4813
  br i1 %tobool3.not.i43.i, label %if.end11.i47.i, label %if.then4.i46.i, !dbg !4814

if.then4.i46.i:                                   ; preds = %if.end.i44.i
  %or.i45.i = or i8 %23, 8, !dbg !4815
  store i8 %or.i45.i, ptr @PL_exit_flags, align 1, !dbg !4815
  call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.58, i64 noundef 0) #17, !dbg !4816
  %24 = load i8, ptr @PL_exit_flags, align 1, !dbg !4817
  %25 = and i8 %24, -9, !dbg !4817
  store i8 %25, ptr @PL_exit_flags, align 1, !dbg !4817
  br label %if.end11.i47.i, !dbg !4818

if.end11.i47.i:                                   ; preds = %if.then4.i46.i, %if.end.i44.i
  store i32 0, ptr @PL_statusvalue, align 4, !dbg !4819
  store i32 0, ptr @PL_statusvalue_posix, align 4, !dbg !4820
  call fastcc void @S_my_exit_jump() #17, !dbg !4821
  unreachable, !dbg !4822

while.body:                                       ; preds = %while.cond.preheader, %while.body
  call void @Perl_pop_scope() #17, !dbg !4823
  %26 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !4718
  %cmp = icmp sgt i32 %26, %0, !dbg !4719
  br i1 %cmp, label %while.body, label %while.end, !dbg !4720, !llvm.loop !4824

while.end:                                        ; preds = %while.body, %while.cond.preheader
  %27 = load i64, ptr @PL_tmps_ix, align 8, !dbg !4825
  %28 = load i64, ptr @PL_tmps_floor, align 8, !dbg !4825
  %cmp4 = icmp sgt i64 %27, %28, !dbg !4825
  br i1 %cmp4, label %if.then, label %if.end, !dbg !4827

if.then:                                          ; preds = %while.end
  call void @Perl_free_tmps() #17, !dbg !4825
  br label %if.end, !dbg !4825

if.end:                                           ; preds = %if.then, %while.end
  %29 = load ptr, ptr @PL_curstash, align 8, !dbg !4828
  %30 = load ptr, ptr @PL_defstash, align 8, !dbg !4828
  %cmp5.not = icmp eq ptr %29, %30, !dbg !4828
  br i1 %cmp5.not, label %if.end8, label %if.then6, !dbg !4830

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata ptr %29, metadata !1967, metadata !DIExpression()) #17, !dbg !4831
  %cmp.not.i = icmp eq ptr %29, null, !dbg !4834
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i85, !dbg !4835

if.then.i85:                                      ; preds = %if.then6
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 1, !dbg !4836
  %31 = load i32, ptr %sv_refcnt.i, align 8, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %31, metadata !1973, metadata !DIExpression()) #17, !dbg !4837
  %cmp1.i = icmp ugt i32 %31, 1, !dbg !4838
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i86, !dbg !4839

if.then4.i:                                       ; preds = %if.then.i85
  %sub.i = add i32 %31, -1, !dbg !4840
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !4841
  br label %S_SvREFCNT_dec.exit, !dbg !4842

if.else.i86:                                      ; preds = %if.then.i85
  call void @Perl_sv_free2(ptr noundef nonnull %29, i32 noundef %31) #17, !dbg !4843
  %.pr.pre = load ptr, ptr @PL_defstash, align 8, !dbg !4844
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.then4.i, %if.else.i86, %if.then6
  %32 = phi ptr [ %30, %if.then6 ], [ %.pr.pre, %if.else.i86 ], [ %30, %if.then4.i ], !dbg !4844
  call void @llvm.dbg.value(metadata ptr %32, metadata !3392, metadata !DIExpression()), !dbg !4845
  %cmp.not.i87 = icmp eq ptr %32, null, !dbg !4847
  br i1 %cmp.not.i87, label %S_SvREFCNT_inc.exit, label %if.then.i89, !dbg !4848

if.then.i89:                                      ; preds = %S_SvREFCNT_dec.exit
  %sv_refcnt.i88 = getelementptr inbounds %struct.sv, ptr %32, i64 0, i32 1, !dbg !4849
  %33 = load i32, ptr %sv_refcnt.i88, align 8, !dbg !4850
  %inc.i = add i32 %33, 1, !dbg !4850
  store i32 %inc.i, ptr %sv_refcnt.i88, align 8, !dbg !4850
  br label %S_SvREFCNT_inc.exit, !dbg !4849

S_SvREFCNT_inc.exit:                              ; preds = %S_SvREFCNT_dec.exit, %if.then.i89
  store ptr %32, ptr @PL_curstash, align 8, !dbg !4844
  br label %if.end8, !dbg !4844

if.end8:                                          ; preds = %S_SvREFCNT_inc.exit, %if.end
  %34 = load i8, ptr @PL_exit_flags, align 1, !dbg !4851
  %35 = and i8 %34, 2, !dbg !4853
  %tobool = icmp eq i8 %35, 0, !dbg !4853
  %36 = load ptr, ptr @PL_endav, align 8
  %tobool9 = icmp ne ptr %36, null
  %or.cond = select i1 %tobool, i1 %tobool9, i1 false, !dbg !4854
  %37 = load i8, ptr @PL_minus_c, align 1
  %tobool11.not = icmp eq i8 %37, 0
  %or.cond84 = select i1 %or.cond, i1 %tobool11.not, i1 false, !dbg !4854
  br i1 %or.cond84, label %if.then12, label %if.end13, !dbg !4854

if.then12:                                        ; preds = %if.end8
  store i32 5, ptr @PL_phase, align 4, !dbg !4855
  call void @Perl_call_list(i32 noundef %0, ptr noundef nonnull %36), !dbg !4857
  br label %if.end13, !dbg !4858

if.end13:                                         ; preds = %if.then12, %if.end8
  %38 = load i32, ptr @PL_statusvalue, align 4, !dbg !4859
  call void @llvm.dbg.value(metadata i32 %38, metadata !4700, metadata !DIExpression()), !dbg !4712
  br label %do.body68, !dbg !4860

sw.bb14:                                          ; preds = %entry
  %39 = load ptr, ptr @PL_restartop, align 8, !dbg !4861
  %tobool15.not = icmp eq ptr %39, null, !dbg !4861
  br i1 %tobool15.not, label %if.end41, label %while.cond18.preheader, !dbg !4862

while.cond18.preheader:                           ; preds = %sw.bb14
  %40 = load ptr, ptr @PL_curstack, align 8, !dbg !4863
  %41 = load ptr, ptr @PL_mainstack, align 8, !dbg !4863
  %cmp19.not91 = icmp eq ptr %40, %41, !dbg !4863
  br i1 %cmp19.not91, label %redo_body, label %while.body21, !dbg !4863

while.body21:                                     ; preds = %while.cond18.preheader, %do.body26
  call void @Perl_dounwind(i32 noundef -1) #17, !dbg !4864
  %42 = load ptr, ptr @PL_stack_sp, align 8, !dbg !4865
  call void @llvm.dbg.value(metadata ptr %42, metadata !4702, metadata !DIExpression()), !dbg !4866
  %43 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !4865
  %si_prev = getelementptr inbounds %struct.stackinfo, ptr %43, i64 0, i32 2, !dbg !4865
  %44 = load ptr, ptr %si_prev, align 8, !dbg !4865
  call void @llvm.dbg.value(metadata ptr %44, metadata !4709, metadata !DIExpression()), !dbg !4866
  %tobool23.not = icmp eq ptr %44, null, !dbg !4867
  br i1 %tobool23.not, label %if.then24, label %do.body26, !dbg !4865

if.then24:                                        ; preds = %while.body21
  call void @Perl_croak_popstack() #17, !dbg !4869
  br label %do.body26, !dbg !4869

do.body26:                                        ; preds = %while.body21, %if.then24
  %45 = load ptr, ptr @PL_stack_base, align 8, !dbg !4871
  %sub.ptr.lhs.cast = ptrtoint ptr %42 to i64, !dbg !4871
  %sub.ptr.rhs.cast = ptrtoint ptr %45 to i64, !dbg !4871
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4871
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3, !dbg !4871
  %46 = load ptr, ptr @PL_curstack, align 8, !dbg !4871
  %47 = load ptr, ptr %46, align 8, !dbg !4871
  %xav_fill = getelementptr inbounds %struct.xpvav, ptr %47, i64 0, i32 2, !dbg !4871
  store i64 %sub.ptr.div, ptr %xav_fill, align 8, !dbg !4871
  %48 = load ptr, ptr %44, align 8, !dbg !4871
  %sv_u = getelementptr inbounds %struct.av, ptr %48, i64 0, i32 3, !dbg !4871
  %49 = load ptr, ptr %sv_u, align 8, !dbg !4871
  store ptr %49, ptr @PL_stack_base, align 8, !dbg !4871
  %50 = load ptr, ptr %44, align 8, !dbg !4871
  %51 = load ptr, ptr %50, align 8, !dbg !4871
  %xav_max = getelementptr inbounds %struct.xpvav, ptr %51, i64 0, i32 3, !dbg !4871
  %52 = load i64, ptr %xav_max, align 8, !dbg !4871
  %add.ptr = getelementptr inbounds ptr, ptr %49, i64 %52, !dbg !4871
  store ptr %add.ptr, ptr @PL_stack_max, align 8, !dbg !4871
  %53 = load ptr, ptr %44, align 8, !dbg !4871
  %54 = load ptr, ptr %53, align 8, !dbg !4871
  %xav_fill31 = getelementptr inbounds %struct.xpvav, ptr %54, i64 0, i32 2, !dbg !4871
  %55 = load i64, ptr %xav_fill31, align 8, !dbg !4871
  %add.ptr32 = getelementptr inbounds ptr, ptr %49, i64 %55, !dbg !4871
  store ptr %add.ptr32, ptr @PL_stack_sp, align 8, !dbg !4871
  call void @llvm.dbg.value(metadata ptr %add.ptr32, metadata !4702, metadata !DIExpression()), !dbg !4866
  %56 = load ptr, ptr %44, align 8, !dbg !4871
  store ptr %56, ptr @PL_curstack, align 8, !dbg !4871
  store ptr %44, ptr @PL_curstackinfo, align 8, !dbg !4865
  %57 = load ptr, ptr @PL_mainstack, align 8, !dbg !4863
  %cmp19.not = icmp eq ptr %56, %57, !dbg !4863
  br i1 %cmp19.not, label %redo_body, label %while.body21, !dbg !4863, !llvm.loop !4873

if.end41:                                         ; preds = %sw.bb14
  %58 = load ptr, ptr @PL_stderrgv, align 8, !dbg !4874
  %tobool42.not = icmp eq ptr %58, null, !dbg !4874
  br i1 %tobool42.not, label %cond.false, label %land.lhs.true43, !dbg !4874

land.lhs.true43:                                  ; preds = %if.end41
  %sv_flags = getelementptr inbounds %struct.gv, ptr %58, i64 0, i32 2, !dbg !4874
  %59 = load i32, ptr %sv_flags, align 4, !dbg !4874
  %and44 = and i32 %59, 255, !dbg !4874
  %cmp45 = icmp eq i32 %and44, 9, !dbg !4874
  br i1 %cmp45, label %land.lhs.true47, label %cond.false, !dbg !4874

land.lhs.true47:                                  ; preds = %land.lhs.true43
  %sv_u48 = getelementptr inbounds %struct.gv, ptr %58, i64 0, i32 3, !dbg !4874
  %60 = load ptr, ptr %sv_u48, align 8, !dbg !4874
  %gp_io = getelementptr inbounds %struct.gp, ptr %60, i64 0, i32 1, !dbg !4874
  %61 = load ptr, ptr %gp_io, align 8, !dbg !4874
  %tobool50.not = icmp eq ptr %61, null, !dbg !4874
  br i1 %tobool50.not, label %cond.false, label %land.lhs.true51, !dbg !4874

land.lhs.true51:                                  ; preds = %land.lhs.true47
  %62 = load ptr, ptr %61, align 8, !dbg !4874
  %xio_ofp = getelementptr inbounds %struct.xpvio, ptr %62, i64 0, i32 5, !dbg !4874
  %63 = load ptr, ptr %xio_ofp, align 8, !dbg !4874
  %tobool56.not = icmp eq ptr %63, null, !dbg !4874
  br i1 %tobool56.not, label %cond.false, label %cond.end, !dbg !4874

cond.false:                                       ; preds = %land.lhs.true51, %land.lhs.true47, %land.lhs.true43, %if.end41
  %call62 = call ptr @Perl_PerlIO_stderr() #17, !dbg !4874
  br label %cond.end, !dbg !4874

cond.end:                                         ; preds = %land.lhs.true51, %cond.false
  %cond = phi ptr [ %call62, %cond.false ], [ %63, %land.lhs.true51 ], !dbg !4874
  %call63 = call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %cond, ptr noundef nonnull @.str.13) #17, !dbg !4875
  %64 = load i64, ptr @PL_tmps_ix, align 8, !dbg !4876
  %65 = load i64, ptr @PL_tmps_floor, align 8, !dbg !4876
  %cmp64 = icmp sgt i64 %64, %65, !dbg !4876
  br i1 %cmp64, label %if.then66, label %do.body68, !dbg !4878

if.then66:                                        ; preds = %cond.end
  call void @Perl_free_tmps() #17, !dbg !4876
  br label %do.body68, !dbg !4876

do.body68:                                        ; preds = %cond.end, %if.then66, %if.end13, %entry
  %ret.0 = phi i32 [ %call, %entry ], [ %38, %if.end13 ], [ 1, %if.then66 ], [ 1, %cond.end ], !dbg !4712
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !4700, metadata !DIExpression()), !dbg !4712
  %66 = load ptr, ptr %je_prev, align 8, !dbg !4879
  store ptr %66, ptr @PL_top_env, align 8, !dbg !4879
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !4881
  ret i32 %ret.0, !dbg !4882
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare !dbg !4883 void @Perl_dounwind(i32 noundef) local_unnamed_addr #3

declare !dbg !4884 void @Perl_croak_popstack() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_get_sv(ptr noundef %name, i32 noundef %flags) local_unnamed_addr #0 !dbg !3833 {
entry:
  call void @llvm.dbg.value(metadata ptr %name, metadata !3832, metadata !DIExpression()), !dbg !4885
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3837, metadata !DIExpression()), !dbg !4885
  %call = tail call ptr @Perl_gv_fetchpv(ptr noundef %name, i32 noundef %flags, i32 noundef 3) #17, !dbg !4886
  call void @llvm.dbg.value(metadata ptr %call, metadata !3838, metadata !DIExpression()), !dbg !4885
  %tobool.not = icmp eq ptr %call, null, !dbg !4887
  br i1 %tobool.not, label %cleanup, label %if.then, !dbg !4888

if.then:                                          ; preds = %entry
  %sv_u = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3, !dbg !4889
  %0 = load ptr, ptr %sv_u, align 8, !dbg !4889
  %1 = load ptr, ptr %0, align 8, !dbg !4889
  br label %cleanup, !dbg !4890

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi ptr [ %1, %if.then ], [ null, %entry ], !dbg !4885
  ret ptr %retval.0, !dbg !4891
}

declare !dbg !4892 ptr @Perl_gv_fetchpv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_get_av(ptr noundef %name, i32 noundef %flags) local_unnamed_addr #0 !dbg !4668 {
entry:
  call void @llvm.dbg.value(metadata ptr %name, metadata !4667, metadata !DIExpression()), !dbg !4895
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4672, metadata !DIExpression()), !dbg !4895
  %call = tail call ptr @Perl_gv_fetchpv(ptr noundef %name, i32 noundef %flags, i32 noundef 11) #17, !dbg !4896
  call void @llvm.dbg.value(metadata ptr %call, metadata !4673, metadata !DIExpression()), !dbg !4895
  %tobool.not = icmp eq i32 %flags, 0, !dbg !4897
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !4898

if.then:                                          ; preds = %entry
  %sv_u = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3, !dbg !4899
  %0 = load ptr, ptr %sv_u, align 8, !dbg !4899
  %gp_av = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 6, !dbg !4899
  %1 = load ptr, ptr %gp_av, align 8, !dbg !4899
  %tobool1.not = icmp eq ptr %1, null, !dbg !4899
  br i1 %tobool1.not, label %cond.false, label %cleanup, !dbg !4899

cond.false:                                       ; preds = %if.then
  %call5 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %call, i32 noundef 11) #17, !dbg !4899
  br label %cleanup.sink.split, !dbg !4899

if.end:                                           ; preds = %entry
  %tobool9.not = icmp eq ptr %call, null, !dbg !4900
  br i1 %tobool9.not, label %cleanup, label %cleanup.sink.split, !dbg !4902

cleanup.sink.split:                               ; preds = %if.end, %cond.false
  %call5.sink = phi ptr [ %call5, %cond.false ], [ %call, %if.end ]
  %sv_u6 = getelementptr inbounds %struct.gv, ptr %call5.sink, i64 0, i32 3, !dbg !4895
  %2 = load ptr, ptr %sv_u6, align 8, !dbg !4895
  %gp_av8 = getelementptr inbounds %struct.gp, ptr %2, i64 0, i32 6, !dbg !4895
  %3 = load ptr, ptr %gp_av8, align 8, !dbg !4895
  br label %cleanup, !dbg !4903

cleanup:                                          ; preds = %cleanup.sink.split, %if.end, %if.then
  %retval.0 = phi ptr [ %1, %if.then ], [ null, %if.end ], [ %3, %cleanup.sink.split ], !dbg !4895
  ret ptr %retval.0, !dbg !4903
}

declare !dbg !4904 ptr @Perl_gv_add_by_type(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_get_hv(ptr noundef %name, i32 noundef %flags) local_unnamed_addr #0 !dbg !4907 {
entry:
  call void @llvm.dbg.value(metadata ptr %name, metadata !4911, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4912, metadata !DIExpression()), !dbg !4914
  %call = tail call ptr @Perl_gv_fetchpv(ptr noundef %name, i32 noundef %flags, i32 noundef 12) #17, !dbg !4915
  call void @llvm.dbg.value(metadata ptr %call, metadata !4913, metadata !DIExpression()), !dbg !4914
  %tobool.not = icmp eq i32 %flags, 0, !dbg !4916
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !4918

if.then:                                          ; preds = %entry
  %sv_u = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3, !dbg !4919
  %0 = load ptr, ptr %sv_u, align 8, !dbg !4919
  %gp_hv = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 5, !dbg !4919
  %1 = load ptr, ptr %gp_hv, align 8, !dbg !4919
  %tobool1.not = icmp eq ptr %1, null, !dbg !4919
  br i1 %tobool1.not, label %cond.false, label %cleanup, !dbg !4919

cond.false:                                       ; preds = %if.then
  %call5 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %call, i32 noundef 12) #17, !dbg !4919
  br label %cleanup.sink.split, !dbg !4919

if.end:                                           ; preds = %entry
  %tobool9.not = icmp eq ptr %call, null, !dbg !4920
  br i1 %tobool9.not, label %cleanup, label %cleanup.sink.split, !dbg !4922

cleanup.sink.split:                               ; preds = %if.end, %cond.false
  %call5.sink = phi ptr [ %call5, %cond.false ], [ %call, %if.end ]
  %sv_u6 = getelementptr inbounds %struct.gv, ptr %call5.sink, i64 0, i32 3, !dbg !4914
  %2 = load ptr, ptr %sv_u6, align 8, !dbg !4914
  %gp_hv8 = getelementptr inbounds %struct.gp, ptr %2, i64 0, i32 5, !dbg !4914
  %3 = load ptr, ptr %gp_hv8, align 8, !dbg !4914
  br label %cleanup, !dbg !4923

cleanup:                                          ; preds = %cleanup.sink.split, %if.end, %if.then
  %retval.0 = phi ptr [ %1, %if.then ], [ null, %if.end ], [ %3, %cleanup.sink.split ], !dbg !4914
  ret ptr %retval.0, !dbg !4923
}

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_get_cvn_flags(ptr noundef %name, i64 noundef %len, i32 noundef %flags) local_unnamed_addr #0 !dbg !4924 {
entry:
  call void @llvm.dbg.value(metadata ptr %name, metadata !4928, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.value(metadata i64 %len, metadata !4929, metadata !DIExpression()), !dbg !4932
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4930, metadata !DIExpression()), !dbg !4932
  %call = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef %name, i64 noundef %len, i32 noundef %flags, i32 noundef 13) #17, !dbg !4933
  call void @llvm.dbg.value(metadata ptr %call, metadata !4931, metadata !DIExpression()), !dbg !4932
  %and = and i32 %flags, -536874209, !dbg !4934
  %tobool.not = icmp eq i32 %and, 0, !dbg !4934
  br i1 %tobool.not, label %if.end, label %land.lhs.true, !dbg !4936

land.lhs.true:                                    ; preds = %entry
  %sv_u = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3, !dbg !4937
  %0 = load ptr, ptr %sv_u, align 8, !dbg !4937
  %gp_cvgen = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 3, !dbg !4937
  %1 = load i32, ptr %gp_cvgen, align 8, !dbg !4937
  %tobool1.not = icmp eq i32 %1, 0, !dbg !4937
  br i1 %tobool1.not, label %cond.false, label %if.then, !dbg !4938

cond.false:                                       ; preds = %land.lhs.true
  %gp_cv = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 2, !dbg !4937
  %2 = load ptr, ptr %gp_cv, align 8, !dbg !4937
  %tobool4.not = icmp eq ptr %2, null, !dbg !4937
  br i1 %tobool4.not, label %if.then, label %cond.false13, !dbg !4938

if.then:                                          ; preds = %land.lhs.true, %cond.false
  %call5 = tail call ptr @Perl_newSTUB(ptr noundef nonnull %call, i1 noundef zeroext false) #17, !dbg !4939
  br label %cleanup, !dbg !4941

if.end:                                           ; preds = %entry
  %tobool6.not = icmp eq ptr %call, null, !dbg !4942
  br i1 %tobool6.not, label %cleanup, label %if.then7, !dbg !4944

if.then7:                                         ; preds = %if.end
  %sv_u8.phi.trans.insert = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3
  %.pre = load ptr, ptr %sv_u8.phi.trans.insert, align 8, !dbg !4945
  %gp_cvgen10.phi.trans.insert = getelementptr inbounds %struct.gp, ptr %.pre, i64 0, i32 3
  %.pre25 = load i32, ptr %gp_cvgen10.phi.trans.insert, align 8, !dbg !4945
  %phi.cmp = icmp eq i32 %.pre25, 0, !dbg !4944
  br i1 %phi.cmp, label %cond.false13, label %cleanup, !dbg !4945

cond.false13:                                     ; preds = %cond.false, %if.then7
  %3 = phi ptr [ %.pre, %if.then7 ], [ %0, %cond.false ]
  %gp_cv16 = getelementptr inbounds %struct.gp, ptr %3, i64 0, i32 2, !dbg !4945
  %4 = load ptr, ptr %gp_cv16, align 8, !dbg !4945
  br label %cleanup, !dbg !4945

cleanup:                                          ; preds = %if.end, %cond.false13, %if.then7, %if.then
  %retval.0 = phi ptr [ %call5, %if.then ], [ %4, %cond.false13 ], [ null, %if.then7 ], [ null, %if.end ], !dbg !4932
  ret ptr %retval.0, !dbg !4946
}

declare !dbg !4947 ptr @Perl_gv_fetchpvn_flags(ptr noundef, i64 noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !4950 ptr @Perl_newSTUB(ptr noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_get_cv(ptr noundef %name, i32 noundef %flags) local_unnamed_addr #0 !dbg !4953 {
entry:
  call void @llvm.dbg.value(metadata ptr %name, metadata !4957, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4958, metadata !DIExpression()), !dbg !4959
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %name) #21, !dbg !4960
  call void @llvm.dbg.value(metadata ptr %name, metadata !4928, metadata !DIExpression()) #17, !dbg !4961
  call void @llvm.dbg.value(metadata i64 %call, metadata !4929, metadata !DIExpression()) #17, !dbg !4961
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4930, metadata !DIExpression()) #17, !dbg !4961
  %call.i = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef %name, i64 noundef %call, i32 noundef %flags, i32 noundef 13) #17, !dbg !4963
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !4931, metadata !DIExpression()) #17, !dbg !4961
  %and.i = and i32 %flags, -536874209, !dbg !4964
  %tobool.not.i = icmp eq i32 %and.i, 0, !dbg !4964
  br i1 %tobool.not.i, label %if.end.i, label %land.lhs.true.i, !dbg !4965

land.lhs.true.i:                                  ; preds = %entry
  %sv_u.i = getelementptr inbounds %struct.gv, ptr %call.i, i64 0, i32 3, !dbg !4966
  %0 = load ptr, ptr %sv_u.i, align 8, !dbg !4966
  %gp_cvgen.i = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 3, !dbg !4966
  %1 = load i32, ptr %gp_cvgen.i, align 8, !dbg !4966
  %tobool1.not.i = icmp eq i32 %1, 0, !dbg !4966
  br i1 %tobool1.not.i, label %cond.false.i, label %if.then.i, !dbg !4967

cond.false.i:                                     ; preds = %land.lhs.true.i
  %gp_cv.i = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 2, !dbg !4966
  %2 = load ptr, ptr %gp_cv.i, align 8, !dbg !4966
  %tobool4.not.i = icmp eq ptr %2, null, !dbg !4966
  br i1 %tobool4.not.i, label %if.then.i, label %Perl_get_cvn_flags.exit, !dbg !4967

if.then.i:                                        ; preds = %cond.false.i, %land.lhs.true.i
  %call5.i = tail call ptr @Perl_newSTUB(ptr noundef nonnull %call.i, i1 noundef zeroext false) #17, !dbg !4968
  br label %Perl_get_cvn_flags.exit, !dbg !4969

if.end.i:                                         ; preds = %entry
  %tobool6.not.i = icmp eq ptr %call.i, null, !dbg !4970
  br i1 %tobool6.not.i, label %Perl_get_cvn_flags.exit, label %if.then7.i, !dbg !4971

if.then7.i:                                       ; preds = %if.end.i
  %sv_u8.phi.trans.insert.i = getelementptr inbounds %struct.gv, ptr %call.i, i64 0, i32 3
  %.pre.i = load ptr, ptr %sv_u8.phi.trans.insert.i, align 8, !dbg !4972
  %gp_cvgen10.phi.trans.insert.i = getelementptr inbounds %struct.gp, ptr %.pre.i, i64 0, i32 3
  %.pre25.i = load i32, ptr %gp_cvgen10.phi.trans.insert.i, align 8, !dbg !4972
  %phi.cmp.i = icmp eq i32 %.pre25.i, 0, !dbg !4971
  br i1 %phi.cmp.i, label %if.then7.i.cond.false13.i_crit_edge, label %Perl_get_cvn_flags.exit, !dbg !4972

if.then7.i.cond.false13.i_crit_edge:              ; preds = %if.then7.i
  %gp_cv16.i.phi.trans.insert = getelementptr inbounds %struct.gp, ptr %.pre.i, i64 0, i32 2
  %.pre = load ptr, ptr %gp_cv16.i.phi.trans.insert, align 8, !dbg !4972
  br label %Perl_get_cvn_flags.exit, !dbg !4972

Perl_get_cvn_flags.exit:                          ; preds = %cond.false.i, %if.then7.i.cond.false13.i_crit_edge, %if.then.i, %if.end.i, %if.then7.i
  %retval.0.i = phi ptr [ %call5.i, %if.then.i ], [ null, %if.then7.i ], [ null, %if.end.i ], [ %.pre, %if.then7.i.cond.false13.i_crit_edge ], [ %2, %cond.false.i ], !dbg !4961
  ret ptr %retval.0.i, !dbg !4973
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: nounwind uwtable
define dso_local i32 @Perl_call_argv(ptr noundef %sub_name, i32 noundef %flags, ptr nocapture noundef readonly %argv) local_unnamed_addr #0 !dbg !4974 {
entry:
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !4978, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata i32 %flags, metadata !4979, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata ptr %argv, metadata !4980, metadata !DIExpression()), !dbg !4984
  %0 = load ptr, ptr @PL_stack_sp, align 8, !dbg !4985
  call void @llvm.dbg.value(metadata ptr %0, metadata !4981, metadata !DIExpression()), !dbg !4984
  %1 = load ptr, ptr @PL_markstack_ptr, align 8, !dbg !4986
  %incdec.ptr = getelementptr inbounds i32, ptr %1, i64 1, !dbg !4986
  store ptr %incdec.ptr, ptr @PL_markstack_ptr, align 8, !dbg !4986
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !4982, metadata !DIExpression()), !dbg !4988
  %2 = load ptr, ptr @PL_markstack_max, align 8, !dbg !4986
  %cmp = icmp eq ptr %incdec.ptr, %2, !dbg !4986
  br i1 %cmp, label %if.then, label %if.end, !dbg !4989

if.then:                                          ; preds = %entry
  %call = tail call ptr @Perl_markstack_grow() #17, !dbg !4986
  call void @llvm.dbg.value(metadata ptr %call, metadata !4982, metadata !DIExpression()), !dbg !4988
  br label %if.end, !dbg !4986

if.end:                                           ; preds = %entry, %if.then
  %mark_stack_entry.0 = phi ptr [ %call, %if.then ], [ %incdec.ptr, %entry ], !dbg !4986
  call void @llvm.dbg.value(metadata ptr %mark_stack_entry.0, metadata !4982, metadata !DIExpression()), !dbg !4988
  %3 = load ptr, ptr @PL_stack_base, align 8, !dbg !4989
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64, !dbg !4989
  %sub.ptr.rhs.cast = ptrtoint ptr %3 to i64, !dbg !4989
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4989
  %4 = lshr exact i64 %sub.ptr.sub, 3, !dbg !4989
  %conv = trunc i64 %4 to i32, !dbg !4989
  store i32 %conv, ptr %mark_stack_entry.0, align 4, !dbg !4989
  call void @llvm.dbg.value(metadata ptr %0, metadata !4981, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata ptr %argv, metadata !4980, metadata !DIExpression()), !dbg !4984
  %5 = load ptr, ptr %argv, align 8, !dbg !4990
  %tobool.not31 = icmp eq ptr %5, null, !dbg !4991
  br i1 %tobool.not31, label %while.end, label %do.body2, !dbg !4991

do.body2:                                         ; preds = %if.end, %do.end15
  %6 = phi ptr [ %9, %do.end15 ], [ %5, %if.end ]
  %sp.033 = phi ptr [ %incdec.ptr18, %do.end15 ], [ %0, %if.end ]
  %argv.addr.032 = phi ptr [ %incdec.ptr21, %do.end15 ], [ %argv, %if.end ]
  call void @llvm.dbg.value(metadata ptr %sp.033, metadata !4981, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.value(metadata ptr %argv.addr.032, metadata !4980, metadata !DIExpression()), !dbg !4984
  %7 = load ptr, ptr @PL_stack_max, align 8, !dbg !4992
  %sub.ptr.lhs.cast3 = ptrtoint ptr %7 to i64, !dbg !4992
  %sub.ptr.rhs.cast4 = ptrtoint ptr %sp.033 to i64, !dbg !4992
  %sub.ptr.sub5 = sub i64 %sub.ptr.lhs.cast3, %sub.ptr.rhs.cast4, !dbg !4992
  %cmp7 = icmp slt i64 %sub.ptr.sub5, 8, !dbg !4992
  br i1 %cmp7, label %if.then11, label %do.end15, !dbg !4997

if.then11:                                        ; preds = %do.body2
  %call12 = tail call ptr @Perl_stack_grow(ptr noundef %sp.033, ptr noundef %sp.033, i64 noundef 1) #17, !dbg !4998
  call void @llvm.dbg.value(metadata ptr %call12, metadata !4981, metadata !DIExpression()), !dbg !4984
  %.pre = load ptr, ptr %argv.addr.032, align 8, !dbg !5000
  br label %do.end15, !dbg !4998

do.end15:                                         ; preds = %do.body2, %if.then11
  %8 = phi ptr [ %.pre, %if.then11 ], [ %6, %do.body2 ], !dbg !5000
  %sp.1 = phi ptr [ %call12, %if.then11 ], [ %sp.033, %do.body2 ], !dbg !4984
  call void @llvm.dbg.value(metadata ptr %sp.1, metadata !4981, metadata !DIExpression()), !dbg !4984
  %call16 = tail call ptr @Perl_newSVpv(ptr noundef %8, i64 noundef 0) #17, !dbg !5000
  %call17 = tail call ptr @Perl_sv_2mortal(ptr noundef %call16) #17, !dbg !5000
  %incdec.ptr18 = getelementptr inbounds ptr, ptr %sp.1, i64 1, !dbg !5000
  call void @llvm.dbg.value(metadata ptr %incdec.ptr18, metadata !4981, metadata !DIExpression()), !dbg !4984
  store ptr %call17, ptr %incdec.ptr18, align 8, !dbg !5000
  %incdec.ptr21 = getelementptr inbounds ptr, ptr %argv.addr.032, i64 1, !dbg !5001
  call void @llvm.dbg.value(metadata ptr %incdec.ptr21, metadata !4980, metadata !DIExpression()), !dbg !4984
  %9 = load ptr, ptr %incdec.ptr21, align 8, !dbg !4990
  %tobool.not = icmp eq ptr %9, null, !dbg !4991
  br i1 %tobool.not, label %while.end, label %do.body2, !dbg !4991, !llvm.loop !5002

while.end:                                        ; preds = %do.end15, %if.end
  %sp.0.lcssa = phi ptr [ %0, %if.end ], [ %incdec.ptr18, %do.end15 ], !dbg !4984
  store ptr %sp.0.lcssa, ptr @PL_stack_sp, align 8, !dbg !5004
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !5005, metadata !DIExpression()) #17, !dbg !5011
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5010, metadata !DIExpression()) #17, !dbg !5011
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !4957, metadata !DIExpression()) #17, !dbg !5013
  call void @llvm.dbg.value(metadata i32 1, metadata !4958, metadata !DIExpression()) #17, !dbg !5013
  %call.i.i = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %sub_name) #21, !dbg !5015
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !4928, metadata !DIExpression()) #17, !dbg !5016
  call void @llvm.dbg.value(metadata i64 %call.i.i, metadata !4929, metadata !DIExpression()) #17, !dbg !5016
  call void @llvm.dbg.value(metadata i32 1, metadata !4930, metadata !DIExpression()) #17, !dbg !5016
  %call.i.i.i = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef %sub_name, i64 noundef %call.i.i, i32 noundef 1, i32 noundef 13) #17, !dbg !5018
  call void @llvm.dbg.value(metadata ptr %call.i.i.i, metadata !4931, metadata !DIExpression()) #17, !dbg !5016
  %sv_u.i.i.i = getelementptr inbounds %struct.gv, ptr %call.i.i.i, i64 0, i32 3, !dbg !5019
  %10 = load ptr, ptr %sv_u.i.i.i, align 8, !dbg !5019
  %gp_cvgen.i.i.i = getelementptr inbounds %struct.gp, ptr %10, i64 0, i32 3, !dbg !5019
  %11 = load i32, ptr %gp_cvgen.i.i.i, align 8, !dbg !5019
  %tobool1.not.i.i.i = icmp eq i32 %11, 0, !dbg !5019
  br i1 %tobool1.not.i.i.i, label %cond.false.i.i.i, label %if.then.i.i.i, !dbg !5020

cond.false.i.i.i:                                 ; preds = %while.end
  %gp_cv.i.i.i = getelementptr inbounds %struct.gp, ptr %10, i64 0, i32 2, !dbg !5019
  %12 = load ptr, ptr %gp_cv.i.i.i, align 8, !dbg !5019
  %tobool4.not.i.i.i = icmp eq ptr %12, null, !dbg !5019
  br i1 %tobool4.not.i.i.i, label %if.then.i.i.i, label %Perl_call_pv.exit, !dbg !5020

if.then.i.i.i:                                    ; preds = %cond.false.i.i.i, %while.end
  %call5.i.i.i = tail call ptr @Perl_newSTUB(ptr noundef nonnull %call.i.i.i, i1 noundef zeroext false) #17, !dbg !5021
  br label %Perl_call_pv.exit, !dbg !5022

Perl_call_pv.exit:                                ; preds = %cond.false.i.i.i, %if.then.i.i.i
  %retval.0.i.i.i = phi ptr [ %call5.i.i.i, %if.then.i.i.i ], [ %12, %cond.false.i.i.i ], !dbg !5016
  %call1.i = tail call i32 @Perl_call_sv(ptr noundef %retval.0.i.i.i, i32 noundef %flags) #17, !dbg !5023
  ret i32 %call1.i, !dbg !5024
}

declare !dbg !5025 ptr @Perl_markstack_grow() local_unnamed_addr #3

declare !dbg !5028 ptr @Perl_stack_grow(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !5031 ptr @Perl_sv_2mortal(ptr noundef) local_unnamed_addr #3

declare !dbg !5034 ptr @Perl_newSVpv(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @Perl_call_pv(ptr noundef %sub_name, i32 noundef %flags) local_unnamed_addr #0 !dbg !5006 {
entry:
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !5005, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5010, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !4957, metadata !DIExpression()) #17, !dbg !5036
  call void @llvm.dbg.value(metadata i32 1, metadata !4958, metadata !DIExpression()) #17, !dbg !5036
  %call.i = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %sub_name) #21, !dbg !5038
  call void @llvm.dbg.value(metadata ptr %sub_name, metadata !4928, metadata !DIExpression()) #17, !dbg !5039
  call void @llvm.dbg.value(metadata i64 %call.i, metadata !4929, metadata !DIExpression()) #17, !dbg !5039
  call void @llvm.dbg.value(metadata i32 1, metadata !4930, metadata !DIExpression()) #17, !dbg !5039
  %call.i.i = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef %sub_name, i64 noundef %call.i, i32 noundef 1, i32 noundef 13) #17, !dbg !5041
  call void @llvm.dbg.value(metadata ptr %call.i.i, metadata !4931, metadata !DIExpression()) #17, !dbg !5039
  %sv_u.i.i = getelementptr inbounds %struct.gv, ptr %call.i.i, i64 0, i32 3, !dbg !5042
  %0 = load ptr, ptr %sv_u.i.i, align 8, !dbg !5042
  %gp_cvgen.i.i = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 3, !dbg !5042
  %1 = load i32, ptr %gp_cvgen.i.i, align 8, !dbg !5042
  %tobool1.not.i.i = icmp eq i32 %1, 0, !dbg !5042
  br i1 %tobool1.not.i.i, label %cond.false.i.i, label %if.then.i.i, !dbg !5043

cond.false.i.i:                                   ; preds = %entry
  %gp_cv.i.i = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 2, !dbg !5042
  %2 = load ptr, ptr %gp_cv.i.i, align 8, !dbg !5042
  %tobool4.not.i.i = icmp eq ptr %2, null, !dbg !5042
  br i1 %tobool4.not.i.i, label %if.then.i.i, label %Perl_get_cv.exit, !dbg !5043

if.then.i.i:                                      ; preds = %cond.false.i.i, %entry
  %call5.i.i = tail call ptr @Perl_newSTUB(ptr noundef nonnull %call.i.i, i1 noundef zeroext false) #17, !dbg !5044
  br label %Perl_get_cv.exit, !dbg !5045

Perl_get_cv.exit:                                 ; preds = %cond.false.i.i, %if.then.i.i
  %retval.0.i.i = phi ptr [ %call5.i.i, %if.then.i.i ], [ %2, %cond.false.i.i ], !dbg !5039
  %call1 = tail call i32 @Perl_call_sv(ptr noundef %retval.0.i.i, i32 noundef %flags), !dbg !5046
  ret i32 %call1, !dbg !5047
}

; Function Attrs: nounwind uwtable
define dso_local i32 @Perl_call_sv(ptr noundef %sv, i32 noundef %flags) local_unnamed_addr #0 !dbg !5048 {
entry:
  %flags.addr = alloca i32, align 4
  %myop = alloca %struct.logop, align 8
  %method_op = alloca %struct.methop, align 8
  %retval1 = alloca i32, align 4
  %cur_env = alloca %struct.jmpenv, align 8
  call void @llvm.dbg.value(metadata ptr %sv, metadata !5053, metadata !DIExpression()), !dbg !5122
  store volatile i32 %flags, ptr %flags.addr, align 4
  call void @llvm.dbg.declare(metadata ptr %flags.addr, metadata !5054, metadata !DIExpression()), !dbg !5123
  %0 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5124
  call void @llvm.dbg.value(metadata ptr %0, metadata !5055, metadata !DIExpression()), !dbg !5122
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %myop) #17, !dbg !5125
  call void @llvm.dbg.declare(metadata ptr %myop, metadata !5056, metadata !DIExpression()), !dbg !5126
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %method_op) #17, !dbg !5127
  call void @llvm.dbg.declare(metadata ptr %method_op, metadata !5076, metadata !DIExpression()), !dbg !5128
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %retval1), !dbg !5129
  call void @llvm.dbg.declare(metadata ptr %retval1, metadata !5101, metadata !DIExpression()), !dbg !5130
  store volatile i32 0, ptr %retval1, align 4, !dbg !5130
  %1 = load ptr, ptr @PL_top_env, align 8, !dbg !5131
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, ptr %1, i64 0, i32 3, !dbg !5131
  %2 = load i8, ptr %je_mustcatch, align 4, !dbg !5131, !range !1483
  call void @llvm.dbg.value(metadata i8 %2, metadata !5103, metadata !DIExpression()), !dbg !5122
  %3 = load ptr, ptr @PL_op, align 8, !dbg !5132
  call void @llvm.dbg.value(metadata ptr %3, metadata !5105, metadata !DIExpression()), !dbg !5122
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !5133
  call void @llvm.dbg.declare(metadata ptr %cur_env, metadata !5107, metadata !DIExpression()), !dbg !5133
  %flags.addr.0.flags.addr.0.flags.addr.0. = load volatile i32, ptr %flags.addr, align 4, !dbg !5134
  %and = and i32 %flags.addr.0.flags.addr.0.flags.addr.0., 4, !dbg !5136
  %tobool2.not = icmp eq i32 %and, 0, !dbg !5136
  br i1 %tobool2.not, label %if.end, label %if.then, !dbg !5137

if.then:                                          ; preds = %entry
  call void @Perl_push_scope() #17, !dbg !5138
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17, !dbg !5140
  %4 = load i64, ptr @PL_tmps_ix, align 8, !dbg !5140
  store i64 %4, ptr @PL_tmps_floor, align 8, !dbg !5140
  br label %if.end, !dbg !5141

if.end:                                           ; preds = %if.then, %entry
  %flags.addr.0.flags.addr.0.flags.addr.0.211 = load volatile i32, ptr %flags.addr, align 4, !dbg !5142
  %and3 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.211, 3, !dbg !5144
  %tobool4.not = icmp eq i32 %and3, 0, !dbg !5144
  br i1 %tobool4.not, label %if.then5, label %if.end6, !dbg !5145

if.then5:                                         ; preds = %if.end
  %flags.addr.0.flags.addr.0.flags.addr.0.212 = load volatile i32, ptr %flags.addr, align 4, !dbg !5146
  %or = or i32 %flags.addr.0.flags.addr.0.flags.addr.0.212, 2, !dbg !5146
  store volatile i32 %or, ptr %flags.addr, align 4, !dbg !5146
  br label %if.end6, !dbg !5148

if.end6:                                          ; preds = %if.then5, %if.end
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %myop, i8 0, i64 56, i1 false), !dbg !5149
  %flags.addr.0.flags.addr.0.flags.addr.0.213 = load volatile i32, ptr %flags.addr, align 4, !dbg !5150
  %5 = trunc i32 %flags.addr.0.flags.addr.0.flags.addr.0.213 to i8, !dbg !5152
  %6 = shl i8 %5, 2, !dbg !5152
  %7 = and i8 %6, 64, !dbg !5152
  %flags.addr.0.flags.addr.0.flags.addr.0.214 = load volatile i32, ptr %flags.addr, align 4, !dbg !5153
  %op_flags14 = getelementptr inbounds %struct.logop, ptr %myop, i64 0, i32 5, !dbg !5154
  %8 = trunc i32 %flags.addr.0.flags.addr.0.flags.addr.0.214 to i8, !dbg !5155
  %9 = and i8 %8, 3, !dbg !5155
  %10 = or i8 %7, %9, !dbg !5155
  %conv17 = xor i8 %10, 64, !dbg !5155
  store i8 %conv17, ptr %op_flags14, align 2, !dbg !5155
  %11 = load ptr, ptr @PL_op, align 8, !dbg !5156
  call void @Perl_save_pushptr(ptr noundef %11, i32 noundef 18) #17, !dbg !5156
  store ptr %myop, ptr @PL_op, align 8, !dbg !5157
  %12 = load ptr, ptr @PL_stack_max, align 8, !dbg !5158
  %13 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5158
  %sub.ptr.lhs.cast = ptrtoint ptr %12 to i64, !dbg !5158
  %sub.ptr.rhs.cast = ptrtoint ptr %13 to i64, !dbg !5158
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5158
  %cmp = icmp slt i64 %sub.ptr.sub, 8, !dbg !5158
  br i1 %cmp, label %if.then19, label %do.end, !dbg !5161

if.then19:                                        ; preds = %if.end6
  %call = call ptr @Perl_stack_grow(ptr noundef %0, ptr noundef %13, i64 noundef 1) #17, !dbg !5162
  call void @llvm.dbg.value(metadata ptr %call, metadata !5055, metadata !DIExpression()), !dbg !5122
  br label %do.end, !dbg !5162

do.end:                                           ; preds = %if.end6, %if.then19
  %flags.addr.0.flags.addr.0.flags.addr.0.215 = load volatile i32, ptr %flags.addr, align 4, !dbg !5164
  %and21 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.215, 4096, !dbg !5166
  %tobool22.not = icmp eq i32 %and21, 0, !dbg !5166
  br i1 %tobool22.not, label %if.then23, label %if.end24, !dbg !5167

if.then23:                                        ; preds = %do.end
  %14 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5168
  %incdec.ptr = getelementptr inbounds ptr, ptr %14, i64 1, !dbg !5168
  store ptr %incdec.ptr, ptr @PL_stack_sp, align 8, !dbg !5168
  store ptr %sv, ptr %incdec.ptr, align 8, !dbg !5169
  br label %if.end24, !dbg !5170

if.end24:                                         ; preds = %if.then23, %do.end
  %15 = load ptr, ptr @PL_markstack_ptr, align 8, !dbg !5171
  %16 = load i32, ptr %15, align 4, !dbg !5171
  call void @llvm.dbg.value(metadata i32 %16, metadata !5100, metadata !DIExpression()), !dbg !5122
  %17 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !5172
  call void @llvm.dbg.value(metadata i32 %17, metadata !5102, metadata !DIExpression()), !dbg !5122
  %18 = load i32, ptr @PL_perldb, align 4, !dbg !5173
  %and25 = and i32 %18, 1, !dbg !5173
  %tobool26.not = icmp eq i32 %and25, 0, !dbg !5173
  br i1 %tobool26.not, label %if.end48, label %land.lhs.true, !dbg !5175

land.lhs.true:                                    ; preds = %if.end24
  %19 = load ptr, ptr @PL_curstash, align 8, !dbg !5176
  %20 = load ptr, ptr @PL_debstash, align 8, !dbg !5177
  %cmp27.not = icmp eq ptr %19, %20, !dbg !5178
  br i1 %cmp27.not, label %if.end48, label %land.lhs.true29, !dbg !5179

land.lhs.true29:                                  ; preds = %land.lhs.true
  %21 = load ptr, ptr @PL_DBcv, align 8, !dbg !5180
  %tobool30.not = icmp eq ptr %21, null, !dbg !5180
  br i1 %tobool30.not, label %lor.lhs.false, label %land.lhs.true33, !dbg !5181

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %22 = load ptr, ptr @PL_DBsub, align 8, !dbg !5182
  %sv_u = getelementptr inbounds %struct.gv, ptr %22, i64 0, i32 3, !dbg !5182
  %23 = load ptr, ptr %sv_u, align 8, !dbg !5182
  %gp_cv = getelementptr inbounds %struct.gp, ptr %23, i64 0, i32 2, !dbg !5182
  %24 = load ptr, ptr %gp_cv, align 8, !dbg !5182
  store ptr %24, ptr @PL_DBcv, align 8, !dbg !5183
  %tobool32.not = icmp eq ptr %24, null, !dbg !5183
  br i1 %tobool32.not, label %if.end48, label %land.lhs.true33, !dbg !5184

land.lhs.true33:                                  ; preds = %lor.lhs.false, %land.lhs.true29
  %sv_flags = getelementptr inbounds %struct.sv, ptr %sv, i64 0, i32 2, !dbg !5185
  %25 = load i32, ptr %sv_flags, align 4, !dbg !5185
  %and34 = and i32 %25, 255, !dbg !5185
  %cmp35.not = icmp eq i32 %and34, 13, !dbg !5186
  br i1 %cmp35.not, label %lor.lhs.false37, label %land.lhs.true41, !dbg !5187

lor.lhs.false37:                                  ; preds = %land.lhs.true33
  %26 = load ptr, ptr %sv, align 8, !dbg !5188
  %xcv_stash = getelementptr inbounds %struct.xpvcv, ptr %26, i64 0, i32 4, !dbg !5188
  %27 = load ptr, ptr %xcv_stash, align 8, !dbg !5188
  %cmp39.not = icmp eq ptr %27, %20, !dbg !5189
  br i1 %cmp39.not, label %if.end48, label %land.lhs.true41, !dbg !5190

land.lhs.true41:                                  ; preds = %lor.lhs.false37, %land.lhs.true33
  %flags.addr.0.flags.addr.0.flags.addr.0.216 = load volatile i32, ptr %flags.addr, align 4, !dbg !5191
  %and42 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.216, 64, !dbg !5192
  %tobool43.not = icmp eq i32 %and42, 0, !dbg !5192
  br i1 %tobool43.not, label %if.then44, label %if.end48, !dbg !5193

if.then44:                                        ; preds = %land.lhs.true41
  %op_private = getelementptr inbounds %struct.logop, ptr %myop, i64 0, i32 6, !dbg !5194
  %28 = load i8, ptr %op_private, align 1, !dbg !5195
  %29 = or i8 %28, 64, !dbg !5195
  store i8 %29, ptr %op_private, align 1, !dbg !5195
  br label %if.end48, !dbg !5196

if.end48:                                         ; preds = %if.then44, %land.lhs.true41, %lor.lhs.false37, %lor.lhs.false, %land.lhs.true, %if.end24
  %flags.addr.0.flags.addr.0.flags.addr.0.217 = load volatile i32, ptr %flags.addr, align 4, !dbg !5197
  %and49 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.217, 4224, !dbg !5199
  %tobool50.not = icmp eq i32 %and49, 0, !dbg !5199
  br i1 %tobool50.not, label %if.end66, label %if.then51, !dbg !5200

if.then51:                                        ; preds = %if.end48
  %30 = getelementptr inbounds i8, ptr %method_op, i64 8, !dbg !5201
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %30, i8 0, i64 48, i1 false), !dbg !5201
  store ptr %myop, ptr %method_op, align 8, !dbg !5203
  store ptr %method_op, ptr @PL_op, align 8, !dbg !5204
  %flags.addr.0.flags.addr.0.flags.addr.0.218 = load volatile i32, ptr %flags.addr, align 4, !dbg !5205
  %and52 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.218, 4096, !dbg !5207
  %tobool53.not = icmp eq i32 %and52, 0, !dbg !5207
  br i1 %tobool53.not, label %if.else, label %if.then54, !dbg !5208

if.then54:                                        ; preds = %if.then51
  %31 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 210), align 8, !dbg !5209
  %op_ppaddr = getelementptr inbounds %struct.methop, ptr %method_op, i64 0, i32 2, !dbg !5211
  store ptr %31, ptr %op_ppaddr, align 8, !dbg !5212
  %op_type = getelementptr inbounds %struct.methop, ptr %method_op, i64 0, i32 4, !dbg !5213
  store i16 210, ptr %op_type, align 8, !dbg !5214
  %op_u = getelementptr inbounds %struct.methop, ptr %method_op, i64 0, i32 7, !dbg !5215
  store ptr %sv, ptr %op_u, align 8, !dbg !5216
  br label %if.end60, !dbg !5217

if.else:                                          ; preds = %if.then51
  %32 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 184), align 8, !dbg !5218
  %op_ppaddr55 = getelementptr inbounds %struct.methop, ptr %method_op, i64 0, i32 2, !dbg !5220
  store ptr %32, ptr %op_ppaddr55, align 8, !dbg !5221
  %op_type56 = getelementptr inbounds %struct.methop, ptr %method_op, i64 0, i32 4, !dbg !5222
  store i16 184, ptr %op_type56, align 8, !dbg !5223
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then54
  %33 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 185), align 8, !dbg !5224
  %op_ppaddr61 = getelementptr inbounds %struct.logop, ptr %myop, i64 0, i32 2, !dbg !5225
  store ptr %33, ptr %op_ppaddr61, align 8, !dbg !5226
  %op_type62 = getelementptr inbounds %struct.logop, ptr %myop, i64 0, i32 4, !dbg !5227
  %bf.load63 = load i16, ptr %op_type62, align 8, !dbg !5228
  %bf.clear64 = and i16 %bf.load63, -512, !dbg !5228
  %bf.set65 = or i16 %bf.clear64, 185, !dbg !5228
  store i16 %bf.set65, ptr %op_type62, align 8, !dbg !5228
  br label %if.end66, !dbg !5229

if.end66:                                         ; preds = %if.end60, %if.end48
  %flags.addr.0.flags.addr.0.flags.addr.0.219 = load volatile i32, ptr %flags.addr, align 4, !dbg !5230
  %and67 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.219, 8, !dbg !5231
  %tobool68.not = icmp eq i32 %and67, 0, !dbg !5231
  br i1 %tobool68.not, label %do.body70, label %if.else95, !dbg !5232

do.body70:                                        ; preds = %if.end66
  %34 = load ptr, ptr @PL_top_env, align 8, !dbg !5233
  %je_mustcatch71 = getelementptr inbounds %struct.jmpenv, ptr %34, i64 0, i32 3, !dbg !5233
  store i8 1, ptr %je_mustcatch71, align 4, !dbg !5233
  %35 = load ptr, ptr @PL_op, align 8, !dbg !5236
  %cmp74 = icmp eq ptr %35, %myop, !dbg !5236
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !5238

if.then76:                                        ; preds = %do.body70
  %36 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 185), align 8, !dbg !5236
  %call77 = call ptr %36() #17, !dbg !5236
  store ptr %call77, ptr @PL_op, align 8, !dbg !5236
  br label %if.end78, !dbg !5236

if.end78:                                         ; preds = %if.then76, %do.body70
  %37 = phi ptr [ %call77, %if.then76 ], [ %35, %do.body70 ], !dbg !5239
  %tobool79.not = icmp eq ptr %37, null, !dbg !5239
  br i1 %tobool79.not, label %if.end82, label %if.then80, !dbg !5238

if.then80:                                        ; preds = %if.end78
  %38 = load ptr, ptr @PL_runops, align 8, !dbg !5239
  %call81 = call i32 %38() #17, !dbg !5239
  br label %if.end82, !dbg !5239

if.end82:                                         ; preds = %if.then80, %if.end78
  %39 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5241
  %40 = load ptr, ptr @PL_stack_base, align 8, !dbg !5242
  %idx.ext = sext i32 %16 to i64, !dbg !5243
  %add.ptr83 = getelementptr inbounds ptr, ptr %40, i64 %idx.ext, !dbg !5243
  %sub.ptr.lhs.cast84 = ptrtoint ptr %39 to i64, !dbg !5244
  %sub.ptr.rhs.cast85 = ptrtoint ptr %add.ptr83 to i64, !dbg !5244
  %sub.ptr.sub86 = sub i64 %sub.ptr.lhs.cast84, %sub.ptr.rhs.cast85, !dbg !5244
  %41 = lshr exact i64 %sub.ptr.sub86, 3, !dbg !5244
  %conv88 = trunc i64 %41 to i32, !dbg !5241
  store volatile i32 %conv88, ptr %retval1, align 4, !dbg !5245
  %42 = load ptr, ptr @PL_top_env, align 8, !dbg !5246
  %je_mustcatch91 = getelementptr inbounds %struct.jmpenv, ptr %42, i64 0, i32 3, !dbg !5246
  store i8 %2, ptr %je_mustcatch91, align 4, !dbg !5246
  br label %if.end188, !dbg !5248

if.else95:                                        ; preds = %if.end66
  %op_other = getelementptr inbounds %struct.logop, ptr %myop, i64 0, i32 8, !dbg !5249
  store ptr %myop, ptr %op_other, align 8, !dbg !5250
  %incdec.ptr96 = getelementptr inbounds i32, ptr %15, i64 -1, !dbg !5251
  store ptr %incdec.ptr96, ptr @PL_markstack_ptr, align 8, !dbg !5251
  %flags.addr.0.flags.addr.0.flags.addr.0.220 = load volatile i32, ptr %flags.addr, align 4, !dbg !5252
  %or97 = or i32 %flags.addr.0.flags.addr.0.flags.addr.0.220, 256, !dbg !5252
  %call98 = call ptr @Perl_create_eval_scope(i32 noundef %or97) #17, !dbg !5252
  %43 = load ptr, ptr @PL_markstack_ptr, align 8, !dbg !5253
  %incdec.ptr99 = getelementptr inbounds i32, ptr %43, i64 1, !dbg !5253
  store ptr %incdec.ptr99, ptr @PL_markstack_ptr, align 8, !dbg !5253
  %44 = load ptr, ptr @PL_top_env, align 8, !dbg !5254
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 1, !dbg !5254
  store ptr %44, ptr %je_prev, align 8, !dbg !5254
  %call101 = call i32 @__sigsetjmp(ptr noundef nonnull %cur_env, i32 noundef 0) #19, !dbg !5254
  %je_ret = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 2, !dbg !5254
  store i32 %call101, ptr %je_ret, align 8, !dbg !5254
  store ptr %cur_env, ptr @PL_top_env, align 8, !dbg !5254
  %je_mustcatch102 = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 3, !dbg !5254
  store i8 0, ptr %je_mustcatch102, align 4, !dbg !5254
  call void @llvm.dbg.value(metadata i32 %call101, metadata !5104, metadata !DIExpression()), !dbg !5122
  switch i32 %call101, label %sw.epilog [
    i32 0, label %if.else95.redo_body_crit_edge
    i32 1, label %sw.bb152
    i32 2, label %sw.bb153
    i32 3, label %sw.bb167
  ], !dbg !5256

if.else95.redo_body_crit_edge:                    ; preds = %if.else95
  %.pre = load ptr, ptr @PL_op, align 8, !dbg !5257
  br label %redo_body, !dbg !5256

redo_body:                                        ; preds = %if.else95.redo_body_crit_edge, %if.then169
  %45 = phi ptr [ %.pre, %if.else95.redo_body_crit_edge ], [ %66, %if.then169 ], !dbg !5257
  call void @llvm.dbg.label(metadata !5119), !dbg !5259
  %cmp106 = icmp eq ptr %45, %myop, !dbg !5257
  br i1 %cmp106, label %if.then108, label %if.end110, !dbg !5260

if.then108:                                       ; preds = %redo_body
  %46 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 185), align 8, !dbg !5257
  %call109 = call ptr %46() #17, !dbg !5257
  store ptr %call109, ptr @PL_op, align 8, !dbg !5257
  br label %if.end110, !dbg !5257

if.end110:                                        ; preds = %if.then108, %redo_body
  %47 = phi ptr [ %call109, %if.then108 ], [ %45, %redo_body ], !dbg !5261
  %tobool111.not = icmp eq ptr %47, null, !dbg !5261
  br i1 %tobool111.not, label %if.end114, label %if.then112, !dbg !5260

if.then112:                                       ; preds = %if.end110
  %48 = load ptr, ptr @PL_runops, align 8, !dbg !5261
  %call113 = call i32 %48() #17, !dbg !5261
  br label %if.end114, !dbg !5261

if.end114:                                        ; preds = %if.then112, %if.end110
  %49 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5263
  %50 = load ptr, ptr @PL_stack_base, align 8, !dbg !5264
  %idx.ext115 = sext i32 %16 to i64, !dbg !5265
  %add.ptr116 = getelementptr inbounds ptr, ptr %50, i64 %idx.ext115, !dbg !5265
  %sub.ptr.lhs.cast117 = ptrtoint ptr %49 to i64, !dbg !5266
  %sub.ptr.rhs.cast118 = ptrtoint ptr %add.ptr116 to i64, !dbg !5266
  %sub.ptr.sub119 = sub i64 %sub.ptr.lhs.cast117, %sub.ptr.rhs.cast118, !dbg !5266
  %51 = lshr exact i64 %sub.ptr.sub119, 3, !dbg !5266
  %conv121 = trunc i64 %51 to i32, !dbg !5263
  store volatile i32 %conv121, ptr %retval1, align 4, !dbg !5267
  %flags.addr.0.flags.addr.0.flags.addr.0.221 = load volatile i32, ptr %flags.addr, align 4, !dbg !5268
  %and122 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.221, 32, !dbg !5269
  %tobool123.not = icmp eq i32 %and122, 0, !dbg !5269
  br i1 %tobool123.not, label %do.body125, label %sw.epilog, !dbg !5270

do.body125:                                       ; preds = %if.end114
  %52 = load ptr, ptr @PL_errgv, align 8, !dbg !5271
  %sv_u126 = getelementptr inbounds %struct.gv, ptr %52, i64 0, i32 3, !dbg !5271
  %53 = load ptr, ptr %sv_u126, align 8, !dbg !5271
  call void @llvm.dbg.value(metadata ptr %53, metadata !5108, metadata !DIExpression()), !dbg !5272
  %54 = load ptr, ptr %53, align 8, !dbg !5273
  %tobool128.not = icmp eq ptr %54, null, !dbg !5273
  br i1 %tobool128.not, label %clresv_newemptypv, label %if.else130, !dbg !5271

if.else130:                                       ; preds = %do.body125
  %sv_flags131 = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 2, !dbg !5274
  %55 = load i32, ptr %sv_flags131, align 4, !dbg !5274
  %and132 = and i32 %55, 134283264, !dbg !5274
  %tobool133.not = icmp eq i32 %and132, 0, !dbg !5274
  br i1 %tobool133.not, label %if.else136, label %if.then134, !dbg !5273

if.then134:                                       ; preds = %if.else130
  call void @llvm.dbg.value(metadata ptr %54, metadata !3783, metadata !DIExpression()) #17, !dbg !5275
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %54, i64 0, i32 1, !dbg !5277
  %56 = load i32, ptr %sv_refcnt.i, align 8, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %56, metadata !3786, metadata !DIExpression()) #17, !dbg !5275
  %cmp.i = icmp ugt i32 %56, 1, !dbg !5278
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5279

if.then.i:                                        ; preds = %if.then134
  %sub.i = add i32 %56, -1, !dbg !5280
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !5281
  br label %clresv_newemptypv, !dbg !5282

if.else.i:                                        ; preds = %if.then134
  call void @Perl_sv_free2(ptr noundef nonnull %54, i32 noundef %56) #17, !dbg !5283
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.else.i, %if.then.i, %do.body125
  call void @llvm.dbg.label(metadata !5120), !dbg !5284
  %call135 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !5284
  store ptr %call135, ptr %53, align 8, !dbg !5284
  br label %sw.epilog, !dbg !5284

if.else136:                                       ; preds = %if.else130
  call void @llvm.dbg.value(metadata ptr %54, metadata !5115, metadata !DIExpression()), !dbg !5285
  call void @Perl_sv_setpvn(ptr noundef nonnull %54, ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !5286
  %57 = load i32, ptr %sv_flags131, align 4, !dbg !5286
  %and138 = and i32 %57, 1610547455, !dbg !5286
  %or140 = or i32 %and138, 17408, !dbg !5286
  store i32 %or140, ptr %sv_flags131, align 4, !dbg !5286
  %and142 = and i32 %57, 14680064, !dbg !5287
  %tobool143.not = icmp eq i32 %and142, 0, !dbg !5287
  br i1 %tobool143.not, label %sw.epilog, label %if.then144, !dbg !5286

if.then144:                                       ; preds = %if.else136
  %call145 = call i32 @Perl_mg_free(ptr noundef nonnull %54) #17, !dbg !5289
  br label %sw.epilog, !dbg !5289

sw.bb152:                                         ; preds = %if.else95
  store i32 1, ptr @PL_statusvalue, align 4, !dbg !5291
  store i32 1, ptr @PL_statusvalue_posix, align 4, !dbg !5291
  br label %sw.bb153, !dbg !5291

sw.bb153:                                         ; preds = %if.else95, %sw.bb152
  %58 = load ptr, ptr @PL_curstash, align 8, !dbg !5292
  %59 = load ptr, ptr @PL_defstash, align 8, !dbg !5292
  %cmp154.not = icmp eq ptr %58, %59, !dbg !5292
  br i1 %cmp154.not, label %if.end158, label %if.then156, !dbg !5294

if.then156:                                       ; preds = %sw.bb153
  call void @llvm.dbg.value(metadata ptr %58, metadata !1967, metadata !DIExpression()) #17, !dbg !5295
  %cmp.not.i = icmp eq ptr %58, null, !dbg !5298
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i229, !dbg !5299

if.then.i229:                                     ; preds = %if.then156
  %sv_refcnt.i228 = getelementptr inbounds %struct.sv, ptr %58, i64 0, i32 1, !dbg !5300
  %60 = load i32, ptr %sv_refcnt.i228, align 8, !dbg !5300
  call void @llvm.dbg.value(metadata i32 %60, metadata !1973, metadata !DIExpression()) #17, !dbg !5301
  %cmp1.i = icmp ugt i32 %60, 1, !dbg !5302
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i231, !dbg !5303

if.then4.i:                                       ; preds = %if.then.i229
  %sub.i230 = add i32 %60, -1, !dbg !5304
  store i32 %sub.i230, ptr %sv_refcnt.i228, align 8, !dbg !5305
  br label %S_SvREFCNT_dec.exit, !dbg !5306

if.else.i231:                                     ; preds = %if.then.i229
  call void @Perl_sv_free2(ptr noundef nonnull %58, i32 noundef %60) #17, !dbg !5307
  %.pr.pre = load ptr, ptr @PL_defstash, align 8, !dbg !5308
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.then4.i, %if.else.i231, %if.then156
  %61 = phi ptr [ %59, %if.then156 ], [ %.pr.pre, %if.else.i231 ], [ %59, %if.then4.i ], !dbg !5308
  call void @llvm.dbg.value(metadata ptr %61, metadata !3392, metadata !DIExpression()), !dbg !5309
  %cmp.not.i232 = icmp eq ptr %61, null, !dbg !5311
  br i1 %cmp.not.i232, label %S_SvREFCNT_inc.exit, label %if.then.i234, !dbg !5312

if.then.i234:                                     ; preds = %S_SvREFCNT_dec.exit
  %sv_refcnt.i233 = getelementptr inbounds %struct.sv, ptr %61, i64 0, i32 1, !dbg !5313
  %62 = load i32, ptr %sv_refcnt.i233, align 8, !dbg !5314
  %inc.i = add i32 %62, 1, !dbg !5314
  store i32 %inc.i, ptr %sv_refcnt.i233, align 8, !dbg !5314
  br label %S_SvREFCNT_inc.exit, !dbg !5313

S_SvREFCNT_inc.exit:                              ; preds = %S_SvREFCNT_dec.exit, %if.then.i234
  store ptr %61, ptr @PL_curstash, align 8, !dbg !5308
  br label %if.end158, !dbg !5308

if.end158:                                        ; preds = %S_SvREFCNT_inc.exit, %sw.bb153
  %63 = load i64, ptr @PL_tmps_ix, align 8, !dbg !5315
  %64 = load i64, ptr @PL_tmps_floor, align 8, !dbg !5315
  %cmp159 = icmp sgt i64 %63, %64, !dbg !5315
  br i1 %cmp159, label %if.then161, label %do.body163, !dbg !5317

if.then161:                                       ; preds = %if.end158
  call void @Perl_free_tmps() #17, !dbg !5315
  br label %do.body163, !dbg !5315

do.body163:                                       ; preds = %if.end158, %if.then161
  %65 = load ptr, ptr %je_prev, align 8, !dbg !5318
  store ptr %65, ptr @PL_top_env, align 8, !dbg !5318
  call fastcc void @S_my_exit_jump(), !dbg !5320
  unreachable, !dbg !5321

sw.bb167:                                         ; preds = %if.else95
  %66 = load ptr, ptr @PL_restartop, align 8, !dbg !5322
  %tobool168.not = icmp eq ptr %66, null, !dbg !5322
  br i1 %tobool168.not, label %if.end170, label %if.then169, !dbg !5324

if.then169:                                       ; preds = %sw.bb167
  store ptr null, ptr @PL_restartjmpenv, align 8, !dbg !5325
  store ptr %66, ptr @PL_op, align 8, !dbg !5327
  store ptr null, ptr @PL_restartop, align 8, !dbg !5328
  br label %redo_body, !dbg !5329

if.end170:                                        ; preds = %sw.bb167
  %67 = load ptr, ptr @PL_stack_base, align 8, !dbg !5330
  %idx.ext171 = sext i32 %16 to i64, !dbg !5331
  %add.ptr172 = getelementptr inbounds ptr, ptr %67, i64 %idx.ext171, !dbg !5331
  store ptr %add.ptr172, ptr @PL_stack_sp, align 8, !dbg !5332
  %flags.addr.0.flags.addr.0.flags.addr.0.222 = load volatile i32, ptr %flags.addr, align 4, !dbg !5333
  %and173 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.222, 3, !dbg !5335
  %cmp174 = icmp eq i32 %and173, 3, !dbg !5336
  br i1 %cmp174, label %if.then176, label %if.else177, !dbg !5337

if.then176:                                       ; preds = %if.end170
  store volatile i32 0, ptr %retval1, align 4, !dbg !5338
  br label %sw.epilog, !dbg !5339

if.else177:                                       ; preds = %if.end170
  store volatile i32 1, ptr %retval1, align 4, !dbg !5340
  %incdec.ptr178 = getelementptr inbounds ptr, ptr %add.ptr172, i64 1, !dbg !5342
  store ptr %incdec.ptr178, ptr @PL_stack_sp, align 8, !dbg !5342
  store ptr @PL_sv_undef, ptr %incdec.ptr178, align 8, !dbg !5343
  br label %sw.epilog

sw.epilog:                                        ; preds = %clresv_newemptypv, %if.then144, %if.else136, %if.then176, %if.else177, %if.end114, %if.else95
  %68 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !5344
  %cmp180 = icmp sgt i32 %68, %17, !dbg !5346
  br i1 %cmp180, label %if.then182, label %do.body184, !dbg !5347

if.then182:                                       ; preds = %sw.epilog
  call void @Perl_delete_eval_scope() #17, !dbg !5348
  br label %do.body184, !dbg !5348

do.body184:                                       ; preds = %sw.epilog, %if.then182
  %69 = load ptr, ptr %je_prev, align 8, !dbg !5349
  store ptr %69, ptr @PL_top_env, align 8, !dbg !5349
  br label %if.end188

if.end188:                                        ; preds = %do.body184, %if.end82
  %flags.addr.0.flags.addr.0.flags.addr.0.223 = load volatile i32, ptr %flags.addr, align 4, !dbg !5351
  %and189 = and i32 %flags.addr.0.flags.addr.0.flags.addr.0.223, 4, !dbg !5353
  %tobool190.not = icmp eq i32 %and189, 0, !dbg !5353
  br i1 %tobool190.not, label %if.end198, label %if.then191, !dbg !5354

if.then191:                                       ; preds = %if.end188
  %70 = load ptr, ptr @PL_stack_base, align 8, !dbg !5355
  %idx.ext192 = sext i32 %16 to i64, !dbg !5357
  %add.ptr193 = getelementptr inbounds ptr, ptr %70, i64 %idx.ext192, !dbg !5357
  store ptr %add.ptr193, ptr @PL_stack_sp, align 8, !dbg !5358
  store volatile i32 0, ptr %retval1, align 4, !dbg !5359
  %71 = load i64, ptr @PL_tmps_ix, align 8, !dbg !5360
  %72 = load i64, ptr @PL_tmps_floor, align 8, !dbg !5360
  %cmp194 = icmp sgt i64 %71, %72, !dbg !5360
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !5362

if.then196:                                       ; preds = %if.then191
  call void @Perl_free_tmps() #17, !dbg !5360
  br label %if.end197, !dbg !5360

if.end197:                                        ; preds = %if.then196, %if.then191
  call void @Perl_pop_scope() #17, !dbg !5363
  br label %if.end198, !dbg !5364

if.end198:                                        ; preds = %if.end197, %if.end188
  store ptr %3, ptr @PL_op, align 8, !dbg !5365
  %retval1.0.retval1.0.retval1.0. = load volatile i32, ptr %retval1, align 4, !dbg !5366
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !5367
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %retval1), !dbg !5367
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %method_op) #17, !dbg !5367
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %myop) #17, !dbg !5367
  ret i32 %retval1.0.retval1.0.retval1.0., !dbg !5368
}

; Function Attrs: nounwind uwtable
define dso_local i32 @Perl_call_method(ptr noundef %methname, i32 noundef %flags) local_unnamed_addr #0 !dbg !5369 {
entry:
  call void @llvm.dbg.value(metadata ptr %methname, metadata !5371, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5372, metadata !DIExpression()), !dbg !5375
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %methname) #21, !dbg !5376
  call void @llvm.dbg.value(metadata i64 %call, metadata !5373, metadata !DIExpression()), !dbg !5375
  %and = and i32 %flags, 4096, !dbg !5377
  %tobool.not = icmp eq i32 %and, 0, !dbg !5377
  br i1 %tobool.not, label %cond.false, label %cond.true, !dbg !5378

cond.true:                                        ; preds = %entry
  %conv = trunc i64 %call to i32, !dbg !5379
  %call1 = tail call ptr @Perl_newSVpvn_share(ptr noundef %methname, i32 noundef %conv, i32 noundef 0) #17, !dbg !5379
  %call2 = tail call ptr @Perl_sv_2mortal(ptr noundef %call1) #17, !dbg !5379
  br label %cond.end, !dbg !5378

cond.false:                                       ; preds = %entry
  %call3 = tail call ptr @Perl_newSVpvn_flags(ptr noundef %methname, i64 noundef %call, i32 noundef 524288) #17, !dbg !5380
  br label %cond.end, !dbg !5378

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !5378
  call void @llvm.dbg.value(metadata ptr %cond, metadata !5374, metadata !DIExpression()), !dbg !5375
  %or = or i32 %flags, 128, !dbg !5381
  %call4 = tail call i32 @Perl_call_sv(ptr noundef %cond, i32 noundef %or), !dbg !5381
  ret i32 %call4, !dbg !5382
}

declare !dbg !5383 ptr @Perl_newSVpvn_share(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !5386 ptr @Perl_newSVpvn_flags(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !5389 void @Perl_save_strlen(ptr noundef) local_unnamed_addr #3

declare !dbg !5392 void @Perl_save_pushptr(ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !5396 ptr @Perl_create_eval_scope(i32 noundef) local_unnamed_addr #3

declare !dbg !5399 i32 @Perl_mg_free(ptr noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @S_my_exit_jump() unnamed_addr #13 !dbg !5402 {
entry:
  %0 = load ptr, ptr @PL_e_script, align 8, !dbg !5409
  %tobool.not = icmp eq ptr %0, null, !dbg !5409
  br i1 %tobool.not, label %do.body, label %if.then.i, !dbg !5411

if.then.i:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata ptr %0, metadata !1967, metadata !DIExpression()) #17, !dbg !5412
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 1, !dbg !5415
  %1 = load i32, ptr %sv_refcnt.i, align 8, !dbg !5415
  call void @llvm.dbg.value(metadata i32 %1, metadata !1973, metadata !DIExpression()) #17, !dbg !5416
  %cmp1.i = icmp ugt i32 %1, 1, !dbg !5417
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !5418

if.then4.i:                                       ; preds = %if.then.i
  %sub.i = add i32 %1, -1, !dbg !5419
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !5420
  br label %S_SvREFCNT_dec.exit, !dbg !5421

if.else.i:                                        ; preds = %if.then.i
  tail call void @Perl_sv_free2(ptr noundef nonnull %0, i32 noundef %1) #17, !dbg !5422
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.then4.i, %if.else.i
  store ptr null, ptr @PL_e_script, align 8, !dbg !5423
  br label %do.body, !dbg !5424

do.body:                                          ; preds = %entry, %S_SvREFCNT_dec.exit
  %2 = load ptr, ptr @PL_curstack, align 8, !dbg !5425
  %3 = load ptr, ptr @PL_mainstack, align 8, !dbg !5425
  %cmp.not34 = icmp eq ptr %2, %3, !dbg !5425
  br i1 %cmp.not34, label %do.end16, label %while.body, !dbg !5425

while.body:                                       ; preds = %do.body, %do.body5
  tail call void @Perl_dounwind(i32 noundef -1) #17, !dbg !5426
  %4 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5427
  call void @llvm.dbg.value(metadata ptr %4, metadata !5404, metadata !DIExpression()), !dbg !5428
  %5 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !5427
  %si_prev = getelementptr inbounds %struct.stackinfo, ptr %5, i64 0, i32 2, !dbg !5427
  %6 = load ptr, ptr %si_prev, align 8, !dbg !5427
  call void @llvm.dbg.value(metadata ptr %6, metadata !5408, metadata !DIExpression()), !dbg !5428
  %tobool2.not = icmp eq ptr %6, null, !dbg !5429
  br i1 %tobool2.not, label %if.then3, label %do.body5, !dbg !5427

if.then3:                                         ; preds = %while.body
  tail call void @Perl_croak_popstack() #17, !dbg !5431
  br label %do.body5, !dbg !5431

do.body5:                                         ; preds = %while.body, %if.then3
  %7 = load ptr, ptr @PL_stack_base, align 8, !dbg !5433
  %sub.ptr.lhs.cast = ptrtoint ptr %4 to i64, !dbg !5433
  %sub.ptr.rhs.cast = ptrtoint ptr %7 to i64, !dbg !5433
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5433
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3, !dbg !5433
  %8 = load ptr, ptr @PL_curstack, align 8, !dbg !5433
  %9 = load ptr, ptr %8, align 8, !dbg !5433
  %xav_fill = getelementptr inbounds %struct.xpvav, ptr %9, i64 0, i32 2, !dbg !5433
  store i64 %sub.ptr.div, ptr %xav_fill, align 8, !dbg !5433
  %10 = load ptr, ptr %6, align 8, !dbg !5433
  %sv_u = getelementptr inbounds %struct.av, ptr %10, i64 0, i32 3, !dbg !5433
  %11 = load ptr, ptr %sv_u, align 8, !dbg !5433
  store ptr %11, ptr @PL_stack_base, align 8, !dbg !5433
  %12 = load ptr, ptr %6, align 8, !dbg !5433
  %13 = load ptr, ptr %12, align 8, !dbg !5433
  %xav_max = getelementptr inbounds %struct.xpvav, ptr %13, i64 0, i32 3, !dbg !5433
  %14 = load i64, ptr %xav_max, align 8, !dbg !5433
  %add.ptr = getelementptr inbounds ptr, ptr %11, i64 %14, !dbg !5433
  store ptr %add.ptr, ptr @PL_stack_max, align 8, !dbg !5433
  %15 = load ptr, ptr %6, align 8, !dbg !5433
  %16 = load ptr, ptr %15, align 8, !dbg !5433
  %xav_fill10 = getelementptr inbounds %struct.xpvav, ptr %16, i64 0, i32 2, !dbg !5433
  %17 = load i64, ptr %xav_fill10, align 8, !dbg !5433
  %add.ptr11 = getelementptr inbounds ptr, ptr %11, i64 %17, !dbg !5433
  store ptr %add.ptr11, ptr @PL_stack_sp, align 8, !dbg !5433
  call void @llvm.dbg.value(metadata ptr %add.ptr11, metadata !5404, metadata !DIExpression()), !dbg !5428
  %18 = load ptr, ptr %6, align 8, !dbg !5433
  store ptr %18, ptr @PL_curstack, align 8, !dbg !5433
  store ptr %6, ptr @PL_curstackinfo, align 8, !dbg !5427
  %19 = load ptr, ptr @PL_mainstack, align 8, !dbg !5425
  %cmp.not = icmp eq ptr %18, %19, !dbg !5425
  br i1 %cmp.not, label %do.end16, label %while.body, !dbg !5425, !llvm.loop !5435

do.end16:                                         ; preds = %do.body5, %do.body
  tail call void @Perl_dounwind(i32 noundef -1) #17, !dbg !5436
  %20 = load i32, ptr @PL_savestack_ix, align 4, !dbg !5437
  %cmp18 = icmp sgt i32 %20, 0, !dbg !5437
  br i1 %cmp18, label %if.then19, label %do.body23, !dbg !5440

if.then19:                                        ; preds = %do.end16
  tail call void @Perl_leave_scope(i32 noundef 0) #17, !dbg !5437
  br label %do.body23, !dbg !5437

do.body23:                                        ; preds = %if.then19, %do.end16
  %21 = load ptr, ptr @PL_top_env, align 8, !dbg !5441
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %21, i64 0, i32 1, !dbg !5441
  %22 = load ptr, ptr %je_prev, align 8, !dbg !5441
  %tobool24.not = icmp eq ptr %22, null, !dbg !5441
  br i1 %tobool24.not, label %if.end26, label %if.then25, !dbg !5444

if.then25:                                        ; preds = %do.body23
  tail call void @siglongjmp(ptr noundef nonnull %21, i32 noundef 2) #20, !dbg !5441
  unreachable, !dbg !5441

if.end26:                                         ; preds = %do.body23
  %23 = load i32, ptr @PL_statusvalue, align 4, !dbg !5445
  tail call void @exit(i32 noundef %23) #20, !dbg !5445
  unreachable, !dbg !5445
}

declare !dbg !5447 void @Perl_delete_eval_scope() local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local i32 @Perl_eval_sv(ptr noundef %sv, i32 noundef %flags) local_unnamed_addr #0 !dbg !5448 {
entry:
  %myop = alloca %struct.unop, align 8
  %oldmark = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %cur_env = alloca %struct.jmpenv, align 8
  call void @llvm.dbg.value(metadata ptr %sv, metadata !5452, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5453, metadata !DIExpression()), !dbg !5492
  %0 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5493
  call void @llvm.dbg.value(metadata ptr %0, metadata !5454, metadata !DIExpression()), !dbg !5492
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %myop) #17, !dbg !5494
  call void @llvm.dbg.declare(metadata ptr %myop, metadata !5455, metadata !DIExpression()), !dbg !5495
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %oldmark), !dbg !5496
  call void @llvm.dbg.declare(metadata ptr %oldmark, metadata !5474, metadata !DIExpression()), !dbg !5497
  %1 = load ptr, ptr @PL_stack_base, align 8, !dbg !5498
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64, !dbg !5499
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64, !dbg !5499
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5499
  %2 = lshr exact i64 %sub.ptr.sub, 3, !dbg !5499
  %conv = trunc i64 %2 to i32, !dbg !5500
  store volatile i32 %conv, ptr %oldmark, align 4, !dbg !5497
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %retval1), !dbg !5501
  call void @llvm.dbg.declare(metadata ptr %retval1, metadata !5475, metadata !DIExpression()), !dbg !5502
  store volatile i32 0, ptr %retval1, align 4, !dbg !5502
  %3 = load ptr, ptr @PL_op, align 8, !dbg !5503
  call void @llvm.dbg.value(metadata ptr %3, metadata !5477, metadata !DIExpression()), !dbg !5492
  call void @llvm.lifetime.start.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !5504
  call void @llvm.dbg.declare(metadata ptr %cur_env, metadata !5478, metadata !DIExpression()), !dbg !5504
  %and = and i32 %flags, 4, !dbg !5505
  %tobool.not = icmp eq i32 %and, 0, !dbg !5505
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !5507

if.then:                                          ; preds = %entry
  call void @Perl_push_scope() #17, !dbg !5508
  call void @Perl_save_strlen(ptr noundef nonnull @PL_tmps_floor) #17, !dbg !5510
  %4 = load i64, ptr @PL_tmps_ix, align 8, !dbg !5510
  store i64 %4, ptr @PL_tmps_floor, align 8, !dbg !5510
  %.pre = load ptr, ptr @PL_op, align 8, !dbg !5511
  br label %if.end, !dbg !5512

if.end:                                           ; preds = %if.then, %entry
  %5 = phi ptr [ %.pre, %if.then ], [ %3, %entry ], !dbg !5511
  call void @Perl_save_pushptr(ptr noundef %5, i32 noundef 18) #17, !dbg !5511
  store ptr %myop, ptr @PL_op, align 8, !dbg !5513
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %myop, i8 0, i64 48, i1 false), !dbg !5514
  %6 = load ptr, ptr @PL_stack_max, align 8, !dbg !5515
  %7 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5515
  %sub.ptr.lhs.cast2 = ptrtoint ptr %6 to i64, !dbg !5515
  %sub.ptr.rhs.cast3 = ptrtoint ptr %7 to i64, !dbg !5515
  %sub.ptr.sub4 = sub i64 %sub.ptr.lhs.cast2, %sub.ptr.rhs.cast3, !dbg !5515
  %cmp = icmp slt i64 %sub.ptr.sub4, 8, !dbg !5515
  br i1 %cmp, label %if.then7, label %do.end, !dbg !5518

if.then7:                                         ; preds = %if.end
  %call = call ptr @Perl_stack_grow(ptr noundef %0, ptr noundef %7, i64 noundef 1) #17, !dbg !5519
  call void @llvm.dbg.value(metadata ptr %call, metadata !5454, metadata !DIExpression()), !dbg !5492
  %.pre150 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5521
  br label %do.end, !dbg !5519

do.end:                                           ; preds = %if.end, %if.then7
  %8 = phi ptr [ %7, %if.end ], [ %.pre150, %if.then7 ], !dbg !5521
  %incdec.ptr = getelementptr inbounds ptr, ptr %8, i64 1, !dbg !5521
  store ptr %incdec.ptr, ptr @PL_stack_sp, align 8, !dbg !5521
  store ptr %sv, ptr %incdec.ptr, align 8, !dbg !5522
  %and9 = and i32 %flags, 16, !dbg !5523
  %tobool10.not = icmp eq i32 %and9, 0, !dbg !5523
  br i1 %tobool10.not, label %if.end12, label %do.end.if.end12_crit_edge, !dbg !5525

do.end.if.end12_crit_edge:                        ; preds = %do.end
  %op_flags14.phi.trans.insert = getelementptr inbounds %struct.unop, ptr %myop, i64 0, i32 5
  %.pre151 = load i8, ptr %op_flags14.phi.trans.insert, align 2, !dbg !5526
  br label %if.end12, !dbg !5525

if.end12:                                         ; preds = %do.end, %do.end.if.end12_crit_edge
  %9 = phi i8 [ %.pre151, %do.end.if.end12_crit_edge ], [ 64, %do.end ], !dbg !5526
  %op_type = getelementptr inbounds %struct.unop, ptr %myop, i64 0, i32 4, !dbg !5527
  %bf.load = load i16, ptr %op_type, align 8, !dbg !5528
  %bf.clear = and i16 %bf.load, -512, !dbg !5528
  %bf.set = or i16 %bf.clear, 342, !dbg !5528
  store i16 %bf.set, ptr %op_type, align 8, !dbg !5528
  %and13 = and i32 %flags, 3, !dbg !5529
  %op_flags14 = getelementptr inbounds %struct.unop, ptr %myop, i64 0, i32 5, !dbg !5530
  %10 = trunc i32 %and13 to i8, !dbg !5526
  %conv16 = or i8 %9, %10, !dbg !5526
  %and17 = and i32 %flags, 32, !dbg !5531
  %tobool18.not = icmp eq i32 %and17, 0, !dbg !5531
  %11 = or i8 %conv16, -128
  %spec.select = select i1 %tobool18.not, i8 %conv16, i8 %11, !dbg !5533
  store i8 %spec.select, ptr %op_flags14, align 2, !dbg !5492
  %and25 = and i32 %flags, 2048, !dbg !5534
  %tobool26.not = icmp eq i32 %and25, 0, !dbg !5534
  br i1 %tobool26.not, label %if.end28, label %if.then27, !dbg !5536

if.then27:                                        ; preds = %if.end12
  %op_private = getelementptr inbounds %struct.unop, ptr %myop, i64 0, i32 6, !dbg !5537
  store i8 48, ptr %op_private, align 1, !dbg !5538
  br label %if.end28, !dbg !5539

if.end28:                                         ; preds = %if.then27, %if.end12
  %12 = load i8, ptr @PL_tainting, align 1, !dbg !5540, !range !1483
  %tobool29.not = icmp eq i8 %12, 0, !dbg !5540
  br i1 %tobool29.not, label %do.body35, label %if.then33, !dbg !5542

if.then33:                                        ; preds = %if.end28
  call void @Perl_taint_proper(ptr noundef null, ptr noundef nonnull @.str.14) #17, !dbg !5543
  br label %do.body35, !dbg !5543

do.body35:                                        ; preds = %if.then33, %if.end28
  %13 = load ptr, ptr @PL_top_env, align 8, !dbg !5545
  %je_prev = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 1, !dbg !5545
  store ptr %13, ptr %je_prev, align 8, !dbg !5545
  %call36 = call i32 @__sigsetjmp(ptr noundef nonnull %cur_env, i32 noundef 0) #19, !dbg !5545
  %je_ret = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 2, !dbg !5545
  store i32 %call36, ptr %je_ret, align 8, !dbg !5545
  store ptr %cur_env, ptr @PL_top_env, align 8, !dbg !5545
  %je_mustcatch = getelementptr inbounds %struct.jmpenv, ptr %cur_env, i64 0, i32 3, !dbg !5545
  store i8 0, ptr %je_mustcatch, align 4, !dbg !5545
  call void @llvm.dbg.value(metadata i32 %call36, metadata !5476, metadata !DIExpression()), !dbg !5492
  switch i32 %call36, label %do.body109 [
    i32 0, label %do.body35.redo_body_crit_edge
    i32 1, label %sw.bb81
    i32 2, label %sw.bb82
    i32 3, label %sw.bb96
  ], !dbg !5547

do.body35.redo_body_crit_edge:                    ; preds = %do.body35
  %.pre153 = load ptr, ptr @PL_op, align 8, !dbg !5548
  br label %redo_body, !dbg !5547

redo_body:                                        ; preds = %do.body35.redo_body_crit_edge, %if.then98
  %14 = phi ptr [ %.pre153, %do.body35.redo_body_crit_edge ], [ %34, %if.then98 ], !dbg !5548
  call void @llvm.dbg.label(metadata !5488), !dbg !5550
  %cmp40 = icmp eq ptr %14, %myop, !dbg !5551
  br i1 %cmp40, label %if.then42, label %if.end47, !dbg !5552

if.then42:                                        ; preds = %redo_body
  %15 = load ptr, ptr getelementptr inbounds ([0 x ptr], ptr @PL_ppaddr, i64 0, i64 342), align 8, !dbg !5553
  %call43 = call ptr %15() #17, !dbg !5553
  store ptr %call43, ptr @PL_op, align 8, !dbg !5555
  %tobool44.not = icmp eq ptr %call43, null, !dbg !5556
  br i1 %tobool44.not, label %fail, label %if.end47, !dbg !5558

if.end47:                                         ; preds = %if.then42, %redo_body
  %16 = load ptr, ptr @PL_runops, align 8, !dbg !5559
  %call48 = call i32 %16() #17, !dbg !5559
  %17 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5560
  %18 = load ptr, ptr @PL_stack_base, align 8, !dbg !5561
  %oldmark.0.oldmark.0.oldmark.0. = load volatile i32, ptr %oldmark, align 4, !dbg !5562
  %idx.ext = sext i32 %oldmark.0.oldmark.0.oldmark.0. to i64, !dbg !5563
  %add.ptr = getelementptr inbounds ptr, ptr %18, i64 %idx.ext, !dbg !5563
  %sub.ptr.lhs.cast49 = ptrtoint ptr %17 to i64, !dbg !5564
  %sub.ptr.rhs.cast50 = ptrtoint ptr %add.ptr to i64, !dbg !5564
  %sub.ptr.sub51 = sub i64 %sub.ptr.lhs.cast49, %sub.ptr.rhs.cast50, !dbg !5564
  %19 = lshr exact i64 %sub.ptr.sub51, 3, !dbg !5564
  %conv53 = trunc i64 %19 to i32, !dbg !5560
  store volatile i32 %conv53, ptr %retval1, align 4, !dbg !5565
  br i1 %tobool18.not, label %do.body57, label %do.body109, !dbg !5566

do.body57:                                        ; preds = %if.end47
  %20 = load ptr, ptr @PL_errgv, align 8, !dbg !5567
  %sv_u = getelementptr inbounds %struct.gv, ptr %20, i64 0, i32 3, !dbg !5567
  %21 = load ptr, ptr %sv_u, align 8, !dbg !5567
  call void @llvm.dbg.value(metadata ptr %21, metadata !5479, metadata !DIExpression()), !dbg !5568
  %22 = load ptr, ptr %21, align 8, !dbg !5569
  %tobool59.not = icmp eq ptr %22, null, !dbg !5569
  br i1 %tobool59.not, label %clresv_newemptypv, label %if.else, !dbg !5567

if.else:                                          ; preds = %do.body57
  %sv_flags = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2, !dbg !5570
  %23 = load i32, ptr %sv_flags, align 4, !dbg !5570
  %and61 = and i32 %23, 134283264, !dbg !5570
  %tobool62.not = icmp eq i32 %and61, 0, !dbg !5570
  br i1 %tobool62.not, label %if.else65, label %if.then63, !dbg !5569

if.then63:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata ptr %22, metadata !3783, metadata !DIExpression()) #17, !dbg !5571
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 1, !dbg !5573
  %24 = load i32, ptr %sv_refcnt.i, align 8, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %24, metadata !3786, metadata !DIExpression()) #17, !dbg !5571
  %cmp.i = icmp ugt i32 %24, 1, !dbg !5574
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !5575

if.then.i:                                        ; preds = %if.then63
  %sub.i = add i32 %24, -1, !dbg !5576
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !5577
  br label %clresv_newemptypv, !dbg !5578

if.else.i:                                        ; preds = %if.then63
  call void @Perl_sv_free2(ptr noundef nonnull %22, i32 noundef %24) #17, !dbg !5579
  br label %clresv_newemptypv

clresv_newemptypv:                                ; preds = %if.else.i, %if.then.i, %do.body57
  call void @llvm.dbg.label(metadata !5489), !dbg !5580
  %call64 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !5580
  store ptr %call64, ptr %21, align 8, !dbg !5580
  br label %do.body109, !dbg !5580

if.else65:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata ptr %22, metadata !5484, metadata !DIExpression()), !dbg !5581
  call void @Perl_sv_setpvn(ptr noundef nonnull %22, ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !5582
  %25 = load i32, ptr %sv_flags, align 4, !dbg !5582
  %and67 = and i32 %25, 1610547455, !dbg !5582
  %or69 = or i32 %and67, 17408, !dbg !5582
  store i32 %or69, ptr %sv_flags, align 4, !dbg !5582
  %and71 = and i32 %25, 14680064, !dbg !5583
  %tobool72.not = icmp eq i32 %and71, 0, !dbg !5583
  br i1 %tobool72.not, label %do.body109, label %if.then73, !dbg !5582

if.then73:                                        ; preds = %if.else65
  %call74 = call i32 @Perl_mg_free(ptr noundef nonnull %22) #17, !dbg !5585
  br label %do.body109, !dbg !5585

sw.bb81:                                          ; preds = %do.body35
  store i32 1, ptr @PL_statusvalue, align 4, !dbg !5587
  store i32 1, ptr @PL_statusvalue_posix, align 4, !dbg !5587
  br label %sw.bb82, !dbg !5587

sw.bb82:                                          ; preds = %do.body35, %sw.bb81
  %26 = load ptr, ptr @PL_curstash, align 8, !dbg !5588
  %27 = load ptr, ptr @PL_defstash, align 8, !dbg !5588
  %cmp83.not = icmp eq ptr %26, %27, !dbg !5588
  br i1 %cmp83.not, label %if.end87, label %if.then85, !dbg !5590

if.then85:                                        ; preds = %sw.bb82
  call void @llvm.dbg.value(metadata ptr %26, metadata !1967, metadata !DIExpression()) #17, !dbg !5591
  %cmp.not.i = icmp eq ptr %26, null, !dbg !5594
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i144, !dbg !5595

if.then.i144:                                     ; preds = %if.then85
  %sv_refcnt.i143 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 1, !dbg !5596
  %28 = load i32, ptr %sv_refcnt.i143, align 8, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %28, metadata !1973, metadata !DIExpression()) #17, !dbg !5597
  %cmp1.i = icmp ugt i32 %28, 1, !dbg !5598
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i146, !dbg !5599

if.then4.i:                                       ; preds = %if.then.i144
  %sub.i145 = add i32 %28, -1, !dbg !5600
  store i32 %sub.i145, ptr %sv_refcnt.i143, align 8, !dbg !5601
  br label %S_SvREFCNT_dec.exit, !dbg !5602

if.else.i146:                                     ; preds = %if.then.i144
  call void @Perl_sv_free2(ptr noundef nonnull %26, i32 noundef %28) #17, !dbg !5603
  %.pr.pre = load ptr, ptr @PL_defstash, align 8, !dbg !5604
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %if.then4.i, %if.else.i146, %if.then85
  %29 = phi ptr [ %27, %if.then85 ], [ %.pr.pre, %if.else.i146 ], [ %27, %if.then4.i ], !dbg !5604
  call void @llvm.dbg.value(metadata ptr %29, metadata !3392, metadata !DIExpression()), !dbg !5605
  %cmp.not.i147 = icmp eq ptr %29, null, !dbg !5607
  br i1 %cmp.not.i147, label %S_SvREFCNT_inc.exit, label %if.then.i149, !dbg !5608

if.then.i149:                                     ; preds = %S_SvREFCNT_dec.exit
  %sv_refcnt.i148 = getelementptr inbounds %struct.sv, ptr %29, i64 0, i32 1, !dbg !5609
  %30 = load i32, ptr %sv_refcnt.i148, align 8, !dbg !5610
  %inc.i = add i32 %30, 1, !dbg !5610
  store i32 %inc.i, ptr %sv_refcnt.i148, align 8, !dbg !5610
  br label %S_SvREFCNT_inc.exit, !dbg !5609

S_SvREFCNT_inc.exit:                              ; preds = %S_SvREFCNT_dec.exit, %if.then.i149
  store ptr %29, ptr @PL_curstash, align 8, !dbg !5604
  br label %if.end87, !dbg !5604

if.end87:                                         ; preds = %S_SvREFCNT_inc.exit, %sw.bb82
  %31 = load i64, ptr @PL_tmps_ix, align 8, !dbg !5611
  %32 = load i64, ptr @PL_tmps_floor, align 8, !dbg !5611
  %cmp88 = icmp sgt i64 %31, %32, !dbg !5611
  br i1 %cmp88, label %if.then90, label %do.body92, !dbg !5613

if.then90:                                        ; preds = %if.end87
  call void @Perl_free_tmps() #17, !dbg !5611
  br label %do.body92, !dbg !5611

do.body92:                                        ; preds = %if.end87, %if.then90
  %33 = load ptr, ptr %je_prev, align 8, !dbg !5614
  store ptr %33, ptr @PL_top_env, align 8, !dbg !5614
  call fastcc void @S_my_exit_jump(), !dbg !5616
  unreachable, !dbg !5617

sw.bb96:                                          ; preds = %do.body35
  %34 = load ptr, ptr @PL_restartop, align 8, !dbg !5618
  %tobool97.not = icmp eq ptr %34, null, !dbg !5618
  br i1 %tobool97.not, label %fail, label %if.then98, !dbg !5620

if.then98:                                        ; preds = %sw.bb96
  store ptr null, ptr @PL_restartjmpenv, align 8, !dbg !5621
  store ptr %34, ptr @PL_op, align 8, !dbg !5623
  store ptr null, ptr @PL_restartop, align 8, !dbg !5624
  br label %redo_body, !dbg !5625

fail:                                             ; preds = %sw.bb96, %if.then42
  call void @llvm.dbg.label(metadata !5491), !dbg !5626
  %35 = load ptr, ptr @PL_stack_base, align 8, !dbg !5627
  %oldmark.0.oldmark.0.oldmark.0.131 = load volatile i32, ptr %oldmark, align 4, !dbg !5628
  %idx.ext100 = sext i32 %oldmark.0.oldmark.0.oldmark.0.131 to i64, !dbg !5629
  %add.ptr101 = getelementptr inbounds ptr, ptr %35, i64 %idx.ext100, !dbg !5629
  store ptr %add.ptr101, ptr @PL_stack_sp, align 8, !dbg !5630
  %cmp103 = icmp eq i32 %and13, 3, !dbg !5631
  br i1 %cmp103, label %if.then105, label %if.else106, !dbg !5633

if.then105:                                       ; preds = %fail
  store volatile i32 0, ptr %retval1, align 4, !dbg !5634
  br label %do.body109, !dbg !5635

if.else106:                                       ; preds = %fail
  store volatile i32 1, ptr %retval1, align 4, !dbg !5636
  %incdec.ptr107 = getelementptr inbounds ptr, ptr %add.ptr101, i64 1, !dbg !5638
  store ptr %incdec.ptr107, ptr @PL_stack_sp, align 8, !dbg !5638
  store ptr @PL_sv_undef, ptr %incdec.ptr107, align 8, !dbg !5639
  br label %do.body109

do.body109:                                       ; preds = %clresv_newemptypv, %if.then73, %if.else65, %do.body35, %if.end47, %if.else106, %if.then105
  %36 = load ptr, ptr %je_prev, align 8, !dbg !5640
  store ptr %36, ptr @PL_top_env, align 8, !dbg !5640
  br i1 %tobool.not, label %if.end122, label %if.then115, !dbg !5642

if.then115:                                       ; preds = %do.body109
  %37 = load ptr, ptr @PL_stack_base, align 8, !dbg !5643
  %oldmark.0.oldmark.0.oldmark.0.132 = load volatile i32, ptr %oldmark, align 4, !dbg !5646
  %idx.ext116 = sext i32 %oldmark.0.oldmark.0.oldmark.0.132 to i64, !dbg !5647
  %add.ptr117 = getelementptr inbounds ptr, ptr %37, i64 %idx.ext116, !dbg !5647
  store ptr %add.ptr117, ptr @PL_stack_sp, align 8, !dbg !5648
  store volatile i32 0, ptr %retval1, align 4, !dbg !5649
  %38 = load i64, ptr @PL_tmps_ix, align 8, !dbg !5650
  %39 = load i64, ptr @PL_tmps_floor, align 8, !dbg !5650
  %cmp118 = icmp sgt i64 %38, %39, !dbg !5650
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !5652

if.then120:                                       ; preds = %if.then115
  call void @Perl_free_tmps() #17, !dbg !5650
  br label %if.end121, !dbg !5650

if.end121:                                        ; preds = %if.then120, %if.then115
  call void @Perl_pop_scope() #17, !dbg !5653
  br label %if.end122, !dbg !5654

if.end122:                                        ; preds = %if.end121, %do.body109
  store ptr %3, ptr @PL_op, align 8, !dbg !5655
  %retval1.0.retval1.0.retval1.0. = load volatile i32, ptr %retval1, align 4, !dbg !5656
  call void @llvm.lifetime.end.p0(i64 216, ptr nonnull %cur_env) #17, !dbg !5657
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %retval1), !dbg !5657
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %oldmark), !dbg !5657
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %myop) #17, !dbg !5657
  ret i32 %retval1.0.retval1.0.retval1.0., !dbg !5658
}

declare !dbg !5659 void @Perl_taint_proper(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_eval_pv(ptr noundef %p, i32 noundef %croak_on_error) local_unnamed_addr #0 !dbg !5662 {
entry:
  call void @llvm.dbg.value(metadata ptr %p, metadata !5664, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 %croak_on_error, metadata !5665, metadata !DIExpression()), !dbg !5672
  %call = tail call ptr @Perl_newSVpv(ptr noundef %p, i64 noundef 0) #17, !dbg !5673
  call void @llvm.dbg.value(metadata ptr %call, metadata !5666, metadata !DIExpression()), !dbg !5672
  %call1 = tail call i32 @Perl_eval_sv(ptr noundef %call, i32 noundef 2), !dbg !5674
  call void @llvm.dbg.value(metadata ptr %call, metadata !1967, metadata !DIExpression()) #17, !dbg !5675
  %cmp.not.i = icmp eq ptr %call, null, !dbg !5677
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i, !dbg !5678

if.then.i:                                        ; preds = %entry
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %call, i64 0, i32 1, !dbg !5679
  %0 = load i32, ptr %sv_refcnt.i, align 8, !dbg !5679
  call void @llvm.dbg.value(metadata i32 %0, metadata !1973, metadata !DIExpression()) #17, !dbg !5680
  %cmp1.i = icmp ugt i32 %0, 1, !dbg !5681
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !5682

if.then4.i:                                       ; preds = %if.then.i
  %sub.i = add i32 %0, -1, !dbg !5683
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !5684
  br label %S_SvREFCNT_dec.exit, !dbg !5685

if.else.i:                                        ; preds = %if.then.i
  tail call void @Perl_sv_free2(ptr noundef nonnull %call, i32 noundef %0) #17, !dbg !5686
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %entry, %if.then4.i, %if.else.i
  %1 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5687
  call void @llvm.dbg.value(metadata ptr %1, metadata !5667, metadata !DIExpression()), !dbg !5688
  %incdec.ptr = getelementptr inbounds ptr, ptr %1, i64 -1, !dbg !5689
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !5667, metadata !DIExpression()), !dbg !5688
  %2 = load ptr, ptr %1, align 8, !dbg !5689
  call void @llvm.dbg.value(metadata ptr %2, metadata !5666, metadata !DIExpression()), !dbg !5672
  store ptr %incdec.ptr, ptr @PL_stack_sp, align 8, !dbg !5690
  %tobool.not = icmp eq i32 %croak_on_error, 0, !dbg !5691
  br i1 %tobool.not, label %if.end81, label %if.then, !dbg !5692

if.then:                                          ; preds = %S_SvREFCNT_dec.exit
  %3 = load ptr, ptr @PL_errgv, align 8, !dbg !5693
  %sv_u = getelementptr inbounds %struct.gv, ptr %3, i64 0, i32 3, !dbg !5693
  %4 = load ptr, ptr %sv_u, align 8, !dbg !5693
  %5 = load ptr, ptr %4, align 8, !dbg !5693
  %tobool2.not = icmp eq ptr %5, null, !dbg !5693
  br i1 %tobool2.not, label %cond.false, label %cond.end, !dbg !5693

cond.false:                                       ; preds = %if.then
  %call6 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %3, i32 noundef 0) #17, !dbg !5693
  %sv_u7 = getelementptr inbounds %struct.gv, ptr %call6, i64 0, i32 3, !dbg !5693
  %6 = load ptr, ptr %sv_u7, align 8, !dbg !5693
  %.pre = load ptr, ptr %6, align 8, !dbg !5693
  br label %cond.end, !dbg !5693

cond.end:                                         ; preds = %if.then, %cond.false
  %7 = phi ptr [ %.pre, %cond.false ], [ %5, %if.then ], !dbg !5693
  call void @llvm.dbg.value(metadata ptr %7, metadata !5669, metadata !DIExpression()), !dbg !5694
  %sv_flags = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2, !dbg !5695
  %8 = load i32, ptr %sv_flags, align 4, !dbg !5695
  %and = and i32 %8, 2097152, !dbg !5695
  %tobool10.not = icmp eq i32 %and, 0, !dbg !5695
  br i1 %tobool10.not, label %cond.false15, label %cond.true13, !dbg !5697

cond.true13:                                      ; preds = %cond.end
  %call14 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %7, i32 noundef 2) #17, !dbg !5695
  br i1 %call14, label %if.then69, label %if.end81, !dbg !5695

cond.false15:                                     ; preds = %cond.end
  %and17 = and i32 %8, 65280, !dbg !5695
  %tobool18.not = icmp ne i32 %and17, 0, !dbg !5695
  %and20 = and i32 %8, 255, !dbg !5695
  %cmp = icmp eq i32 %and20, 8, !dbg !5695
  %or.cond = or i1 %tobool18.not, %cmp, !dbg !5695
  %and23 = and i32 %8, 16826623, !dbg !5695
  %cmp24 = icmp eq i32 %and23, 16777226, !dbg !5695
  %or.cond105 = select i1 %or.cond, i1 true, i1 %cmp24, !dbg !5695
  br i1 %or.cond105, label %cond.false26, label %if.end81, !dbg !5695

cond.false26:                                     ; preds = %cond.false15
  %and28 = and i32 %8, 1024, !dbg !5695
  %tobool29.not = icmp eq i32 %and28, 0, !dbg !5695
  br i1 %tobool29.not, label %cond.false42, label %cond.true30, !dbg !5697

cond.true30:                                      ; preds = %cond.false26
  %9 = load ptr, ptr %7, align 8, !dbg !5695
  %tobool31.not = icmp eq ptr %9, null, !dbg !5695
  br i1 %tobool31.not, label %if.end81, label %land.lhs.true, !dbg !5695

land.lhs.true:                                    ; preds = %cond.true30
  %xpv_cur = getelementptr inbounds %struct.xpv, ptr %9, i64 0, i32 2, !dbg !5695
  %10 = load i64, ptr %xpv_cur, align 8, !dbg !5695
  %cmp33 = icmp ugt i64 %10, 1, !dbg !5695
  br i1 %cmp33, label %if.then69, label %lor.lhs.false34, !dbg !5695

lor.lhs.false34:                                  ; preds = %land.lhs.true
  %tobool37.not = icmp eq i64 %10, 0, !dbg !5695
  br i1 %tobool37.not, label %if.end81, label %land.lhs.true38, !dbg !5695

land.lhs.true38:                                  ; preds = %lor.lhs.false34
  %sv_u39 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 3, !dbg !5695
  %11 = load ptr, ptr %sv_u39, align 8, !dbg !5695
  %12 = load i8, ptr %11, align 1, !dbg !5695
  %cmp40.not = icmp eq i8 %12, 48, !dbg !5695
  br i1 %cmp40.not, label %if.end81, label %if.then69, !dbg !5695

cond.false42:                                     ; preds = %cond.false26
  %and44 = and i32 %8, 768, !dbg !5695
  %tobool45.not = icmp eq i32 %and44, 0, !dbg !5695
  br i1 %tobool45.not, label %cond.false66, label %cond.true46, !dbg !5697

cond.true46:                                      ; preds = %cond.false42
  %and48 = and i32 %8, 256, !dbg !5695
  %tobool49.not = icmp eq i32 %and48, 0, !dbg !5695
  br i1 %tobool49.not, label %lor.lhs.false54, label %land.lhs.true50, !dbg !5695

land.lhs.true50:                                  ; preds = %cond.true46
  %13 = load ptr, ptr %7, align 8, !dbg !5695
  %xiv_u = getelementptr inbounds %struct.xpviv, ptr %13, i64 0, i32 4, !dbg !5695
  %14 = load i64, ptr %xiv_u, align 8, !dbg !5695
  %cmp52.not = icmp eq i64 %14, 0, !dbg !5695
  br i1 %cmp52.not, label %lor.lhs.false54, label %if.then69, !dbg !5695

lor.lhs.false54:                                  ; preds = %land.lhs.true50, %cond.true46
  %and56 = and i32 %8, 512, !dbg !5695
  %tobool57.not = icmp eq i32 %and56, 0, !dbg !5695
  br i1 %tobool57.not, label %if.end81, label %land.lhs.true58, !dbg !5695

land.lhs.true58:                                  ; preds = %lor.lhs.false54
  %15 = load ptr, ptr %7, align 8, !dbg !5695
  %xnv_u = getelementptr inbounds %struct.xpvnv, ptr %15, i64 0, i32 5, !dbg !5695
  %16 = load double, ptr %xnv_u, align 8, !dbg !5695
  %17 = fcmp une double %16, 0.000000e+00, !dbg !5695
  br i1 %17, label %if.then69, label %if.end81, !dbg !5695

cond.false66:                                     ; preds = %cond.false42
  %call67 = tail call zeroext i1 @Perl_sv_2bool_flags(ptr noundef nonnull %7, i32 noundef 0) #17, !dbg !5695
  br i1 %call67, label %if.then69, label %if.end81, !dbg !5697

if.then69:                                        ; preds = %cond.false66, %land.lhs.true58, %land.lhs.true50, %land.lhs.true38, %land.lhs.true, %cond.true13
  %18 = load i32, ptr %sv_flags, align 4, !dbg !5698
  %and71 = and i32 %18, 2098176, !dbg !5698
  %cmp72 = icmp eq i32 %and71, 1024, !dbg !5698
  br i1 %cmp72, label %cond.true74, label %cond.false77, !dbg !5698

cond.true74:                                      ; preds = %if.then69
  %sv_u75 = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 3, !dbg !5698
  %19 = load ptr, ptr %sv_u75, align 8, !dbg !5698
  br label %cond.end79, !dbg !5698

cond.false77:                                     ; preds = %if.then69
  %call78 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %7, ptr noundef null, i32 noundef 34) #17, !dbg !5698
  br label %cond.end79, !dbg !5698

cond.end79:                                       ; preds = %cond.false77, %cond.true74
  %cond80 = phi ptr [ %19, %cond.true74 ], [ %call78, %cond.false77 ], !dbg !5698
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.15, ptr noundef %cond80) #17, !dbg !5699
  br label %if.end81, !dbg !5699

if.end81:                                         ; preds = %cond.true13, %cond.true30, %lor.lhs.false34, %land.lhs.true38, %lor.lhs.false54, %cond.false66, %cond.end79, %cond.false15, %land.lhs.true58, %S_SvREFCNT_dec.exit
  ret ptr %2, !dbg !5700
}

declare !dbg !5701 zeroext i1 @Perl_sv_2bool_flags(ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !5704 void @Perl_croak(ptr noundef, ...) local_unnamed_addr #3

declare !dbg !5707 ptr @Perl_sv_2pv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @Perl_require_pv(ptr noundef %pv) local_unnamed_addr #0 !dbg !5711 {
entry:
  call void @llvm.dbg.value(metadata ptr %pv, metadata !5715, metadata !DIExpression()), !dbg !5723
  %0 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5724
  call void @llvm.dbg.value(metadata ptr %0, metadata !5716, metadata !DIExpression()), !dbg !5723
  %1 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !5725
  %si_next = getelementptr inbounds %struct.stackinfo, ptr %1, i64 0, i32 3, !dbg !5725
  %2 = load ptr, ptr %si_next, align 8, !dbg !5725
  call void @llvm.dbg.value(metadata ptr %2, metadata !5718, metadata !DIExpression()), !dbg !5726
  %tobool.not = icmp eq ptr %2, null, !dbg !5727
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !5725

if.then:                                          ; preds = %entry
  %call = tail call ptr @Perl_new_stackinfo(i32 noundef 32, i32 noundef 22) #17, !dbg !5729
  call void @llvm.dbg.value(metadata ptr %call, metadata !5718, metadata !DIExpression()), !dbg !5726
  %3 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !5729
  %si_prev = getelementptr inbounds %struct.stackinfo, ptr %call, i64 0, i32 2, !dbg !5729
  store ptr %3, ptr %si_prev, align 8, !dbg !5729
  %si_next1 = getelementptr inbounds %struct.stackinfo, ptr %3, i64 0, i32 3, !dbg !5729
  store ptr %call, ptr %si_next1, align 8, !dbg !5729
  br label %if.end, !dbg !5729

if.end:                                           ; preds = %if.then, %entry
  %next.0 = phi ptr [ %2, %entry ], [ %call, %if.then ], !dbg !5726
  call void @llvm.dbg.value(metadata ptr %next.0, metadata !5718, metadata !DIExpression()), !dbg !5726
  %si_type = getelementptr inbounds %struct.stackinfo, ptr %next.0, i64 0, i32 6, !dbg !5725
  store i32 9, ptr %si_type, align 8, !dbg !5725
  %si_cxix = getelementptr inbounds %struct.stackinfo, ptr %next.0, i64 0, i32 4, !dbg !5725
  store i32 -1, ptr %si_cxix, align 8, !dbg !5725
  %4 = load ptr, ptr %next.0, align 8, !dbg !5725
  %5 = load ptr, ptr %4, align 8, !dbg !5725
  %xav_fill = getelementptr inbounds %struct.xpvav, ptr %5, i64 0, i32 2, !dbg !5725
  store i64 0, ptr %xav_fill, align 8, !dbg !5725
  %6 = load ptr, ptr @PL_stack_base, align 8, !dbg !5731
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64, !dbg !5731
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i64, !dbg !5731
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5731
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3, !dbg !5731
  %7 = load ptr, ptr @PL_curstack, align 8, !dbg !5731
  %8 = load ptr, ptr %7, align 8, !dbg !5731
  %xav_fill4 = getelementptr inbounds %struct.xpvav, ptr %8, i64 0, i32 2, !dbg !5731
  store i64 %sub.ptr.div, ptr %xav_fill4, align 8, !dbg !5731
  %9 = load ptr, ptr %next.0, align 8, !dbg !5731
  %sv_u = getelementptr inbounds %struct.av, ptr %9, i64 0, i32 3, !dbg !5731
  %10 = load ptr, ptr %sv_u, align 8, !dbg !5731
  store ptr %10, ptr @PL_stack_base, align 8, !dbg !5731
  %11 = load ptr, ptr %next.0, align 8, !dbg !5731
  %12 = load ptr, ptr %11, align 8, !dbg !5731
  %xav_max = getelementptr inbounds %struct.xpvav, ptr %12, i64 0, i32 3, !dbg !5731
  %13 = load i64, ptr %xav_max, align 8, !dbg !5731
  %add.ptr = getelementptr inbounds ptr, ptr %10, i64 %13, !dbg !5731
  store ptr %add.ptr, ptr @PL_stack_max, align 8, !dbg !5731
  %14 = load ptr, ptr %next.0, align 8, !dbg !5731
  %15 = load ptr, ptr %14, align 8, !dbg !5731
  %xav_fill10 = getelementptr inbounds %struct.xpvav, ptr %15, i64 0, i32 2, !dbg !5731
  %16 = load i64, ptr %xav_fill10, align 8, !dbg !5731
  %add.ptr11 = getelementptr inbounds ptr, ptr %10, i64 %16, !dbg !5731
  store ptr %add.ptr11, ptr @PL_stack_sp, align 8, !dbg !5731
  call void @llvm.dbg.value(metadata ptr %add.ptr11, metadata !5716, metadata !DIExpression()), !dbg !5723
  %17 = load ptr, ptr %next.0, align 8, !dbg !5731
  store ptr %17, ptr @PL_curstack, align 8, !dbg !5731
  store ptr %next.0, ptr @PL_curstackinfo, align 8, !dbg !5725
  %call15 = tail call ptr (ptr, ...) @Perl_newSVpvf(ptr noundef nonnull @.str.16, i32 noundef 0, ptr noundef %pv, i32 noundef 0) #17, !dbg !5733
  call void @llvm.dbg.value(metadata ptr %call15, metadata !5717, metadata !DIExpression()), !dbg !5723
  %call16 = tail call ptr @Perl_sv_2mortal(ptr noundef %call15) #17, !dbg !5734
  %call17 = tail call i32 @Perl_eval_sv(ptr noundef %call16, i32 noundef 4), !dbg !5734
  %18 = load ptr, ptr @PL_stack_sp, align 8, !dbg !5735
  call void @llvm.dbg.value(metadata ptr %18, metadata !5720, metadata !DIExpression()), !dbg !5736
  %19 = load ptr, ptr @PL_curstackinfo, align 8, !dbg !5735
  %si_prev20 = getelementptr inbounds %struct.stackinfo, ptr %19, i64 0, i32 2, !dbg !5735
  %20 = load ptr, ptr %si_prev20, align 8, !dbg !5735
  call void @llvm.dbg.value(metadata ptr %20, metadata !5722, metadata !DIExpression()), !dbg !5736
  %tobool21.not = icmp eq ptr %20, null, !dbg !5737
  br i1 %tobool21.not, label %if.then22, label %do.body24, !dbg !5735

if.then22:                                        ; preds = %if.end
  tail call void @Perl_croak_popstack() #17, !dbg !5739
  br label %do.body24, !dbg !5739

do.body24:                                        ; preds = %if.end, %if.then22
  %21 = load ptr, ptr @PL_stack_base, align 8, !dbg !5741
  %sub.ptr.lhs.cast25 = ptrtoint ptr %18 to i64, !dbg !5741
  %sub.ptr.rhs.cast26 = ptrtoint ptr %21 to i64, !dbg !5741
  %sub.ptr.sub27 = sub i64 %sub.ptr.lhs.cast25, %sub.ptr.rhs.cast26, !dbg !5741
  %sub.ptr.div28 = ashr exact i64 %sub.ptr.sub27, 3, !dbg !5741
  %22 = load ptr, ptr @PL_curstack, align 8, !dbg !5741
  %23 = load ptr, ptr %22, align 8, !dbg !5741
  %xav_fill30 = getelementptr inbounds %struct.xpvav, ptr %23, i64 0, i32 2, !dbg !5741
  store i64 %sub.ptr.div28, ptr %xav_fill30, align 8, !dbg !5741
  %24 = load ptr, ptr %20, align 8, !dbg !5741
  %sv_u32 = getelementptr inbounds %struct.av, ptr %24, i64 0, i32 3, !dbg !5741
  %25 = load ptr, ptr %sv_u32, align 8, !dbg !5741
  store ptr %25, ptr @PL_stack_base, align 8, !dbg !5741
  %26 = load ptr, ptr %20, align 8, !dbg !5741
  %27 = load ptr, ptr %26, align 8, !dbg !5741
  %xav_max35 = getelementptr inbounds %struct.xpvav, ptr %27, i64 0, i32 3, !dbg !5741
  %28 = load i64, ptr %xav_max35, align 8, !dbg !5741
  %add.ptr36 = getelementptr inbounds ptr, ptr %25, i64 %28, !dbg !5741
  store ptr %add.ptr36, ptr @PL_stack_max, align 8, !dbg !5741
  %29 = load ptr, ptr %20, align 8, !dbg !5741
  %30 = load ptr, ptr %29, align 8, !dbg !5741
  %xav_fill39 = getelementptr inbounds %struct.xpvav, ptr %30, i64 0, i32 2, !dbg !5741
  %31 = load i64, ptr %xav_fill39, align 8, !dbg !5741
  %add.ptr40 = getelementptr inbounds ptr, ptr %25, i64 %31, !dbg !5741
  store ptr %add.ptr40, ptr @PL_stack_sp, align 8, !dbg !5741
  call void @llvm.dbg.value(metadata ptr %add.ptr40, metadata !5720, metadata !DIExpression()), !dbg !5736
  %32 = load ptr, ptr %20, align 8, !dbg !5741
  store ptr %32, ptr @PL_curstack, align 8, !dbg !5741
  store ptr %20, ptr @PL_curstackinfo, align 8, !dbg !5735
  ret void, !dbg !5743
}

declare !dbg !5744 ptr @Perl_new_stackinfo(i32 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !5747 ptr @Perl_newSVpvf(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local ptr @Perl_moreswitches(ptr noundef %s) local_unnamed_addr #0 !dbg !5750 {
entry:
  %s.addr = alloca ptr, align 8
  %flags = alloca i32, align 4
  %numlen = alloca i64, align 8
  %ch = alloca i8, align 1
  %flags386 = alloca i32, align 4
  %numlen387 = alloca i64, align 8
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %s, ptr %s.addr, align 8
  %0 = load i8, ptr %s, align 1, !dbg !5793
  call void @llvm.dbg.value(metadata i8 %0, metadata !5756, metadata !DIExpression()), !dbg !5792
  %conv = sext i8 %0 to i32, !dbg !5794
  switch i32 %conv, label %sw.default [
    i32 48, label %sw.bb
    i32 67, label %sw.bb164
    i32 70, label %sw.bb171
    i32 97, label %sw.bb188
    i32 99, label %sw.bb190
    i32 100, label %sw.bb192
    i32 68, label %sw.bb267
    i32 104, label %sw.bb278
    i32 105, label %sw.bb279
    i32 73, label %while.cond313
    i32 108, label %sw.bb374
    i32 77, label %sw.bb413
    i32 109, label %sw.bb413
    i32 110, label %sw.bb498
    i32 112, label %sw.bb500
    i32 115, label %sw.bb502
    i32 116, label %sw.bb504
    i32 84, label %sw.bb504
    i32 117, label %sw.bb510
    i32 85, label %sw.bb512
    i32 118, label %sw.bb514
    i32 119, label %sw.bb515
    i32 87, label %sw.bb525
    i32 88, label %sw.bb537
    i32 42, label %while.cond550.preheader
    i32 32, label %while.cond550.preheader
    i32 45, label %cleanup
    i32 0, label %cleanup
    i32 13, label %cleanup
    i32 10, label %cleanup
    i32 9, label %cleanup
    i32 101, label %sw.bb565
    i32 102, label %sw.bb565
    i32 120, label %sw.bb565
    i32 69, label %sw.bb565
    i32 83, label %sw.bb565
    i32 86, label %sw.bb565
  ], !dbg !5795

while.cond550.preheader:                          ; preds = %entry, %entry
  br label %while.cond550, !dbg !5796

sw.bb:                                            ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags) #17, !dbg !5797
  call void @llvm.dbg.value(metadata i32 0, metadata !5757, metadata !DIExpression()), !dbg !5798
  store i32 0, ptr %flags, align 4, !dbg !5799
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %numlen) #17, !dbg !5800
  %1 = load ptr, ptr @PL_rs, align 8, !dbg !5801
  call void @llvm.dbg.value(metadata ptr %1, metadata !1967, metadata !DIExpression()) #17, !dbg !5802
  %cmp.not.i = icmp eq ptr %1, null, !dbg !5804
  br i1 %cmp.not.i, label %S_SvREFCNT_dec.exit, label %if.then.i, !dbg !5805

if.then.i:                                        ; preds = %sw.bb
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1, !dbg !5806
  %2 = load i32, ptr %sv_refcnt.i, align 8, !dbg !5806
  call void @llvm.dbg.value(metadata i32 %2, metadata !1973, metadata !DIExpression()) #17, !dbg !5807
  %cmp1.i = icmp ugt i32 %2, 1, !dbg !5808
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !5809

if.then4.i:                                       ; preds = %if.then.i
  %sub.i = add i32 %2, -1, !dbg !5810
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !5811
  br label %S_SvREFCNT_dec.exit, !dbg !5812

if.else.i:                                        ; preds = %if.then.i
  tail call void @Perl_sv_free2(ptr noundef nonnull %1, i32 noundef %2) #17, !dbg !5813
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %sw.bb, %if.then4.i, %if.else.i
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %arrayidx = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5814
  %3 = load i8, ptr %arrayidx, align 1, !dbg !5814
  %cmp = icmp eq i8 %3, 120, !dbg !5815
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5816

land.lhs.true:                                    ; preds = %S_SvREFCNT_dec.exit
  %arrayidx3 = getelementptr inbounds i8, ptr %s, i64 2, !dbg !5817
  %4 = load i8, ptr %arrayidx3, align 1, !dbg !5817
  %tobool.not = icmp eq i8 %4, 0, !dbg !5817
  br i1 %tobool.not, label %if.else, label %if.then, !dbg !5818

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata ptr %arrayidx3, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %arrayidx3, ptr %s.addr, align 8, !dbg !5819
  call void @llvm.dbg.value(metadata ptr %arrayidx3, metadata !5761, metadata !DIExpression()), !dbg !5820
  call void @llvm.dbg.value(metadata ptr %arrayidx3, metadata !5761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5820
  br label %while.cond.while.cond_crit_edge, !dbg !5821

while.cond.while.cond_crit_edge:                  ; preds = %if.then, %while.cond.while.cond_crit_edge
  %e.0733 = phi ptr [ %arrayidx3, %if.then ], [ %incdec.ptr, %while.cond.while.cond_crit_edge ]
  call void @llvm.dbg.value(metadata ptr %e.0733, metadata !5761, metadata !DIExpression()), !dbg !5820
  %incdec.ptr = getelementptr inbounds i8, ptr %e.0733, i64 1, !dbg !5822
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !5761, metadata !DIExpression()), !dbg !5820
  %.pre707 = load i8, ptr %incdec.ptr, align 1, !dbg !5823
  %tobool5.not = icmp eq i8 %.pre707, 0, !dbg !5821
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !5761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5820
  br i1 %tobool5.not, label %while.end, label %while.cond.while.cond_crit_edge, !dbg !5821, !llvm.loop !5824

while.end:                                        ; preds = %while.cond.while.cond_crit_edge
  call void @llvm.dbg.value(metadata ptr %arrayidx3, metadata !5754, metadata !DIExpression()), !dbg !5792
  %sub.ptr.lhs.cast = ptrtoint ptr %incdec.ptr to i64, !dbg !5825
  %sub.ptr.rhs.cast = ptrtoint ptr %arrayidx3 to i64, !dbg !5825
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !5825
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub, metadata !5760, metadata !DIExpression()), !dbg !5798
  store i64 %sub.ptr.sub, ptr %numlen, align 8, !dbg !5826
  call void @llvm.dbg.value(metadata i32 4, metadata !5757, metadata !DIExpression()), !dbg !5798
  store i32 4, ptr %flags, align 4, !dbg !5827
  call void @llvm.dbg.value(metadata ptr %arrayidx3, metadata !5754, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata ptr %flags, metadata !5757, metadata !DIExpression(DW_OP_deref)), !dbg !5798
  call void @llvm.dbg.value(metadata ptr %numlen, metadata !5760, metadata !DIExpression(DW_OP_deref)), !dbg !5798
  %call = call i64 @Perl_grok_hex(ptr noundef nonnull %arrayidx3, ptr noundef nonnull %numlen, ptr noundef nonnull %flags, ptr noundef null) #17, !dbg !5828
  %conv7 = and i64 %call, 4294967295, !dbg !5829
  call void @llvm.dbg.value(metadata i64 %conv7, metadata !5755, metadata !DIExpression()), !dbg !5792
  %5 = load ptr, ptr %s.addr, align 8, !dbg !5830
  call void @llvm.dbg.value(metadata ptr %5, metadata !5754, metadata !DIExpression()), !dbg !5792
  %6 = load i64, ptr %numlen, align 8, !dbg !5832
  call void @llvm.dbg.value(metadata i64 %6, metadata !5760, metadata !DIExpression()), !dbg !5798
  %add.ptr8 = getelementptr inbounds i8, ptr %5, i64 %6, !dbg !5833
  %cmp9 = icmp ult ptr %add.ptr8, %incdec.ptr, !dbg !5834
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !5835

if.then11:                                        ; preds = %while.end
  call void @llvm.dbg.value(metadata i64 0, metadata !5755, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata i64 0, metadata !5760, metadata !DIExpression()), !dbg !5798
  store i64 0, ptr %numlen, align 8, !dbg !5836
  call void @llvm.dbg.value(metadata ptr %5, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr12 = getelementptr inbounds i8, ptr %5, i64 -1, !dbg !5838
  call void @llvm.dbg.value(metadata ptr %incdec.ptr12, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr12, ptr %s.addr, align 8, !dbg !5838
  br label %if.end, !dbg !5839

if.end:                                           ; preds = %if.then11, %while.end
  %rschar.0 = phi i64 [ 0, %if.then11 ], [ %conv7, %while.end ], !dbg !5820
  call void @llvm.dbg.value(metadata i64 %rschar.0, metadata !5755, metadata !DIExpression()), !dbg !5792
  %call13 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !5840
  store ptr %call13, ptr @PL_rs, align 8, !dbg !5841
  %sv_flags = getelementptr inbounds %struct.sv, ptr %call13, i64 0, i32 2, !dbg !5842
  %7 = load i32, ptr %sv_flags, align 4, !dbg !5842
  %and = and i32 %7, 268435456, !dbg !5842
  %tobool14.not = icmp eq i32 %and, 0, !dbg !5842
  br i1 %tobool14.not, label %lor.lhs.false, label %cond.true53, !dbg !5842

lor.lhs.false:                                    ; preds = %if.end
  %8 = load ptr, ptr %call13, align 8, !dbg !5842
  %xpv_len_u = getelementptr inbounds %struct.xpv, ptr %8, i64 0, i32 3, !dbg !5842
  %9 = load i64, ptr %xpv_len_u, align 8, !dbg !5842
  %cmp15 = icmp ult i64 %rschar.0, 128, !dbg !5842
  br i1 %cmp15, label %cond.end48, label %cond.false, !dbg !5842

cond.false:                                       ; preds = %lor.lhs.false
  %cmp17 = icmp ult i64 %rschar.0, 2048, !dbg !5842
  br i1 %cmp17, label %cond.end48, label %cond.false20, !dbg !5842

cond.false20:                                     ; preds = %cond.false
  %cmp21 = icmp ult i64 %rschar.0, 65536, !dbg !5842
  br i1 %cmp21, label %cond.end48, label %cond.false24, !dbg !5842

cond.false24:                                     ; preds = %cond.false20
  %cmp25 = icmp ult i64 %rschar.0, 2097152, !dbg !5842
  br i1 %cmp25, label %cond.end48, label %cond.false28, !dbg !5842

cond.false28:                                     ; preds = %cond.false24
  %cmp29 = icmp ult i64 %rschar.0, 67108864, !dbg !5842
  br i1 %cmp29, label %cond.end48, label %cond.false32, !dbg !5842

cond.false32:                                     ; preds = %cond.false28
  %cmp33 = icmp ult i64 %rschar.0, 2147483648, !dbg !5842
  %spec.select = select i1 %cmp33, i64 7, i64 8, !dbg !5842
  br label %cond.end48, !dbg !5842

cond.end48:                                       ; preds = %cond.false32, %cond.false, %cond.false24, %cond.false28, %cond.false20, %lor.lhs.false
  %cond49 = phi i64 [ 2, %lor.lhs.false ], [ 3, %cond.false ], [ 4, %cond.false20 ], [ 5, %cond.false24 ], [ 6, %cond.false28 ], [ %spec.select, %cond.false32 ]
  %cmp51 = icmp ult i64 %9, %cond49, !dbg !5842
  br i1 %cmp51, label %cond.true53, label %cond.end97, !dbg !5842

cond.true53:                                      ; preds = %cond.end48, %if.end
  %cmp54 = icmp ult i64 %rschar.0, 128, !dbg !5842
  br i1 %cmp54, label %cond.end91, label %cond.false57, !dbg !5842

cond.false57:                                     ; preds = %cond.true53
  %cmp58 = icmp ult i64 %rschar.0, 2048, !dbg !5842
  br i1 %cmp58, label %cond.end91, label %cond.false61, !dbg !5842

cond.false61:                                     ; preds = %cond.false57
  %cmp62 = icmp ult i64 %rschar.0, 65536, !dbg !5842
  br i1 %cmp62, label %cond.end91, label %cond.false65, !dbg !5842

cond.false65:                                     ; preds = %cond.false61
  %cmp66 = icmp ult i64 %rschar.0, 2097152, !dbg !5842
  br i1 %cmp66, label %cond.end91, label %cond.false69, !dbg !5842

cond.false69:                                     ; preds = %cond.false65
  %cmp70 = icmp ult i64 %rschar.0, 67108864, !dbg !5842
  br i1 %cmp70, label %cond.end91, label %cond.false73, !dbg !5842

cond.false73:                                     ; preds = %cond.false69
  %cmp74 = icmp ult i64 %rschar.0, 2147483648, !dbg !5842
  %spec.select641 = select i1 %cmp74, i64 7, i64 8, !dbg !5842
  br label %cond.end91, !dbg !5842

cond.end91:                                       ; preds = %cond.false73, %cond.false57, %cond.false65, %cond.false69, %cond.false61, %cond.true53
  %cond92 = phi i64 [ 2, %cond.true53 ], [ 3, %cond.false57 ], [ 4, %cond.false61 ], [ 5, %cond.false65 ], [ 6, %cond.false69 ], [ %spec.select641, %cond.false73 ]
  %call95 = call ptr @Perl_sv_grow(ptr noundef nonnull %call13, i64 noundef %cond92) #17, !dbg !5842
  %.pre708 = load ptr, ptr @PL_rs, align 8, !dbg !5843
  br label %cond.end97, !dbg !5842

cond.end97:                                       ; preds = %cond.end48, %cond.end91
  %10 = phi ptr [ %call13, %cond.end48 ], [ %.pre708, %cond.end91 ], !dbg !5843
  %sv_u99 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 3, !dbg !5843
  %11 = load ptr, ptr %sv_u99, align 8, !dbg !5843
  call void @llvm.dbg.value(metadata ptr %11, metadata !5764, metadata !DIExpression()), !dbg !5820
  %call100 = call ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef %11, i64 noundef %rschar.0, i64 noundef 0) #17, !dbg !5844
  %cmp101 = icmp ult i64 %rschar.0, 128, !dbg !5845
  br i1 %cmp101, label %cond.end138, label %cond.false104, !dbg !5845

cond.false104:                                    ; preds = %cond.end97
  %cmp105 = icmp ult i64 %rschar.0, 2048, !dbg !5845
  br i1 %cmp105, label %cond.end138, label %cond.false108, !dbg !5845

cond.false108:                                    ; preds = %cond.false104
  %cmp109 = icmp ult i64 %rschar.0, 65536, !dbg !5845
  br i1 %cmp109, label %cond.end138, label %cond.false112, !dbg !5845

cond.false112:                                    ; preds = %cond.false108
  %cmp113 = icmp ult i64 %rschar.0, 2097152, !dbg !5845
  br i1 %cmp113, label %cond.end138, label %cond.false116, !dbg !5845

cond.false116:                                    ; preds = %cond.false112
  %cmp117 = icmp ult i64 %rschar.0, 67108864, !dbg !5845
  br i1 %cmp117, label %cond.end138, label %cond.false120, !dbg !5845

cond.false120:                                    ; preds = %cond.false116
  %cmp121 = icmp ult i64 %rschar.0, 2147483648, !dbg !5845
  %spec.select642 = select i1 %cmp121, i64 6, i64 7, !dbg !5845
  br label %cond.end138, !dbg !5845

cond.end138:                                      ; preds = %cond.false120, %cond.false104, %cond.false112, %cond.false116, %cond.false108, %cond.end97
  %cond139 = phi i64 [ 1, %cond.end97 ], [ 2, %cond.false104 ], [ 3, %cond.false108 ], [ 4, %cond.false112 ], [ 5, %cond.false116 ], [ %spec.select642, %cond.false120 ]
  %12 = load ptr, ptr @PL_rs, align 8, !dbg !5845
  %13 = load ptr, ptr %12, align 8, !dbg !5845
  %xpv_cur = getelementptr inbounds %struct.xpv, ptr %13, i64 0, i32 2, !dbg !5845
  store i64 %cond139, ptr %xpv_cur, align 8, !dbg !5845
  %sv_flags142 = getelementptr inbounds %struct.sv, ptr %12, i64 0, i32 2, !dbg !5847
  %14 = load i32, ptr %sv_flags142, align 4, !dbg !5847
  %or = or i32 %14, 536870912, !dbg !5847
  store i32 %or, ptr %sv_flags142, align 4, !dbg !5847
  br label %if.end161, !dbg !5848

if.else:                                          ; preds = %land.lhs.true, %S_SvREFCNT_dec.exit
  call void @llvm.dbg.value(metadata i64 4, metadata !5760, metadata !DIExpression()), !dbg !5798
  store i64 4, ptr %numlen, align 8, !dbg !5849
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata ptr %flags, metadata !5757, metadata !DIExpression(DW_OP_deref)), !dbg !5798
  call void @llvm.dbg.value(metadata ptr %numlen, metadata !5760, metadata !DIExpression(DW_OP_deref)), !dbg !5798
  %call143 = call i64 @Perl_grok_oct(ptr noundef nonnull %s, ptr noundef nonnull %numlen, ptr noundef nonnull %flags, ptr noundef null) #17, !dbg !5850
  call void @llvm.dbg.value(metadata i64 %call143, metadata !5755, metadata !DIExpression(DW_OP_constu, 4294967295, DW_OP_and, DW_OP_stack_value)), !dbg !5792
  %and146 = and i64 %call143, 4294967040, !dbg !5851
  %tobool147.not = icmp eq i64 %and146, 0, !dbg !5851
  br i1 %tobool147.not, label %if.else149, label %if.then148, !dbg !5852

if.then148:                                       ; preds = %if.else
  store ptr @PL_sv_undef, ptr @PL_rs, align 8, !dbg !5853
  br label %if.end161, !dbg !5854

if.else149:                                       ; preds = %if.else
  %conv145 = and i64 %call143, 4294967295, !dbg !5855
  %tobool150 = icmp eq i64 %conv145, 0, !dbg !5856
  %15 = load i64, ptr %numlen, align 8
  call void @llvm.dbg.value(metadata i64 %15, metadata !5760, metadata !DIExpression()), !dbg !5798
  %cmp152 = icmp ugt i64 %15, 1
  %or.cond = select i1 %tobool150, i1 %cmp152, i1 false, !dbg !5857
  br i1 %or.cond, label %if.then154, label %if.else156, !dbg !5857

if.then154:                                       ; preds = %if.else149
  %call155 = call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.1, i64 noundef 0) #17, !dbg !5858
  store ptr %call155, ptr @PL_rs, align 8, !dbg !5859
  br label %if.end161, !dbg !5860

if.else156:                                       ; preds = %if.else149
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %ch) #17, !dbg !5861
  %conv157 = trunc i64 %call143 to i8, !dbg !5862
  call void @llvm.dbg.value(metadata i8 %conv157, metadata !5765, metadata !DIExpression()), !dbg !5863
  store i8 %conv157, ptr %ch, align 1, !dbg !5864
  call void @llvm.dbg.value(metadata ptr %ch, metadata !5765, metadata !DIExpression(DW_OP_deref)), !dbg !5863
  %call158 = call ptr @Perl_newSVpvn(ptr noundef nonnull %ch, i64 noundef 1) #17, !dbg !5865
  store ptr %call158, ptr @PL_rs, align 8, !dbg !5866
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %ch) #17, !dbg !5867
  br label %if.end161

if.end161:                                        ; preds = %if.then148, %if.else156, %if.then154, %cond.end138
  call void @llvm.dbg.value(metadata ptr @.str.17, metadata !3832, metadata !DIExpression()) #17, !dbg !5868
  call void @llvm.dbg.value(metadata i32 1, metadata !3837, metadata !DIExpression()) #17, !dbg !5868
  %call.i = call ptr @Perl_gv_fetchpv(ptr noundef nonnull @.str.17, i32 noundef 1, i32 noundef 3) #17, !dbg !5870
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !3838, metadata !DIExpression()) #17, !dbg !5868
  %tobool.not.i = icmp eq ptr %call.i, null, !dbg !5871
  br i1 %tobool.not.i, label %Perl_get_sv.exit, label %if.then.i646, !dbg !5872

if.then.i646:                                     ; preds = %if.end161
  %sv_u.i = getelementptr inbounds %struct.gv, ptr %call.i, i64 0, i32 3, !dbg !5873
  %16 = load ptr, ptr %sv_u.i, align 8, !dbg !5873
  %17 = load ptr, ptr %16, align 8, !dbg !5873
  br label %Perl_get_sv.exit, !dbg !5874

Perl_get_sv.exit:                                 ; preds = %if.end161, %if.then.i646
  %retval.0.i = phi ptr [ %17, %if.then.i646 ], [ null, %if.end161 ], !dbg !5868
  %18 = load ptr, ptr @PL_rs, align 8, !dbg !5875
  call void @Perl_sv_setsv_flags(ptr noundef %retval.0.i, ptr noundef %18, i32 noundef 1538) #17, !dbg !5875
  %19 = load ptr, ptr %s.addr, align 8, !dbg !5876
  call void @llvm.dbg.value(metadata ptr %19, metadata !5754, metadata !DIExpression()), !dbg !5792
  %20 = load i64, ptr %numlen, align 8, !dbg !5877
  call void @llvm.dbg.value(metadata i64 %20, metadata !5760, metadata !DIExpression()), !dbg !5798
  %add.ptr163 = getelementptr inbounds i8, ptr %19, i64 %20, !dbg !5878
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %numlen) #17, !dbg !5879
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags) #17, !dbg !5879
  br label %cleanup

sw.bb164:                                         ; preds = %entry
  %incdec.ptr165 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5880
  call void @llvm.dbg.value(metadata ptr %incdec.ptr165, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr165, ptr %s.addr, align 8, !dbg !5880
  call void @llvm.dbg.value(metadata ptr %s.addr, metadata !5754, metadata !DIExpression(DW_OP_deref)), !dbg !5792
  %call166 = call i32 @Perl_parse_unicode_opts(ptr noundef nonnull %s.addr) #17, !dbg !5881
  store i32 %call166, ptr @PL_unicode, align 4, !dbg !5882
  %and167 = and i32 %call166, 256, !dbg !5883
  %tobool168.not = icmp eq i32 %and167, 0, !dbg !5883
  br i1 %tobool168.not, label %if.end170, label %if.then169, !dbg !5885

if.then169:                                       ; preds = %sw.bb164
  store i8 -1, ptr @PL_utf8cache, align 1, !dbg !5886
  br label %if.end170, !dbg !5887

if.end170:                                        ; preds = %if.then169, %sw.bb164
  %21 = load ptr, ptr %s.addr, align 8, !dbg !5888
  call void @llvm.dbg.value(metadata ptr %21, metadata !5754, metadata !DIExpression()), !dbg !5792
  br label %cleanup, !dbg !5889

sw.bb171:                                         ; preds = %entry
  store i8 1, ptr @PL_minus_a, align 1, !dbg !5890
  store i8 1, ptr @PL_minus_F, align 1, !dbg !5891
  store i8 1, ptr @PL_minus_n, align 1, !dbg !5892
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr172 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5893
  call void @llvm.dbg.value(metadata ptr %incdec.ptr172, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr172, ptr @PL_splitstr, align 8, !dbg !5894
  call void @llvm.dbg.value(metadata ptr %incdec.ptr172, metadata !5754, metadata !DIExpression()), !dbg !5792
  %22 = load i8, ptr %incdec.ptr172, align 1, !dbg !5895
  %tobool175.not696 = icmp eq i8 %22, 0, !dbg !5895
  br i1 %tobool175.not696, label %while.end182, label %land.rhs, !dbg !5896

land.rhs:                                         ; preds = %sw.bb171, %while.body180
  %23 = phi i8 [ %26, %while.body180 ], [ %22, %sw.bb171 ]
  %24 = phi ptr [ %incdec.ptr181, %while.body180 ], [ %incdec.ptr172, %sw.bb171 ]
  %idxprom = zext i8 %23 to i64, !dbg !5897
  %arrayidx176 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom, !dbg !5897
  %25 = load i32, ptr %arrayidx176, align 4, !dbg !5897
  %and177 = and i32 %25, 17408, !dbg !5897
  %cmp178.not = icmp eq i32 %and177, 17408, !dbg !5897
  br i1 %cmp178.not, label %while.end182, label %while.body180, !dbg !5898

while.body180:                                    ; preds = %land.rhs
  %incdec.ptr181 = getelementptr inbounds i8, ptr %24, i64 1, !dbg !5899
  call void @llvm.dbg.value(metadata ptr %incdec.ptr181, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr181, ptr %s.addr, align 8, !dbg !5899
  call void @llvm.dbg.value(metadata ptr %incdec.ptr181, metadata !5754, metadata !DIExpression()), !dbg !5792
  %26 = load i8, ptr %incdec.ptr181, align 1, !dbg !5895
  %tobool175.not = icmp eq i8 %26, 0, !dbg !5895
  br i1 %tobool175.not, label %while.end182, label %land.rhs, !dbg !5896, !llvm.loop !5900

while.end182:                                     ; preds = %land.rhs, %while.body180, %sw.bb171
  %27 = phi ptr [ %incdec.ptr172, %sw.bb171 ], [ %incdec.ptr181, %while.body180 ], [ %24, %land.rhs ], !dbg !5902
  call void @llvm.dbg.value(metadata ptr %27, metadata !5754, metadata !DIExpression()), !dbg !5792
  %sub.ptr.lhs.cast183 = ptrtoint ptr %27 to i64, !dbg !5903
  %sub.ptr.rhs.cast184 = ptrtoint ptr %incdec.ptr172 to i64, !dbg !5903
  %sub.ptr.sub185 = sub i64 %sub.ptr.lhs.cast183, %sub.ptr.rhs.cast184, !dbg !5903
  %conv186 = trunc i64 %sub.ptr.sub185 to i32, !dbg !5903
  %call187 = tail call ptr @Perl_savepvn(ptr noundef nonnull %incdec.ptr172, i32 noundef %conv186) #17, !dbg !5903
  store ptr %call187, ptr @PL_splitstr, align 8, !dbg !5904
  br label %cleanup, !dbg !5905

sw.bb188:                                         ; preds = %entry
  store i8 1, ptr @PL_minus_a, align 1, !dbg !5906
  store i8 1, ptr @PL_minus_n, align 1, !dbg !5907
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr189 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5908
  call void @llvm.dbg.value(metadata ptr %incdec.ptr189, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr189, ptr %s.addr, align 8, !dbg !5908
  br label %cleanup, !dbg !5909

sw.bb190:                                         ; preds = %entry
  store i8 1, ptr @PL_minus_c, align 1, !dbg !5910
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr191 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5911
  call void @llvm.dbg.value(metadata ptr %incdec.ptr191, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr191, ptr %s.addr, align 8, !dbg !5911
  br label %cleanup, !dbg !5912

sw.bb192:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr193 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5913
  call void @llvm.dbg.value(metadata ptr %incdec.ptr193, metadata !5754, metadata !DIExpression()), !dbg !5792
  %28 = load i8, ptr %incdec.ptr193, align 1, !dbg !5914
  %cmp195 = icmp eq i8 %28, 116, !dbg !5916
  br i1 %cmp195, label %land.lhs.true197, label %if.end206, !dbg !5917

land.lhs.true197:                                 ; preds = %sw.bb192
  %arrayidx198 = getelementptr inbounds i8, ptr %s, i64 2, !dbg !5918
  %29 = load i8, ptr %arrayidx198, align 1, !dbg !5918
  %idxprom199 = zext i8 %29 to i64, !dbg !5918
  %arrayidx200 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom199, !dbg !5918
  %30 = load i32, ptr %arrayidx200, align 4, !dbg !5918
  %and201 = and i32 %30, 16385, !dbg !5918
  %cmp202 = icmp eq i32 %and201, 16385, !dbg !5918
  br i1 %cmp202, label %if.end263, label %if.then204, !dbg !5919

if.then204:                                       ; preds = %land.lhs.true197
  call void @llvm.dbg.value(metadata ptr %arrayidx198, metadata !5754, metadata !DIExpression()), !dbg !5792
  tail call void @Perl_my_setenv(ptr noundef nonnull @.str.18, ptr noundef nonnull @.str.19) #17, !dbg !5920
  %.pre706 = load i8, ptr %arrayidx198, align 1, !dbg !5922
  br label %if.end206, !dbg !5923

if.end206:                                        ; preds = %if.then204, %sw.bb192
  %31 = phi i8 [ %.pre706, %if.then204 ], [ %28, %sw.bb192 ], !dbg !5922
  %32 = phi ptr [ %arrayidx198, %if.then204 ], [ %incdec.ptr193, %sw.bb192 ], !dbg !5924
  call void @llvm.dbg.value(metadata ptr %32, metadata !5754, metadata !DIExpression()), !dbg !5792
  switch i8 %31, label %if.end263 [
    i8 58, label %if.then214
    i8 61, label %if.then214
  ], !dbg !5925

if.then214:                                       ; preds = %if.end206, %if.end206
  call void @llvm.dbg.value(metadata ptr %32, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr215 = getelementptr inbounds i8, ptr %32, i64 1, !dbg !5926
  call void @llvm.dbg.value(metadata ptr %incdec.ptr215, metadata !5754, metadata !DIExpression()), !dbg !5792
  %33 = load i8, ptr %incdec.ptr215, align 1, !dbg !5928
  %cmp217 = icmp eq i8 %33, 45, !dbg !5929
  br i1 %cmp217, label %if.then219, label %if.else222, !dbg !5930

if.then219:                                       ; preds = %if.then214
  %incdec.ptr220 = getelementptr inbounds i8, ptr %32, i64 2, !dbg !5931
  call void @llvm.dbg.value(metadata ptr %incdec.ptr220, metadata !5754, metadata !DIExpression()), !dbg !5792
  %call221 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.20, i64 noundef 10) #17, !dbg !5933
  call void @llvm.dbg.value(metadata ptr %call221, metadata !5774, metadata !DIExpression()), !dbg !5934
  br label %if.end224, !dbg !5935

if.else222:                                       ; preds = %if.then214
  %call223 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.21, i64 noundef 11) #17, !dbg !5936
  call void @llvm.dbg.value(metadata ptr %call223, metadata !5774, metadata !DIExpression()), !dbg !5934
  br label %if.end224

if.end224:                                        ; preds = %if.else222, %if.then219
  %34 = phi ptr [ %incdec.ptr220, %if.then219 ], [ %incdec.ptr215, %if.else222 ], !dbg !5938
  %sv.0 = phi ptr [ %call221, %if.then219 ], [ %call223, %if.else222 ], !dbg !5939
  call void @llvm.dbg.value(metadata ptr %sv.0, metadata !5774, metadata !DIExpression()), !dbg !5934
  call void @llvm.dbg.value(metadata ptr %34, metadata !5754, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata ptr %34, metadata !5770, metadata !DIExpression()), !dbg !5934
  %call225 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %34) #21, !dbg !5940
  %add.ptr226 = getelementptr inbounds i8, ptr %34, i64 %call225, !dbg !5941
  call void @llvm.dbg.value(metadata ptr %add.ptr226, metadata !5773, metadata !DIExpression()), !dbg !5934
  %35 = load i8, ptr %34, align 1, !dbg !5942
  %idxprom228688 = zext i8 %35 to i64, !dbg !5942
  %arrayidx229689 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom228688, !dbg !5942
  %36 = load i32, ptr %arrayidx229689, align 4, !dbg !5942
  %and230690 = and i32 %36, 16385, !dbg !5942
  %cmp231691 = icmp eq i32 %and230690, 16385, !dbg !5942
  %cmp234692 = icmp eq i8 %35, 58
  %or.cond643693 = select i1 %cmp231691, i1 true, i1 %cmp234692, !dbg !5943
  br i1 %or.cond643693, label %while.body236, label %while.end238, !dbg !5943

while.body236:                                    ; preds = %if.end224, %while.body236
  %37 = phi ptr [ %incdec.ptr237, %while.body236 ], [ %34, %if.end224 ]
  call void @llvm.dbg.value(metadata ptr %37, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr237 = getelementptr inbounds i8, ptr %37, i64 1, !dbg !5944
  call void @llvm.dbg.value(metadata ptr %incdec.ptr237, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr237, ptr %s.addr, align 8, !dbg !5944
  %38 = load i8, ptr %incdec.ptr237, align 1, !dbg !5942
  %idxprom228 = zext i8 %38 to i64, !dbg !5942
  %arrayidx229 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom228, !dbg !5942
  %39 = load i32, ptr %arrayidx229, align 4, !dbg !5942
  %and230 = and i32 %39, 16385, !dbg !5942
  %cmp231 = icmp eq i32 %and230, 16385, !dbg !5942
  %cmp234 = icmp eq i8 %38, 58
  %or.cond643 = select i1 %cmp231, i1 true, i1 %cmp234, !dbg !5943
  br i1 %or.cond643, label %while.body236, label %while.end238, !dbg !5943, !llvm.loop !5945

while.end238:                                     ; preds = %while.body236, %if.end224
  %40 = phi ptr [ %34, %if.end224 ], [ %incdec.ptr237, %while.body236 ], !dbg !5942
  %.lcssa664 = phi i8 [ %35, %if.end224 ], [ %38, %while.body236 ], !dbg !5942
  %cmp240.not = icmp eq i8 %.lcssa664, 61, !dbg !5948
  br i1 %cmp240.not, label %if.else246, label %if.then242, !dbg !5950

if.then242:                                       ; preds = %while.end238
  tail call void @Perl_sv_catpvn_flags(ptr noundef %sv.0, ptr noundef nonnull %34, i64 noundef %call225, i32 noundef 2) #17, !dbg !5951
  br label %if.end251, !dbg !5951

if.else246:                                       ; preds = %while.end238
  %sub.ptr.lhs.cast247 = ptrtoint ptr %40 to i64, !dbg !5952
  %sub.ptr.rhs.cast248 = ptrtoint ptr %34 to i64, !dbg !5952
  %sub.ptr.sub249 = sub i64 %sub.ptr.lhs.cast247, %sub.ptr.rhs.cast248, !dbg !5952
  tail call void @Perl_sv_catpvn_flags(ptr noundef %sv.0, ptr noundef nonnull %34, i64 noundef %sub.ptr.sub249, i32 noundef 2) #17, !dbg !5952
  call void @llvm.dbg.value(metadata ptr %40, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr250 = getelementptr inbounds i8, ptr %40, i64 1, !dbg !5954
  call void @llvm.dbg.value(metadata ptr %incdec.ptr250, metadata !5754, metadata !DIExpression()), !dbg !5792
  tail call void (ptr, ptr, ...) @Perl_sv_catpvf(ptr noundef %sv.0, ptr noundef nonnull @.str.22, ptr noundef nonnull %incdec.ptr250) #17, !dbg !5955
  br label %if.end251

if.end251:                                        ; preds = %if.else246, %if.then242
  call void @llvm.dbg.value(metadata ptr %add.ptr226, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %add.ptr226, ptr %s.addr, align 8, !dbg !5956
  %sv_flags252 = getelementptr inbounds %struct.sv, ptr %sv.0, i64 0, i32 2, !dbg !5957
  %41 = load i32, ptr %sv_flags252, align 4, !dbg !5957
  %and253 = and i32 %41, 2098176, !dbg !5957
  %cmp254 = icmp eq i32 %and253, 1024, !dbg !5957
  br i1 %cmp254, label %cond.true256, label %cond.false259, !dbg !5957

cond.true256:                                     ; preds = %if.end251
  %sv_u257 = getelementptr inbounds %struct.sv, ptr %sv.0, i64 0, i32 3, !dbg !5957
  %42 = load ptr, ptr %sv_u257, align 8, !dbg !5957
  br label %if.then.i650, !dbg !5957

cond.false259:                                    ; preds = %if.end251
  %call260 = tail call ptr @Perl_sv_2pv_flags(ptr noundef nonnull %sv.0, ptr noundef null, i32 noundef 34) #17, !dbg !5957
  br label %if.then.i650, !dbg !5957

if.then.i650:                                     ; preds = %cond.true256, %cond.false259
  %cond262 = phi ptr [ %42, %cond.true256 ], [ %call260, %cond.false259 ], !dbg !5957
  tail call void @Perl_my_setenv(ptr noundef nonnull @.str.23, ptr noundef %cond262) #17, !dbg !5957
  call void @llvm.dbg.value(metadata ptr %sv.0, metadata !1967, metadata !DIExpression()) #17, !dbg !5958
  %sv_refcnt.i648 = getelementptr inbounds %struct.sv, ptr %sv.0, i64 0, i32 1, !dbg !5960
  %43 = load i32, ptr %sv_refcnt.i648, align 8, !dbg !5960
  call void @llvm.dbg.value(metadata i32 %43, metadata !1973, metadata !DIExpression()) #17, !dbg !5961
  %cmp1.i649 = icmp ugt i32 %43, 1, !dbg !5962
  br i1 %cmp1.i649, label %if.then4.i652, label %if.else.i653, !dbg !5963

if.then4.i652:                                    ; preds = %if.then.i650
  %sub.i651 = add i32 %43, -1, !dbg !5964
  store i32 %sub.i651, ptr %sv_refcnt.i648, align 8, !dbg !5965
  br label %if.end263, !dbg !5966

if.else.i653:                                     ; preds = %if.then.i650
  tail call void @Perl_sv_free2(ptr noundef nonnull %sv.0, i32 noundef %43) #17, !dbg !5967
  br label %if.end263

if.end263:                                        ; preds = %land.lhs.true197, %if.else.i653, %if.then4.i652, %if.end206
  %44 = phi ptr [ %add.ptr226, %if.else.i653 ], [ %add.ptr226, %if.then4.i652 ], [ %32, %if.end206 ], [ %incdec.ptr193, %land.lhs.true197 ]
  %45 = load i32, ptr @PL_perldb, align 4, !dbg !5968
  %tobool264.not = icmp eq i32 %45, 0, !dbg !5968
  br i1 %tobool264.not, label %if.then265, label %cleanup, !dbg !5970

if.then265:                                       ; preds = %if.end263
  store i32 1855, ptr @PL_perldb, align 4, !dbg !5971
  tail call void @Perl_init_debugger(), !dbg !5973
  br label %cleanup, !dbg !5974

sw.bb267:                                         ; preds = %entry
  %call268 = tail call zeroext i1 @Perl_ckwarn_d(i32 noundef 22) #17, !dbg !5975
  br i1 %call268, label %if.then269, label %for.cond.preheader, !dbg !5978

if.then269:                                       ; preds = %sw.bb267
  tail call void (i32, ptr, ...) @Perl_warner(i32 noundef 22, ptr noundef nonnull @.str.24) #17, !dbg !5979
  br label %for.cond.preheader, !dbg !5979

for.cond.preheader:                               ; preds = %if.then269, %sw.bb267
  br label %for.cond, !dbg !5980

for.cond:                                         ; preds = %for.cond.preheader, %for.cond
  %.pn640 = phi ptr [ %storemerge639, %for.cond ], [ %s, %for.cond.preheader ]
  %storemerge639 = getelementptr inbounds i8, ptr %.pn640, i64 1, !dbg !5982
  call void @llvm.dbg.value(metadata ptr %storemerge639, metadata !5754, metadata !DIExpression()), !dbg !5792
  %46 = load i8, ptr %storemerge639, align 1, !dbg !5983
  %idxprom272 = zext i8 %46 to i64, !dbg !5983
  %arrayidx273 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom272, !dbg !5983
  %47 = load i32, ptr %arrayidx273, align 4, !dbg !5983
  %and274 = and i32 %47, 16385, !dbg !5983
  %cmp275 = icmp eq i32 %and274, 16385, !dbg !5983
  br i1 %cmp275, label %for.cond, label %cleanup.loopexit, !dbg !5980, !llvm.loop !5985

sw.bb278:                                         ; preds = %entry
  tail call fastcc void @S_usage(), !dbg !5987
  unreachable, !dbg !5988

sw.bb279:                                         ; preds = %entry
  %48 = load ptr, ptr @PL_inplace, align 8, !dbg !5989
  tail call void @Perl_safesysfree(ptr noundef %48) #17, !dbg !5989
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr281 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !5990
  call void @llvm.dbg.value(metadata ptr %incdec.ptr281, metadata !5754, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.value(metadata ptr %incdec.ptr281, metadata !5775, metadata !DIExpression()), !dbg !5991
  store ptr %incdec.ptr281, ptr %s.addr, align 8, !dbg !5991
  %49 = load i8, ptr %incdec.ptr281, align 1, !dbg !5992
  %tobool284.not684 = icmp eq i8 %49, 0, !dbg !5992
  br i1 %tobool284.not684, label %while.end295, label %land.rhs285, !dbg !5993

land.rhs285:                                      ; preds = %sw.bb279, %while.body293
  %50 = phi i8 [ %52, %while.body293 ], [ %49, %sw.bb279 ]
  %storemerge638685 = phi ptr [ %incdec.ptr294, %while.body293 ], [ %incdec.ptr281, %sw.bb279 ]
  call void @llvm.dbg.value(metadata ptr %storemerge638685, metadata !5754, metadata !DIExpression()), !dbg !5792
  %idxprom286 = zext i8 %50 to i64, !dbg !5994
  %arrayidx287 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom286, !dbg !5994
  %51 = load i32, ptr %arrayidx287, align 4, !dbg !5994
  %and288 = and i32 %51, 17408, !dbg !5994
  %cmp289.not = icmp eq i32 %and288, 17408, !dbg !5994
  br i1 %cmp289.not, label %while.end295, label %while.body293, !dbg !5995

while.body293:                                    ; preds = %land.rhs285
  %incdec.ptr294 = getelementptr inbounds i8, ptr %storemerge638685, i64 1, !dbg !5996
  call void @llvm.dbg.value(metadata ptr %incdec.ptr294, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr294, ptr %s.addr, align 8, !dbg !5991
  %52 = load i8, ptr %incdec.ptr294, align 1, !dbg !5992
  %tobool284.not = icmp eq i8 %52, 0, !dbg !5992
  br i1 %tobool284.not, label %while.end295, label %land.rhs285, !dbg !5993, !llvm.loop !5997

while.end295:                                     ; preds = %land.rhs285, %while.body293, %sw.bb279
  %53 = phi ptr [ %incdec.ptr281, %sw.bb279 ], [ %incdec.ptr294, %while.body293 ], [ %storemerge638685, %land.rhs285 ], !dbg !5999
  call void @llvm.dbg.value(metadata ptr %53, metadata !5754, metadata !DIExpression()), !dbg !5792
  %sub.ptr.lhs.cast296 = ptrtoint ptr %53 to i64, !dbg !6001
  %sub.ptr.rhs.cast297 = ptrtoint ptr %incdec.ptr281 to i64, !dbg !6001
  %sub.ptr.sub298 = sub i64 %sub.ptr.lhs.cast296, %sub.ptr.rhs.cast297, !dbg !6001
  %conv299 = trunc i64 %sub.ptr.sub298 to i32, !dbg !6001
  %call300 = tail call ptr @Perl_savepvn(ptr noundef nonnull %incdec.ptr281, i32 noundef %conv299) #17, !dbg !6001
  store ptr %call300, ptr @PL_inplace, align 8, !dbg !6002
  %54 = load i8, ptr %53, align 1, !dbg !6003
  %tobool301.not = icmp eq i8 %54, 0, !dbg !6003
  br i1 %tobool301.not, label %cleanup, label %if.then302, !dbg !6004

if.then302:                                       ; preds = %while.end295
  %incdec.ptr303 = getelementptr inbounds i8, ptr %53, i64 1, !dbg !6005
  call void @llvm.dbg.value(metadata ptr %incdec.ptr303, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr303, ptr %s.addr, align 8, !dbg !6005
  %55 = load i8, ptr %incdec.ptr303, align 1, !dbg !6007
  %cmp305 = icmp eq i8 %55, 45, !dbg !6009
  br i1 %cmp305, label %if.then307, label %cleanup, !dbg !6010

if.then307:                                       ; preds = %if.then302
  %incdec.ptr308 = getelementptr inbounds i8, ptr %53, i64 2, !dbg !6011
  call void @llvm.dbg.value(metadata ptr %incdec.ptr308, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr308, ptr %s.addr, align 8, !dbg !6011
  br label %cleanup, !dbg !6012

while.cond313:                                    ; preds = %entry, %land.rhs316
  %.pn = phi ptr [ %storemerge, %land.rhs316 ], [ %s, %entry ]
  %storemerge = getelementptr inbounds i8, ptr %.pn, i64 1, !dbg !6013
  call void @llvm.dbg.value(metadata ptr %storemerge, metadata !5754, metadata !DIExpression()), !dbg !5792
  %56 = load i8, ptr %storemerge, align 1, !dbg !6014
  %tobool315.not = icmp eq i8 %56, 0, !dbg !6014
  br i1 %tobool315.not, label %if.else372, label %land.rhs316, !dbg !6015

land.rhs316:                                      ; preds = %while.cond313
  %idxprom317 = zext i8 %56 to i64, !dbg !6016
  %arrayidx318 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom317, !dbg !6016
  %57 = load i32, ptr %arrayidx318, align 4, !dbg !6016
  %and319 = and i32 %57, 17408, !dbg !6016
  %cmp320 = icmp eq i32 %and319, 17408, !dbg !6016
  br i1 %cmp320, label %while.cond313, label %do.body329.preheader, !dbg !6017, !llvm.loop !6018

do.body329.preheader:                             ; preds = %land.rhs316
  store ptr %storemerge, ptr %s.addr, align 8, !dbg !6013
  br label %do.body329, !dbg !6020

do.body329:                                       ; preds = %do.body329.preheader, %do.cond354
  %58 = phi i8 [ %62, %do.cond354 ], [ %56, %do.body329.preheader ], !dbg !6023
  %p.0 = phi ptr [ %p.1, %do.cond354 ], [ %storemerge, %do.body329.preheader ], !dbg !6025
  call void @llvm.dbg.value(metadata ptr %p.0, metadata !5780, metadata !DIExpression()), !dbg !6025
  call void @llvm.dbg.value(metadata ptr %p.0, metadata !5777, metadata !DIExpression()), !dbg !6025
  %tobool332.not680 = icmp eq i8 %58, 0, !dbg !6023
  br i1 %tobool332.not680, label %for.end344, label %land.rhs333, !dbg !6026

land.rhs333:                                      ; preds = %do.body329, %for.inc342
  %59 = phi i8 [ %61, %for.inc342 ], [ %58, %do.body329 ]
  %e328.0681 = phi ptr [ %incdec.ptr343, %for.inc342 ], [ %p.0, %do.body329 ]
  call void @llvm.dbg.value(metadata ptr %e328.0681, metadata !5777, metadata !DIExpression()), !dbg !6025
  %idxprom334 = zext i8 %59 to i64, !dbg !6027
  %arrayidx335 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom334, !dbg !6027
  %60 = load i32, ptr %arrayidx335, align 4, !dbg !6027
  %and336 = and i32 %60, 17408, !dbg !6027
  %cmp337.not = icmp eq i32 %and336, 17408, !dbg !6027
  br i1 %cmp337.not, label %for.end344, label %for.inc342, !dbg !6028

for.inc342:                                       ; preds = %land.rhs333
  %incdec.ptr343 = getelementptr inbounds i8, ptr %e328.0681, i64 1, !dbg !6029
  call void @llvm.dbg.value(metadata ptr %incdec.ptr343, metadata !5777, metadata !DIExpression()), !dbg !6025
  %61 = load i8, ptr %incdec.ptr343, align 1, !dbg !6023
  %tobool332.not = icmp eq i8 %61, 0, !dbg !6023
  br i1 %tobool332.not, label %for.end344, label %land.rhs333, !dbg !6026, !llvm.loop !6030

for.end344:                                       ; preds = %land.rhs333, %for.inc342, %do.body329
  %e328.0.lcssa = phi ptr [ %p.0, %do.body329 ], [ %incdec.ptr343, %for.inc342 ], [ %e328.0681, %land.rhs333 ], !dbg !6032
  call void @llvm.dbg.value(metadata ptr %e328.0.lcssa, metadata !5780, metadata !DIExpression()), !dbg !6025
  br label %while.cond345, !dbg !6033

while.cond345:                                    ; preds = %while.cond345, %for.end344
  %p.1 = phi ptr [ %e328.0.lcssa, %for.end344 ], [ %incdec.ptr352, %while.cond345 ], !dbg !6034
  call void @llvm.dbg.value(metadata ptr %p.1, metadata !5780, metadata !DIExpression()), !dbg !6025
  %62 = load i8, ptr %p.1, align 1, !dbg !6035
  %idxprom346 = zext i8 %62 to i64, !dbg !6035
  %arrayidx347 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom346, !dbg !6035
  %63 = load i32, ptr %arrayidx347, align 4, !dbg !6035
  %and348 = and i32 %63, 17408, !dbg !6035
  %cmp349 = icmp eq i32 %and348, 17408, !dbg !6035
  %incdec.ptr352 = getelementptr inbounds i8, ptr %p.1, i64 1, !dbg !6036
  call void @llvm.dbg.value(metadata ptr %incdec.ptr352, metadata !5780, metadata !DIExpression()), !dbg !6025
  br i1 %cmp349, label %while.cond345, label %do.cond354, !dbg !6033, !llvm.loop !6037

do.cond354:                                       ; preds = %while.cond345
  switch i8 %62, label %do.body329 [
    i8 0, label %do.end362
    i8 45, label %do.end362
  ], !dbg !6038

do.end362:                                        ; preds = %do.cond354, %do.cond354
  call void @llvm.dbg.value(metadata ptr %storemerge, metadata !5754, metadata !DIExpression()), !dbg !5792
  %sub.ptr.lhs.cast363 = ptrtoint ptr %e328.0.lcssa to i64, !dbg !6039
  %sub.ptr.rhs.cast364 = ptrtoint ptr %storemerge to i64, !dbg !6039
  %sub.ptr.sub365 = sub i64 %sub.ptr.lhs.cast363, %sub.ptr.rhs.cast364, !dbg !6039
  tail call fastcc void @S_incpush(ptr noundef nonnull %storemerge, i64 noundef %sub.ptr.sub365, i32 noundef 15), !dbg !6039
  call void @llvm.dbg.value(metadata ptr %p.1, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %p.1, ptr %s.addr, align 8, !dbg !6040
  %64 = load i8, ptr %p.1, align 1, !dbg !6041
  %cmp367 = icmp eq i8 %64, 45, !dbg !6043
  %spec.store.select = select i1 %cmp367, ptr %incdec.ptr352, ptr %p.1, !dbg !6044
  store ptr %spec.store.select, ptr %s.addr, align 8, !dbg !6025
  %spec.select723 = select i1 %cmp367, ptr %incdec.ptr352, ptr %p.1, !dbg !6044
  br label %cleanup, !dbg !6044

if.else372:                                       ; preds = %while.cond313
  store ptr %storemerge, ptr %s.addr, align 8, !dbg !6013
  call void @llvm.dbg.value(metadata ptr undef, metadata !5754, metadata !DIExpression()), !dbg !5792
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.25) #17, !dbg !6045
  br label %cleanup

sw.bb374:                                         ; preds = %entry
  store i8 1, ptr @PL_minus_l, align 1, !dbg !6046
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr375 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6047
  call void @llvm.dbg.value(metadata ptr %incdec.ptr375, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr375, ptr %s.addr, align 8, !dbg !6047
  %65 = load ptr, ptr @PL_ors_sv, align 8, !dbg !6048
  %tobool376.not = icmp eq ptr %65, null, !dbg !6048
  br i1 %tobool376.not, label %if.end378, label %if.then.i658, !dbg !6050

if.then.i658:                                     ; preds = %sw.bb374
  call void @llvm.dbg.value(metadata ptr %65, metadata !1967, metadata !DIExpression()) #17, !dbg !6051
  %sv_refcnt.i656 = getelementptr inbounds %struct.sv, ptr %65, i64 0, i32 1, !dbg !6054
  %66 = load i32, ptr %sv_refcnt.i656, align 8, !dbg !6054
  call void @llvm.dbg.value(metadata i32 %66, metadata !1973, metadata !DIExpression()) #17, !dbg !6055
  %cmp1.i657 = icmp ugt i32 %66, 1, !dbg !6056
  br i1 %cmp1.i657, label %if.then4.i660, label %if.else.i661, !dbg !6057

if.then4.i660:                                    ; preds = %if.then.i658
  %sub.i659 = add i32 %66, -1, !dbg !6058
  store i32 %sub.i659, ptr %sv_refcnt.i656, align 8, !dbg !6059
  br label %S_SvREFCNT_dec.exit662, !dbg !6060

if.else.i661:                                     ; preds = %if.then.i658
  tail call void @Perl_sv_free2(ptr noundef nonnull %65, i32 noundef %66) #17, !dbg !6061
  br label %S_SvREFCNT_dec.exit662

S_SvREFCNT_dec.exit662:                           ; preds = %if.then4.i660, %if.else.i661
  store ptr null, ptr @PL_ors_sv, align 8, !dbg !6062
  br label %if.end378, !dbg !6063

if.end378:                                        ; preds = %S_SvREFCNT_dec.exit662, %sw.bb374
  call void @llvm.dbg.value(metadata ptr %incdec.ptr375, metadata !5754, metadata !DIExpression()), !dbg !5792
  %67 = load i8, ptr %incdec.ptr375, align 1, !dbg !6064
  %idxprom379 = zext i8 %67 to i64, !dbg !6064
  %arrayidx380 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom379, !dbg !6064
  %68 = load i32, ptr %arrayidx380, align 4, !dbg !6064
  %and381 = and i32 %68, 2, !dbg !6064
  %tobool382.not = icmp eq i32 %and381, 0, !dbg !6064
  br i1 %tobool382.not, label %if.else398, label %if.then385, !dbg !6065

if.then385:                                       ; preds = %if.end378
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flags386) #17, !dbg !6066
  call void @llvm.dbg.value(metadata i32 0, metadata !5781, metadata !DIExpression()), !dbg !6067
  store i32 0, ptr %flags386, align 4, !dbg !6068
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %numlen387) #17, !dbg !6069
  %call388 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str, i64 noundef 1) #17, !dbg !6070
  store ptr %call388, ptr @PL_ors_sv, align 8, !dbg !6071
  call void @llvm.dbg.value(metadata ptr %incdec.ptr375, metadata !5754, metadata !DIExpression()), !dbg !5792
  %69 = load i8, ptr %incdec.ptr375, align 1, !dbg !6072
  %cmp390 = icmp eq i8 %69, 48, !dbg !6073
  %70 = select i1 %cmp390, i64 4, i64 3, !dbg !6074
  call void @llvm.dbg.value(metadata i64 %70, metadata !5784, metadata !DIExpression()), !dbg !6067
  store i64 %70, ptr %numlen387, align 8, !dbg !6075
  call void @llvm.dbg.value(metadata ptr %flags386, metadata !5781, metadata !DIExpression(DW_OP_deref)), !dbg !6067
  call void @llvm.dbg.value(metadata ptr %numlen387, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !6067
  %call394 = call i64 @Perl_grok_oct(ptr noundef nonnull %incdec.ptr375, ptr noundef nonnull %numlen387, ptr noundef nonnull %flags386, ptr noundef null) #17, !dbg !6076
  %conv395 = trunc i64 %call394 to i8, !dbg !6077
  %71 = load ptr, ptr @PL_ors_sv, align 8, !dbg !6078
  %sv_u396 = getelementptr inbounds %struct.sv, ptr %71, i64 0, i32 3, !dbg !6078
  %72 = load ptr, ptr %sv_u396, align 8, !dbg !6078
  store i8 %conv395, ptr %72, align 1, !dbg !6079
  %73 = load i64, ptr %numlen387, align 8, !dbg !6080
  call void @llvm.dbg.value(metadata i64 %73, metadata !5784, metadata !DIExpression()), !dbg !6067
  %74 = load ptr, ptr %s.addr, align 8, !dbg !6081
  call void @llvm.dbg.value(metadata ptr %74, metadata !5754, metadata !DIExpression()), !dbg !5792
  %add.ptr397 = getelementptr inbounds i8, ptr %74, i64 %73, !dbg !6081
  call void @llvm.dbg.value(metadata ptr %add.ptr397, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %add.ptr397, ptr %s.addr, align 8, !dbg !6081
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %numlen387) #17, !dbg !6082
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flags386) #17, !dbg !6082
  br label %cleanup, !dbg !6083

if.else398:                                       ; preds = %if.end378
  %75 = load ptr, ptr @PL_rs, align 8, !dbg !6084
  %sv_flags399 = getelementptr inbounds %struct.sv, ptr %75, i64 0, i32 2, !dbg !6084
  %76 = load i32, ptr %sv_flags399, align 4, !dbg !6084
  %and400 = and i32 %76, 1024, !dbg !6084
  %tobool401.not = icmp eq i32 %and400, 0, !dbg !6084
  br i1 %tobool401.not, label %if.else408, label %land.lhs.true402, !dbg !6084

land.lhs.true402:                                 ; preds = %if.else398
  %77 = load ptr, ptr %75, align 8, !dbg !6084
  %xpv_cur404 = getelementptr inbounds %struct.xpv, ptr %77, i64 0, i32 2, !dbg !6084
  %78 = load i64, ptr %xpv_cur404, align 8, !dbg !6084
  %tobool405.not = icmp eq i64 %78, 0, !dbg !6084
  br i1 %tobool405.not, label %if.then406, label %if.else408, !dbg !6087

if.then406:                                       ; preds = %land.lhs.true402
  %call407 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.26, i64 noundef 2) #17, !dbg !6088
  store ptr %call407, ptr @PL_ors_sv, align 8, !dbg !6090
  br label %cleanup, !dbg !6091

if.else408:                                       ; preds = %land.lhs.true402, %if.else398
  %call409 = tail call ptr @Perl_newSVsv(ptr noundef nonnull %75) #17, !dbg !6092
  store ptr %call409, ptr @PL_ors_sv, align 8, !dbg !6094
  br label %cleanup

sw.bb413:                                         ; preds = %entry, %entry
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr414 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6095
  call void @llvm.dbg.value(metadata ptr %incdec.ptr414, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr414, ptr %s.addr, align 8, !dbg !6095
  %79 = load i8, ptr %incdec.ptr414, align 1, !dbg !6096
  switch i8 %79, label %if.end425 [
    i8 0, label %if.else495
    i8 45, label %if.then423
  ], !dbg !6097

if.then423:                                       ; preds = %sw.bb413
  call void @llvm.dbg.value(metadata ptr @.str.28, metadata !5790, metadata !DIExpression()), !dbg !6098
  %incdec.ptr424 = getelementptr inbounds i8, ptr %s, i64 2, !dbg !6099
  call void @llvm.dbg.value(metadata ptr %incdec.ptr424, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr424, ptr %s.addr, align 8, !dbg !6099
  br label %if.end425, !dbg !6102

if.end425:                                        ; preds = %sw.bb413, %if.then423
  %80 = phi ptr [ %incdec.ptr424, %if.then423 ], [ %incdec.ptr414, %sw.bb413 ], !dbg !6103
  %use.0 = phi ptr [ @.str.28, %if.then423 ], [ @.str.27, %sw.bb413 ], !dbg !6098
  call void @llvm.dbg.value(metadata ptr %use.0, metadata !5790, metadata !DIExpression()), !dbg !6098
  %call426 = tail call ptr @Perl_newSVpvn(ptr noundef nonnull %use.0, i64 noundef 4) #17, !dbg !6104
  call void @llvm.dbg.value(metadata ptr %call426, metadata !5789, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata ptr %80, metadata !5785, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata i8 0, metadata !5791, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata ptr %80, metadata !5754, metadata !DIExpression()), !dbg !5792
  %81 = load i8, ptr %80, align 1, !dbg !6105
  %idxprom428671 = zext i8 %81 to i64, !dbg !6105
  %arrayidx429672 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom428671, !dbg !6105
  %82 = load i32, ptr %arrayidx429672, align 4, !dbg !6105
  %and430673 = and i32 %82, 16385, !dbg !6105
  %cmp431674 = icmp eq i32 %and430673, 16385, !dbg !6105
  %cmp435675 = icmp eq i8 %81, 58
  %or.cond644676 = select i1 %cmp431674, i1 true, i1 %cmp435675, !dbg !6106
  br i1 %or.cond644676, label %while.body438, label %if.then455, !dbg !6106

while.body438:                                    ; preds = %if.end425, %if.end451
  %83 = phi ptr [ %86, %if.end451 ], [ %80, %if.end425 ]
  %colon.0677 = phi i8 [ %colon.1, %if.end451 ], [ 0, %if.end425 ]
  call void @llvm.dbg.value(metadata i8 %colon.0677, metadata !5791, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata ptr %83, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr439 = getelementptr inbounds i8, ptr %83, i64 1, !dbg !6107
  call void @llvm.dbg.value(metadata ptr %incdec.ptr439, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr439, ptr %s.addr, align 8, !dbg !6107
  %84 = load i8, ptr %83, align 1, !dbg !6110
  %cmp441 = icmp eq i8 %84, 58, !dbg !6111
  br i1 %cmp441, label %if.then443, label %if.end451, !dbg !6112

if.then443:                                       ; preds = %while.body438
  %85 = load i8, ptr %incdec.ptr439, align 1, !dbg !6113
  %cmp445 = icmp eq i8 %85, 58, !dbg !6116
  br i1 %cmp445, label %if.then447, label %if.end451, !dbg !6117

if.then447:                                       ; preds = %if.then443
  %incdec.ptr448 = getelementptr inbounds i8, ptr %83, i64 2, !dbg !6118
  call void @llvm.dbg.value(metadata ptr %incdec.ptr448, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr448, ptr %s.addr, align 8, !dbg !6118
  br label %if.end451, !dbg !6119

if.end451:                                        ; preds = %if.then443, %if.then447, %while.body438
  %86 = phi ptr [ %incdec.ptr448, %if.then447 ], [ %incdec.ptr439, %while.body438 ], [ %incdec.ptr439, %if.then443 ], !dbg !6105
  %colon.1 = phi i8 [ %colon.0677, %if.then447 ], [ %colon.0677, %while.body438 ], [ 1, %if.then443 ], !dbg !6098
  call void @llvm.dbg.value(metadata i8 %colon.1, metadata !5791, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata ptr %86, metadata !5754, metadata !DIExpression()), !dbg !5792
  %87 = load i8, ptr %86, align 1, !dbg !6105
  %idxprom428 = zext i8 %87 to i64, !dbg !6105
  %arrayidx429 = getelementptr inbounds [0 x i32], ptr @PL_charclass, i64 0, i64 %idxprom428, !dbg !6105
  %88 = load i32, ptr %arrayidx429, align 4, !dbg !6105
  %and430 = and i32 %88, 16385, !dbg !6105
  %cmp431 = icmp eq i32 %and430, 16385, !dbg !6105
  %cmp435 = icmp eq i8 %87, 58
  %or.cond644 = select i1 %cmp431, i1 true, i1 %cmp435, !dbg !6106
  br i1 %or.cond644, label %while.body438, label %while.end452, !dbg !6106, !llvm.loop !6120

while.end452:                                     ; preds = %if.end451
  %cmp453 = icmp eq ptr %86, %80, !dbg !6123
  br i1 %cmp453, label %if.then455, label %if.end457, !dbg !6125

if.then455:                                       ; preds = %if.end425, %while.end452
  %89 = phi ptr [ %86, %while.end452 ], [ %80, %if.end425 ]
  %colon.0.lcssa712 = phi i8 [ %colon.1, %while.end452 ], [ 0, %if.end425 ]
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.29, i32 noundef %conv) #17, !dbg !6126
  br label %if.end457, !dbg !6126

if.end457:                                        ; preds = %if.then455, %while.end452
  %90 = phi ptr [ %89, %if.then455 ], [ %86, %while.end452 ]
  %colon.0.lcssa711 = phi i8 [ %colon.0.lcssa712, %if.then455 ], [ %colon.1, %while.end452 ]
  %91 = and i8 %colon.0.lcssa711, 1, !dbg !6127
  %tobool458.not = icmp eq i8 %91, 0, !dbg !6127
  br i1 %tobool458.not, label %if.end465, label %if.then459, !dbg !6129

if.then459:                                       ; preds = %if.end457
  call void @llvm.dbg.value(metadata ptr %86, metadata !5754, metadata !DIExpression()), !dbg !5792
  %sub.ptr.lhs.cast460 = ptrtoint ptr %90 to i64, !dbg !6130
  %sub.ptr.rhs.cast461 = ptrtoint ptr %80 to i64, !dbg !6130
  %sub.ptr.sub462 = sub i64 %sub.ptr.lhs.cast460, %sub.ptr.rhs.cast461, !dbg !6130
  %conv463 = trunc i64 %sub.ptr.sub462 to i32, !dbg !6131
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.30, i32 noundef %conv463, ptr noundef nonnull %80, i32 noundef %conv) #17, !dbg !6132
  br label %if.end465, !dbg !6132

if.end465:                                        ; preds = %if.then459, %if.end457
  call void @llvm.dbg.value(metadata ptr %86, metadata !5754, metadata !DIExpression()), !dbg !5792
  %call466 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %90) #21, !dbg !6133
  %add.ptr467 = getelementptr inbounds i8, ptr %90, i64 %call466, !dbg !6134
  call void @llvm.dbg.value(metadata ptr %add.ptr467, metadata !5788, metadata !DIExpression()), !dbg !6098
  %92 = load i8, ptr %90, align 1, !dbg !6135
  %cmp469.not = icmp eq i8 %92, 61, !dbg !6137
  br i1 %cmp469.not, label %if.else486, label %if.then471, !dbg !6138

if.then471:                                       ; preds = %if.end465
  %sub.ptr.lhs.cast472 = ptrtoint ptr %add.ptr467 to i64, !dbg !6139
  %sub.ptr.rhs.cast473 = ptrtoint ptr %80 to i64, !dbg !6139
  %sub.ptr.sub474 = sub i64 %sub.ptr.lhs.cast472, %sub.ptr.rhs.cast473, !dbg !6139
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call426, ptr noundef nonnull %80, i64 noundef %sub.ptr.sub474, i32 noundef 2) #17, !dbg !6139
  %cmp476 = icmp eq i8 %0, 109, !dbg !6141
  br i1 %cmp476, label %if.then478, label %if.end494, !dbg !6143

if.then478:                                       ; preds = %if.then471
  call void @llvm.dbg.value(metadata ptr %86, metadata !5754, metadata !DIExpression()), !dbg !5792
  %93 = load i8, ptr %90, align 1, !dbg !6144
  %cmp480.not = icmp eq i8 %93, 0, !dbg !6147
  br i1 %cmp480.not, label %if.end484, label %if.then482, !dbg !6148

if.then482:                                       ; preds = %if.then478
  %conv479 = sext i8 %93 to i32, !dbg !6144
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.31, i32 noundef %conv479) #17, !dbg !6149
  br label %if.end484, !dbg !6149

if.end484:                                        ; preds = %if.then482, %if.then478
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call426, ptr noundef nonnull @.str.32, i64 noundef 3, i32 noundef 2) #17, !dbg !6150
  br label %if.end494, !dbg !6151

if.else486:                                       ; preds = %if.end465
  %sub.ptr.lhs.cast487 = ptrtoint ptr %90 to i64, !dbg !6152
  %sub.ptr.rhs.cast488 = ptrtoint ptr %80 to i64, !dbg !6152
  %sub.ptr.sub489 = sub i64 %sub.ptr.lhs.cast487, %sub.ptr.rhs.cast488, !dbg !6152
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call426, ptr noundef nonnull %80, i64 noundef %sub.ptr.sub489, i32 noundef 2) #17, !dbg !6152
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call426, ptr noundef nonnull @.str.33, i64 noundef 13, i32 noundef 2) #17, !dbg !6154
  call void @llvm.dbg.value(metadata ptr %86, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr490 = getelementptr inbounds i8, ptr %90, i64 1, !dbg !6155
  call void @llvm.dbg.value(metadata ptr %incdec.ptr490, metadata !5754, metadata !DIExpression()), !dbg !5792
  %gepdiff = add nsw i64 %call466, -1, !dbg !6156
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call426, ptr noundef nonnull %incdec.ptr490, i64 noundef %gepdiff, i32 noundef 2) #17, !dbg !6156
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call426, ptr noundef nonnull @.str.34, i64 noundef 2, i32 noundef 2) #17, !dbg !6157
  br label %if.end494

if.end494:                                        ; preds = %if.then471, %if.end484, %if.else486
  call void @llvm.dbg.value(metadata ptr %add.ptr467, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %add.ptr467, ptr %s.addr, align 8, !dbg !6158
  tail call void @Perl_av_create_and_push(ptr noundef nonnull @PL_preambleav, ptr noundef %call426) #17, !dbg !6159
  br label %cleanup, !dbg !6160

if.else495:                                       ; preds = %sw.bb413
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.35, i32 noundef %conv) #17, !dbg !6161
  br label %cleanup

sw.bb498:                                         ; preds = %entry
  store i8 1, ptr @PL_minus_n, align 1, !dbg !6162
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr499 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6163
  call void @llvm.dbg.value(metadata ptr %incdec.ptr499, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr499, ptr %s.addr, align 8, !dbg !6163
  br label %cleanup, !dbg !6164

sw.bb500:                                         ; preds = %entry
  store i8 1, ptr @PL_minus_p, align 1, !dbg !6165
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr501 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6166
  call void @llvm.dbg.value(metadata ptr %incdec.ptr501, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr501, ptr %s.addr, align 8, !dbg !6166
  br label %cleanup, !dbg !6167

sw.bb502:                                         ; preds = %entry
  store i8 1, ptr @PL_doswitches, align 1, !dbg !6168
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr503 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6169
  call void @llvm.dbg.value(metadata ptr %incdec.ptr503, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr503, ptr %s.addr, align 8, !dbg !6169
  br label %cleanup, !dbg !6170

sw.bb504:                                         ; preds = %entry, %entry
  %94 = load i8, ptr @PL_tainting, align 1, !dbg !6171, !range !1483
  %tobool505.not = icmp eq i8 %94, 0, !dbg !6171
  br i1 %tobool505.not, label %if.then506, label %if.end508, !dbg !6173

if.then506:                                       ; preds = %sw.bb504
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.36, i32 noundef %conv, ptr noundef nonnull @.str.1) #17, !dbg !6174
  br label %if.end508, !dbg !6174

if.end508:                                        ; preds = %if.then506, %sw.bb504
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr509 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6175
  call void @llvm.dbg.value(metadata ptr %incdec.ptr509, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr509, ptr %s.addr, align 8, !dbg !6175
  br label %cleanup, !dbg !6176

sw.bb510:                                         ; preds = %entry
  store i8 1, ptr @PL_do_undump, align 1, !dbg !6177
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr511 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6178
  call void @llvm.dbg.value(metadata ptr %incdec.ptr511, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr511, ptr %s.addr, align 8, !dbg !6178
  br label %cleanup, !dbg !6179

sw.bb512:                                         ; preds = %entry
  store i8 1, ptr @PL_unsafe, align 1, !dbg !6180
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr513 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6181
  call void @llvm.dbg.value(metadata ptr %incdec.ptr513, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr513, ptr %s.addr, align 8, !dbg !6181
  br label %cleanup, !dbg !6182

sw.bb514:                                         ; preds = %entry
  tail call fastcc void @S_minus_v(), !dbg !6183
  unreachable, !dbg !6183

sw.bb515:                                         ; preds = %entry
  %95 = load i8, ptr @PL_dowarn, align 1, !dbg !6184
  %96 = and i8 %95, 6, !dbg !6186
  %tobool518.not = icmp eq i8 %96, 0, !dbg !6186
  br i1 %tobool518.not, label %if.then519, label %if.end523, !dbg !6187

if.then519:                                       ; preds = %sw.bb515
  %or521 = or i8 %95, 1, !dbg !6188
  store i8 %or521, ptr @PL_dowarn, align 1, !dbg !6188
  br label %if.end523, !dbg !6190

if.end523:                                        ; preds = %if.then519, %sw.bb515
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr524 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6191
  call void @llvm.dbg.value(metadata ptr %incdec.ptr524, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr524, ptr %s.addr, align 8, !dbg !6191
  br label %cleanup, !dbg !6192

sw.bb525:                                         ; preds = %entry
  store i8 3, ptr @PL_dowarn, align 1, !dbg !6193
  %97 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !dbg !6194
  %magicptr = ptrtoint ptr %97 to i64, !dbg !6194
  switch i64 %magicptr, label %if.then534 [
    i64 16, label %if.end535
    i64 8, label %if.end535
    i64 0, label %if.end535
  ], !dbg !6194

if.then534:                                       ; preds = %sw.bb525
  tail call void @free(ptr noundef %97) #17, !dbg !6196
  br label %if.end535, !dbg !6196

if.end535:                                        ; preds = %sw.bb525, %sw.bb525, %sw.bb525, %if.then534
  store ptr inttoptr (i64 8 to ptr), ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !dbg !6197
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr536 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6198
  call void @llvm.dbg.value(metadata ptr %incdec.ptr536, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr536, ptr %s.addr, align 8, !dbg !6198
  br label %cleanup, !dbg !6199

sw.bb537:                                         ; preds = %entry
  store i8 4, ptr @PL_dowarn, align 1, !dbg !6200
  %98 = load ptr, ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !dbg !6201
  %magicptr645 = ptrtoint ptr %98 to i64, !dbg !6201
  switch i64 %magicptr645, label %if.then546 [
    i64 16, label %if.end547
    i64 8, label %if.end547
    i64 0, label %if.end547
  ], !dbg !6201

if.then546:                                       ; preds = %sw.bb537
  tail call void @free(ptr noundef %98) #17, !dbg !6203
  br label %if.end547, !dbg !6203

if.end547:                                        ; preds = %sw.bb537, %sw.bb537, %sw.bb537, %if.then546
  store ptr inttoptr (i64 16 to ptr), ptr getelementptr inbounds (%struct.cop, ptr @PL_compiling, i64 0, i32 12), align 8, !dbg !6204
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  %incdec.ptr548 = getelementptr inbounds i8, ptr %s, i64 1, !dbg !6205
  call void @llvm.dbg.value(metadata ptr %incdec.ptr548, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr548, ptr %s.addr, align 8, !dbg !6205
  br label %cleanup, !dbg !6206

while.cond550:                                    ; preds = %while.cond550.preheader, %while.body554
  %99 = phi i8 [ %.pre, %while.body554 ], [ %0, %while.cond550.preheader ], !dbg !6207
  %100 = phi ptr [ %incdec.ptr555, %while.body554 ], [ %s, %while.cond550.preheader ], !dbg !6208
  call void @llvm.dbg.value(metadata ptr %100, metadata !5754, metadata !DIExpression()), !dbg !5792
  switch i8 %99, label %cleanup [
    i8 32, label %while.body554
    i8 45, label %if.then561
  ], !dbg !5796

while.body554:                                    ; preds = %while.cond550
  %incdec.ptr555 = getelementptr inbounds i8, ptr %100, i64 1, !dbg !6209
  call void @llvm.dbg.value(metadata ptr %incdec.ptr555, metadata !5754, metadata !DIExpression()), !dbg !5792
  store ptr %incdec.ptr555, ptr %s.addr, align 8, !dbg !6209
  %.pre = load i8, ptr %incdec.ptr555, align 1, !dbg !6207
  br label %while.cond550, !dbg !5796, !llvm.loop !6210

if.then561:                                       ; preds = %while.cond550
  %add.ptr562 = getelementptr inbounds i8, ptr %100, i64 1, !dbg !6212
  br label %cleanup, !dbg !6214

sw.bb565:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.37, ptr noundef nonnull %s) #17, !dbg !6215
  br label %sw.default, !dbg !6215

sw.default:                                       ; preds = %entry, %sw.bb565
  call void @llvm.dbg.value(metadata ptr %s, metadata !5754, metadata !DIExpression()), !dbg !5792
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.38, ptr noundef nonnull %s) #17, !dbg !6216
  br label %cleanup, !dbg !6217

cleanup.loopexit:                                 ; preds = %for.cond
  store ptr %storemerge639, ptr %s.addr, align 8, !dbg !5982
  br label %cleanup, !dbg !6218

cleanup:                                          ; preds = %while.cond550, %do.end362, %cleanup.loopexit, %if.end494, %if.else495, %if.then385, %if.else408, %if.then406, %if.else372, %while.end295, %if.then307, %if.then302, %if.end263, %if.then265, %sw.default, %entry, %entry, %entry, %entry, %entry, %if.then561, %if.end547, %if.end535, %if.end523, %sw.bb512, %sw.bb510, %if.end508, %sw.bb502, %sw.bb500, %sw.bb498, %sw.bb190, %sw.bb188, %while.end182, %if.end170, %Perl_get_sv.exit
  %retval.0 = phi ptr [ %add.ptr562, %if.then561 ], [ %incdec.ptr548, %if.end547 ], [ %incdec.ptr536, %if.end535 ], [ %incdec.ptr524, %if.end523 ], [ %incdec.ptr513, %sw.bb512 ], [ %incdec.ptr511, %sw.bb510 ], [ %incdec.ptr509, %if.end508 ], [ %incdec.ptr503, %sw.bb502 ], [ %incdec.ptr501, %sw.bb500 ], [ %incdec.ptr499, %sw.bb498 ], [ %incdec.ptr191, %sw.bb190 ], [ %incdec.ptr189, %sw.bb188 ], [ %27, %while.end182 ], [ %21, %if.end170 ], [ %add.ptr163, %Perl_get_sv.exit ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %sw.default ], [ %44, %if.then265 ], [ %44, %if.end263 ], [ %incdec.ptr303, %if.then302 ], [ %incdec.ptr308, %if.then307 ], [ %53, %while.end295 ], [ %storemerge, %if.else372 ], [ %incdec.ptr375, %if.then406 ], [ %incdec.ptr375, %if.else408 ], [ %add.ptr397, %if.then385 ], [ %incdec.ptr414, %if.else495 ], [ %add.ptr467, %if.end494 ], [ %storemerge639, %cleanup.loopexit ], [ %spec.select723, %do.end362 ], [ null, %while.cond550 ], !dbg !5792
  ret ptr %retval.0, !dbg !6218
}

declare !dbg !6219 i64 @Perl_grok_hex(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !6223 ptr @Perl_sv_grow(ptr noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !6226 ptr @Perl_uvoffuni_to_utf8_flags(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !6229 i64 @Perl_grok_oct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !6230 void @Perl_sv_setsv_flags(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !6233 i32 @Perl_parse_unicode_opts(ptr noundef) local_unnamed_addr #3

declare !dbg !6236 void @Perl_sv_catpvn_flags(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !6239 void @Perl_sv_catpvf(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @Perl_init_debugger() local_unnamed_addr #0 !dbg !6242 {
entry:
  %0 = load ptr, ptr @PL_curstash, align 8, !dbg !6247
  call void @llvm.dbg.value(metadata ptr %0, metadata !6244, metadata !DIExpression()), !dbg !6248
  %1 = load ptr, ptr @PL_debstash, align 8, !dbg !6249
  call void @llvm.dbg.value(metadata ptr %1, metadata !3392, metadata !DIExpression()), !dbg !6250
  %cmp.not.i = icmp eq ptr %1, null, !dbg !6252
  br i1 %cmp.not.i, label %S_SvREFCNT_inc.exit, label %if.then.i, !dbg !6253

if.then.i:                                        ; preds = %entry
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 1, !dbg !6254
  %2 = load i32, ptr %sv_refcnt.i, align 8, !dbg !6255
  %inc.i = add i32 %2, 1, !dbg !6255
  store i32 %inc.i, ptr %sv_refcnt.i, align 8, !dbg !6255
  br label %S_SvREFCNT_inc.exit, !dbg !6254

S_SvREFCNT_inc.exit:                              ; preds = %entry, %if.then.i
  store ptr %1, ptr @PL_curstash, align 8, !dbg !6256
  tail call void @Perl_init_dbargs(), !dbg !6257
  %call1 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.41, i64 noundef 6, i32 noundef 2, i32 noundef 9) #17, !dbg !6258
  call void @llvm.dbg.value(metadata ptr %call1, metadata !3392, metadata !DIExpression()), !dbg !6259
  %cmp.not.i62 = icmp eq ptr %call1, null, !dbg !6261
  br i1 %cmp.not.i62, label %S_SvREFCNT_inc.exit66, label %if.then.i65, !dbg !6262

if.then.i65:                                      ; preds = %S_SvREFCNT_inc.exit
  %sv_refcnt.i63 = getelementptr inbounds %struct.sv, ptr %call1, i64 0, i32 1, !dbg !6263
  %3 = load i32, ptr %sv_refcnt.i63, align 8, !dbg !6264
  %inc.i64 = add i32 %3, 1, !dbg !6264
  store i32 %inc.i64, ptr %sv_refcnt.i63, align 8, !dbg !6264
  br label %S_SvREFCNT_inc.exit66, !dbg !6263

S_SvREFCNT_inc.exit66:                            ; preds = %S_SvREFCNT_inc.exit, %if.then.i65
  store ptr %call1, ptr @PL_DBgv, align 8, !dbg !6265
  %call3 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.42, i64 noundef 10, i32 noundef 2, i32 noundef 11) #17, !dbg !6266
  call void @llvm.dbg.value(metadata ptr %call3, metadata !3392, metadata !DIExpression()), !dbg !6267
  %cmp.not.i67 = icmp eq ptr %call3, null, !dbg !6269
  br i1 %cmp.not.i67, label %S_SvREFCNT_inc.exit71, label %if.then.i70, !dbg !6270

if.then.i70:                                      ; preds = %S_SvREFCNT_inc.exit66
  %sv_refcnt.i68 = getelementptr inbounds %struct.sv, ptr %call3, i64 0, i32 1, !dbg !6271
  %4 = load i32, ptr %sv_refcnt.i68, align 8, !dbg !6272
  %inc.i69 = add i32 %4, 1, !dbg !6272
  store i32 %inc.i69, ptr %sv_refcnt.i68, align 8, !dbg !6272
  br label %S_SvREFCNT_inc.exit71, !dbg !6271

S_SvREFCNT_inc.exit71:                            ; preds = %S_SvREFCNT_inc.exit66, %if.then.i70
  store ptr %call3, ptr @PL_DBline, align 8, !dbg !6273
  %call5 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.43, i64 noundef 7, i32 noundef 2, i32 noundef 12) #17, !dbg !6274
  %call6 = tail call ptr @Perl_gv_add_by_type(ptr noundef %call5, i32 noundef 12) #17, !dbg !6274
  call void @llvm.dbg.value(metadata ptr %call6, metadata !3392, metadata !DIExpression()), !dbg !6275
  %cmp.not.i72 = icmp eq ptr %call6, null, !dbg !6277
  br i1 %cmp.not.i72, label %S_SvREFCNT_inc.exit76, label %if.then.i75, !dbg !6278

if.then.i75:                                      ; preds = %S_SvREFCNT_inc.exit71
  %sv_refcnt.i73 = getelementptr inbounds %struct.sv, ptr %call6, i64 0, i32 1, !dbg !6279
  %5 = load i32, ptr %sv_refcnt.i73, align 8, !dbg !6280
  %inc.i74 = add i32 %5, 1, !dbg !6280
  store i32 %inc.i74, ptr %sv_refcnt.i73, align 8, !dbg !6280
  br label %S_SvREFCNT_inc.exit76, !dbg !6279

S_SvREFCNT_inc.exit76:                            ; preds = %S_SvREFCNT_inc.exit71, %if.then.i75
  store ptr %call6, ptr @PL_DBsub, align 8, !dbg !6281
  %call8 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.44, i64 noundef 10, i32 noundef 2, i32 noundef 3) #17, !dbg !6282
  %sv_u = getelementptr inbounds %struct.gv, ptr %call8, i64 0, i32 3, !dbg !6282
  %6 = load ptr, ptr %sv_u, align 8, !dbg !6282
  %7 = load ptr, ptr %6, align 8, !dbg !6282
  store ptr %7, ptr @PL_DBsingle, align 8, !dbg !6283
  %sv_flags = getelementptr inbounds %struct.sv, ptr %7, i64 0, i32 2, !dbg !6284
  %8 = load i32, ptr %sv_flags, align 4, !dbg !6284
  %and = and i32 %8, 256, !dbg !6284
  %tobool.not = icmp eq i32 %and, 0, !dbg !6284
  br i1 %tobool.not, label %if.then, label %if.end, !dbg !6286

if.then:                                          ; preds = %S_SvREFCNT_inc.exit76
  tail call void @Perl_sv_setiv(ptr noundef nonnull %7, i64 noundef 0) #17, !dbg !6287
  %.pre = load ptr, ptr @PL_DBsingle, align 8, !dbg !6288
  br label %if.end, !dbg !6287

if.end:                                           ; preds = %if.then, %S_SvREFCNT_inc.exit76
  %9 = phi ptr [ %.pre, %if.then ], [ %7, %S_SvREFCNT_inc.exit76 ], !dbg !6288
  %call9 = tail call ptr @Perl_sv_magicext(ptr noundef %9, ptr noundef null, i32 noundef 42, ptr noundef getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 6), ptr noundef null, i32 noundef 0) #17, !dbg !6288
  call void @llvm.dbg.value(metadata ptr %call9, metadata !6246, metadata !DIExpression()), !dbg !6248
  %mg_private = getelementptr inbounds %struct.magic, ptr %call9, i64 0, i32 2, !dbg !6289
  store i16 0, ptr %mg_private, align 8, !dbg !6290
  %10 = load ptr, ptr @PL_DBsingle, align 8, !dbg !6291
  %sv_flags10 = getelementptr inbounds %struct.sv, ptr %10, i64 0, i32 2, !dbg !6291
  %11 = load i32, ptr %sv_flags10, align 4, !dbg !6291
  %and11 = and i32 %11, 4194304, !dbg !6291
  %tobool12.not = icmp eq i32 %and11, 0, !dbg !6291
  br i1 %tobool12.not, label %do.end, label %if.then13, !dbg !6294

if.then13:                                        ; preds = %if.end
  %call14 = tail call i32 @Perl_mg_set(ptr noundef nonnull %10) #17, !dbg !6291
  br label %do.end, !dbg !6291

do.end:                                           ; preds = %if.end, %if.then13
  %call16 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.45, i64 noundef 9, i32 noundef 2, i32 noundef 3) #17, !dbg !6295
  %sv_u17 = getelementptr inbounds %struct.gv, ptr %call16, i64 0, i32 3, !dbg !6295
  %12 = load ptr, ptr %sv_u17, align 8, !dbg !6295
  %13 = load ptr, ptr %12, align 8, !dbg !6295
  store ptr %13, ptr @PL_DBtrace, align 8, !dbg !6296
  %sv_flags20 = getelementptr inbounds %struct.sv, ptr %13, i64 0, i32 2, !dbg !6297
  %14 = load i32, ptr %sv_flags20, align 4, !dbg !6297
  %and21 = and i32 %14, 256, !dbg !6297
  %tobool22.not = icmp eq i32 %and21, 0, !dbg !6297
  br i1 %tobool22.not, label %if.then23, label %if.end24, !dbg !6299

if.then23:                                        ; preds = %do.end
  tail call void @Perl_sv_setiv(ptr noundef nonnull %13, i64 noundef 0) #17, !dbg !6300
  %.pre80 = load ptr, ptr @PL_DBtrace, align 8, !dbg !6301
  br label %if.end24, !dbg !6300

if.end24:                                         ; preds = %if.then23, %do.end
  %15 = phi ptr [ %.pre80, %if.then23 ], [ %13, %do.end ], !dbg !6301
  %call25 = tail call ptr @Perl_sv_magicext(ptr noundef %15, ptr noundef null, i32 noundef 42, ptr noundef getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 6), ptr noundef null, i32 noundef 0) #17, !dbg !6301
  call void @llvm.dbg.value(metadata ptr %call25, metadata !6246, metadata !DIExpression()), !dbg !6248
  %mg_private26 = getelementptr inbounds %struct.magic, ptr %call25, i64 0, i32 2, !dbg !6302
  store i16 1, ptr %mg_private26, align 8, !dbg !6303
  %16 = load ptr, ptr @PL_DBtrace, align 8, !dbg !6304
  %sv_flags28 = getelementptr inbounds %struct.sv, ptr %16, i64 0, i32 2, !dbg !6304
  %17 = load i32, ptr %sv_flags28, align 4, !dbg !6304
  %and29 = and i32 %17, 4194304, !dbg !6304
  %tobool30.not = icmp eq i32 %and29, 0, !dbg !6304
  br i1 %tobool30.not, label %do.end37, label %if.then33, !dbg !6307

if.then33:                                        ; preds = %if.end24
  %call34 = tail call i32 @Perl_mg_set(ptr noundef nonnull %16) #17, !dbg !6304
  br label %do.end37, !dbg !6304

do.end37:                                         ; preds = %if.end24, %if.then33
  %call38 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.46, i64 noundef 10, i32 noundef 2, i32 noundef 3) #17, !dbg !6308
  %sv_u39 = getelementptr inbounds %struct.gv, ptr %call38, i64 0, i32 3, !dbg !6308
  %18 = load ptr, ptr %sv_u39, align 8, !dbg !6308
  %19 = load ptr, ptr %18, align 8, !dbg !6308
  store ptr %19, ptr @PL_DBsignal, align 8, !dbg !6309
  %sv_flags42 = getelementptr inbounds %struct.sv, ptr %19, i64 0, i32 2, !dbg !6310
  %20 = load i32, ptr %sv_flags42, align 4, !dbg !6310
  %and43 = and i32 %20, 256, !dbg !6310
  %tobool44.not = icmp eq i32 %and43, 0, !dbg !6310
  br i1 %tobool44.not, label %if.then45, label %if.end46, !dbg !6312

if.then45:                                        ; preds = %do.end37
  tail call void @Perl_sv_setiv(ptr noundef nonnull %19, i64 noundef 0) #17, !dbg !6313
  %.pre81 = load ptr, ptr @PL_DBsignal, align 8, !dbg !6314
  br label %if.end46, !dbg !6313

if.end46:                                         ; preds = %if.then45, %do.end37
  %21 = phi ptr [ %.pre81, %if.then45 ], [ %19, %do.end37 ], !dbg !6314
  %call47 = tail call ptr @Perl_sv_magicext(ptr noundef %21, ptr noundef null, i32 noundef 42, ptr noundef getelementptr inbounds ([31 x %struct.mgvtbl], ptr @PL_magic_vtables, i64 0, i64 6), ptr noundef null, i32 noundef 0) #17, !dbg !6314
  call void @llvm.dbg.value(metadata ptr %call47, metadata !6246, metadata !DIExpression()), !dbg !6248
  %mg_private48 = getelementptr inbounds %struct.magic, ptr %call47, i64 0, i32 2, !dbg !6315
  store i16 2, ptr %mg_private48, align 8, !dbg !6316
  %22 = load ptr, ptr @PL_DBsignal, align 8, !dbg !6317
  %sv_flags50 = getelementptr inbounds %struct.sv, ptr %22, i64 0, i32 2, !dbg !6317
  %23 = load i32, ptr %sv_flags50, align 4, !dbg !6317
  %and51 = and i32 %23, 4194304, !dbg !6317
  %tobool52.not = icmp eq i32 %and51, 0, !dbg !6317
  br i1 %tobool52.not, label %do.end59, label %if.then55, !dbg !6320

if.then55:                                        ; preds = %if.end46
  %call56 = tail call i32 @Perl_mg_set(ptr noundef nonnull %22) #17, !dbg !6317
  br label %do.end59, !dbg !6317

do.end59:                                         ; preds = %if.end46, %if.then55
  %24 = load ptr, ptr @PL_curstash, align 8, !dbg !6321
  call void @llvm.dbg.value(metadata ptr %24, metadata !1967, metadata !DIExpression()) #17, !dbg !6322
  %cmp.not.i77 = icmp eq ptr %24, null, !dbg !6324
  br i1 %cmp.not.i77, label %S_SvREFCNT_dec.exit, label %if.then.i79, !dbg !6325

if.then.i79:                                      ; preds = %do.end59
  %sv_refcnt.i78 = getelementptr inbounds %struct.sv, ptr %24, i64 0, i32 1, !dbg !6326
  %25 = load i32, ptr %sv_refcnt.i78, align 8, !dbg !6326
  call void @llvm.dbg.value(metadata i32 %25, metadata !1973, metadata !DIExpression()) #17, !dbg !6327
  %cmp1.i = icmp ugt i32 %25, 1, !dbg !6328
  br i1 %cmp1.i, label %if.then4.i, label %if.else.i, !dbg !6329

if.then4.i:                                       ; preds = %if.then.i79
  %sub.i = add i32 %25, -1, !dbg !6330
  store i32 %sub.i, ptr %sv_refcnt.i78, align 8, !dbg !6331
  br label %S_SvREFCNT_dec.exit, !dbg !6332

if.else.i:                                        ; preds = %if.then.i79
  tail call void @Perl_sv_free2(ptr noundef nonnull %24, i32 noundef %25) #17, !dbg !6333
  br label %S_SvREFCNT_dec.exit

S_SvREFCNT_dec.exit:                              ; preds = %do.end59, %if.then4.i, %if.else.i
  store ptr %0, ptr @PL_curstash, align 8, !dbg !6334
  ret void, !dbg !6335
}

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @S_usage() unnamed_addr #13 !dbg !1275 {
entry:
  call void @llvm.dbg.value(metadata ptr @S_usage.usage_msg, metadata !1279, metadata !DIExpression()), !dbg !6336
  %call = tail call ptr @Perl_PerlIO_stdout() #17, !dbg !6337
  call void @llvm.dbg.value(metadata ptr %call, metadata !1281, metadata !DIExpression()), !dbg !6336
  %0 = load ptr, ptr @PL_origargv, align 8, !dbg !6338
  %1 = load ptr, ptr %0, align 8, !dbg !6338
  %call1 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %call, ptr noundef nonnull @.str.119, ptr noundef %1) #17, !dbg !6339
  call void @llvm.dbg.value(metadata ptr @S_usage.usage_msg, metadata !1279, metadata !DIExpression()), !dbg !6336
  br label %while.body, !dbg !6340

while.body:                                       ; preds = %entry, %while.body
  %2 = phi ptr [ @.str.114, %entry ], [ %3, %while.body ]
  %p.05 = phi ptr [ @S_usage.usage_msg, %entry ], [ %incdec.ptr, %while.body ]
  call void @llvm.dbg.value(metadata ptr %p.05, metadata !1279, metadata !DIExpression()), !dbg !6336
  %incdec.ptr = getelementptr inbounds ptr, ptr %p.05, i64 1, !dbg !6341
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !1279, metadata !DIExpression()), !dbg !6336
  %call2 = tail call i32 @PerlIO_puts(ptr noundef %call, ptr noundef nonnull %2) #17, !dbg !6342
  %3 = load ptr, ptr %incdec.ptr, align 8, !dbg !6343
  %tobool.not = icmp eq ptr %3, null, !dbg !6340
  br i1 %tobool.not, label %while.end, label %while.body, !dbg !6340, !llvm.loop !6344

while.end:                                        ; preds = %while.body
  call void @llvm.dbg.value(metadata i32 0, metadata !4745, metadata !DIExpression()) #17, !dbg !6346
  %4 = load i8, ptr @PL_exit_flags, align 1, !dbg !6348
  %conv.i = zext i8 %4 to i32, !dbg !6348
  %and.i = and i32 %conv.i, 8, !dbg !6349
  %tobool.not.i = icmp eq i32 %and.i, 0, !dbg !6349
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i, !dbg !6350

if.then.i:                                        ; preds = %while.end
  tail call void @abort() #20, !dbg !6351
  unreachable, !dbg !6351

if.end.i:                                         ; preds = %while.end
  %and2.i = and i32 %conv.i, 4, !dbg !6352
  %tobool3.not.i = icmp eq i32 %and2.i, 0, !dbg !6352
  br i1 %tobool3.not.i, label %if.end11.i, label %if.then4.i, !dbg !6353

if.then4.i:                                       ; preds = %if.end.i
  %or.i = or i8 %4, 8, !dbg !6354
  store i8 %or.i, ptr @PL_exit_flags, align 1, !dbg !6354
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.58, i64 noundef 0) #17, !dbg !6355
  %5 = load i8, ptr @PL_exit_flags, align 1, !dbg !6356
  %6 = and i8 %5, -9, !dbg !6356
  store i8 %6, ptr @PL_exit_flags, align 1, !dbg !6356
  br label %if.end11.i, !dbg !6357

if.end11.i:                                       ; preds = %if.then4.i, %if.end.i
  store i32 0, ptr @PL_statusvalue, align 4, !dbg !6358
  store i32 0, ptr @PL_statusvalue_posix, align 4, !dbg !6359
  tail call fastcc void @S_my_exit_jump() #17, !dbg !6360
  unreachable, !dbg !6361
}

; Function Attrs: nounwind uwtable
define internal fastcc void @S_incpush(ptr noundef %dir, i64 noundef %len, i32 noundef %flags) unnamed_addr #0 !dbg !6362 {
entry:
  %tmpstatbuf.i155 = alloca %struct.stat, align 8
  %tmpstatbuf.i125 = alloca %struct.stat, align 8
  %tmpstatbuf.i = alloca %struct.stat, align 8
  call void @llvm.dbg.value(metadata ptr %dir, metadata !6366, metadata !DIExpression()), !dbg !6390
  call void @llvm.dbg.value(metadata i64 %len, metadata !6367, metadata !DIExpression()), !dbg !6390
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6368, metadata !DIExpression()), !dbg !6390
  %0 = trunc i32 %flags to i8, !dbg !6391
  %conv2 = and i8 %0, 14, !dbg !6391
  call void @llvm.dbg.value(metadata i8 %conv2, metadata !6369, metadata !DIExpression()), !dbg !6390
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6371, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 4, DW_OP_and, DW_OP_stack_value)), !dbg !6390
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6372, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_and, DW_OP_stack_value)), !dbg !6390
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6373, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_and, DW_OP_stack_value)), !dbg !6390
  %conv18 = and i8 %0, 1, !dbg !6392
  call void @llvm.dbg.value(metadata i8 %conv18, metadata !6374, metadata !DIExpression()), !dbg !6390
  %1 = lshr i8 %0, 4, !dbg !6393
  %2 = and i8 %1, 1, !dbg !6393
  %3 = xor i8 %2, 1, !dbg !6393
  call void @llvm.dbg.value(metadata i8 %3, metadata !6375, metadata !DIExpression()), !dbg !6390
  %4 = load ptr, ptr @PL_incgv, align 8, !dbg !6394
  %sv_u = getelementptr inbounds %struct.gv, ptr %4, i64 0, i32 3, !dbg !6394
  %5 = load ptr, ptr %sv_u, align 8, !dbg !6394
  %gp_av = getelementptr inbounds %struct.gp, ptr %5, i64 0, i32 6, !dbg !6394
  %6 = load ptr, ptr %gp_av, align 8, !dbg !6394
  %tobool21.not = icmp eq ptr %6, null, !dbg !6394
  br i1 %tobool21.not, label %cond.false, label %cond.end, !dbg !6394

cond.false:                                       ; preds = %entry
  %call = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %4, i32 noundef 11) #17, !dbg !6394
  %sv_u25 = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3, !dbg !6394
  %7 = load ptr, ptr %sv_u25, align 8, !dbg !6394
  %gp_av27 = getelementptr inbounds %struct.gp, ptr %7, i64 0, i32 6, !dbg !6394
  %8 = load ptr, ptr %gp_av27, align 8, !dbg !6394
  br label %cond.end, !dbg !6394

cond.end:                                         ; preds = %entry, %cond.false
  %cond28 = phi ptr [ %8, %cond.false ], [ %6, %entry ], !dbg !6394
  call void @llvm.dbg.value(metadata ptr %cond28, metadata !6376, metadata !DIExpression()), !dbg !6390
  call void @llvm.dbg.value(metadata ptr %dir, metadata !6395, metadata !DIExpression()) #17, !dbg !6404
  call void @llvm.dbg.value(metadata i64 %len, metadata !6400, metadata !DIExpression()) #17, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6401, metadata !DIExpression()) #17, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %flags, metadata !6402, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 32, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)) #17, !dbg !6404
  %call.i = tail call ptr @Perl_newSVpvn(ptr noundef %dir, i64 noundef %len) #17, !dbg !6406
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !6403, metadata !DIExpression()) #17, !dbg !6404
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !6378, metadata !DIExpression()), !dbg !6407
  %tobool31.not = icmp eq i8 %conv2, 0, !dbg !6408
  br i1 %tobool31.not, label %if.end58, label %cond.true32, !dbg !6408

cond.true32:                                      ; preds = %cond.end
  %tobool34.not = icmp eq i8 %conv18, 0, !dbg !6409
  br i1 %tobool34.not, label %if.then, label %cond.true35, !dbg !6409

cond.true35:                                      ; preds = %cond.true32
  %call36 = tail call ptr @Perl_newSV_type(i32 noundef 11) #17, !dbg !6410
  br label %if.then, !dbg !6409

if.then:                                          ; preds = %cond.true32, %cond.true35
  %cond42.ph = phi ptr [ %cond28, %cond.true32 ], [ %call36, %cond.true35 ]
  call void @llvm.dbg.value(metadata ptr undef, metadata !6380, metadata !DIExpression()), !dbg !6407
  %call44 = tail call ptr @Perl_newSVsv(ptr noundef %call.i) #17, !dbg !6411
  call void @llvm.dbg.value(metadata ptr %call44, metadata !6381, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata i64 0, metadata !6384, metadata !DIExpression()), !dbg !6412
  %conv6122 = and i32 %flags, 4, !dbg !6413
  %tobool45.not = icmp eq i32 %conv6122, 0, !dbg !6413
  br i1 %tobool45.not, label %if.end53, label %if.then46, !dbg !6415

if.then46:                                        ; preds = %if.then
  tail call void @Perl_sv_catpvn_flags(ptr noundef %call44, ptr noundef nonnull @.str.127, i64 noundef 16, i32 noundef 2) #17, !dbg !6416
  call void @llvm.dbg.value(metadata ptr undef, metadata !6418, metadata !DIExpression()) #17, !dbg !6426
  call void @llvm.dbg.value(metadata ptr %call44, metadata !6423, metadata !DIExpression()) #17, !dbg !6426
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !6424, metadata !DIExpression()) #17, !dbg !6426
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %tmpstatbuf.i) #17, !dbg !6428
  call void @llvm.dbg.declare(metadata ptr %tmpstatbuf.i, metadata !6425, metadata !DIExpression()) #17, !dbg !6429
  %sv_u.i = getelementptr inbounds %struct.sv, ptr %call44, i64 0, i32 3, !dbg !6430
  %9 = load ptr, ptr %sv_u.i, align 8, !dbg !6430
  call void @llvm.dbg.value(metadata ptr %9, metadata !6432, metadata !DIExpression()) #17, !dbg !6438
  call void @llvm.dbg.value(metadata ptr %tmpstatbuf.i, metadata !6437, metadata !DIExpression()) #17, !dbg !6438
  %call.i.i = call i32 @__xstat(i32 noundef 1, ptr noundef nonnull %9, ptr noundef nonnull %tmpstatbuf.i) #17, !dbg !6440
  %cmp.i = icmp sgt i32 %call.i.i, -1, !dbg !6441
  br i1 %cmp.i, label %land.lhs.true.i, label %do.body.i, !dbg !6442

land.lhs.true.i:                                  ; preds = %if.then46
  %st_mode.i = getelementptr inbounds %struct.stat, ptr %tmpstatbuf.i, i64 0, i32 3, !dbg !6443
  %10 = load i32, ptr %st_mode.i, align 8, !dbg !6443
  %and.i = and i32 %10, 61440, !dbg !6443
  %cmp1.i = icmp eq i32 %and.i, 16384, !dbg !6443
  br i1 %cmp1.i, label %if.then.i, label %do.body.i, !dbg !6444

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @Perl_av_push(ptr noundef %cond42.ph, ptr noundef nonnull %call44) #17, !dbg !6445
  %call2.i = call ptr @Perl_newSVsv(ptr noundef %call.i) #17, !dbg !6447
  call void @llvm.dbg.value(metadata ptr %call2.i, metadata !6423, metadata !DIExpression()) #17, !dbg !6426
  br label %S_incpush_if_exists.exit, !dbg !6448

do.body.i:                                        ; preds = %land.lhs.true.i, %if.then46
  %11 = load ptr, ptr %call.i, align 8, !dbg !6449
  %xpv_cur.i = getelementptr inbounds %struct.xpv, ptr %11, i64 0, i32 2, !dbg !6449
  %12 = load i64, ptr %xpv_cur.i, align 8, !dbg !6449
  %13 = load ptr, ptr %call44, align 8, !dbg !6449
  %xpv_cur4.i = getelementptr inbounds %struct.xpv, ptr %13, i64 0, i32 2, !dbg !6449
  store i64 %12, ptr %xpv_cur4.i, align 8, !dbg !6449
  br label %S_incpush_if_exists.exit

S_incpush_if_exists.exit:                         ; preds = %if.then.i, %do.body.i
  %dir.addr.0.i = phi ptr [ %call2.i, %if.then.i ], [ %call44, %do.body.i ]
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i, metadata !6423, metadata !DIExpression()) #17, !dbg !6426
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %tmpstatbuf.i) #17, !dbg !6452
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i, metadata !6381, metadata !DIExpression()), !dbg !6412
  call void @Perl_sv_catpvn_flags(ptr noundef %dir.addr.0.i, ptr noundef nonnull @.str.128, i64 noundef 7, i32 noundef 2) #17, !dbg !6453
  call void @llvm.dbg.value(metadata ptr undef, metadata !6418, metadata !DIExpression()) #17, !dbg !6454
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i, metadata !6423, metadata !DIExpression()) #17, !dbg !6454
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !6424, metadata !DIExpression()) #17, !dbg !6454
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %tmpstatbuf.i125) #17, !dbg !6456
  call void @llvm.dbg.declare(metadata ptr %tmpstatbuf.i125, metadata !6425, metadata !DIExpression()) #17, !dbg !6457
  %sv_u.i126 = getelementptr inbounds %struct.sv, ptr %dir.addr.0.i, i64 0, i32 3, !dbg !6458
  %14 = load ptr, ptr %sv_u.i126, align 8, !dbg !6458
  call void @llvm.dbg.value(metadata ptr %14, metadata !6432, metadata !DIExpression()) #17, !dbg !6459
  call void @llvm.dbg.value(metadata ptr %tmpstatbuf.i125, metadata !6437, metadata !DIExpression()) #17, !dbg !6459
  %call.i.i127 = call i32 @__xstat(i32 noundef 1, ptr noundef nonnull %14, ptr noundef nonnull %tmpstatbuf.i125) #17, !dbg !6461
  %cmp.i128 = icmp sgt i32 %call.i.i127, -1, !dbg !6462
  br i1 %cmp.i128, label %land.lhs.true.i132, label %do.body.i137, !dbg !6463

land.lhs.true.i132:                               ; preds = %S_incpush_if_exists.exit
  %st_mode.i129 = getelementptr inbounds %struct.stat, ptr %tmpstatbuf.i125, i64 0, i32 3, !dbg !6464
  %15 = load i32, ptr %st_mode.i129, align 8, !dbg !6464
  %and.i130 = and i32 %15, 61440, !dbg !6464
  %cmp1.i131 = icmp eq i32 %and.i130, 16384, !dbg !6464
  br i1 %cmp1.i131, label %if.then.i134, label %do.body.i137, !dbg !6465

if.then.i134:                                     ; preds = %land.lhs.true.i132
  call void @Perl_av_push(ptr noundef %cond42.ph, ptr noundef nonnull %dir.addr.0.i) #17, !dbg !6466
  %call2.i133 = call ptr @Perl_newSVsv(ptr noundef %call.i) #17, !dbg !6467
  call void @llvm.dbg.value(metadata ptr %call2.i133, metadata !6423, metadata !DIExpression()) #17, !dbg !6454
  br label %S_incpush_if_exists.exit139, !dbg !6468

do.body.i137:                                     ; preds = %land.lhs.true.i132, %S_incpush_if_exists.exit
  %16 = load ptr, ptr %call.i, align 8, !dbg !6469
  %xpv_cur.i135 = getelementptr inbounds %struct.xpv, ptr %16, i64 0, i32 2, !dbg !6469
  %17 = load i64, ptr %xpv_cur.i135, align 8, !dbg !6469
  %18 = load ptr, ptr %dir.addr.0.i, align 8, !dbg !6469
  %xpv_cur4.i136 = getelementptr inbounds %struct.xpv, ptr %18, i64 0, i32 2, !dbg !6469
  store i64 %17, ptr %xpv_cur4.i136, align 8, !dbg !6469
  br label %S_incpush_if_exists.exit139

S_incpush_if_exists.exit139:                      ; preds = %if.then.i134, %do.body.i137
  %dir.addr.0.i138 = phi ptr [ %call2.i133, %if.then.i134 ], [ %dir.addr.0.i, %do.body.i137 ]
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i138, metadata !6423, metadata !DIExpression()) #17, !dbg !6454
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %tmpstatbuf.i125) #17, !dbg !6470
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i138, metadata !6381, metadata !DIExpression()), !dbg !6412
  br label %if.end53, !dbg !6471

if.end53:                                         ; preds = %if.then, %S_incpush_if_exists.exit139
  %subdir.0 = phi ptr [ %dir.addr.0.i138, %S_incpush_if_exists.exit139 ], [ %call44, %if.then ], !dbg !6412
  call void @llvm.dbg.value(metadata ptr %subdir.0, metadata !6381, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata ptr %subdir.0, metadata !6381, metadata !DIExpression()), !dbg !6412
  %conv10124 = and i32 %flags, 8, !dbg !6472
  %tobool54.not = icmp eq i32 %conv10124, 0, !dbg !6472
  br i1 %tobool54.not, label %if.end57, label %if.then55, !dbg !6474

if.then55:                                        ; preds = %if.end53
  call void @Perl_sv_catpvn_flags(ptr noundef %subdir.0, ptr noundef nonnull @.str.130, i64 noundef 9, i32 noundef 2) #17, !dbg !6475
  call void @llvm.dbg.value(metadata ptr undef, metadata !6418, metadata !DIExpression()) #17, !dbg !6477
  call void @llvm.dbg.value(metadata ptr %subdir.0, metadata !6423, metadata !DIExpression()) #17, !dbg !6477
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !6424, metadata !DIExpression()) #17, !dbg !6477
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %tmpstatbuf.i155) #17, !dbg !6479
  call void @llvm.dbg.declare(metadata ptr %tmpstatbuf.i155, metadata !6425, metadata !DIExpression()) #17, !dbg !6480
  %sv_u.i156 = getelementptr inbounds %struct.sv, ptr %subdir.0, i64 0, i32 3, !dbg !6481
  %19 = load ptr, ptr %sv_u.i156, align 8, !dbg !6481
  call void @llvm.dbg.value(metadata ptr %19, metadata !6432, metadata !DIExpression()) #17, !dbg !6482
  call void @llvm.dbg.value(metadata ptr %tmpstatbuf.i155, metadata !6437, metadata !DIExpression()) #17, !dbg !6482
  %call.i.i157 = call i32 @__xstat(i32 noundef 1, ptr noundef nonnull %19, ptr noundef nonnull %tmpstatbuf.i155) #17, !dbg !6484
  %cmp.i158 = icmp sgt i32 %call.i.i157, -1, !dbg !6485
  br i1 %cmp.i158, label %land.lhs.true.i162, label %do.body.i167, !dbg !6486

land.lhs.true.i162:                               ; preds = %if.then55
  %st_mode.i159 = getelementptr inbounds %struct.stat, ptr %tmpstatbuf.i155, i64 0, i32 3, !dbg !6487
  %20 = load i32, ptr %st_mode.i159, align 8, !dbg !6487
  %and.i160 = and i32 %20, 61440, !dbg !6487
  %cmp1.i161 = icmp eq i32 %and.i160, 16384, !dbg !6487
  br i1 %cmp1.i161, label %if.then.i164, label %do.body.i167, !dbg !6488

if.then.i164:                                     ; preds = %land.lhs.true.i162
  call void @Perl_av_push(ptr noundef %cond42.ph, ptr noundef nonnull %subdir.0) #17, !dbg !6489
  %call2.i163 = call ptr @Perl_newSVsv(ptr noundef %call.i) #17, !dbg !6490
  call void @llvm.dbg.value(metadata ptr %call2.i163, metadata !6423, metadata !DIExpression()) #17, !dbg !6477
  br label %S_incpush_if_exists.exit169, !dbg !6491

do.body.i167:                                     ; preds = %land.lhs.true.i162, %if.then55
  %21 = load ptr, ptr %call.i, align 8, !dbg !6492
  %xpv_cur.i165 = getelementptr inbounds %struct.xpv, ptr %21, i64 0, i32 2, !dbg !6492
  %22 = load i64, ptr %xpv_cur.i165, align 8, !dbg !6492
  %23 = load ptr, ptr %subdir.0, align 8, !dbg !6492
  %xpv_cur4.i166 = getelementptr inbounds %struct.xpv, ptr %23, i64 0, i32 2, !dbg !6492
  store i64 %22, ptr %xpv_cur4.i166, align 8, !dbg !6492
  br label %S_incpush_if_exists.exit169

S_incpush_if_exists.exit169:                      ; preds = %if.then.i164, %do.body.i167
  %dir.addr.0.i168 = phi ptr [ %call2.i163, %if.then.i164 ], [ %subdir.0, %do.body.i167 ]
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i168, metadata !6423, metadata !DIExpression()) #17, !dbg !6477
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %tmpstatbuf.i155) #17, !dbg !6493
  call void @llvm.dbg.value(metadata ptr %dir.addr.0.i168, metadata !6381, metadata !DIExpression()), !dbg !6412
  br label %if.end57, !dbg !6494

if.end57:                                         ; preds = %S_incpush_if_exists.exit169, %if.end53
  %subdir.3 = phi ptr [ %dir.addr.0.i168, %S_incpush_if_exists.exit169 ], [ %subdir.0, %if.end53 ], !dbg !6412
  call void @llvm.dbg.value(metadata ptr %subdir.3, metadata !6381, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.value(metadata ptr %subdir.3, metadata !1967, metadata !DIExpression()) #17, !dbg !6495
  %cmp.not.i = icmp eq ptr %subdir.3, null, !dbg !6497
  br i1 %cmp.not.i, label %if.end58, label %if.then.i171, !dbg !6498

if.then.i171:                                     ; preds = %if.end57
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %subdir.3, i64 0, i32 1, !dbg !6499
  %24 = load i32, ptr %sv_refcnt.i, align 8, !dbg !6499
  call void @llvm.dbg.value(metadata i32 %24, metadata !1973, metadata !DIExpression()) #17, !dbg !6500
  %cmp1.i170 = icmp ugt i32 %24, 1, !dbg !6501
  br i1 %cmp1.i170, label %if.then4.i, label %if.else.i, !dbg !6502

if.then4.i:                                       ; preds = %if.then.i171
  %sub.i = add i32 %24, -1, !dbg !6503
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !6504
  br label %if.end58, !dbg !6505

if.else.i:                                        ; preds = %if.then.i171
  call void @Perl_sv_free2(ptr noundef nonnull %subdir.3, i32 noundef %24) #17, !dbg !6506
  br label %if.end58

if.end58:                                         ; preds = %if.else.i, %if.then4.i, %if.end57, %cond.end
  %cond42195 = phi ptr [ null, %cond.end ], [ %cond42.ph, %if.end57 ], [ %cond42.ph, %if.then4.i ], [ %cond42.ph, %if.else.i ]
  %tobool59.not = icmp eq i8 %conv18, 0, !dbg !6507
  br i1 %tobool59.not, label %if.else, label %if.then60, !dbg !6508

if.then60:                                        ; preds = %if.end58
  call void @llvm.dbg.value(metadata ptr undef, metadata !3289, metadata !DIExpression()) #17, !dbg !6509
  %sv_flags.i = getelementptr inbounds %struct.sv, ptr %cond42195, i64 0, i32 2, !dbg !6511
  %25 = load i32, ptr %sv_flags.i, align 4, !dbg !6511
  %and.i172 = and i32 %25, 8388608, !dbg !6511
  %tobool.not.i = icmp eq i32 %and.i172, 0, !dbg !6511
  br i1 %tobool.not.i, label %cond.false.i, label %cond.true.i, !dbg !6511

cond.true.i:                                      ; preds = %if.then60
  %call.i173 = call i32 @Perl_mg_size(ptr noundef nonnull %cond42195) #17, !dbg !6511
  %conv.i = sext i32 %call.i173 to i64, !dbg !6511
  br label %S_av_top_index.exit, !dbg !6511

cond.false.i:                                     ; preds = %if.then60
  %26 = load ptr, ptr %cond42195, align 8, !dbg !6511
  %xav_fill.i = getelementptr inbounds %struct.xpvav, ptr %26, i64 0, i32 2, !dbg !6511
  %27 = load i64, ptr %xav_fill.i, align 8, !dbg !6511
  br label %S_av_top_index.exit, !dbg !6511

S_av_top_index.exit:                              ; preds = %cond.true.i, %cond.false.i
  %cond.i = phi i64 [ %conv.i, %cond.true.i ], [ %27, %cond.false.i ], !dbg !6511
  %add = add nsw i64 %cond.i, 1, !dbg !6512
  call void @llvm.dbg.value(metadata i64 %add, metadata !6387, metadata !DIExpression()), !dbg !6513
  %conv62 = zext i8 %3 to i64, !dbg !6514
  %add63 = add i64 %add, %conv62, !dbg !6514
  call void @Perl_av_unshift(ptr noundef %cond28, i64 noundef %add63) #17, !dbg !6514
  %tobool64.not = icmp eq i8 %3, 0, !dbg !6515
  br i1 %tobool64.not, label %if.end67, label %if.then65, !dbg !6517

if.then65:                                        ; preds = %S_av_top_index.exit
  %call66 = call ptr @Perl_av_store(ptr noundef %cond28, i64 noundef %add, ptr noundef %call.i) #17, !dbg !6518
  br label %if.end67, !dbg !6518

if.end67:                                         ; preds = %if.then65, %S_av_top_index.exit
  call void @llvm.dbg.value(metadata i64 %add, metadata !6387, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6513
  %tobool68.not200 = icmp eq i64 %add, 0, !dbg !6519
  br i1 %tobool68.not200, label %if.then.i180, label %while.body, !dbg !6519

while.body:                                       ; preds = %if.end67, %S_SvREFCNT_inc.exit
  %extra.0201 = phi i64 [ %dec, %S_SvREFCNT_inc.exit ], [ %add, %if.end67 ]
  call void @llvm.dbg.value(metadata i64 %extra.0201, metadata !6387, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6513
  %dec = add i64 %extra.0201, -1, !dbg !6520
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6387, metadata !DIExpression()), !dbg !6513
  %call69 = call ptr @Perl_av_fetch(ptr noundef %cond42195, i64 noundef %dec, i32 noundef 0) #17, !dbg !6521
  %28 = load ptr, ptr %call69, align 8, !dbg !6521
  call void @llvm.dbg.value(metadata ptr %28, metadata !3392, metadata !DIExpression()), !dbg !6523
  %cmp.not.i174 = icmp eq ptr %28, null, !dbg !6525
  br i1 %cmp.not.i174, label %S_SvREFCNT_inc.exit, label %if.then.i176, !dbg !6526

if.then.i176:                                     ; preds = %while.body
  %sv_refcnt.i175 = getelementptr inbounds %struct.sv, ptr %28, i64 0, i32 1, !dbg !6527
  %29 = load i32, ptr %sv_refcnt.i175, align 8, !dbg !6528
  %inc.i = add i32 %29, 1, !dbg !6528
  store i32 %inc.i, ptr %sv_refcnt.i175, align 8, !dbg !6528
  br label %S_SvREFCNT_inc.exit, !dbg !6527

S_SvREFCNT_inc.exit:                              ; preds = %while.body, %if.then.i176
  %call71 = call ptr @Perl_av_store(ptr noundef %cond28, i64 noundef %dec, ptr noundef %28) #17, !dbg !6521
  call void @llvm.dbg.value(metadata i64 %dec, metadata !6387, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6513
  %tobool68.not = icmp eq i64 %dec, 0, !dbg !6519
  br i1 %tobool68.not, label %while.end, label %while.body, !dbg !6519, !llvm.loop !6529

while.end:                                        ; preds = %S_SvREFCNT_inc.exit
  call void @llvm.dbg.value(metadata ptr undef, metadata !1967, metadata !DIExpression()) #17, !dbg !6531
  %cmp.not.i177 = icmp eq ptr %cond42195, null, !dbg !6533
  br i1 %cmp.not.i177, label %if.end75, label %if.then.i180, !dbg !6534

if.then.i180:                                     ; preds = %if.end67, %while.end
  %sv_refcnt.i178 = getelementptr inbounds %struct.sv, ptr %cond42195, i64 0, i32 1, !dbg !6535
  %30 = load i32, ptr %sv_refcnt.i178, align 8, !dbg !6535
  call void @llvm.dbg.value(metadata i32 %30, metadata !1973, metadata !DIExpression()) #17, !dbg !6536
  %cmp1.i179 = icmp ugt i32 %30, 1, !dbg !6537
  br i1 %cmp1.i179, label %if.then4.i182, label %if.else.i183, !dbg !6538

if.then4.i182:                                    ; preds = %if.then.i180
  %sub.i181 = add i32 %30, -1, !dbg !6539
  store i32 %sub.i181, ptr %sv_refcnt.i178, align 8, !dbg !6540
  br label %if.end75, !dbg !6541

if.else.i183:                                     ; preds = %if.then.i180
  call void @Perl_sv_free2(ptr noundef nonnull %cond42195, i32 noundef %30) #17, !dbg !6542
  br label %if.end75

if.else:                                          ; preds = %if.end58
  %cond = icmp eq i8 %3, 0, !dbg !6543
  br i1 %cond, label %if.then77, label %if.end75.thread, !dbg !6543

if.end75.thread:                                  ; preds = %if.else
  call void @Perl_av_push(ptr noundef %cond28, ptr noundef %call.i) #17, !dbg !6544
  br label %if.end78, !dbg !6547

if.end75:                                         ; preds = %if.else.i183, %if.then4.i182, %while.end
  %tobool76.not = icmp ne i8 %3, 0, !dbg !6548
  %cmp.not.i185 = icmp eq ptr %call.i, null
  %or.cond = select i1 %tobool76.not, i1 true, i1 %cmp.not.i185, !dbg !6547
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !1967, metadata !DIExpression()) #17, !dbg !6550
  br i1 %or.cond, label %if.end78, label %if.then.i188, !dbg !6547

if.then77:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata ptr %call.i, metadata !1967, metadata !DIExpression()) #17, !dbg !6550
  %cmp.not.i185.old = icmp eq ptr %call.i, null, !dbg !6553
  br i1 %cmp.not.i185.old, label %if.end78, label %if.then.i188, !dbg !6554

if.then.i188:                                     ; preds = %if.end75, %if.then77
  %sv_refcnt.i186 = getelementptr inbounds %struct.sv, ptr %call.i, i64 0, i32 1, !dbg !6555
  %31 = load i32, ptr %sv_refcnt.i186, align 8, !dbg !6555
  call void @llvm.dbg.value(metadata i32 %31, metadata !1973, metadata !DIExpression()) #17, !dbg !6556
  %cmp1.i187 = icmp ugt i32 %31, 1, !dbg !6557
  br i1 %cmp1.i187, label %if.then4.i190, label %if.else.i191, !dbg !6558

if.then4.i190:                                    ; preds = %if.then.i188
  %sub.i189 = add i32 %31, -1, !dbg !6559
  store i32 %sub.i189, ptr %sv_refcnt.i186, align 8, !dbg !6560
  br label %if.end78, !dbg !6561

if.else.i191:                                     ; preds = %if.then.i188
  call void @Perl_sv_free2(ptr noundef nonnull %call.i, i32 noundef %31) #17, !dbg !6562
  br label %if.end78

if.end78:                                         ; preds = %if.else.i191, %if.then4.i190, %if.then77, %if.end75.thread, %if.end75
  ret void, !dbg !6563
}

declare !dbg !6564 ptr @Perl_newSVsv(ptr noundef) local_unnamed_addr #3

declare !dbg !6565 void @Perl_av_create_and_push(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind uwtable
define internal fastcc void @S_minus_v() unnamed_addr #13 !dbg !6570 {
entry:
  call void @llvm.dbg.value(metadata ptr @.str.2, metadata !6573, metadata !DIExpression()), !dbg !6577
  call void @llvm.dbg.value(metadata i64 7, metadata !6575, metadata !DIExpression()), !dbg !6577
  %call = tail call ptr @Perl_newSVpvn(ptr noundef nonnull @.str.2, i64 noundef 7) #17, !dbg !6578
  call void @llvm.dbg.value(metadata ptr %call, metadata !6576, metadata !DIExpression()), !dbg !6577
  %call1 = tail call ptr @Perl_PerlIO_stdout() #17, !dbg !6579
  call void @llvm.dbg.value(metadata ptr %call1, metadata !6572, metadata !DIExpression()), !dbg !6580
  %call2 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %call1, ptr noundef nonnull @.str.120, ptr noundef %call) #17, !dbg !6581
  call void @llvm.dbg.value(metadata ptr %call, metadata !3783, metadata !DIExpression()) #17, !dbg !6582
  %sv_refcnt.i = getelementptr inbounds %struct.sv, ptr %call, i64 0, i32 1, !dbg !6584
  %0 = load i32, ptr %sv_refcnt.i, align 8, !dbg !6584
  call void @llvm.dbg.value(metadata i32 %0, metadata !3786, metadata !DIExpression()) #17, !dbg !6582
  %cmp.i = icmp ugt i32 %0, 1, !dbg !6585
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !6586

if.then.i:                                        ; preds = %entry
  %sub.i = add i32 %0, -1, !dbg !6587
  store i32 %sub.i, ptr %sv_refcnt.i, align 8, !dbg !6588
  br label %S_SvREFCNT_dec_NN.exit, !dbg !6589

if.else.i:                                        ; preds = %entry
  tail call void @Perl_sv_free2(ptr noundef nonnull %call, i32 noundef %0) #17, !dbg !6590
  br label %S_SvREFCNT_dec_NN.exit

S_SvREFCNT_dec_NN.exit:                           ; preds = %if.then.i, %if.else.i
  %call3 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %call1, ptr noundef nonnull @.str.121) #17, !dbg !6591
  %call4 = tail call i32 (ptr, ptr, ...) @PerlIO_printf(ptr noundef %call1, ptr noundef nonnull @.str.122) #17, !dbg !6592
  call void @llvm.dbg.value(metadata i32 0, metadata !4745, metadata !DIExpression()) #17, !dbg !6593
  %1 = load i8, ptr @PL_exit_flags, align 1, !dbg !6595
  %conv.i = zext i8 %1 to i32, !dbg !6595
  %and.i = and i32 %conv.i, 8, !dbg !6596
  %tobool.not.i = icmp eq i32 %and.i, 0, !dbg !6596
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i8, !dbg !6597

if.then.i8:                                       ; preds = %S_SvREFCNT_dec_NN.exit
  tail call void @abort() #20, !dbg !6598
  unreachable, !dbg !6598

if.end.i:                                         ; preds = %S_SvREFCNT_dec_NN.exit
  %and2.i = and i32 %conv.i, 4, !dbg !6599
  %tobool3.not.i = icmp eq i32 %and2.i, 0, !dbg !6599
  br i1 %tobool3.not.i, label %if.end11.i, label %if.then4.i, !dbg !6600

if.then4.i:                                       ; preds = %if.end.i
  %or.i = or i8 %1, 8, !dbg !6601
  store i8 %or.i, ptr @PL_exit_flags, align 1, !dbg !6601
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.58, i64 noundef 0) #17, !dbg !6602
  %2 = load i8, ptr @PL_exit_flags, align 1, !dbg !6603
  %3 = and i8 %2, -9, !dbg !6603
  store i8 %3, ptr @PL_exit_flags, align 1, !dbg !6603
  br label %if.end11.i, !dbg !6604

if.end11.i:                                       ; preds = %if.then4.i, %if.end.i
  store i32 0, ptr @PL_statusvalue, align 4, !dbg !6605
  store i32 0, ptr @PL_statusvalue_posix, align 4, !dbg !6606
  tail call fastcc void @S_my_exit_jump() #17, !dbg !6607
  unreachable, !dbg !6608
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local void @Perl_my_unexec() local_unnamed_addr #8 !dbg !6609 {
entry:
  ret void, !dbg !6610
}

; Function Attrs: nounwind uwtable
define dso_local zeroext i1 @Perl_doing_taint(i32 noundef %argc, ptr nocapture noundef readonly %argv, ptr nocapture noundef readnone %envp) local_unnamed_addr #0 !dbg !6611 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !6615, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata ptr %argv, metadata !6616, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.value(metadata ptr %envp, metadata !6617, metadata !DIExpression()), !dbg !6622
  %call = tail call i32 @getuid() #17, !dbg !6623
  call void @llvm.dbg.value(metadata i32 %call, metadata !6618, metadata !DIExpression()), !dbg !6622
  %call1 = tail call i32 @geteuid() #17, !dbg !6624
  call void @llvm.dbg.value(metadata i32 %call1, metadata !6619, metadata !DIExpression()), !dbg !6622
  %call2 = tail call i32 @getgid() #17, !dbg !6625
  call void @llvm.dbg.value(metadata i32 %call2, metadata !6620, metadata !DIExpression()), !dbg !6622
  %call3 = tail call i32 @getegid() #17, !dbg !6626
  call void @llvm.dbg.value(metadata i32 %call3, metadata !6621, metadata !DIExpression()), !dbg !6622
  %tobool.not = icmp eq i32 %call, 0, !dbg !6627
  br i1 %tobool.not, label %if.end, label %land.lhs.true, !dbg !6629

land.lhs.true:                                    ; preds = %entry
  %cmp.not = icmp eq i32 %call1, %call, !dbg !6630
  %cmp4.not = icmp eq i32 %call3, %call2
  %or.cond = select i1 %cmp.not, i1 %cmp4.not, i1 false, !dbg !6631
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !6631

if.end:                                           ; preds = %land.lhs.true, %entry
  %cmp5 = icmp sgt i32 %argc, 1, !dbg !6632
  br i1 %cmp5, label %land.lhs.true6, label %if.end17, !dbg !6634

land.lhs.true6:                                   ; preds = %if.end
  %arrayidx = getelementptr inbounds ptr, ptr %argv, i64 1, !dbg !6635
  %0 = load ptr, ptr %arrayidx, align 8, !dbg !6635
  %1 = load i8, ptr %0, align 1, !dbg !6635
  %cmp8 = icmp eq i8 %1, 45, !dbg !6636
  br i1 %cmp8, label %land.lhs.true10, label %if.end17, !dbg !6637

land.lhs.true10:                                  ; preds = %land.lhs.true6
  %arrayidx12 = getelementptr inbounds i8, ptr %0, i64 1, !dbg !6638
  %2 = load i8, ptr %arrayidx12, align 1, !dbg !6638
  %3 = and i8 %2, -33, !dbg !6638
  %cmp14 = icmp eq i8 %3, 84, !dbg !6638
  br i1 %cmp14, label %cleanup, label %if.end17, !dbg !6639

if.end17:                                         ; preds = %land.lhs.true10, %land.lhs.true6, %if.end
  br label %cleanup, !dbg !6640

cleanup:                                          ; preds = %land.lhs.true10, %land.lhs.true, %if.end17
  %retval.0 = phi i1 [ false, %if.end17 ], [ true, %land.lhs.true ], [ true, %land.lhs.true10 ], !dbg !6622
  ret i1 %retval.0, !dbg !6641
}

; Function Attrs: nounwind
declare !dbg !6642 i32 @getuid() local_unnamed_addr #2

; Function Attrs: nounwind
declare !dbg !6645 i32 @geteuid() local_unnamed_addr #2

; Function Attrs: nounwind
declare !dbg !6646 i32 @getgid() local_unnamed_addr #2

; Function Attrs: nounwind
declare !dbg !6649 i32 @getegid() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @Perl_init_dbargs() local_unnamed_addr #0 !dbg !6650 {
entry:
  %call = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.39, i64 noundef 8, i32 noundef 2, i32 noundef 11) #17, !dbg !6653
  %call1 = tail call ptr @Perl_gv_add_by_type(ptr noundef %call, i32 noundef 11) #17, !dbg !6653
  %sv_u = getelementptr inbounds %struct.gv, ptr %call1, i64 0, i32 3, !dbg !6653
  %0 = load ptr, ptr %sv_u, align 8, !dbg !6653
  %gp_av = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 6, !dbg !6653
  %1 = load ptr, ptr %gp_av, align 8, !dbg !6653
  store ptr %1, ptr @PL_dbargs, align 8, !dbg !6654
  call void @llvm.dbg.value(metadata ptr %1, metadata !6652, metadata !DIExpression()), !dbg !6655
  %sv_flags = getelementptr inbounds %struct.av, ptr %1, i64 0, i32 2, !dbg !6656
  %2 = load i32, ptr %sv_flags, align 4, !dbg !6656
  %and = and i32 %2, 1073741824, !dbg !6656
  %tobool.not = icmp eq i32 %and, 0, !dbg !6656
  br i1 %tobool.not, label %if.end8, label %if.then, !dbg !6658

if.then:                                          ; preds = %entry
  tail call void @Perl_av_clear(ptr noundef nonnull %1) #17, !dbg !6659
  %sv_flags2 = getelementptr inbounds %struct.sv, ptr %1, i64 0, i32 2, !dbg !6661
  %3 = load i32, ptr %sv_flags2, align 4, !dbg !6661
  %and3 = and i32 %3, 8388608, !dbg !6661
  %tobool4.not = icmp eq i32 %and3, 0, !dbg !6661
  br i1 %tobool4.not, label %if.end8, label %cond.true, !dbg !6663

cond.true:                                        ; preds = %if.then
  %call5 = tail call ptr @Perl_mg_find(ptr noundef nonnull %1, i32 noundef 80) #17, !dbg !6661
  %tobool6.not = icmp eq ptr %call5, null, !dbg !6661
  br i1 %tobool6.not, label %if.end8, label %if.then7, !dbg !6661

if.then7:                                         ; preds = %cond.true
  tail call void (ptr, ...) @Perl_croak(ptr noundef nonnull @.str.40) #17, !dbg !6664
  br label %if.end8, !dbg !6664

if.end8:                                          ; preds = %cond.true, %if.then7, %if.then, %entry
  %4 = load ptr, ptr @PL_dbargs, align 8, !dbg !6665
  %sv_flags9 = getelementptr inbounds %struct.av, ptr %4, i64 0, i32 2, !dbg !6665
  %5 = load i32, ptr %sv_flags9, align 4, !dbg !6665
  %and10 = and i32 %5, 1073741823, !dbg !6665
  %or = or i32 %and10, -2147483648, !dbg !6665
  store i32 %or, ptr %sv_flags9, align 4, !dbg !6665
  ret void, !dbg !6666
}

declare !dbg !6667 void @Perl_av_clear(ptr noundef) local_unnamed_addr #3

declare !dbg !6670 ptr @Perl_mg_find(ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !6673 void @Perl_sv_setiv(ptr noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !6676 ptr @Perl_sv_magicext(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !6682 i32 @Perl_mg_set(ptr noundef) local_unnamed_addr #3

declare !dbg !6683 ptr @Perl_safesysmalloc(i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define dso_local void @Perl_populate_isa(ptr noundef %name, i64 noundef %len, ...) local_unnamed_addr #0 !dbg !6686 {
entry:
  %args = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata ptr %name, metadata !6690, metadata !DIExpression()), !dbg !6711
  call void @llvm.dbg.value(metadata i64 %len, metadata !6691, metadata !DIExpression()), !dbg !6711
  %call = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef %name, i64 noundef %len, i32 noundef 3, i32 noundef 11) #17, !dbg !6712
  call void @llvm.dbg.value(metadata ptr %call, metadata !6692, metadata !DIExpression()), !dbg !6711
  %sv_u = getelementptr inbounds %struct.gv, ptr %call, i64 0, i32 3, !dbg !6713
  %0 = load ptr, ptr %sv_u, align 8, !dbg !6713
  %gp_av = getelementptr inbounds %struct.gp, ptr %0, i64 0, i32 6, !dbg !6713
  %1 = load ptr, ptr %gp_av, align 8, !dbg !6713
  %tobool.not = icmp eq ptr %1, null, !dbg !6713
  br i1 %tobool.not, label %cond.false, label %cond.end, !dbg !6713

cond.false:                                       ; preds = %entry
  %call4 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %call, i32 noundef 11) #17, !dbg !6713
  %sv_u5 = getelementptr inbounds %struct.gv, ptr %call4, i64 0, i32 3, !dbg !6713
  %2 = load ptr, ptr %sv_u5, align 8, !dbg !6713
  %gp_av7 = getelementptr inbounds %struct.gp, ptr %2, i64 0, i32 6, !dbg !6713
  %3 = load ptr, ptr %gp_av7, align 8, !dbg !6713
  br label %cond.end, !dbg !6713

cond.end:                                         ; preds = %entry, %cond.false
  %cond = phi ptr [ %3, %cond.false ], [ %1, %entry ], !dbg !6713
  call void @llvm.dbg.value(metadata ptr %cond, metadata !6693, metadata !DIExpression()), !dbg !6711
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %args) #17, !dbg !6714
  call void @llvm.dbg.declare(metadata ptr %args, metadata !6694, metadata !DIExpression()), !dbg !6715
  %4 = load ptr, ptr %cond, align 8, !dbg !6716
  %xav_fill = getelementptr inbounds %struct.xpvav, ptr %4, i64 0, i32 2, !dbg !6716
  %5 = load i64, ptr %xav_fill, align 8, !dbg !6716
  %cmp.not = icmp eq i64 %5, -1, !dbg !6718
  br i1 %cmp.not, label %if.end, label %cleanup28, !dbg !6719

if.end:                                           ; preds = %cond.end
  call void @llvm.va_start(ptr nonnull %args), !dbg !6720
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, ptr %args, i64 0, i32 2
  %6 = getelementptr inbounds %struct.__va_list_tag, ptr %args, i64 0, i32 3
  br label %do.body, !dbg !6721

do.body:                                          ; preds = %cleanup, %if.end
  %gp_offset = load i32, ptr %args, align 16, !dbg !6722
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !6722
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !6722

vaarg.in_reg:                                     ; preds = %do.body
  %reg_save_area = load ptr, ptr %6, align 16, !dbg !6722
  %7 = zext i32 %gp_offset to i64, !dbg !6722
  %8 = getelementptr i8, ptr %reg_save_area, i64 %7, !dbg !6722
  %9 = add nuw nsw i32 %gp_offset, 8, !dbg !6722
  store i32 %9, ptr %args, align 16, !dbg !6722
  br label %vaarg.end, !dbg !6722

vaarg.in_mem:                                     ; preds = %do.body
  %overflow_arg_area = load ptr, ptr %overflow_arg_area_p, align 8, !dbg !6722
  %overflow_arg_area.next = getelementptr i8, ptr %overflow_arg_area, i64 8, !dbg !6722
  store ptr %overflow_arg_area.next, ptr %overflow_arg_area_p, align 8, !dbg !6722
  br label %vaarg.end, !dbg !6722

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %gp_offset14 = phi i32 [ %9, %vaarg.in_reg ], [ %gp_offset, %vaarg.in_mem ]
  %vaarg.addr = phi ptr [ %8, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ], !dbg !6722
  %10 = load ptr, ptr %vaarg.addr, align 8, !dbg !6722
  call void @llvm.dbg.value(metadata ptr %10, metadata !6708, metadata !DIExpression()), !dbg !6723
  %tobool9.not = icmp eq ptr %10, null, !dbg !6724
  br i1 %tobool9.not, label %do.end, label %if.end11, !dbg !6726

if.end11:                                         ; preds = %vaarg.end
  %fits_in_gp15 = icmp ult i32 %gp_offset14, 41, !dbg !6727
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !6727

vaarg.in_reg16:                                   ; preds = %if.end11
  %reg_save_area17 = load ptr, ptr %6, align 16, !dbg !6727
  %11 = zext i32 %gp_offset14 to i64, !dbg !6727
  %12 = getelementptr i8, ptr %reg_save_area17, i64 %11, !dbg !6727
  %13 = add nuw nsw i32 %gp_offset14, 8, !dbg !6727
  store i32 %13, ptr %args, align 16, !dbg !6727
  br label %cleanup, !dbg !6727

vaarg.in_mem18:                                   ; preds = %if.end11
  %overflow_arg_area20 = load ptr, ptr %overflow_arg_area_p, align 8, !dbg !6727
  %overflow_arg_area.next21 = getelementptr i8, ptr %overflow_arg_area20, i64 8, !dbg !6727
  store ptr %overflow_arg_area.next21, ptr %overflow_arg_area_p, align 8, !dbg !6727
  br label %cleanup, !dbg !6727

cleanup:                                          ; preds = %vaarg.in_reg16, %vaarg.in_mem18
  %vaarg.addr23 = phi ptr [ %12, %vaarg.in_reg16 ], [ %overflow_arg_area20, %vaarg.in_mem18 ], !dbg !6727
  %14 = load i64, ptr %vaarg.addr23, align 8, !dbg !6727
  call void @llvm.dbg.value(metadata i64 %14, metadata !6710, metadata !DIExpression()), !dbg !6723
  %sub = add i64 %14, -2, !dbg !6728
  %call24 = call ptr @Perl_newSVpvn(ptr noundef nonnull %10, i64 noundef %sub) #17, !dbg !6728
  call void @Perl_av_push(ptr noundef nonnull %cond, ptr noundef %call24) #17, !dbg !6728
  %call25 = call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull %10, i64 noundef %14, i32 noundef 1, i32 noundef 9) #17, !dbg !6729
  br label %do.body

do.end:                                           ; preds = %vaarg.end
  call void @llvm.va_end(ptr nonnull %args), !dbg !6730
  br label %cleanup28, !dbg !6731

cleanup28:                                        ; preds = %cond.end, %do.end
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %args) #17, !dbg !6731
  ret void, !dbg !6731
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_start(ptr) #14

declare !dbg !6732 void @Perl_av_push(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.va_end(ptr) #14

; Function Attrs: nounwind uwtable
define dso_local void @Perl_init_argv_symbols(i32 noundef %argc, ptr nocapture noundef readonly %argv) local_unnamed_addr #0 !dbg !6735 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, metadata !6739, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata ptr %argv, metadata !6740, metadata !DIExpression()), !dbg !6756
  %dec = add nsw i32 %argc, -1, !dbg !6757
  call void @llvm.dbg.value(metadata i32 %dec, metadata !6739, metadata !DIExpression()), !dbg !6756
  %incdec.ptr = getelementptr inbounds ptr, ptr %argv, i64 1, !dbg !6758
  call void @llvm.dbg.value(metadata ptr %incdec.ptr, metadata !6740, metadata !DIExpression()), !dbg !6756
  %0 = load i8, ptr @PL_doswitches, align 1, !dbg !6759, !range !1483
  %tobool = icmp ne i8 %0, 0, !dbg !6759
  %cmp = icmp sgt i32 %argc, 1
  %or.cond = and i1 %cmp, %tobool, !dbg !6760
  br i1 %or.cond, label %land.rhs, label %if.end34, !dbg !6760

land.rhs:                                         ; preds = %entry, %for.inc
  %argv.addr.0 = phi ptr [ %incdec.ptr33, %for.inc ], [ %incdec.ptr, %entry ], !dbg !6756
  %argc.addr.0 = phi i32 [ %dec32, %for.inc ], [ %dec, %entry ], !dbg !6756
  call void @llvm.dbg.value(metadata i32 %argc.addr.0, metadata !6739, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata ptr %argv.addr.0, metadata !6740, metadata !DIExpression()), !dbg !6756
  %1 = load ptr, ptr %argv.addr.0, align 8, !dbg !6761
  %2 = load i8, ptr %1, align 1, !dbg !6762
  %cmp1 = icmp eq i8 %2, 45, !dbg !6763
  br i1 %cmp1, label %for.body, label %if.end34, !dbg !6764

for.body:                                         ; preds = %land.rhs
  %arrayidx3 = getelementptr inbounds i8, ptr %1, i64 1, !dbg !6765
  %3 = load i8, ptr %arrayidx3, align 1, !dbg !6765
  switch i8 %3, label %if.end17 [
    i8 0, label %if.end34
    i8 45, label %land.lhs.true
  ], !dbg !6767

land.lhs.true:                                    ; preds = %for.body
  %arrayidx12 = getelementptr inbounds i8, ptr %1, i64 2, !dbg !6768
  %4 = load i8, ptr %arrayidx12, align 1, !dbg !6768
  %tobool13.not = icmp eq i8 %4, 0, !dbg !6768
  br i1 %tobool13.not, label %if.then14, label %if.end17, !dbg !6770

if.then14:                                        ; preds = %land.lhs.true
  %dec15 = add nsw i32 %argc.addr.0, -1, !dbg !6771
  call void @llvm.dbg.value(metadata i32 %dec15, metadata !6739, metadata !DIExpression()), !dbg !6756
  %incdec.ptr16 = getelementptr inbounds ptr, ptr %argv.addr.0, i64 1, !dbg !6773
  call void @llvm.dbg.value(metadata ptr %incdec.ptr16, metadata !6740, metadata !DIExpression()), !dbg !6756
  br label %if.end34, !dbg !6774

if.end17:                                         ; preds = %for.body, %land.lhs.true
  %call = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %1, i32 noundef 61) #21, !dbg !6775
  call void @llvm.dbg.value(metadata ptr %call, metadata !6741, metadata !DIExpression()), !dbg !6776
  %tobool19.not = icmp eq ptr %call, null, !dbg !6777
  br i1 %tobool19.not, label %if.else, label %if.then20, !dbg !6778

if.then20:                                        ; preds = %if.end17
  call void @llvm.dbg.value(metadata ptr %arrayidx3, metadata !6747, metadata !DIExpression()), !dbg !6779
  %sub.ptr.lhs.cast = ptrtoint ptr %call to i64, !dbg !6780
  %sub.ptr.rhs.cast = ptrtoint ptr %arrayidx3 to i64, !dbg !6780
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6780
  %call22 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull %arrayidx3, i64 noundef %sub.ptr.sub, i32 noundef 1, i32 noundef 3) #17, !dbg !6780
  %sv_u = getelementptr inbounds %struct.gv, ptr %call22, i64 0, i32 3, !dbg !6780
  %5 = load ptr, ptr %sv_u, align 8, !dbg !6780
  %6 = load ptr, ptr %5, align 8, !dbg !6780
  %add.ptr24 = getelementptr inbounds i8, ptr %call, i64 1, !dbg !6780
  tail call void @Perl_sv_setpv(ptr noundef %6, ptr noundef nonnull %add.ptr24) #17, !dbg !6780
  br label %for.inc, !dbg !6781

if.else:                                          ; preds = %if.end17
  %call27 = tail call ptr @Perl_gv_fetchpv(ptr noundef nonnull %arrayidx3, i32 noundef 1, i32 noundef 3) #17, !dbg !6782
  %sv_u28 = getelementptr inbounds %struct.gv, ptr %call27, i64 0, i32 3, !dbg !6782
  %7 = load ptr, ptr %sv_u28, align 8, !dbg !6782
  %8 = load ptr, ptr %7, align 8, !dbg !6782
  tail call void @Perl_sv_setiv(ptr noundef %8, i64 noundef 1) #17, !dbg !6782
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then20
  call void @llvm.dbg.value(metadata i32 undef, metadata !6739, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata ptr undef, metadata !6740, metadata !DIExpression()), !dbg !6756
  %dec32 = add nsw i32 %argc.addr.0, -1, !dbg !6783
  call void @llvm.dbg.value(metadata i32 %dec32, metadata !6739, metadata !DIExpression()), !dbg !6756
  %incdec.ptr33 = getelementptr inbounds ptr, ptr %argv.addr.0, i64 1, !dbg !6784
  call void @llvm.dbg.value(metadata ptr %incdec.ptr33, metadata !6740, metadata !DIExpression()), !dbg !6756
  %cmp.old = icmp sgt i32 %argc.addr.0, 1, !dbg !6785
  br i1 %cmp.old, label %land.rhs, label %if.end34, !dbg !6786

if.end34:                                         ; preds = %for.body, %land.rhs, %for.inc, %if.then14, %entry
  %argv.addr.2 = phi ptr [ %incdec.ptr, %entry ], [ %incdec.ptr16, %if.then14 ], [ %argv.addr.0, %for.body ], [ %argv.addr.0, %land.rhs ], [ %incdec.ptr33, %for.inc ], !dbg !6756
  %argc.addr.2 = phi i32 [ %dec, %entry ], [ %dec15, %if.then14 ], [ %argc.addr.0, %for.body ], [ %argc.addr.0, %land.rhs ], [ 0, %for.inc ], !dbg !6756
  call void @llvm.dbg.value(metadata i32 %argc.addr.2, metadata !6739, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata ptr %argv.addr.2, metadata !6740, metadata !DIExpression()), !dbg !6756
  %call35 = tail call ptr @Perl_gv_fetchpvn_flags(ptr noundef nonnull @.str.47, i64 noundef 4, i32 noundef 129, i32 noundef 11) #17, !dbg !6787
  store ptr %call35, ptr @PL_argvgv, align 8, !dbg !6788
  %tobool36.not = icmp eq ptr %call35, null, !dbg !6788
  br i1 %tobool36.not, label %if.end76, label %if.then37, !dbg !6789

if.then37:                                        ; preds = %if.end34
  %sv_refcnt = getelementptr inbounds %struct.sv, ptr %call35, i64 0, i32 1, !dbg !6790
  %9 = load i32, ptr %sv_refcnt, align 8, !dbg !6790
  %inc = add i32 %9, 1, !dbg !6790
  store i32 %inc, ptr %sv_refcnt, align 8, !dbg !6790
  %10 = load ptr, ptr %call35, align 8, !dbg !6791
  %xpv_cur = getelementptr inbounds %struct.xpvgv, ptr %10, i64 0, i32 2, !dbg !6791
  %11 = load i64, ptr %xpv_cur, align 8, !dbg !6791
  %or = or i64 %11, 2, !dbg !6791
  store i64 %or, ptr %xpv_cur, align 8, !dbg !6791
  %sv_u38 = getelementptr inbounds %struct.gv, ptr %call35, i64 0, i32 3, !dbg !6792
  %12 = load ptr, ptr %sv_u38, align 8, !dbg !6792
  %gp_av = getelementptr inbounds %struct.gp, ptr %12, i64 0, i32 6, !dbg !6792
  %13 = load ptr, ptr %gp_av, align 8, !dbg !6792
  %tobool40.not = icmp eq ptr %13, null, !dbg !6792
  br i1 %tobool40.not, label %cond.false, label %cond.end, !dbg !6792

cond.false:                                       ; preds = %if.then37
  %call44 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %call35, i32 noundef 11) #17, !dbg !6792
  %sv_u45 = getelementptr inbounds %struct.gv, ptr %call44, i64 0, i32 3, !dbg !6792
  %14 = load ptr, ptr %sv_u45, align 8, !dbg !6792
  %gp_av47 = getelementptr inbounds %struct.gp, ptr %14, i64 0, i32 6, !dbg !6792
  %15 = load ptr, ptr %gp_av47, align 8, !dbg !6792
  br label %cond.end, !dbg !6792

cond.end:                                         ; preds = %if.then37, %cond.false
  %cond = phi ptr [ %15, %cond.false ], [ %13, %if.then37 ], !dbg !6792
  tail call void @Perl_av_clear(ptr noundef %cond) #17, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %argc.addr.2, metadata !6739, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata ptr %argv.addr.2, metadata !6740, metadata !DIExpression()), !dbg !6756
  %cmp49137 = icmp sgt i32 %argc.addr.2, 0, !dbg !6793
  br i1 %cmp49137, label %for.body51, label %if.end76, !dbg !6794

for.body51:                                       ; preds = %cond.end, %if.end71
  %argc.addr.3139 = phi i32 [ %dec73, %if.end71 ], [ %argc.addr.2, %cond.end ]
  %argv.addr.3138 = phi ptr [ %incdec.ptr74, %if.end71 ], [ %argv.addr.2, %cond.end ]
  call void @llvm.dbg.value(metadata i32 %argc.addr.3139, metadata !6739, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.value(metadata ptr %argv.addr.3138, metadata !6740, metadata !DIExpression()), !dbg !6756
  %16 = load ptr, ptr %argv.addr.3138, align 8, !dbg !6795
  %call53 = tail call ptr @Perl_newSVpv(ptr noundef %16, i64 noundef 0) #17, !dbg !6795
  call void @llvm.dbg.value(metadata ptr %call53, metadata !6750, metadata !DIExpression()), !dbg !6796
  %17 = load ptr, ptr @PL_argvgv, align 8, !dbg !6797
  %sv_u54 = getelementptr inbounds %struct.gv, ptr %17, i64 0, i32 3, !dbg !6797
  %18 = load ptr, ptr %sv_u54, align 8, !dbg !6797
  %gp_av56 = getelementptr inbounds %struct.gp, ptr %18, i64 0, i32 6, !dbg !6797
  %19 = load ptr, ptr %gp_av56, align 8, !dbg !6797
  tail call void @Perl_av_push(ptr noundef %19, ptr noundef %call53) #17, !dbg !6797
  %20 = load i32, ptr @PL_unicode, align 4, !dbg !6798
  %and = and i32 %20, 64, !dbg !6800
  %tobool57.not = icmp ne i32 %and, 0, !dbg !6800
  %21 = load i8, ptr @PL_utf8locale, align 1
  %tobool58.not = icmp eq i8 %21, 0
  %or.cond127 = select i1 %tobool57.not, i1 %tobool58.not, i1 false, !dbg !6801
  %and61 = and i32 %20, 32
  %tobool62.not = icmp eq i32 %and61, 0
  %or.cond134 = select i1 %or.cond127, i1 true, i1 %tobool62.not, !dbg !6801
  br i1 %or.cond134, label %if.end66, label %if.then63, !dbg !6801

if.then63:                                        ; preds = %for.body51
  %sv_flags = getelementptr inbounds %struct.sv, ptr %call53, i64 0, i32 2, !dbg !6802
  %22 = load i32, ptr %sv_flags, align 4, !dbg !6802
  %or64 = or i32 %22, 536870912, !dbg !6802
  store i32 %or64, ptr %sv_flags, align 4, !dbg !6802
  br label %if.end66, !dbg !6802

if.end66:                                         ; preds = %for.body51, %if.then63
  %and67 = and i32 %20, 128, !dbg !6805
  %tobool68.not = icmp eq i32 %and67, 0, !dbg !6805
  br i1 %tobool68.not, label %if.end71, label %if.then69, !dbg !6807

if.then69:                                        ; preds = %if.end66
  %call70 = tail call zeroext i1 @Perl_sv_utf8_decode(ptr noundef %call53) #17, !dbg !6808
  br label %if.end71, !dbg !6809

if.end71:                                         ; preds = %if.then69, %if.end66
  %dec73 = add nsw i32 %argc.addr.3139, -1, !dbg !6810
  call void @llvm.dbg.value(metadata i32 %dec73, metadata !6739, metadata !DIExpression()), !dbg !6756
  %incdec.ptr74 = getelementptr inbounds ptr, ptr %argv.addr.3138, i64 1, !dbg !6811
  call void @llvm.dbg.value(metadata ptr %incdec.ptr74, metadata !6740, metadata !DIExpression()), !dbg !6756
  %cmp49 = icmp sgt i32 %argc.addr.3139, 1, !dbg !6793
  br i1 %cmp49, label %for.body51, label %if.end76, !dbg !6794, !llvm.loop !6812

if.end76:                                         ; preds = %if.end71, %cond.end, %if.end34
  %23 = load ptr, ptr @PL_inplace, align 8, !dbg !6814
  %tobool77.not = icmp eq ptr %23, null, !dbg !6814
  br i1 %tobool77.not, label %if.end103, label %land.lhs.true78, !dbg !6816

land.lhs.true78:                                  ; preds = %if.end76
  %24 = load ptr, ptr @PL_argvgv, align 8, !dbg !6817
  %tobool79.not = icmp eq ptr %24, null, !dbg !6817
  br i1 %tobool79.not, label %if.then102, label %lor.lhs.false80, !dbg !6818

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %sv_u81 = getelementptr inbounds %struct.gv, ptr %24, i64 0, i32 3, !dbg !6819
  %25 = load ptr, ptr %sv_u81, align 8, !dbg !6819
  %gp_av83 = getelementptr inbounds %struct.gp, ptr %25, i64 0, i32 6, !dbg !6819
  %26 = load ptr, ptr %gp_av83, align 8, !dbg !6819
  %sv_flags84 = getelementptr inbounds %struct.sv, ptr %26, i64 0, i32 2, !dbg !6819
  %27 = load i32, ptr %sv_flags84, align 4, !dbg !6819
  %and85 = and i32 %27, 8388608, !dbg !6819
  %tobool86.not = icmp eq i32 %and85, 0, !dbg !6819
  br i1 %tobool86.not, label %cond.false93, label %cond.true87, !dbg !6819

cond.true87:                                      ; preds = %lor.lhs.false80
  %call91 = tail call i32 @Perl_mg_size(ptr noundef nonnull %26) #17, !dbg !6819
  %conv92 = sext i32 %call91 to i64, !dbg !6819
  br label %cond.end98, !dbg !6819

cond.false93:                                     ; preds = %lor.lhs.false80
  %28 = load ptr, ptr %26, align 8, !dbg !6819
  %xav_fill = getelementptr inbounds %struct.xpvav, ptr %28, i64 0, i32 2, !dbg !6819
  %29 = load i64, ptr %xav_fill, align 8, !dbg !6819
  br label %cond.end98, !dbg !6819

cond.end98:                                       ; preds = %cond.false93, %cond.true87
  %cond99 = phi i64 [ %conv92, %cond.true87 ], [ %29, %cond.false93 ], !dbg !6819
  %cmp100 = icmp eq i64 %cond99, -1, !dbg !6820
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !6821

if.then102:                                       ; preds = %cond.end98, %land.lhs.true78
  tail call void (i32, ptr, ...) @Perl_ck_warner_d(i32 noundef 23, ptr noundef nonnull @.str.48) #17, !dbg !6822
  br label %if.end103, !dbg !6822

if.end103:                                        ; preds = %if.then102, %cond.end98, %if.end76
  ret void, !dbg !6823
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #12

declare !dbg !6824 void @Perl_sv_setpv(ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !6827 zeroext i1 @Perl_sv_utf8_decode(ptr noundef) local_unnamed_addr #3

declare !dbg !6830 i32 @Perl_mg_size(ptr noundef) local_unnamed_addr #3

declare !dbg !6833 ptr @Perl_av_shift(ptr noundef) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @siglongjmp(ptr noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #15

; Function Attrs: noreturn nounwind uwtable
define dso_local void @Perl_my_exit(i32 noundef %status) local_unnamed_addr #13 !dbg !4746 {
entry:
  call void @llvm.dbg.value(metadata i32 %status, metadata !4745, metadata !DIExpression()), !dbg !6836
  %0 = load i8, ptr @PL_exit_flags, align 1, !dbg !6837
  %conv = zext i8 %0 to i32, !dbg !6837
  %and = and i32 %conv, 8, !dbg !6838
  %tobool.not = icmp eq i32 %and, 0, !dbg !6838
  br i1 %tobool.not, label %if.end, label %if.then, !dbg !6839

if.then:                                          ; preds = %entry
  tail call void @abort() #20, !dbg !6840
  unreachable, !dbg !6840

if.end:                                           ; preds = %entry
  %and2 = and i32 %conv, 4, !dbg !6841
  %tobool3.not = icmp eq i32 %and2, 0, !dbg !6841
  br i1 %tobool3.not, label %if.end11, label %if.then4, !dbg !6842

if.then4:                                         ; preds = %if.end
  %or = or i8 %0, 8, !dbg !6843
  store i8 %or, ptr @PL_exit_flags, align 1, !dbg !6843
  %conv7 = zext i32 %status to i64, !dbg !6844
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.58, i64 noundef %conv7) #17, !dbg !6845
  %1 = load i8, ptr @PL_exit_flags, align 1, !dbg !6846
  %2 = and i8 %1, -9, !dbg !6846
  store i8 %2, ptr @PL_exit_flags, align 1, !dbg !6846
  br label %if.end11, !dbg !6847

if.end11:                                         ; preds = %if.then4, %if.end
  switch i32 %status, label %do.body [
    i32 0, label %sw.bb
    i32 1, label %sw.bb12
  ], !dbg !6848

sw.bb:                                            ; preds = %if.end11
  store i32 0, ptr @PL_statusvalue, align 4, !dbg !6849
  br label %sw.epilog.sink.split, !dbg !6850

sw.bb12:                                          ; preds = %if.end11
  store i32 1, ptr @PL_statusvalue, align 4, !dbg !6851
  br label %sw.epilog.sink.split, !dbg !6852

do.body:                                          ; preds = %if.end11
  store i32 %status, ptr @PL_statusvalue, align 4, !dbg !6853
  %cmp.not = icmp eq i32 %status, -1, !dbg !6855
  br i1 %cmp.not, label %sw.epilog, label %if.then14, !dbg !6853

if.then14:                                        ; preds = %do.body
  %and15 = and i32 %status, 65535, !dbg !6855
  br label %sw.epilog.sink.split, !dbg !6855

sw.epilog.sink.split:                             ; preds = %sw.bb, %sw.bb12, %if.then14
  %PL_statusvalue.sink = phi ptr [ @PL_statusvalue, %if.then14 ], [ @PL_statusvalue_posix, %sw.bb12 ], [ @PL_statusvalue_posix, %sw.bb ]
  %and15.sink = phi i32 [ %and15, %if.then14 ], [ 1, %sw.bb12 ], [ 0, %sw.bb ]
  store i32 %and15.sink, ptr %PL_statusvalue.sink, align 4, !dbg !6857
  br label %sw.epilog, !dbg !6858

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %do.body
  tail call fastcc void @S_my_exit_jump(), !dbg !6858
  unreachable, !dbg !6859
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

declare !dbg !6860 void @Perl_warn(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: noreturn nounwind uwtable
define dso_local void @Perl_my_failure_exit() local_unnamed_addr #13 !dbg !6861 {
entry:
  %call = tail call ptr @__errno_location() #22, !dbg !6864
  %0 = load i32, ptr %call, align 4, !dbg !6864
  %and = and i32 %0, 255, !dbg !6866
  %tobool.not = icmp eq i32 %and, 0, !dbg !6866
  br i1 %tobool.not, label %if.else, label %do.body, !dbg !6867

do.body:                                          ; preds = %entry
  store i32 %0, ptr @PL_statusvalue, align 4, !dbg !6868
  %cmp.not = icmp eq i32 %0, -1, !dbg !6870
  br i1 %cmp.not, label %if.end23, label %if.then2, !dbg !6868

if.then2:                                         ; preds = %do.body
  %and3 = and i32 %0, 65535, !dbg !6870
  br label %if.end23.sink.split, !dbg !6870

if.else:                                          ; preds = %entry
  %1 = load i32, ptr @PL_statusvalue, align 4, !dbg !6872
  %shr = ashr i32 %1, 8, !dbg !6874
  call void @llvm.dbg.value(metadata i32 %shr, metadata !6863, metadata !DIExpression()), !dbg !6875
  %2 = and i32 %1, 65280, !dbg !6876
  %tobool5.not = icmp eq i32 %2, 0, !dbg !6876
  br i1 %tobool5.not, label %if.end23.sink.split, label %do.body7, !dbg !6878

do.body7:                                         ; preds = %if.else
  store i32 %shr, ptr @PL_statusvalue, align 4, !dbg !6879
  %cmp8.not = icmp eq i32 %shr, -1, !dbg !6881
  br i1 %cmp8.not, label %if.end23, label %if.then9, !dbg !6879

if.then9:                                         ; preds = %do.body7
  %and10 = and i32 %shr, 65535, !dbg !6881
  br label %if.end23.sink.split, !dbg !6881

if.end23.sink.split:                              ; preds = %if.else, %if.then2, %if.then9
  %and10.sink = phi i32 [ %and10, %if.then9 ], [ %and3, %if.then2 ], [ 255, %if.else ]
  store i32 %and10.sink, ptr @PL_statusvalue, align 4, !dbg !6883
  br label %if.end23, !dbg !6884

if.end23:                                         ; preds = %if.end23.sink.split, %do.body7, %do.body
  %3 = phi i32 [ -1, %do.body7 ], [ -1, %do.body ], [ %and10.sink, %if.end23.sink.split ]
  %4 = load i8, ptr @PL_exit_flags, align 1, !dbg !6884
  %conv = zext i8 %4 to i32, !dbg !6884
  %and24 = and i32 %conv, 8, !dbg !6886
  %tobool25.not = icmp eq i32 %and24, 0, !dbg !6886
  br i1 %tobool25.not, label %if.end27, label %if.then26, !dbg !6887

if.then26:                                        ; preds = %if.end23
  tail call void @abort() #20, !dbg !6888
  unreachable, !dbg !6888

if.end27:                                         ; preds = %if.end23
  %and29 = and i32 %conv, 4, !dbg !6890
  %tobool30.not = icmp eq i32 %and29, 0, !dbg !6890
  br i1 %tobool30.not, label %if.end38, label %if.then31, !dbg !6892

if.then31:                                        ; preds = %if.end27
  %or = or i8 %4, 8, !dbg !6893
  store i8 %or, ptr @PL_exit_flags, align 1, !dbg !6893
  %conv34 = sext i32 %3 to i64, !dbg !6895
  tail call void (ptr, ...) @Perl_warn(ptr noundef nonnull @.str.59, i64 noundef %conv34) #17, !dbg !6896
  %5 = load i8, ptr @PL_exit_flags, align 1, !dbg !6897
  %6 = and i8 %5, -9, !dbg !6897
  store i8 %6, ptr @PL_exit_flags, align 1, !dbg !6897
  br label %if.end38, !dbg !6898

if.end38:                                         ; preds = %if.then31, %if.end27
  tail call fastcc void @S_my_exit_jump(), !dbg !6899
  unreachable, !dbg !6900
}

; Function Attrs: mustprogress nofree nosync nounwind readnone willreturn
declare ptr @__errno_location() local_unnamed_addr #16

; Function Attrs: nounwind uwtable
define dso_local void @Perl_xs_boot_epilog(i32 noundef %ax) local_unnamed_addr #0 !dbg !6901 {
entry:
  call void @llvm.dbg.value(metadata i32 %ax, metadata !6905, metadata !DIExpression()), !dbg !6909
  %0 = load ptr, ptr @PL_unitcheckav, align 8, !dbg !6910
  %tobool.not = icmp eq ptr %0, null, !dbg !6910
  br i1 %tobool.not, label %do.body, label %if.then, !dbg !6912

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @PL_scopestack_ix, align 4, !dbg !6913
  tail call void @Perl_call_list(i32 noundef %1, ptr noundef nonnull %0), !dbg !6913
  br label %do.body, !dbg !6913

do.body:                                          ; preds = %entry, %if.then
  %2 = load ptr, ptr @PL_stack_base, align 8, !dbg !6914
  %idxprom = zext i32 %ax to i64, !dbg !6914
  %arrayidx = getelementptr inbounds ptr, ptr %2, i64 %idxprom, !dbg !6914
  store ptr @PL_sv_yes, ptr %arrayidx, align 8, !dbg !6914
  call void @llvm.dbg.value(metadata i64 1, metadata !6906, metadata !DIExpression()), !dbg !6915
  %3 = load ptr, ptr @PL_stack_base, align 8, !dbg !6916
  %add.ptr = getelementptr inbounds ptr, ptr %3, i64 %idxprom, !dbg !6916
  store ptr %add.ptr, ptr @PL_stack_sp, align 8, !dbg !6916
  ret void, !dbg !6917
}

declare !dbg !6918 void @Perl_sv_free2(ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !6921 void @Perl_sv_catpv(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #12

declare !dbg !6924 ptr @Perl_PerlIO_stdin() local_unnamed_addr #3

declare !dbg !6925 ptr @Perl_rsignal_state(i32 noundef) local_unnamed_addr #3

declare !dbg !6928 void @Perl_ck_warner(i32 noundef, ptr noundef, ...) local_unnamed_addr #3

declare !dbg !6929 ptr @Perl_rsignal(i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare !dbg !6932 i32 @chdir(ptr noundef) local_unnamed_addr #2

declare !dbg !6936 ptr @Perl_pad_new(i32 noundef) local_unnamed_addr #3

declare !dbg !6939 void @Perl_boot_core_PerlIO() local_unnamed_addr #3

declare !dbg !6940 void @Perl_boot_core_UNIVERSAL() local_unnamed_addr #3

declare !dbg !6941 void @Perl_boot_core_mro() local_unnamed_addr #3

declare !dbg !6942 ptr @Perl_newXS(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal void @S_Internals_V(ptr nocapture noundef readnone %cv) #0 !dbg !1255 {
entry:
  call void @llvm.dbg.value(metadata ptr %cv, metadata !1258, metadata !DIExpression()), !dbg !6946
  %0 = load ptr, ptr @PL_stack_sp, align 8, !dbg !6947
  call void @llvm.dbg.value(metadata ptr %0, metadata !1259, metadata !DIExpression()), !dbg !6946
  %1 = load ptr, ptr @PL_markstack_ptr, align 8, !dbg !6947
  %incdec.ptr = getelementptr inbounds i32, ptr %1, i64 -1, !dbg !6947
  store ptr %incdec.ptr, ptr @PL_markstack_ptr, align 8, !dbg !6947
  %2 = load i32, ptr %1, align 4, !dbg !6947
  call void @llvm.dbg.value(metadata i32 %2, metadata !1260, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 %2, metadata !1260, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6946
  call void @llvm.dbg.value(metadata !DIArgList(ptr undef, i32 %2), metadata !1261, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6946
  %sub.ptr.lhs.cast = ptrtoint ptr %0 to i64, !dbg !6947
  call void @llvm.dbg.value(metadata !DIArgList(i64 %sub.ptr.lhs.cast, ptr undef, i32 %2), metadata !1262, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_minus, DW_OP_constu, 8, DW_OP_div, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6946
  call void @llvm.dbg.value(metadata i32 0, metadata !1263, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 3, metadata !1265, metadata !DIExpression()), !dbg !6946
  %3 = load ptr, ptr @PL_stack_max, align 8, !dbg !6948
  %sub.ptr.lhs.cast1 = ptrtoint ptr %3 to i64, !dbg !6948
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.lhs.cast, !dbg !6948
  %cmp = icmp slt i64 %sub.ptr.sub3, 24, !dbg !6948
  br i1 %cmp, label %if.then, label %do.end, !dbg !6951

if.then:                                          ; preds = %entry
  %call = tail call ptr @Perl_stack_grow(ptr noundef %0, ptr noundef %0, i64 noundef 3) #17, !dbg !6952
  call void @llvm.dbg.value(metadata ptr %call, metadata !1259, metadata !DIExpression()), !dbg !6946
  br label %do.end, !dbg !6952

do.end:                                           ; preds = %entry, %if.then
  %sp.0 = phi ptr [ %call, %if.then ], [ %0, %entry ], !dbg !6946
  call void @llvm.dbg.value(metadata ptr %sp.0, metadata !1259, metadata !DIExpression()), !dbg !6946
  %call6 = tail call ptr @Perl_newSVpv(ptr noundef nonnull @PL_bincompat_options, i64 noundef 0) #17, !dbg !6954
  %call7 = tail call ptr @Perl_sv_2mortal(ptr noundef %call6) #17, !dbg !6954
  %incdec.ptr8 = getelementptr inbounds ptr, ptr %sp.0, i64 1, !dbg !6954
  call void @llvm.dbg.value(metadata ptr %incdec.ptr8, metadata !1259, metadata !DIExpression()), !dbg !6946
  store ptr %call7, ptr %incdec.ptr8, align 8, !dbg !6954
  %call9 = tail call ptr @Perl_newSVpvn_flags(ptr noundef nonnull @S_Internals_V.non_bincompat_options, i64 noundef 112, i32 noundef 524288) #17, !dbg !6955
  %incdec.ptr10 = getelementptr inbounds ptr, ptr %sp.0, i64 2, !dbg !6955
  call void @llvm.dbg.value(metadata ptr %incdec.ptr10, metadata !1259, metadata !DIExpression()), !dbg !6946
  store ptr %call9, ptr %incdec.ptr10, align 8, !dbg !6955
  %incdec.ptr11 = getelementptr inbounds ptr, ptr %sp.0, i64 3, !dbg !6956
  call void @llvm.dbg.value(metadata ptr %incdec.ptr11, metadata !1259, metadata !DIExpression()), !dbg !6946
  store ptr @PL_sv_undef, ptr %incdec.ptr11, align 8, !dbg !6956
  call void @llvm.dbg.value(metadata i32 1, metadata !1266, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata ptr %incdec.ptr11, metadata !1259, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i32 1, metadata !1266, metadata !DIExpression()), !dbg !6946
  %inc = add nsw i32 %2, 1, !dbg !6947
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1260, metadata !DIExpression()), !dbg !6946
  call void @llvm.dbg.value(metadata i64 3, metadata !1267, metadata !DIExpression()), !dbg !6957
  %4 = load ptr, ptr @PL_stack_base, align 8, !dbg !6958
  %idx.ext19 = sext i32 %inc to i64, !dbg !6958
  %add.ptr20 = getelementptr inbounds ptr, ptr %4, i64 %idx.ext19, !dbg !6958
  %add.ptr21 = getelementptr inbounds ptr, ptr %add.ptr20, i64 2, !dbg !6958
  store ptr %add.ptr21, ptr @PL_stack_sp, align 8, !dbg !6958
  ret void, !dbg !6959
}

declare !dbg !6960 i32 @PerlIO_binmode(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !6963 void @Perl_lex_start(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !6966 ptr @Perl_filter_add(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal i32 @read_e_script(i32 noundef %idx, ptr noundef %buf_sv, i32 noundef %maxlen) #0 !dbg !6973 {
entry:
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6975, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.value(metadata ptr %buf_sv, metadata !6976, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.value(metadata i32 %maxlen, metadata !6977, metadata !DIExpression()), !dbg !6980
  %0 = load ptr, ptr @PL_e_script, align 8, !dbg !6981
  %sv_u = getelementptr inbounds %struct.sv, ptr %0, i64 0, i32 3, !dbg !6981
  %1 = load ptr, ptr %sv_u, align 8, !dbg !6981
  call void @llvm.dbg.value(metadata ptr %1, metadata !6978, metadata !DIExpression()), !dbg !6980
  %call = tail call ptr @strchr(ptr noundef nonnull dereferenceable(1) %1, i32 noundef 10) #21, !dbg !6982
  call void @llvm.dbg.value(metadata ptr %call, metadata !6979, metadata !DIExpression()), !dbg !6980
  %tobool.not = icmp eq ptr %call, null, !dbg !6983
  br i1 %tobool.not, label %cond.false, label %cond.true, !dbg !6983

cond.true:                                        ; preds = %entry
  %add.ptr1 = getelementptr inbounds i8, ptr %call, i64 1, !dbg !6984
  br label %cond.end, !dbg !6983

cond.false:                                       ; preds = %entry
  %2 = load ptr, ptr %0, align 8, !dbg !6985
  %xpv_cur = getelementptr inbounds %struct.xpv, ptr %2, i64 0, i32 2, !dbg !6985
  %3 = load i64, ptr %xpv_cur, align 8, !dbg !6985
  %add.ptr3 = getelementptr inbounds i8, ptr %1, i64 %3, !dbg !6985
  br label %cond.end, !dbg !6983

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi ptr [ %add.ptr1, %cond.true ], [ %add.ptr3, %cond.false ], !dbg !6983
  call void @llvm.dbg.value(metadata ptr %cond, metadata !6979, metadata !DIExpression()), !dbg !6980
  %cmp = icmp eq ptr %cond, %1, !dbg !6986
  br i1 %cmp, label %if.then, label %if.end, !dbg !6988

if.then:                                          ; preds = %cond.end
  tail call void @Perl_filter_del(ptr noundef nonnull @read_e_script) #17, !dbg !6989
  br label %cleanup, !dbg !6991

if.end:                                           ; preds = %cond.end
  %sub.ptr.rhs.cast = ptrtoint ptr %1 to i64, !dbg !6992
  %sub.ptr.lhs.cast = ptrtoint ptr %cond to i64, !dbg !6992
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !6992
  tail call void @Perl_sv_catpvn_flags(ptr noundef %buf_sv, ptr noundef %1, i64 noundef %sub.ptr.sub, i32 noundef 2) #17, !dbg !6993
  %4 = load ptr, ptr @PL_e_script, align 8, !dbg !6994
  tail call void @Perl_sv_chop(ptr noundef %4, ptr noundef %cond) #17, !dbg !6994
  br label %cleanup, !dbg !6995

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 1, %if.end ], !dbg !6980
  ret i32 %retval.0, !dbg !6996
}

declare !dbg !6997 i32 @Perl_yyparse(i32 noundef) local_unnamed_addr #3

declare !dbg !6998 void @Perl_save_sptr(ptr noundef) local_unnamed_addr #3

declare !dbg !7001 void @Perl_save_I32(ptr noundef) local_unnamed_addr #3

declare !dbg !7004 void @Perl_gv_check(ptr noundef) local_unnamed_addr #3

declare !dbg !7007 void @Perl_hv_name_set(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !7010 ptr @Perl_form(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind uwtable
define internal fastcc void @S_incpush_use_sep(ptr noundef %p) unnamed_addr #0 !dbg !7013 {
entry:
  call void @llvm.dbg.value(metadata ptr %p, metadata !7017, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i64 0, metadata !7018, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i32 0, metadata !7019, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i64 undef, metadata !7018, metadata !DIExpression()), !dbg !7022
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %p) #21, !dbg !7023
  call void @llvm.dbg.value(metadata i64 %call, metadata !7018, metadata !DIExpression()), !dbg !7022
  call void @llvm.dbg.value(metadata i64 undef, metadata !7018, metadata !DIExpression()), !dbg !7022
  %add.ptr = getelementptr inbounds i8, ptr %p, i64 %call, !dbg !7025
  call void @llvm.dbg.value(metadata ptr %add.ptr, metadata !7021, metadata !DIExpression()), !dbg !7022
  %sub.ptr.lhs.cast = ptrtoint ptr %add.ptr to i64
  call void @llvm.dbg.value(metadata ptr %p, metadata !7017, metadata !DIExpression()), !dbg !7022
  %call113 = tail call ptr @memchr(ptr noundef %p, i32 noundef 58, i64 noundef %call) #21, !dbg !7026
  call void @llvm.dbg.value(metadata ptr %call113, metadata !7020, metadata !DIExpression()), !dbg !7022
  %tobool2.not14 = icmp eq ptr %call113, null, !dbg !7027
  br i1 %tobool2.not14, label %while.end, label %while.body.preheader, !dbg !7027

while.body.preheader:                             ; preds = %entry
  %sub.ptr.rhs.cast11 = ptrtoint ptr %p to i64, !dbg !7028
  br label %while.body, !dbg !7027

while.body:                                       ; preds = %while.body.preheader, %if.end7
  %call117 = phi ptr [ %call1, %if.end7 ], [ %call113, %while.body.preheader ]
  %sub.ptr.rhs.cast16 = phi i64 [ %sub.ptr.rhs.cast, %if.end7 ], [ %sub.ptr.rhs.cast11, %while.body.preheader ]
  %p.addr.015 = phi ptr [ %add.ptr8, %if.end7 ], [ %p, %while.body.preheader ]
  call void @llvm.dbg.value(metadata ptr %p.addr.015, metadata !7017, metadata !DIExpression()), !dbg !7022
  %cmp = icmp eq ptr %call117, %p.addr.015, !dbg !7029
  br i1 %cmp, label %if.end7, label %if.else, !dbg !7032

if.else:                                          ; preds = %while.body
  %sub.ptr.lhs.cast4 = ptrtoint ptr %call117 to i64, !dbg !7033
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast16, !dbg !7033
  call void @llvm.dbg.value(metadata ptr %p.addr.015, metadata !6366, metadata !DIExpression()) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub6, metadata !6367, metadata !DIExpression()) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i32 0, metadata !6368, metadata !DIExpression()) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i8 0, metadata !6369, metadata !DIExpression()) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i32 0, metadata !6371, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 4, DW_OP_and, DW_OP_stack_value)) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i32 0, metadata !6372, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_and, DW_OP_stack_value)) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i32 0, metadata !6373, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_and, DW_OP_stack_value)) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i8 0, metadata !6374, metadata !DIExpression()) #17, !dbg !7035
  call void @llvm.dbg.value(metadata i8 1, metadata !6375, metadata !DIExpression()) #17, !dbg !7035
  %0 = load ptr, ptr @PL_incgv, align 8, !dbg !7037
  %sv_u.i = getelementptr inbounds %struct.gv, ptr %0, i64 0, i32 3, !dbg !7037
  %1 = load ptr, ptr %sv_u.i, align 8, !dbg !7037
  %gp_av.i = getelementptr inbounds %struct.gp, ptr %1, i64 0, i32 6, !dbg !7037
  %2 = load ptr, ptr %gp_av.i, align 8, !dbg !7037
  %tobool21.not.i = icmp eq ptr %2, null, !dbg !7037
  br i1 %tobool21.not.i, label %cond.false.i, label %S_incpush.exit, !dbg !7037

cond.false.i:                                     ; preds = %if.else
  %call.i = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %0, i32 noundef 11) #17, !dbg !7037
  %sv_u25.i = getelementptr inbounds %struct.gv, ptr %call.i, i64 0, i32 3, !dbg !7037
  %3 = load ptr, ptr %sv_u25.i, align 8, !dbg !7037
  %gp_av27.i = getelementptr inbounds %struct.gp, ptr %3, i64 0, i32 6, !dbg !7037
  %4 = load ptr, ptr %gp_av27.i, align 8, !dbg !7037
  br label %S_incpush.exit, !dbg !7037

S_incpush.exit:                                   ; preds = %if.else, %cond.false.i
  %cond28.i = phi ptr [ %4, %cond.false.i ], [ %2, %if.else ], !dbg !7037
  call void @llvm.dbg.value(metadata ptr %cond28.i, metadata !6376, metadata !DIExpression()) #17, !dbg !7035
  call void @llvm.dbg.value(metadata ptr %p.addr.015, metadata !6395, metadata !DIExpression()) #17, !dbg !7038
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub6, metadata !6400, metadata !DIExpression()) #17, !dbg !7038
  call void @llvm.dbg.value(metadata i32 0, metadata !6401, metadata !DIExpression()) #17, !dbg !7038
  call void @llvm.dbg.value(metadata i32 0, metadata !6402, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 32, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)) #17, !dbg !7038
  %call.i.i = tail call ptr @Perl_newSVpvn(ptr noundef %p.addr.015, i64 noundef %sub.ptr.sub6) #17, !dbg !7040
  call void @llvm.dbg.value(metadata ptr %call.i.i, metadata !6403, metadata !DIExpression()) #17, !dbg !7038
  call void @llvm.dbg.value(metadata ptr %call.i.i, metadata !6378, metadata !DIExpression()) #17, !dbg !7041
  tail call void @Perl_av_push(ptr noundef %cond28.i, ptr noundef %call.i.i) #17, !dbg !7042
  br label %if.end7

if.end7:                                          ; preds = %while.body, %S_incpush.exit
  %add.ptr8 = getelementptr inbounds i8, ptr %call117, i64 1, !dbg !7043
  call void @llvm.dbg.value(metadata ptr %add.ptr8, metadata !7017, metadata !DIExpression()), !dbg !7022
  %sub.ptr.rhs.cast = ptrtoint ptr %add.ptr8 to i64, !dbg !7028
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7028
  %call1 = tail call ptr @memchr(ptr noundef nonnull %add.ptr8, i32 noundef 58, i64 noundef %sub.ptr.sub) #21, !dbg !7026
  call void @llvm.dbg.value(metadata ptr %call1, metadata !7020, metadata !DIExpression()), !dbg !7022
  %tobool2.not = icmp eq ptr %call1, null, !dbg !7027
  br i1 %tobool2.not, label %while.end, label %while.body, !dbg !7027, !llvm.loop !7044

while.end:                                        ; preds = %if.end7, %entry
  %p.addr.0.lcssa = phi ptr [ %p, %entry ], [ %add.ptr8, %if.end7 ]
  %sub.ptr.sub.lcssa = phi i64 [ %call, %entry ], [ %sub.ptr.sub, %if.end7 ], !dbg !7028
  %cmp9.not = icmp eq ptr %p.addr.0.lcssa, %add.ptr, !dbg !7046
  br i1 %cmp9.not, label %if.end14, label %if.then10, !dbg !7048

if.then10:                                        ; preds = %while.end
  call void @llvm.dbg.value(metadata ptr %p.addr.0.lcssa, metadata !6366, metadata !DIExpression()) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub.lcssa, metadata !6367, metadata !DIExpression()) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i32 0, metadata !6368, metadata !DIExpression()) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i8 0, metadata !6369, metadata !DIExpression()) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i32 0, metadata !6371, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 4, DW_OP_and, DW_OP_stack_value)) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i32 0, metadata !6372, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_and, DW_OP_stack_value)) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i32 0, metadata !6373, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_and, DW_OP_stack_value)) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i8 0, metadata !6374, metadata !DIExpression()) #17, !dbg !7049
  call void @llvm.dbg.value(metadata i8 1, metadata !6375, metadata !DIExpression()) #17, !dbg !7049
  %5 = load ptr, ptr @PL_incgv, align 8, !dbg !7051
  %sv_u.i1 = getelementptr inbounds %struct.gv, ptr %5, i64 0, i32 3, !dbg !7051
  %6 = load ptr, ptr %sv_u.i1, align 8, !dbg !7051
  %gp_av.i2 = getelementptr inbounds %struct.gp, ptr %6, i64 0, i32 6, !dbg !7051
  %7 = load ptr, ptr %gp_av.i2, align 8, !dbg !7051
  %tobool21.not.i3 = icmp eq ptr %7, null, !dbg !7051
  br i1 %tobool21.not.i3, label %cond.false.i7, label %S_incpush.exit10, !dbg !7051

cond.false.i7:                                    ; preds = %if.then10
  %call.i4 = tail call ptr @Perl_gv_add_by_type(ptr noundef nonnull %5, i32 noundef 11) #17, !dbg !7051
  %sv_u25.i5 = getelementptr inbounds %struct.gv, ptr %call.i4, i64 0, i32 3, !dbg !7051
  %8 = load ptr, ptr %sv_u25.i5, align 8, !dbg !7051
  %gp_av27.i6 = getelementptr inbounds %struct.gp, ptr %8, i64 0, i32 6, !dbg !7051
  %9 = load ptr, ptr %gp_av27.i6, align 8, !dbg !7051
  br label %S_incpush.exit10, !dbg !7051

S_incpush.exit10:                                 ; preds = %if.then10, %cond.false.i7
  %cond28.i8 = phi ptr [ %9, %cond.false.i7 ], [ %7, %if.then10 ], !dbg !7051
  call void @llvm.dbg.value(metadata ptr %cond28.i8, metadata !6376, metadata !DIExpression()) #17, !dbg !7049
  call void @llvm.dbg.value(metadata ptr %p.addr.0.lcssa, metadata !6395, metadata !DIExpression()) #17, !dbg !7052
  call void @llvm.dbg.value(metadata i64 %sub.ptr.sub.lcssa, metadata !6400, metadata !DIExpression()) #17, !dbg !7052
  call void @llvm.dbg.value(metadata i32 0, metadata !6401, metadata !DIExpression()) #17, !dbg !7052
  call void @llvm.dbg.value(metadata i32 0, metadata !6402, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 32, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)) #17, !dbg !7052
  %call.i.i9 = tail call ptr @Perl_newSVpvn(ptr noundef %p.addr.0.lcssa, i64 noundef %sub.ptr.sub.lcssa) #17, !dbg !7054
  call void @llvm.dbg.value(metadata ptr %call.i.i9, metadata !6403, metadata !DIExpression()) #17, !dbg !7052
  call void @llvm.dbg.value(metadata ptr %call.i.i9, metadata !6378, metadata !DIExpression()) #17, !dbg !7055
  tail call void @Perl_av_push(ptr noundef %cond28.i8, ptr noundef %call.i.i9) #17, !dbg !7056
  br label %if.end14, !dbg !7057

if.end14:                                         ; preds = %S_incpush.exit10, %while.end
  ret void, !dbg !7058
}

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare ptr @memchr(ptr noundef, i32 noundef, i64 noundef) local_unnamed_addr #12

declare !dbg !7059 ptr @Perl_find_script(ptr noundef, i1 noundef zeroext, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind readonly willreturn
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #12

declare !dbg !7063 zeroext i1 @Perl_grok_atoUV(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !7067 ptr @Perl_gv_fetchfile(ptr noundef) local_unnamed_addr #3

declare !dbg !7070 ptr @PerlIO_fdopen(i32 noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !7073 ptr @PerlIO_open(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare ptr @strerror(i32 noundef) local_unnamed_addr #2

declare !dbg !7076 i32 @Perl_PerlIO_fileno(ptr noundef) local_unnamed_addr #3

declare !dbg !7077 i32 @fcntl(i32 noundef, i32 noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__fxstat(i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

declare !dbg !7081 ptr @Perl_sv_gets(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !7085 ptr @Perl_instr(ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !7088 i32 @PerlIO_ungetc(ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !7091 ptr @Perl_PerlIO_stdout() local_unnamed_addr #3

declare !dbg !7092 void @Perl_setdefout(ptr noundef) local_unnamed_addr #3

declare !dbg !7095 void @Perl_filter_del(ptr noundef) local_unnamed_addr #3

declare !dbg !7098 void @Perl_sv_chop(ptr noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !7099 i32 @PerlIO_puts(ptr noundef, ptr noundef) local_unnamed_addr #3

declare void @Perl_peep(ptr noundef) #3

declare void @Perl_rpeep(ptr noundef) #3

declare i32 @Perl_runops_standard() #3

declare void @Perl_sv_nosharing(ptr noundef) #3

declare void @Perl_sv_nounlocking(ptr noundef) #3

declare zeroext i1 @Perl_sv_destroyable(ptr noundef) #3

declare void @Perl_despatch_signals() #3

declare !dbg !7102 void @Perl_sv_magic(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

declare !dbg !7105 void @Perl_av_unshift(ptr noundef, i64 noundef) local_unnamed_addr #3

declare !dbg !7108 ptr @Perl_av_store(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

declare !dbg !7111 ptr @Perl_av_fetch(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__xstat(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

declare !dbg !7114 void @Perl_leave_scope(i32 noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nofree nounwind willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #6 = { inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { argmemonly nofree nounwind willreturn writeonly }
attributes #8 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nounwind returns_twice "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress nounwind willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { argmemonly mustprogress nofree nounwind readonly willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { noreturn nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { nocallback nofree nosync nounwind willreturn }
attributes #15 = { noreturn nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nosync nounwind readnone willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nounwind }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { nounwind returns_twice }
attributes #20 = { noreturn nounwind }
attributes #21 = { nounwind readonly willreturn }
attributes #22 = { nounwind readnone willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1289, !1290, !1291, !1292, !1293, !1294}
!llvm.ident = !{!1295}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "local_patches", scope: !2, file: !1285, line: 134, type: !1286, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 15.0.0 (https://www.github.com/llvm/llvm-project.git 61baf2ffa7071944c00a0642fdb9ff77d9cff0da)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !471, globals: !1158, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake/apps/500.perlbench_r/src/perl.c", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake/build/apps/500.perlbench_r", checksumkind: CSK_MD5, checksum: "a37ca9d7e1e309dac7e15bd0f712f0e7")
!4 = !{!5, !26, !36, !436}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 132, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "apps/500.perlbench_r/src/sv.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "e8ddee5f0a5032210b880c8e95bcea58")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25}
!9 = !DIEnumerator(name: "SVt_NULL", value: 0)
!10 = !DIEnumerator(name: "SVt_IV", value: 1)
!11 = !DIEnumerator(name: "SVt_NV", value: 2)
!12 = !DIEnumerator(name: "SVt_PV", value: 3)
!13 = !DIEnumerator(name: "SVt_INVLIST", value: 4)
!14 = !DIEnumerator(name: "SVt_PVIV", value: 5)
!15 = !DIEnumerator(name: "SVt_PVNV", value: 6)
!16 = !DIEnumerator(name: "SVt_PVMG", value: 7)
!17 = !DIEnumerator(name: "SVt_REGEXP", value: 8)
!18 = !DIEnumerator(name: "SVt_PVGV", value: 9)
!19 = !DIEnumerator(name: "SVt_PVLV", value: 10)
!20 = !DIEnumerator(name: "SVt_PVAV", value: 11)
!21 = !DIEnumerator(name: "SVt_PVHV", value: 12)
!22 = !DIEnumerator(name: "SVt_PVCV", value: 13)
!23 = !DIEnumerator(name: "SVt_PVFM", value: 14)
!24 = !DIEnumerator(name: "SVt_PVIO", value: 15)
!25 = !DIEnumerator(name: "SVt_LAST", value: 16)
!26 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "perl_phase", file: !27, line: 5211, baseType: !7, size: 32, elements: !28)
!27 = !DIFile(filename: "apps/500.perlbench_r/src/perl.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "d6cbd7c2824e8e37adbd28e0286c9085")
!28 = !{!29, !30, !31, !32, !33, !34, !35}
!29 = !DIEnumerator(name: "PERL_PHASE_CONSTRUCT", value: 0)
!30 = !DIEnumerator(name: "PERL_PHASE_START", value: 1)
!31 = !DIEnumerator(name: "PERL_PHASE_CHECK", value: 2)
!32 = !DIEnumerator(name: "PERL_PHASE_INIT", value: 3)
!33 = !DIEnumerator(name: "PERL_PHASE_RUN", value: 4)
!34 = !DIEnumerator(name: "PERL_PHASE_END", value: 5)
!35 = !DIEnumerator(name: "PERL_PHASE_DESTRUCT", value: 6)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opcode", file: !37, line: 16, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "apps/500.perlbench_r/src/opnames.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "d1f3c200effbe760f517f3ab2ea52b45")
!38 = !{!39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435}
!39 = !DIEnumerator(name: "OP_NULL", value: 0)
!40 = !DIEnumerator(name: "OP_STUB", value: 1)
!41 = !DIEnumerator(name: "OP_SCALAR", value: 2)
!42 = !DIEnumerator(name: "OP_PUSHMARK", value: 3)
!43 = !DIEnumerator(name: "OP_WANTARRAY", value: 4)
!44 = !DIEnumerator(name: "OP_CONST", value: 5)
!45 = !DIEnumerator(name: "OP_GVSV", value: 6)
!46 = !DIEnumerator(name: "OP_GV", value: 7)
!47 = !DIEnumerator(name: "OP_GELEM", value: 8)
!48 = !DIEnumerator(name: "OP_PADSV", value: 9)
!49 = !DIEnumerator(name: "OP_PADAV", value: 10)
!50 = !DIEnumerator(name: "OP_PADHV", value: 11)
!51 = !DIEnumerator(name: "OP_PADANY", value: 12)
!52 = !DIEnumerator(name: "OP_PUSHRE", value: 13)
!53 = !DIEnumerator(name: "OP_RV2GV", value: 14)
!54 = !DIEnumerator(name: "OP_RV2SV", value: 15)
!55 = !DIEnumerator(name: "OP_AV2ARYLEN", value: 16)
!56 = !DIEnumerator(name: "OP_RV2CV", value: 17)
!57 = !DIEnumerator(name: "OP_ANONCODE", value: 18)
!58 = !DIEnumerator(name: "OP_PROTOTYPE", value: 19)
!59 = !DIEnumerator(name: "OP_REFGEN", value: 20)
!60 = !DIEnumerator(name: "OP_SREFGEN", value: 21)
!61 = !DIEnumerator(name: "OP_REF", value: 22)
!62 = !DIEnumerator(name: "OP_BLESS", value: 23)
!63 = !DIEnumerator(name: "OP_BACKTICK", value: 24)
!64 = !DIEnumerator(name: "OP_GLOB", value: 25)
!65 = !DIEnumerator(name: "OP_READLINE", value: 26)
!66 = !DIEnumerator(name: "OP_RCATLINE", value: 27)
!67 = !DIEnumerator(name: "OP_REGCMAYBE", value: 28)
!68 = !DIEnumerator(name: "OP_REGCRESET", value: 29)
!69 = !DIEnumerator(name: "OP_REGCOMP", value: 30)
!70 = !DIEnumerator(name: "OP_MATCH", value: 31)
!71 = !DIEnumerator(name: "OP_QR", value: 32)
!72 = !DIEnumerator(name: "OP_SUBST", value: 33)
!73 = !DIEnumerator(name: "OP_SUBSTCONT", value: 34)
!74 = !DIEnumerator(name: "OP_TRANS", value: 35)
!75 = !DIEnumerator(name: "OP_TRANSR", value: 36)
!76 = !DIEnumerator(name: "OP_SASSIGN", value: 37)
!77 = !DIEnumerator(name: "OP_AASSIGN", value: 38)
!78 = !DIEnumerator(name: "OP_CHOP", value: 39)
!79 = !DIEnumerator(name: "OP_SCHOP", value: 40)
!80 = !DIEnumerator(name: "OP_CHOMP", value: 41)
!81 = !DIEnumerator(name: "OP_SCHOMP", value: 42)
!82 = !DIEnumerator(name: "OP_DEFINED", value: 43)
!83 = !DIEnumerator(name: "OP_UNDEF", value: 44)
!84 = !DIEnumerator(name: "OP_STUDY", value: 45)
!85 = !DIEnumerator(name: "OP_POS", value: 46)
!86 = !DIEnumerator(name: "OP_PREINC", value: 47)
!87 = !DIEnumerator(name: "OP_I_PREINC", value: 48)
!88 = !DIEnumerator(name: "OP_PREDEC", value: 49)
!89 = !DIEnumerator(name: "OP_I_PREDEC", value: 50)
!90 = !DIEnumerator(name: "OP_POSTINC", value: 51)
!91 = !DIEnumerator(name: "OP_I_POSTINC", value: 52)
!92 = !DIEnumerator(name: "OP_POSTDEC", value: 53)
!93 = !DIEnumerator(name: "OP_I_POSTDEC", value: 54)
!94 = !DIEnumerator(name: "OP_POW", value: 55)
!95 = !DIEnumerator(name: "OP_MULTIPLY", value: 56)
!96 = !DIEnumerator(name: "OP_I_MULTIPLY", value: 57)
!97 = !DIEnumerator(name: "OP_DIVIDE", value: 58)
!98 = !DIEnumerator(name: "OP_I_DIVIDE", value: 59)
!99 = !DIEnumerator(name: "OP_MODULO", value: 60)
!100 = !DIEnumerator(name: "OP_I_MODULO", value: 61)
!101 = !DIEnumerator(name: "OP_REPEAT", value: 62)
!102 = !DIEnumerator(name: "OP_ADD", value: 63)
!103 = !DIEnumerator(name: "OP_I_ADD", value: 64)
!104 = !DIEnumerator(name: "OP_SUBTRACT", value: 65)
!105 = !DIEnumerator(name: "OP_I_SUBTRACT", value: 66)
!106 = !DIEnumerator(name: "OP_CONCAT", value: 67)
!107 = !DIEnumerator(name: "OP_STRINGIFY", value: 68)
!108 = !DIEnumerator(name: "OP_LEFT_SHIFT", value: 69)
!109 = !DIEnumerator(name: "OP_RIGHT_SHIFT", value: 70)
!110 = !DIEnumerator(name: "OP_LT", value: 71)
!111 = !DIEnumerator(name: "OP_I_LT", value: 72)
!112 = !DIEnumerator(name: "OP_GT", value: 73)
!113 = !DIEnumerator(name: "OP_I_GT", value: 74)
!114 = !DIEnumerator(name: "OP_LE", value: 75)
!115 = !DIEnumerator(name: "OP_I_LE", value: 76)
!116 = !DIEnumerator(name: "OP_GE", value: 77)
!117 = !DIEnumerator(name: "OP_I_GE", value: 78)
!118 = !DIEnumerator(name: "OP_EQ", value: 79)
!119 = !DIEnumerator(name: "OP_I_EQ", value: 80)
!120 = !DIEnumerator(name: "OP_NE", value: 81)
!121 = !DIEnumerator(name: "OP_I_NE", value: 82)
!122 = !DIEnumerator(name: "OP_NCMP", value: 83)
!123 = !DIEnumerator(name: "OP_I_NCMP", value: 84)
!124 = !DIEnumerator(name: "OP_SLT", value: 85)
!125 = !DIEnumerator(name: "OP_SGT", value: 86)
!126 = !DIEnumerator(name: "OP_SLE", value: 87)
!127 = !DIEnumerator(name: "OP_SGE", value: 88)
!128 = !DIEnumerator(name: "OP_SEQ", value: 89)
!129 = !DIEnumerator(name: "OP_SNE", value: 90)
!130 = !DIEnumerator(name: "OP_SCMP", value: 91)
!131 = !DIEnumerator(name: "OP_BIT_AND", value: 92)
!132 = !DIEnumerator(name: "OP_BIT_XOR", value: 93)
!133 = !DIEnumerator(name: "OP_BIT_OR", value: 94)
!134 = !DIEnumerator(name: "OP_NBIT_AND", value: 95)
!135 = !DIEnumerator(name: "OP_NBIT_XOR", value: 96)
!136 = !DIEnumerator(name: "OP_NBIT_OR", value: 97)
!137 = !DIEnumerator(name: "OP_SBIT_AND", value: 98)
!138 = !DIEnumerator(name: "OP_SBIT_XOR", value: 99)
!139 = !DIEnumerator(name: "OP_SBIT_OR", value: 100)
!140 = !DIEnumerator(name: "OP_NEGATE", value: 101)
!141 = !DIEnumerator(name: "OP_I_NEGATE", value: 102)
!142 = !DIEnumerator(name: "OP_NOT", value: 103)
!143 = !DIEnumerator(name: "OP_COMPLEMENT", value: 104)
!144 = !DIEnumerator(name: "OP_NCOMPLEMENT", value: 105)
!145 = !DIEnumerator(name: "OP_SCOMPLEMENT", value: 106)
!146 = !DIEnumerator(name: "OP_SMARTMATCH", value: 107)
!147 = !DIEnumerator(name: "OP_ATAN2", value: 108)
!148 = !DIEnumerator(name: "OP_SIN", value: 109)
!149 = !DIEnumerator(name: "OP_COS", value: 110)
!150 = !DIEnumerator(name: "OP_RAND", value: 111)
!151 = !DIEnumerator(name: "OP_SRAND", value: 112)
!152 = !DIEnumerator(name: "OP_EXP", value: 113)
!153 = !DIEnumerator(name: "OP_LOG", value: 114)
!154 = !DIEnumerator(name: "OP_SQRT", value: 115)
!155 = !DIEnumerator(name: "OP_INT", value: 116)
!156 = !DIEnumerator(name: "OP_HEX", value: 117)
!157 = !DIEnumerator(name: "OP_OCT", value: 118)
!158 = !DIEnumerator(name: "OP_ABS", value: 119)
!159 = !DIEnumerator(name: "OP_LENGTH", value: 120)
!160 = !DIEnumerator(name: "OP_SUBSTR", value: 121)
!161 = !DIEnumerator(name: "OP_VEC", value: 122)
!162 = !DIEnumerator(name: "OP_INDEX", value: 123)
!163 = !DIEnumerator(name: "OP_RINDEX", value: 124)
!164 = !DIEnumerator(name: "OP_SPRINTF", value: 125)
!165 = !DIEnumerator(name: "OP_FORMLINE", value: 126)
!166 = !DIEnumerator(name: "OP_ORD", value: 127)
!167 = !DIEnumerator(name: "OP_CHR", value: 128)
!168 = !DIEnumerator(name: "OP_CRYPT", value: 129)
!169 = !DIEnumerator(name: "OP_UCFIRST", value: 130)
!170 = !DIEnumerator(name: "OP_LCFIRST", value: 131)
!171 = !DIEnumerator(name: "OP_UC", value: 132)
!172 = !DIEnumerator(name: "OP_LC", value: 133)
!173 = !DIEnumerator(name: "OP_QUOTEMETA", value: 134)
!174 = !DIEnumerator(name: "OP_RV2AV", value: 135)
!175 = !DIEnumerator(name: "OP_AELEMFAST", value: 136)
!176 = !DIEnumerator(name: "OP_AELEMFAST_LEX", value: 137)
!177 = !DIEnumerator(name: "OP_AELEM", value: 138)
!178 = !DIEnumerator(name: "OP_ASLICE", value: 139)
!179 = !DIEnumerator(name: "OP_KVASLICE", value: 140)
!180 = !DIEnumerator(name: "OP_AEACH", value: 141)
!181 = !DIEnumerator(name: "OP_AKEYS", value: 142)
!182 = !DIEnumerator(name: "OP_AVALUES", value: 143)
!183 = !DIEnumerator(name: "OP_EACH", value: 144)
!184 = !DIEnumerator(name: "OP_VALUES", value: 145)
!185 = !DIEnumerator(name: "OP_KEYS", value: 146)
!186 = !DIEnumerator(name: "OP_DELETE", value: 147)
!187 = !DIEnumerator(name: "OP_EXISTS", value: 148)
!188 = !DIEnumerator(name: "OP_RV2HV", value: 149)
!189 = !DIEnumerator(name: "OP_HELEM", value: 150)
!190 = !DIEnumerator(name: "OP_HSLICE", value: 151)
!191 = !DIEnumerator(name: "OP_KVHSLICE", value: 152)
!192 = !DIEnumerator(name: "OP_MULTIDEREF", value: 153)
!193 = !DIEnumerator(name: "OP_UNPACK", value: 154)
!194 = !DIEnumerator(name: "OP_PACK", value: 155)
!195 = !DIEnumerator(name: "OP_SPLIT", value: 156)
!196 = !DIEnumerator(name: "OP_JOIN", value: 157)
!197 = !DIEnumerator(name: "OP_LIST", value: 158)
!198 = !DIEnumerator(name: "OP_LSLICE", value: 159)
!199 = !DIEnumerator(name: "OP_ANONLIST", value: 160)
!200 = !DIEnumerator(name: "OP_ANONHASH", value: 161)
!201 = !DIEnumerator(name: "OP_SPLICE", value: 162)
!202 = !DIEnumerator(name: "OP_PUSH", value: 163)
!203 = !DIEnumerator(name: "OP_POP", value: 164)
!204 = !DIEnumerator(name: "OP_SHIFT", value: 165)
!205 = !DIEnumerator(name: "OP_UNSHIFT", value: 166)
!206 = !DIEnumerator(name: "OP_SORT", value: 167)
!207 = !DIEnumerator(name: "OP_REVERSE", value: 168)
!208 = !DIEnumerator(name: "OP_GREPSTART", value: 169)
!209 = !DIEnumerator(name: "OP_GREPWHILE", value: 170)
!210 = !DIEnumerator(name: "OP_MAPSTART", value: 171)
!211 = !DIEnumerator(name: "OP_MAPWHILE", value: 172)
!212 = !DIEnumerator(name: "OP_RANGE", value: 173)
!213 = !DIEnumerator(name: "OP_FLIP", value: 174)
!214 = !DIEnumerator(name: "OP_FLOP", value: 175)
!215 = !DIEnumerator(name: "OP_AND", value: 176)
!216 = !DIEnumerator(name: "OP_OR", value: 177)
!217 = !DIEnumerator(name: "OP_XOR", value: 178)
!218 = !DIEnumerator(name: "OP_DOR", value: 179)
!219 = !DIEnumerator(name: "OP_COND_EXPR", value: 180)
!220 = !DIEnumerator(name: "OP_ANDASSIGN", value: 181)
!221 = !DIEnumerator(name: "OP_ORASSIGN", value: 182)
!222 = !DIEnumerator(name: "OP_DORASSIGN", value: 183)
!223 = !DIEnumerator(name: "OP_METHOD", value: 184)
!224 = !DIEnumerator(name: "OP_ENTERSUB", value: 185)
!225 = !DIEnumerator(name: "OP_LEAVESUB", value: 186)
!226 = !DIEnumerator(name: "OP_LEAVESUBLV", value: 187)
!227 = !DIEnumerator(name: "OP_CALLER", value: 188)
!228 = !DIEnumerator(name: "OP_WARN", value: 189)
!229 = !DIEnumerator(name: "OP_DIE", value: 190)
!230 = !DIEnumerator(name: "OP_RESET", value: 191)
!231 = !DIEnumerator(name: "OP_LINESEQ", value: 192)
!232 = !DIEnumerator(name: "OP_NEXTSTATE", value: 193)
!233 = !DIEnumerator(name: "OP_DBSTATE", value: 194)
!234 = !DIEnumerator(name: "OP_UNSTACK", value: 195)
!235 = !DIEnumerator(name: "OP_ENTER", value: 196)
!236 = !DIEnumerator(name: "OP_LEAVE", value: 197)
!237 = !DIEnumerator(name: "OP_SCOPE", value: 198)
!238 = !DIEnumerator(name: "OP_ENTERITER", value: 199)
!239 = !DIEnumerator(name: "OP_ITER", value: 200)
!240 = !DIEnumerator(name: "OP_ENTERLOOP", value: 201)
!241 = !DIEnumerator(name: "OP_LEAVELOOP", value: 202)
!242 = !DIEnumerator(name: "OP_RETURN", value: 203)
!243 = !DIEnumerator(name: "OP_LAST", value: 204)
!244 = !DIEnumerator(name: "OP_NEXT", value: 205)
!245 = !DIEnumerator(name: "OP_REDO", value: 206)
!246 = !DIEnumerator(name: "OP_DUMP", value: 207)
!247 = !DIEnumerator(name: "OP_GOTO", value: 208)
!248 = !DIEnumerator(name: "OP_EXIT", value: 209)
!249 = !DIEnumerator(name: "OP_METHOD_NAMED", value: 210)
!250 = !DIEnumerator(name: "OP_METHOD_SUPER", value: 211)
!251 = !DIEnumerator(name: "OP_METHOD_REDIR", value: 212)
!252 = !DIEnumerator(name: "OP_METHOD_REDIR_SUPER", value: 213)
!253 = !DIEnumerator(name: "OP_ENTERGIVEN", value: 214)
!254 = !DIEnumerator(name: "OP_LEAVEGIVEN", value: 215)
!255 = !DIEnumerator(name: "OP_ENTERWHEN", value: 216)
!256 = !DIEnumerator(name: "OP_LEAVEWHEN", value: 217)
!257 = !DIEnumerator(name: "OP_BREAK", value: 218)
!258 = !DIEnumerator(name: "OP_CONTINUE", value: 219)
!259 = !DIEnumerator(name: "OP_OPEN", value: 220)
!260 = !DIEnumerator(name: "OP_CLOSE", value: 221)
!261 = !DIEnumerator(name: "OP_PIPE_OP", value: 222)
!262 = !DIEnumerator(name: "OP_FILENO", value: 223)
!263 = !DIEnumerator(name: "OP_UMASK", value: 224)
!264 = !DIEnumerator(name: "OP_BINMODE", value: 225)
!265 = !DIEnumerator(name: "OP_TIE", value: 226)
!266 = !DIEnumerator(name: "OP_UNTIE", value: 227)
!267 = !DIEnumerator(name: "OP_TIED", value: 228)
!268 = !DIEnumerator(name: "OP_DBMOPEN", value: 229)
!269 = !DIEnumerator(name: "OP_DBMCLOSE", value: 230)
!270 = !DIEnumerator(name: "OP_SSELECT", value: 231)
!271 = !DIEnumerator(name: "OP_SELECT", value: 232)
!272 = !DIEnumerator(name: "OP_GETC", value: 233)
!273 = !DIEnumerator(name: "OP_READ", value: 234)
!274 = !DIEnumerator(name: "OP_ENTERWRITE", value: 235)
!275 = !DIEnumerator(name: "OP_LEAVEWRITE", value: 236)
!276 = !DIEnumerator(name: "OP_PRTF", value: 237)
!277 = !DIEnumerator(name: "OP_PRINT", value: 238)
!278 = !DIEnumerator(name: "OP_SAY", value: 239)
!279 = !DIEnumerator(name: "OP_SYSOPEN", value: 240)
!280 = !DIEnumerator(name: "OP_SYSSEEK", value: 241)
!281 = !DIEnumerator(name: "OP_SYSREAD", value: 242)
!282 = !DIEnumerator(name: "OP_SYSWRITE", value: 243)
!283 = !DIEnumerator(name: "OP_EOF", value: 244)
!284 = !DIEnumerator(name: "OP_TELL", value: 245)
!285 = !DIEnumerator(name: "OP_SEEK", value: 246)
!286 = !DIEnumerator(name: "OP_TRUNCATE", value: 247)
!287 = !DIEnumerator(name: "OP_FCNTL", value: 248)
!288 = !DIEnumerator(name: "OP_IOCTL", value: 249)
!289 = !DIEnumerator(name: "OP_FLOCK", value: 250)
!290 = !DIEnumerator(name: "OP_SEND", value: 251)
!291 = !DIEnumerator(name: "OP_RECV", value: 252)
!292 = !DIEnumerator(name: "OP_SOCKET", value: 253)
!293 = !DIEnumerator(name: "OP_SOCKPAIR", value: 254)
!294 = !DIEnumerator(name: "OP_BIND", value: 255)
!295 = !DIEnumerator(name: "OP_CONNECT", value: 256)
!296 = !DIEnumerator(name: "OP_LISTEN", value: 257)
!297 = !DIEnumerator(name: "OP_ACCEPT", value: 258)
!298 = !DIEnumerator(name: "OP_SHUTDOWN", value: 259)
!299 = !DIEnumerator(name: "OP_GSOCKOPT", value: 260)
!300 = !DIEnumerator(name: "OP_SSOCKOPT", value: 261)
!301 = !DIEnumerator(name: "OP_GETSOCKNAME", value: 262)
!302 = !DIEnumerator(name: "OP_GETPEERNAME", value: 263)
!303 = !DIEnumerator(name: "OP_LSTAT", value: 264)
!304 = !DIEnumerator(name: "OP_STAT", value: 265)
!305 = !DIEnumerator(name: "OP_FTRREAD", value: 266)
!306 = !DIEnumerator(name: "OP_FTRWRITE", value: 267)
!307 = !DIEnumerator(name: "OP_FTREXEC", value: 268)
!308 = !DIEnumerator(name: "OP_FTEREAD", value: 269)
!309 = !DIEnumerator(name: "OP_FTEWRITE", value: 270)
!310 = !DIEnumerator(name: "OP_FTEEXEC", value: 271)
!311 = !DIEnumerator(name: "OP_FTIS", value: 272)
!312 = !DIEnumerator(name: "OP_FTSIZE", value: 273)
!313 = !DIEnumerator(name: "OP_FTMTIME", value: 274)
!314 = !DIEnumerator(name: "OP_FTATIME", value: 275)
!315 = !DIEnumerator(name: "OP_FTCTIME", value: 276)
!316 = !DIEnumerator(name: "OP_FTROWNED", value: 277)
!317 = !DIEnumerator(name: "OP_FTEOWNED", value: 278)
!318 = !DIEnumerator(name: "OP_FTZERO", value: 279)
!319 = !DIEnumerator(name: "OP_FTSOCK", value: 280)
!320 = !DIEnumerator(name: "OP_FTCHR", value: 281)
!321 = !DIEnumerator(name: "OP_FTBLK", value: 282)
!322 = !DIEnumerator(name: "OP_FTFILE", value: 283)
!323 = !DIEnumerator(name: "OP_FTDIR", value: 284)
!324 = !DIEnumerator(name: "OP_FTPIPE", value: 285)
!325 = !DIEnumerator(name: "OP_FTSUID", value: 286)
!326 = !DIEnumerator(name: "OP_FTSGID", value: 287)
!327 = !DIEnumerator(name: "OP_FTSVTX", value: 288)
!328 = !DIEnumerator(name: "OP_FTLINK", value: 289)
!329 = !DIEnumerator(name: "OP_FTTTY", value: 290)
!330 = !DIEnumerator(name: "OP_FTTEXT", value: 291)
!331 = !DIEnumerator(name: "OP_FTBINARY", value: 292)
!332 = !DIEnumerator(name: "OP_CHDIR", value: 293)
!333 = !DIEnumerator(name: "OP_CHOWN", value: 294)
!334 = !DIEnumerator(name: "OP_CHROOT", value: 295)
!335 = !DIEnumerator(name: "OP_UNLINK", value: 296)
!336 = !DIEnumerator(name: "OP_CHMOD", value: 297)
!337 = !DIEnumerator(name: "OP_UTIME", value: 298)
!338 = !DIEnumerator(name: "OP_RENAME", value: 299)
!339 = !DIEnumerator(name: "OP_LINK", value: 300)
!340 = !DIEnumerator(name: "OP_SYMLINK", value: 301)
!341 = !DIEnumerator(name: "OP_READLINK", value: 302)
!342 = !DIEnumerator(name: "OP_MKDIR", value: 303)
!343 = !DIEnumerator(name: "OP_RMDIR", value: 304)
!344 = !DIEnumerator(name: "OP_OPEN_DIR", value: 305)
!345 = !DIEnumerator(name: "OP_READDIR", value: 306)
!346 = !DIEnumerator(name: "OP_TELLDIR", value: 307)
!347 = !DIEnumerator(name: "OP_SEEKDIR", value: 308)
!348 = !DIEnumerator(name: "OP_REWINDDIR", value: 309)
!349 = !DIEnumerator(name: "OP_CLOSEDIR", value: 310)
!350 = !DIEnumerator(name: "OP_FORK", value: 311)
!351 = !DIEnumerator(name: "OP_WAIT", value: 312)
!352 = !DIEnumerator(name: "OP_WAITPID", value: 313)
!353 = !DIEnumerator(name: "OP_SYSTEM", value: 314)
!354 = !DIEnumerator(name: "OP_EXEC", value: 315)
!355 = !DIEnumerator(name: "OP_KILL", value: 316)
!356 = !DIEnumerator(name: "OP_GETPPID", value: 317)
!357 = !DIEnumerator(name: "OP_GETPGRP", value: 318)
!358 = !DIEnumerator(name: "OP_SETPGRP", value: 319)
!359 = !DIEnumerator(name: "OP_GETPRIORITY", value: 320)
!360 = !DIEnumerator(name: "OP_SETPRIORITY", value: 321)
!361 = !DIEnumerator(name: "OP_TIME", value: 322)
!362 = !DIEnumerator(name: "OP_TMS", value: 323)
!363 = !DIEnumerator(name: "OP_LOCALTIME", value: 324)
!364 = !DIEnumerator(name: "OP_GMTIME", value: 325)
!365 = !DIEnumerator(name: "OP_ALARM", value: 326)
!366 = !DIEnumerator(name: "OP_SLEEP", value: 327)
!367 = !DIEnumerator(name: "OP_SHMGET", value: 328)
!368 = !DIEnumerator(name: "OP_SHMCTL", value: 329)
!369 = !DIEnumerator(name: "OP_SHMREAD", value: 330)
!370 = !DIEnumerator(name: "OP_SHMWRITE", value: 331)
!371 = !DIEnumerator(name: "OP_MSGGET", value: 332)
!372 = !DIEnumerator(name: "OP_MSGCTL", value: 333)
!373 = !DIEnumerator(name: "OP_MSGSND", value: 334)
!374 = !DIEnumerator(name: "OP_MSGRCV", value: 335)
!375 = !DIEnumerator(name: "OP_SEMOP", value: 336)
!376 = !DIEnumerator(name: "OP_SEMGET", value: 337)
!377 = !DIEnumerator(name: "OP_SEMCTL", value: 338)
!378 = !DIEnumerator(name: "OP_REQUIRE", value: 339)
!379 = !DIEnumerator(name: "OP_DOFILE", value: 340)
!380 = !DIEnumerator(name: "OP_HINTSEVAL", value: 341)
!381 = !DIEnumerator(name: "OP_ENTEREVAL", value: 342)
!382 = !DIEnumerator(name: "OP_LEAVEEVAL", value: 343)
!383 = !DIEnumerator(name: "OP_ENTERTRY", value: 344)
!384 = !DIEnumerator(name: "OP_LEAVETRY", value: 345)
!385 = !DIEnumerator(name: "OP_GHBYNAME", value: 346)
!386 = !DIEnumerator(name: "OP_GHBYADDR", value: 347)
!387 = !DIEnumerator(name: "OP_GHOSTENT", value: 348)
!388 = !DIEnumerator(name: "OP_GNBYNAME", value: 349)
!389 = !DIEnumerator(name: "OP_GNBYADDR", value: 350)
!390 = !DIEnumerator(name: "OP_GNETENT", value: 351)
!391 = !DIEnumerator(name: "OP_GPBYNAME", value: 352)
!392 = !DIEnumerator(name: "OP_GPBYNUMBER", value: 353)
!393 = !DIEnumerator(name: "OP_GPROTOENT", value: 354)
!394 = !DIEnumerator(name: "OP_GSBYNAME", value: 355)
!395 = !DIEnumerator(name: "OP_GSBYPORT", value: 356)
!396 = !DIEnumerator(name: "OP_GSERVENT", value: 357)
!397 = !DIEnumerator(name: "OP_SHOSTENT", value: 358)
!398 = !DIEnumerator(name: "OP_SNETENT", value: 359)
!399 = !DIEnumerator(name: "OP_SPROTOENT", value: 360)
!400 = !DIEnumerator(name: "OP_SSERVENT", value: 361)
!401 = !DIEnumerator(name: "OP_EHOSTENT", value: 362)
!402 = !DIEnumerator(name: "OP_ENETENT", value: 363)
!403 = !DIEnumerator(name: "OP_EPROTOENT", value: 364)
!404 = !DIEnumerator(name: "OP_ESERVENT", value: 365)
!405 = !DIEnumerator(name: "OP_GPWNAM", value: 366)
!406 = !DIEnumerator(name: "OP_GPWUID", value: 367)
!407 = !DIEnumerator(name: "OP_GPWENT", value: 368)
!408 = !DIEnumerator(name: "OP_SPWENT", value: 369)
!409 = !DIEnumerator(name: "OP_EPWENT", value: 370)
!410 = !DIEnumerator(name: "OP_GGRNAM", value: 371)
!411 = !DIEnumerator(name: "OP_GGRGID", value: 372)
!412 = !DIEnumerator(name: "OP_GGRENT", value: 373)
!413 = !DIEnumerator(name: "OP_SGRENT", value: 374)
!414 = !DIEnumerator(name: "OP_EGRENT", value: 375)
!415 = !DIEnumerator(name: "OP_GETLOGIN", value: 376)
!416 = !DIEnumerator(name: "OP_SYSCALL", value: 377)
!417 = !DIEnumerator(name: "OP_LOCK", value: 378)
!418 = !DIEnumerator(name: "OP_ONCE", value: 379)
!419 = !DIEnumerator(name: "OP_CUSTOM", value: 380)
!420 = !DIEnumerator(name: "OP_REACH", value: 381)
!421 = !DIEnumerator(name: "OP_RKEYS", value: 382)
!422 = !DIEnumerator(name: "OP_RVALUES", value: 383)
!423 = !DIEnumerator(name: "OP_COREARGS", value: 384)
!424 = !DIEnumerator(name: "OP_RUNCV", value: 385)
!425 = !DIEnumerator(name: "OP_FC", value: 386)
!426 = !DIEnumerator(name: "OP_PADCV", value: 387)
!427 = !DIEnumerator(name: "OP_INTROCV", value: 388)
!428 = !DIEnumerator(name: "OP_CLONECV", value: 389)
!429 = !DIEnumerator(name: "OP_PADRANGE", value: 390)
!430 = !DIEnumerator(name: "OP_REFASSIGN", value: 391)
!431 = !DIEnumerator(name: "OP_LVREF", value: 392)
!432 = !DIEnumerator(name: "OP_LVREFSLICE", value: 393)
!433 = !DIEnumerator(name: "OP_LVAVREF", value: 394)
!434 = !DIEnumerator(name: "OP_ANONCONST", value: 395)
!435 = !DIEnumerator(name: "OP_max", value: 396)
!436 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !437, line: 61, baseType: !7, size: 32, elements: !438)
!437 = !DIFile(filename: "apps/500.perlbench_r/src/mg_vtable.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "e447d9af3167273e6abad74e52347050")
!438 = !{!439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470}
!439 = !DIEnumerator(name: "want_vtbl_arylen", value: 0)
!440 = !DIEnumerator(name: "want_vtbl_arylen_p", value: 1)
!441 = !DIEnumerator(name: "want_vtbl_backref", value: 2)
!442 = !DIEnumerator(name: "want_vtbl_checkcall", value: 3)
!443 = !DIEnumerator(name: "want_vtbl_collxfrm", value: 4)
!444 = !DIEnumerator(name: "want_vtbl_dbline", value: 5)
!445 = !DIEnumerator(name: "want_vtbl_debugvar", value: 6)
!446 = !DIEnumerator(name: "want_vtbl_defelem", value: 7)
!447 = !DIEnumerator(name: "want_vtbl_env", value: 8)
!448 = !DIEnumerator(name: "want_vtbl_envelem", value: 9)
!449 = !DIEnumerator(name: "want_vtbl_hints", value: 10)
!450 = !DIEnumerator(name: "want_vtbl_hintselem", value: 11)
!451 = !DIEnumerator(name: "want_vtbl_isa", value: 12)
!452 = !DIEnumerator(name: "want_vtbl_isaelem", value: 13)
!453 = !DIEnumerator(name: "want_vtbl_lvref", value: 14)
!454 = !DIEnumerator(name: "want_vtbl_mglob", value: 15)
!455 = !DIEnumerator(name: "want_vtbl_nkeys", value: 16)
!456 = !DIEnumerator(name: "want_vtbl_ovrld", value: 17)
!457 = !DIEnumerator(name: "want_vtbl_pack", value: 18)
!458 = !DIEnumerator(name: "want_vtbl_packelem", value: 19)
!459 = !DIEnumerator(name: "want_vtbl_pos", value: 20)
!460 = !DIEnumerator(name: "want_vtbl_regdata", value: 21)
!461 = !DIEnumerator(name: "want_vtbl_regdatum", value: 22)
!462 = !DIEnumerator(name: "want_vtbl_regexp", value: 23)
!463 = !DIEnumerator(name: "want_vtbl_sigelem", value: 24)
!464 = !DIEnumerator(name: "want_vtbl_substr", value: 25)
!465 = !DIEnumerator(name: "want_vtbl_sv", value: 26)
!466 = !DIEnumerator(name: "want_vtbl_taint", value: 27)
!467 = !DIEnumerator(name: "want_vtbl_utf8", value: 28)
!468 = !DIEnumerator(name: "want_vtbl_uvar", value: 29)
!469 = !DIEnumerator(name: "want_vtbl_vec", value: 30)
!470 = !DIEnumerator(name: "magic_vtable_max", value: 31)
!471 = !{!472, !478, !480, !486, !487, !489, !535, !500, !505, !742, !830, !1044, !530, !1071, !1072, !544, !594, !1089, !1090, !1104, !795, !1116, !876, !1117, !561, !546, !1123, !631, !494, !609, !824, !760, !1124, !1126, !1139, !560, !719, !485, !1153, !477, !905, !670, !1154, !1155, !675, !737, !547, !1156}
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sighandler_t", file: !473, line: 57, baseType: !474)
!473 = !DIFile(filename: "apps/500.perlbench_r/src/iperlsys.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "6d4b5b9e53fb4e2d8ffc4f141f7dc428")
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{null, !477}
!477 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !479, line: 72, baseType: !474)
!479 = !DIFile(filename: "/usr/include/signal.h", directory: "", checksumkind: CSK_MD5, checksum: "f0ccc98b488c777571beae1a47763d91")
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "PerlInterpreter", file: !27, line: 2639, baseType: !482)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "interpreter", file: !27, line: 5434, size: 8, elements: !483)
!483 = !{!484}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "broiled", scope: !482, file: !27, line: 5435, baseType: !485, size: 8)
!485 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !488, line: 175, baseType: !7)
!488 = !DIFile(filename: "apps/500.perlbench_r/src/handy.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "c8309d47b4ac9e3aa493b22b0023a43d")
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "AV", file: !27, line: 2648, baseType: !491)
!491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "av", file: !6, line: 241, size: 192, elements: !492)
!492 = !{!493, !1029, !1030, !1031}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !491, file: !6, line: 242, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVAV", file: !27, line: 2666, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvav", file: !497, line: 11, size: 320, elements: !498)
!497 = !DIFile(filename: "apps/500.perlbench_r/src/av.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "3a1f05c53eedc93ff5262833cf63fc72")
!498 = !{!499, !1025, !1026, !1027, !1028}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !496, file: !497, line: 12, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "HV", file: !27, line: 2649, baseType: !502)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hv", file: !6, line: 246, size: 192, elements: !503)
!503 = !{!504, !1010, !1011, !1012}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !502, file: !6, line: 247, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVHV", file: !27, line: 2667, baseType: !507)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvhv", file: !508, line: 130, size: 256, elements: !509)
!508 = !DIFile(filename: "apps/500.perlbench_r/src/hv.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "27f8e9a41fdec76d9a4a382c2975f411")
!509 = !{!510, !511, !1008, !1009}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !507, file: !508, line: 131, baseType: !500, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !507, file: !508, line: 132, baseType: !512, size: 64, offset: 64)
!512 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_xmgu", file: !6, line: 494, size: 64, elements: !513)
!513 = !{!514, !1007}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_magic", scope: !512, file: !6, line: 495, baseType: !515, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "MAGIC", file: !27, line: 2658, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "magic", file: !518, line: 23, size: 384, elements: !519)
!518 = !DIFile(filename: "apps/500.perlbench_r/src/mg.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "4fa2ae981502c39a9854b719090d263f")
!519 = !{!520, !521, !999, !1002, !1003, !1004, !1005, !1006}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "mg_moremagic", scope: !517, file: !518, line: 24, baseType: !515, size: 64)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "mg_virtual", scope: !517, file: !518, line: 25, baseType: !522, size: 64, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "MGVTBL", file: !27, line: 2673, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mgvtbl", file: !518, line: 11, size: 512, elements: !525)
!525 = !{!526, !974, !975, !979, !980, !981, !985, !998}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "svt_get", scope: !524, file: !518, line: 12, baseType: !527, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!477, !530, !515}
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "SV", file: !27, line: 2647, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sv", file: !6, line: 218, size: 192, elements: !533)
!533 = !{!534, !536, !537, !538}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !532, file: !6, line: 219, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !532, file: !6, line: 219, baseType: !487, size: 32, offset: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !532, file: !6, line: 219, baseType: !487, size: 32, offset: 96)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !532, file: !6, line: 220, baseType: !539, size: 64, offset: 128)
!539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !532, file: !6, line: 220, size: 64, elements: !540)
!540 = !{!541, !542, !545, !548, !551, !552, !970, !971, !972, !973}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !539, file: !6, line: 220, baseType: !486, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !539, file: !6, line: 220, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "IV", file: !27, line: 1670, baseType: !544)
!544 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !539, file: !6, line: 220, baseType: !546, size: 64)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "UV", file: !27, line: 1671, baseType: !547)
!547 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !539, file: !6, line: 220, baseType: !549, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "NV", file: !27, line: 1877, baseType: !550)
!550 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !539, file: !6, line: 220, baseType: !530, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !539, file: !6, line: 220, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regexp", file: !555, line: 140, size: 1536, elements: !556)
!555 = !DIFile(filename: "apps/500.perlbench_r/src/regexp.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "83285f03b848d0cf5e30c9354282eae6")
!556 = !{!557, !558, !559, !563, !568, !926, !927, !928, !929, !930, !931, !932, !948, !949, !950, !951, !952, !953, !961, !962, !963, !964, !965, !966, !967, !968, !969}
!557 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !554, file: !555, line: 141, baseType: !500, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !554, file: !555, line: 141, baseType: !512, size: 64, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !554, file: !555, line: 141, baseType: !560, size: 64, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRLEN", file: !27, line: 2615, baseType: !561)
!561 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !562, line: 46, baseType: !547)
!562 = !DIFile(filename: "llvm-project/build/lib/clang/15.0.0/include/stddef.h", directory: "/home/rouzbeh/Graduate/LLVM", checksumkind: CSK_MD5, checksum: "2499dd2361b915724b073282bea3a7bc")
!563 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !554, file: !555, line: 141, baseType: !564, size: 64, offset: 192)
!564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !554, file: !555, line: 141, size: 64, elements: !565)
!565 = !{!566, !567}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !564, file: !555, line: 141, baseType: !560, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !564, file: !555, line: 141, baseType: !486, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !554, file: !555, line: 142, baseType: !569, size: 64, offset: 256)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regexp_engine", file: !555, line: 157, size: 768, elements: !572)
!572 = !{!573, !866, !871, !887, !891, !895, !900, !907, !911, !915, !919, !920}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !571, file: !555, line: 158, baseType: !574, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{!577, !865, !487}
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "REGEXP", file: !27, line: 2651, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "p5rx", file: !6, line: 256, size: 192, elements: !580)
!580 = !{!581, !582, !583, !584}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !579, file: !6, line: 257, baseType: !553, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !579, file: !6, line: 257, baseType: !487, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !579, file: !6, line: 257, baseType: !487, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !579, file: !6, line: 258, baseType: !585, size: 64, offset: 128)
!585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !579, file: !6, line: 258, size: 64, elements: !586)
!586 = !{!587, !588, !589, !590, !591, !592, !593, !595, !619, !864}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !585, file: !6, line: 258, baseType: !486, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !585, file: !6, line: 258, baseType: !543, size: 64)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !585, file: !6, line: 258, baseType: !546, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !585, file: !6, line: 258, baseType: !549, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !585, file: !6, line: 258, baseType: !530, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !585, file: !6, line: 258, baseType: !553, size: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !585, file: !6, line: 258, baseType: !594, size: 64)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !585, file: !6, line: 258, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "HE", file: !6, line: 186, baseType: !599)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "he", file: !508, line: 32, size: 192, elements: !600)
!600 = !{!601, !602, !614}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "hent_next", scope: !599, file: !508, line: 36, baseType: !597, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "hent_hek", scope: !599, file: !508, line: 37, baseType: !603, size: 64, offset: 64)
!603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_typedef, name: "HEK", file: !6, line: 187, baseType: !605)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hek", file: !508, line: 45, size: 96, elements: !606)
!606 = !{!607, !608, !610}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "hek_hash", scope: !605, file: !508, line: 46, baseType: !487, size: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "hek_len", scope: !605, file: !508, line: 47, baseType: !609, size: 32, offset: 32)
!609 = !DIDerivedType(tag: DW_TAG_typedef, name: "I32", file: !488, line: 174, baseType: !477)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "hek_key", scope: !605, file: !508, line: 48, baseType: !611, size: 8, offset: 64)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 8, elements: !612)
!612 = !{!613}
!613 = !DISubrange(count: 1)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "he_valu", scope: !599, file: !508, line: 41, baseType: !615, size: 64, offset: 128)
!615 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !599, file: !508, line: 38, size: 64, elements: !616)
!616 = !{!617, !618}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "hent_val", scope: !615, file: !508, line: 39, baseType: !530, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "hent_refcount", scope: !615, file: !508, line: 40, baseType: !561, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !585, file: !6, line: 258, baseType: !620, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GP", file: !27, line: 2652, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gp", file: !623, line: 11, size: 640, elements: !624)
!623 = !DIFile(filename: "apps/500.perlbench_r/src/gv.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "9bb5d31ae54fd87680f22708385557b3")
!624 = !{!625, !626, !736, !855, !856, !857, !858, !859, !860, !861, !862, !863}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "gp_sv", scope: !622, file: !623, line: 12, baseType: !530, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "gp_io", scope: !622, file: !623, line: 13, baseType: !627, size: 64, offset: 64)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io", file: !6, line: 251, size: 192, elements: !629)
!629 = !{!630, !721, !722, !723}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !628, file: !6, line: 252, baseType: !631, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVIO", file: !27, line: 2672, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvio", file: !6, line: 603, size: 1088, elements: !634)
!634 = !{!635, !636, !637, !638, !643, !649, !656, !665, !666, !667, !668, !669, !713, !714, !715, !716, !717, !718}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !633, file: !6, line: 604, baseType: !500, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !633, file: !6, line: 604, baseType: !512, size: 64, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !633, file: !6, line: 604, baseType: !560, size: 64, offset: 128)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !633, file: !6, line: 604, baseType: !639, size: 64, offset: 192)
!639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !633, file: !6, line: 604, size: 64, elements: !640)
!640 = !{!641, !642}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !639, file: !6, line: 604, baseType: !560, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !639, file: !6, line: 604, baseType: !486, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "xiv_u", scope: !633, file: !6, line: 605, baseType: !644, size: 64, offset: 256)
!644 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_xivu", file: !6, line: 488, size: 64, elements: !645)
!645 = !{!646, !647, !648}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "xivu_iv", scope: !644, file: !6, line: 489, baseType: !543, size: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "xivu_uv", scope: !644, file: !6, line: 490, baseType: !546, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "xivu_namehek", scope: !644, file: !6, line: 491, baseType: !603, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "xio_ofp", scope: !633, file: !6, line: 607, baseType: !650, size: 64, offset: 320)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "PerlIO", file: !652, line: 85, baseType: !653)
!652 = !DIFile(filename: "apps/500.perlbench_r/src/perlio.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "97551467ae05102ac1f9e2f28362d918")
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "PerlIOl", file: !652, line: 83, baseType: !655)
!655 = !DICompositeType(tag: DW_TAG_structure_type, name: "_PerlIO", file: !652, line: 83, flags: DIFlagFwdDecl)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "xio_dirpu", scope: !633, file: !6, line: 620, baseType: !657, size: 64, offset: 384)
!657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !633, file: !6, line: 617, size: 64, elements: !658)
!658 = !{!659, !664}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "xiou_dirp", scope: !657, file: !6, line: 618, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !662, line: 127, baseType: !663)
!662 = !DIFile(filename: "/usr/include/dirent.h", directory: "", checksumkind: CSK_MD5, checksum: "33c45a2c20a17fc93667c8d9aa922ab0")
!663 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !662, line: 127, flags: DIFlagFwdDecl)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "xiou_any", scope: !657, file: !6, line: 619, baseType: !535, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "xio_page", scope: !633, file: !6, line: 622, baseType: !543, size: 64, offset: 448)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "xio_page_len", scope: !633, file: !6, line: 623, baseType: !543, size: 64, offset: 512)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "xio_lines_left", scope: !633, file: !6, line: 624, baseType: !543, size: 64, offset: 576)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "xio_top_name", scope: !633, file: !6, line: 625, baseType: !486, size: 64, offset: 640)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "xio_top_gv", scope: !633, file: !6, line: 626, baseType: !670, size: 64, offset: 704)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_typedef, name: "GV", file: !27, line: 2653, baseType: !672)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gv", file: !6, line: 231, size: 192, elements: !673)
!673 = !{!674, !698, !699, !700}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !672, file: !6, line: 232, baseType: !675, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVGV", file: !27, line: 2668, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvgv", file: !6, line: 561, size: 384, elements: !678)
!678 = !{!679, !680, !681, !682, !687, !688}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !677, file: !6, line: 562, baseType: !500, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !677, file: !6, line: 562, baseType: !512, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !677, file: !6, line: 562, baseType: !560, size: 64, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !677, file: !6, line: 562, baseType: !683, size: 64, offset: 192)
!683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !6, line: 562, size: 64, elements: !684)
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !683, file: !6, line: 562, baseType: !560, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !683, file: !6, line: 562, baseType: !486, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "xiv_u", scope: !677, file: !6, line: 563, baseType: !644, size: 64, offset: 256)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "xnv_u", scope: !677, file: !6, line: 564, baseType: !689, size: 64, offset: 320)
!689 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_xnvu", file: !6, line: 479, size: 64, elements: !690)
!690 = !{!691, !692, !693}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "xnv_nv", scope: !689, file: !6, line: 480, baseType: !549, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "xgv_stash", scope: !689, file: !6, line: 481, baseType: !500, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "xpad_cop_seq", scope: !689, file: !6, line: 485, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !689, file: !6, line: 482, size: 64, elements: !695)
!695 = !{!696, !697}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "xlow", scope: !694, file: !6, line: 483, baseType: !487, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "xhigh", scope: !694, file: !6, line: 484, baseType: !487, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !672, file: !6, line: 232, baseType: !487, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !672, file: !6, line: 232, baseType: !487, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !672, file: !6, line: 233, baseType: !701, size: 64, offset: 128)
!701 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !672, file: !6, line: 233, size: 64, elements: !702)
!702 = !{!703, !704, !705, !706, !707, !708, !709, !710, !711, !712}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !701, file: !6, line: 233, baseType: !486, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !701, file: !6, line: 233, baseType: !543, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !701, file: !6, line: 233, baseType: !546, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !701, file: !6, line: 233, baseType: !549, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !701, file: !6, line: 233, baseType: !530, size: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !701, file: !6, line: 233, baseType: !553, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !701, file: !6, line: 233, baseType: !594, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !701, file: !6, line: 233, baseType: !596, size: 64)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !701, file: !6, line: 233, baseType: !620, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !701, file: !6, line: 233, baseType: !650, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "xio_fmt_name", scope: !633, file: !6, line: 627, baseType: !486, size: 64, offset: 768)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "xio_fmt_gv", scope: !633, file: !6, line: 628, baseType: !670, size: 64, offset: 832)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "xio_bottom_name", scope: !633, file: !6, line: 629, baseType: !486, size: 64, offset: 896)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "xio_bottom_gv", scope: !633, file: !6, line: 630, baseType: !670, size: 64, offset: 960)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "xio_type", scope: !633, file: !6, line: 631, baseType: !485, size: 8, offset: 1024)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "xio_flags", scope: !633, file: !6, line: 632, baseType: !719, size: 8, offset: 1032)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "U8", file: !488, line: 171, baseType: !720)
!720 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !628, file: !6, line: 252, baseType: !487, size: 32, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !628, file: !6, line: 252, baseType: !487, size: 32, offset: 96)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !628, file: !6, line: 253, baseType: !724, size: 64, offset: 128)
!724 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !628, file: !6, line: 253, size: 64, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733, !734, !735}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !724, file: !6, line: 253, baseType: !486, size: 64)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !724, file: !6, line: 253, baseType: !543, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !724, file: !6, line: 253, baseType: !546, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !724, file: !6, line: 253, baseType: !549, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !724, file: !6, line: 253, baseType: !530, size: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !724, file: !6, line: 253, baseType: !553, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !724, file: !6, line: 253, baseType: !594, size: 64)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !724, file: !6, line: 253, baseType: !596, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !724, file: !6, line: 253, baseType: !620, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !724, file: !6, line: 253, baseType: !650, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "gp_cv", scope: !622, file: !623, line: 14, baseType: !737, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "CV", file: !27, line: 2650, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cv", file: !6, line: 236, size: 192, elements: !740)
!740 = !{!741, !840, !841, !842}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "sv_any", scope: !739, file: !6, line: 237, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVCV", file: !27, line: 2669, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvcv", file: !745, line: 13, size: 832, elements: !746)
!745 = !DIFile(filename: "apps/500.perlbench_r/src/cv.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "b8f33b415055b936fc8991c908273806")
!746 = !{!747, !748, !749, !750, !755, !756, !801, !809, !814, !815, !835, !836, !837, !839}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !744, file: !745, line: 14, baseType: !500, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !744, file: !745, line: 14, baseType: !512, size: 64, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !744, file: !745, line: 14, baseType: !560, size: 64, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !744, file: !745, line: 14, baseType: !751, size: 64, offset: 192)
!751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !745, line: 14, size: 64, elements: !752)
!752 = !{!753, !754}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !751, file: !745, line: 14, baseType: !560, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !751, file: !745, line: 14, baseType: !486, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_stash", scope: !744, file: !745, line: 15, baseType: !500, size: 64, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_start_u", scope: !744, file: !745, line: 15, baseType: !757, size: 64, offset: 320)
!757 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !745, line: 15, size: 64, elements: !758)
!758 = !{!759, !784}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_start", scope: !757, file: !745, line: 15, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "OP", file: !27, line: 2617, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "op", file: !763, line: 202, size: 320, elements: !764)
!763 = !DIFile(filename: "apps/500.perlbench_r/src/op.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "b88d747a6f3149f06a4a1e8e725e6800")
!764 = !{!765, !766, !767, !771, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !762, file: !763, line: 203, baseType: !760, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !762, file: !763, line: 203, baseType: !760, size: 64, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !762, file: !763, line: 203, baseType: !768, size: 64, offset: 128)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!760}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !762, file: !763, line: 203, baseType: !772, size: 64, offset: 192)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "PADOFFSET", file: !773, line: 25, baseType: !547)
!773 = !DIFile(filename: "apps/500.perlbench_r/src/pad.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "07d0fc40568e154e930466504379a358")
!774 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !762, file: !763, line: 203, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !762, file: !763, line: 203, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !762, file: !763, line: 203, baseType: !719, size: 8, offset: 272)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !762, file: !763, line: 203, baseType: !719, size: 8, offset: 280)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_xsubany", scope: !757, file: !745, line: 15, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_typedef, name: "ANY", file: !27, line: 2674, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "any", file: !27, line: 3691, size: 64, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !796, !800}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "any_ptr", scope: !786, file: !27, line: 3692, baseType: !535, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "any_i32", scope: !786, file: !27, line: 3693, baseType: !609, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "any_u32", scope: !786, file: !27, line: 3694, baseType: !487, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "any_iv", scope: !786, file: !27, line: 3695, baseType: !543, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "any_uv", scope: !786, file: !27, line: 3696, baseType: !546, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "any_long", scope: !786, file: !27, line: 3697, baseType: !544, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "any_bool", scope: !786, file: !27, line: 3698, baseType: !795, size: 8)
!795 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "any_dptr", scope: !786, file: !27, line: 3699, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !535}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "any_dxptr", scope: !786, file: !27, line: 3700, baseType: !797, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_root_u", scope: !744, file: !745, line: 15, baseType: !802, size: 64, offset: 384)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !745, line: 15, size: 64, elements: !803)
!803 = !{!804, !805}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_root", scope: !802, file: !745, line: 15, baseType: !760, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_xsub", scope: !802, file: !745, line: 15, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{null, !737}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_gv_u", scope: !744, file: !745, line: 15, baseType: !810, size: 64, offset: 448)
!810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !745, line: 15, size: 64, elements: !811)
!811 = !{!812, !813}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_gv", scope: !810, file: !745, line: 15, baseType: !670, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_hek", scope: !810, file: !745, line: 15, baseType: !603, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_file", scope: !744, file: !745, line: 15, baseType: !486, size: 64, offset: 512)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_padlist_u", scope: !744, file: !745, line: 15, baseType: !816, size: 64, offset: 576)
!816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !744, file: !745, line: 15, size: 64, elements: !817)
!817 = !{!818, !834}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_padlist", scope: !816, file: !745, line: 15, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "PADLIST", file: !27, line: 2681, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "padlist", file: !773, line: 34, size: 192, elements: !822)
!822 = !{!823, !828, !832, !833}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "xpadl_max", scope: !821, file: !773, line: 35, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !825, line: 108, baseType: !826)
!825 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "", checksumkind: CSK_MD5, checksum: "20e2108af45064f5c7b77fc9416f0cce")
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !827, line: 193, baseType: !544)
!827 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "", checksumkind: CSK_MD5, checksum: "f6304b1a6dcfc6bee76e9a51043b5090")
!828 = !DIDerivedType(tag: DW_TAG_member, name: "xpadl_alloc", scope: !821, file: !773, line: 36, baseType: !829, size: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "PAD", file: !27, line: 2682, baseType: !490)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "xpadl_id", scope: !821, file: !773, line: 37, baseType: !487, size: 32, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "xpadl_outid", scope: !821, file: !773, line: 38, baseType: !487, size: 32, offset: 160)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_hscxt", scope: !816, file: !745, line: 15, baseType: !535, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_outside", scope: !744, file: !745, line: 15, baseType: !737, size: 64, offset: 640)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_outside_seq", scope: !744, file: !745, line: 15, baseType: !487, size: 32, offset: 704)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_flags", scope: !744, file: !745, line: 15, baseType: !838, size: 32, offset: 736)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "cv_flags_t", file: !6, line: 567, baseType: !487)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "xcv_depth", scope: !744, file: !745, line: 15, baseType: !609, size: 32, offset: 768)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !739, file: !6, line: 237, baseType: !487, size: 32, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !739, file: !6, line: 237, baseType: !487, size: 32, offset: 96)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !739, file: !6, line: 238, baseType: !843, size: 64, offset: 128)
!843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !739, file: !6, line: 238, size: 64, elements: !844)
!844 = !{!845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !843, file: !6, line: 238, baseType: !486, size: 64)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !843, file: !6, line: 238, baseType: !543, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !843, file: !6, line: 238, baseType: !546, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !843, file: !6, line: 238, baseType: !549, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !843, file: !6, line: 238, baseType: !530, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !843, file: !6, line: 238, baseType: !553, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !843, file: !6, line: 238, baseType: !594, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !843, file: !6, line: 238, baseType: !596, size: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !843, file: !6, line: 238, baseType: !620, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !843, file: !6, line: 238, baseType: !650, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "gp_cvgen", scope: !622, file: !623, line: 15, baseType: !487, size: 32, offset: 192)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "gp_refcnt", scope: !622, file: !623, line: 16, baseType: !487, size: 32, offset: 224)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "gp_hv", scope: !622, file: !623, line: 17, baseType: !500, size: 64, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "gp_av", scope: !622, file: !623, line: 18, baseType: !489, size: 64, offset: 320)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gp_form", scope: !622, file: !623, line: 19, baseType: !737, size: 64, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "gp_egv", scope: !622, file: !623, line: 20, baseType: !670, size: 64, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "gp_line", scope: !622, file: !623, line: 21, baseType: !7, size: 31, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gp_flags", scope: !622, file: !623, line: 22, baseType: !7, size: 1, offset: 543, flags: DIFlagBitField, extraData: i64 512)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "gp_file_hek", scope: !622, file: !623, line: 23, baseType: !603, size: 64, offset: 576)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !585, file: !6, line: 258, baseType: !650, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !571, file: !555, line: 159, baseType: !867, size: 64, offset: 64)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!609, !870, !486, !486, !486, !824, !530, !535, !487}
!870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !577)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "intuit", scope: !571, file: !555, line: 162, baseType: !872, size: 64, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!486, !870, !530, !875, !486, !486, !878, !879}
!875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !876)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !487)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "re_scream_pos_data", file: !555, line: 152, baseType: !881)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "re_scream_pos_data_s", file: !555, line: 148, size: 128, elements: !882)
!882 = !{!883, !885}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "scream_olds", scope: !881, file: !555, line: 150, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "scream_pos", scope: !881, file: !555, line: 151, baseType: !886, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "checkstr", scope: !571, file: !555, line: 170, baseType: !888, size: 64, offset: 192)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!530, !870}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !571, file: !555, line: 171, baseType: !892, size: 64, offset: 256)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !870}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "numbered_buff_FETCH", scope: !571, file: !555, line: 172, baseType: !896, size: 64, offset: 320)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{null, !870, !899, !865}
!899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !609)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "numbered_buff_STORE", scope: !571, file: !555, line: 174, baseType: !901, size: 64, offset: 384)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{null, !870, !899, !904}
!904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !531)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "numbered_buff_LENGTH", scope: !571, file: !555, line: 176, baseType: !908, size: 64, offset: 448)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!609, !870, !904, !899}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "named_buff", scope: !571, file: !555, line: 178, baseType: !912, size: 64, offset: 512)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 64)
!913 = !DISubroutineType(types: !914)
!914 = !{!530, !870, !865, !865, !878}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "named_buff_iter", scope: !571, file: !555, line: 180, baseType: !916, size: 64, offset: 576)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!530, !870, !904, !878}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "qr_package", scope: !571, file: !555, line: 182, baseType: !888, size: 64, offset: 640)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "op_comp", scope: !571, file: !555, line: 186, baseType: !921, size: 64, offset: 704)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DISubroutineType(types: !923)
!923 = !{!577, !924, !477, !760, !569, !577, !925, !487, !487}
!924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !594)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "mother_re", scope: !554, file: !555, line: 142, baseType: !577, size: 64, offset: 320)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "paren_names", scope: !554, file: !555, line: 142, baseType: !500, size: 64, offset: 384)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "extflags", scope: !554, file: !555, line: 142, baseType: !487, size: 32, offset: 448)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "minlen", scope: !554, file: !555, line: 142, baseType: !824, size: 64, offset: 512)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "minlenret", scope: !554, file: !555, line: 142, baseType: !824, size: 64, offset: 576)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "gofs", scope: !554, file: !555, line: 142, baseType: !560, size: 64, offset: 640)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "substrs", scope: !554, file: !555, line: 142, baseType: !933, size: 64, offset: 704)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_substr_data", file: !555, line: 45, size: 1024, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "check_ix", scope: !934, file: !555, line: 46, baseType: !719, size: 8)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !934, file: !555, line: 47, baseType: !938, size: 960, offset: 64)
!938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 960, elements: !946)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_substr_datum", file: !555, line: 38, size: 320, elements: !940)
!940 = !{!941, !942, !943, !944, !945}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "min_offset", scope: !939, file: !555, line: 39, baseType: !824, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "max_offset", scope: !939, file: !555, line: 40, baseType: !824, size: 64, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "substr", scope: !939, file: !555, line: 41, baseType: !530, size: 64, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_substr", scope: !939, file: !555, line: 42, baseType: !530, size: 64, offset: 192)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "end_shift", scope: !939, file: !555, line: 43, baseType: !824, size: 64, offset: 256)
!946 = !{!947}
!947 = !DISubrange(count: 3)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "nparens", scope: !554, file: !555, line: 142, baseType: !487, size: 32, offset: 768)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "intflags", scope: !554, file: !555, line: 142, baseType: !487, size: 32, offset: 800)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "pprivate", scope: !554, file: !555, line: 142, baseType: !535, size: 64, offset: 832)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "lastparen", scope: !554, file: !555, line: 142, baseType: !487, size: 32, offset: 896)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "lastcloseparen", scope: !554, file: !555, line: 142, baseType: !487, size: 32, offset: 928)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "offs", scope: !554, file: !555, line: 142, baseType: !954, size: 64, offset: 960)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "regexp_paren_pair", file: !555, line: 68, baseType: !956)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regexp_paren_pair", file: !555, line: 58, size: 192, elements: !957)
!957 = !{!958, !959, !960}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !956, file: !555, line: 59, baseType: !824, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !956, file: !555, line: 60, baseType: !824, size: 64, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "start_tmp", scope: !956, file: !555, line: 67, baseType: !824, size: 64, offset: 128)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "subbeg", scope: !554, file: !555, line: 142, baseType: !486, size: 64, offset: 1024)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "saved_copy", scope: !554, file: !555, line: 142, baseType: !530, size: 64, offset: 1088)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "sublen", scope: !554, file: !555, line: 142, baseType: !824, size: 64, offset: 1152)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "suboffset", scope: !554, file: !555, line: 142, baseType: !824, size: 64, offset: 1216)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "subcoffset", scope: !554, file: !555, line: 142, baseType: !824, size: 64, offset: 1280)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !554, file: !555, line: 142, baseType: !824, size: 64, offset: 1344)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "pre_prefix", scope: !554, file: !555, line: 142, baseType: !7, size: 4, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "compflags", scope: !554, file: !555, line: 142, baseType: !7, size: 9, offset: 1412, flags: DIFlagBitField, extraData: i64 1408)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "qr_anoncv", scope: !554, file: !555, line: 142, baseType: !737, size: 64, offset: 1472)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !539, file: !6, line: 220, baseType: !594, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !539, file: !6, line: 220, baseType: !596, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !539, file: !6, line: 220, baseType: !620, size: 64)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !539, file: !6, line: 220, baseType: !650, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "svt_set", scope: !524, file: !518, line: 13, baseType: !527, size: 64, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "svt_len", scope: !524, file: !518, line: 14, baseType: !976, size: 64, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DISubroutineType(types: !978)
!978 = !{!487, !530, !515}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "svt_clear", scope: !524, file: !518, line: 15, baseType: !527, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "svt_free", scope: !524, file: !518, line: 16, baseType: !527, size: 64, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "svt_copy", scope: !524, file: !518, line: 17, baseType: !982, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{!477, !530, !515, !530, !876, !609}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "svt_dup", scope: !524, file: !518, line: 19, baseType: !986, size: 64, offset: 384)
!986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!987 = !DISubroutineType(types: !988)
!988 = !{!477, !515, !989}
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_typedef, name: "CLONE_PARAMS", file: !27, line: 2677, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clone_params", file: !6, line: 2150, size: 320, elements: !992)
!992 = !{!993, !994, !995, !996, !997}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "stashes", scope: !991, file: !6, line: 2151, baseType: !489, size: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !991, file: !6, line: 2152, baseType: !546, size: 64, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "proto_perl", scope: !991, file: !6, line: 2153, baseType: !480, size: 64, offset: 128)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "new_perl", scope: !991, file: !6, line: 2154, baseType: !480, size: 64, offset: 192)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "unreferenced", scope: !991, file: !6, line: 2155, baseType: !489, size: 64, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "svt_local", scope: !524, file: !518, line: 20, baseType: !527, size: 64, offset: 448)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "mg_private", scope: !517, file: !518, line: 26, baseType: !1000, size: 16, offset: 128)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !488, line: 173, baseType: !1001)
!1001 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "mg_type", scope: !517, file: !518, line: 27, baseType: !485, size: 8, offset: 144)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "mg_flags", scope: !517, file: !518, line: 28, baseType: !719, size: 8, offset: 152)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "mg_len", scope: !517, file: !518, line: 29, baseType: !824, size: 64, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "mg_obj", scope: !517, file: !518, line: 30, baseType: !530, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "mg_ptr", scope: !517, file: !518, line: 31, baseType: !486, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_hash_index", scope: !512, file: !6, line: 496, baseType: !560, size: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "xhv_keys", scope: !507, file: !508, line: 133, baseType: !560, size: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "xhv_max", scope: !507, file: !508, line: 134, baseType: !560, size: 64, offset: 192)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !502, file: !6, line: 247, baseType: !487, size: 32, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !502, file: !6, line: 247, baseType: !487, size: 32, offset: 96)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !502, file: !6, line: 248, baseType: !1013, size: 64, offset: 128)
!1013 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !502, file: !6, line: 248, size: 64, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !1013, file: !6, line: 248, baseType: !486, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !1013, file: !6, line: 248, baseType: !543, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !1013, file: !6, line: 248, baseType: !546, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !1013, file: !6, line: 248, baseType: !549, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !1013, file: !6, line: 248, baseType: !530, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !1013, file: !6, line: 248, baseType: !553, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !1013, file: !6, line: 248, baseType: !594, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !1013, file: !6, line: 248, baseType: !596, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !1013, file: !6, line: 248, baseType: !620, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !1013, file: !6, line: 248, baseType: !650, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !496, file: !497, line: 13, baseType: !512, size: 64, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "xav_fill", scope: !496, file: !497, line: 14, baseType: !824, size: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "xav_max", scope: !496, file: !497, line: 15, baseType: !824, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "xav_alloc", scope: !496, file: !497, line: 16, baseType: !594, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "sv_refcnt", scope: !491, file: !6, line: 242, baseType: !487, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "sv_flags", scope: !491, file: !6, line: 242, baseType: !487, size: 32, offset: 96)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "sv_u", scope: !491, file: !6, line: 243, baseType: !1032, size: 64, offset: 128)
!1032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !491, file: !6, line: 243, size: 64, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "svu_pv", scope: !1032, file: !6, line: 243, baseType: !486, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "svu_iv", scope: !1032, file: !6, line: 243, baseType: !543, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "svu_uv", scope: !1032, file: !6, line: 243, baseType: !546, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "svu_nv", scope: !1032, file: !6, line: 243, baseType: !549, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rv", scope: !1032, file: !6, line: 243, baseType: !530, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "svu_rx", scope: !1032, file: !6, line: 243, baseType: !553, size: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "svu_array", scope: !1032, file: !6, line: 243, baseType: !594, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "svu_hash", scope: !1032, file: !6, line: 243, baseType: !596, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "svu_gp", scope: !1032, file: !6, line: 243, baseType: !620, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "svu_fp", scope: !1032, file: !6, line: 243, baseType: !650, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "PADNAMELIST", file: !27, line: 2683, baseType: !1046)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "padnamelist", file: !773, line: 41, size: 320, elements: !1047)
!1047 = !{!1048, !1049, !1068, !1069, !1070}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "xpadnl_fill", scope: !1046, file: !773, line: 42, baseType: !824, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "xpadnl_alloc", scope: !1046, file: !773, line: 43, baseType: !1050, size: 64, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "PADNAME", file: !27, line: 2684, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "padname", file: !773, line: 74, size: 384, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1062, !1063, !1064, !1065, !1066, !1067}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_pv", scope: !1053, file: !773, line: 75, baseType: !486, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_ourstash", scope: !1053, file: !773, line: 75, baseType: !500, size: 64, offset: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_type_u", scope: !1053, file: !773, line: 75, baseType: !1058, size: 64, offset: 128)
!1058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1053, file: !773, line: 75, size: 64, elements: !1059)
!1059 = !{!1060, !1061}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_typestash", scope: !1058, file: !773, line: 75, baseType: !500, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_protocv", scope: !1058, file: !773, line: 75, baseType: !737, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_low", scope: !1053, file: !773, line: 75, baseType: !487, size: 32, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_high", scope: !1053, file: !773, line: 75, baseType: !487, size: 32, offset: 224)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_refcnt", scope: !1053, file: !773, line: 75, baseType: !487, size: 32, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_gen", scope: !1053, file: !773, line: 75, baseType: !477, size: 32, offset: 288)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_len", scope: !1053, file: !773, line: 75, baseType: !719, size: 8, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "xpadn_flags", scope: !1053, file: !773, line: 75, baseType: !719, size: 8, offset: 328)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "xpadnl_max", scope: !1046, file: !773, line: 44, baseType: !824, size: 64, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "xpadnl_max_named", scope: !1046, file: !773, line: 45, baseType: !772, size: 64, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "xpadnl_refcnt", scope: !1046, file: !773, line: 46, baseType: !487, size: 32, offset: 256)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "COPHH", file: !1074, line: 170, baseType: !1075)
!1074 = !DIFile(filename: "apps/500.perlbench_r/src/cop.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "64d4f81e93be43c58d053d27101a3a5e")
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcounted_he", file: !508, line: 523, size: 256, elements: !1076)
!1076 = !{!1077, !1079, !1080, !1087, !1088}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_next", scope: !1075, file: !508, line: 524, baseType: !1078, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_hek", scope: !1075, file: !508, line: 529, baseType: !603, size: 64, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_val", scope: !1075, file: !508, line: 536, baseType: !1081, size: 64, offset: 128)
!1081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1075, file: !508, line: 531, size: 64, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1086}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_u_iv", scope: !1081, file: !508, line: 532, baseType: !543, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_u_uv", scope: !1081, file: !508, line: 533, baseType: !546, size: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_u_len", scope: !1081, file: !508, line: 534, baseType: !560, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_u_ptr", scope: !1081, file: !508, line: 535, baseType: !535, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_refcnt", scope: !1075, file: !508, line: 537, baseType: !487, size: 32, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "refcounted_he_data", scope: !1075, file: !508, line: 540, baseType: !611, size: 8, offset: 224)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVMG", file: !27, line: 2663, baseType: !1092)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvmg", file: !6, line: 524, size: 384, elements: !1093)
!1093 = !{!1094, !1095, !1096, !1097, !1102, !1103}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !1092, file: !6, line: 525, baseType: !500, size: 64)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !1092, file: !6, line: 525, baseType: !512, size: 64, offset: 64)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !1092, file: !6, line: 525, baseType: !560, size: 64, offset: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !1092, file: !6, line: 525, baseType: !1098, size: 64, offset: 192)
!1098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1092, file: !6, line: 525, size: 64, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !1098, file: !6, line: 525, baseType: !560, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !1098, file: !6, line: 525, baseType: !486, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "xiv_u", scope: !1092, file: !6, line: 526, baseType: !644, size: 64, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "xnv_u", scope: !1092, file: !6, line: 527, baseType: !689, size: 64, offset: 320)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPV", file: !27, line: 2659, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpv", file: !6, line: 499, size: 256, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !1106, file: !6, line: 500, baseType: !500, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !1106, file: !6, line: 500, baseType: !512, size: 64, offset: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !1106, file: !6, line: 500, baseType: !560, size: 64, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !1106, file: !6, line: 500, baseType: !1112, size: 64, offset: 192)
!1112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1106, file: !6, line: 500, size: 64, elements: !1113)
!1113 = !{!1114, !1115}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !1112, file: !6, line: 500, baseType: !560, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !1112, file: !6, line: 500, baseType: !486, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "PerlExitListEntry", file: !27, line: 5420, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exitlistentry", file: !27, line: 5417, size: 128, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1119, file: !27, line: 5418, baseType: !797, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1119, file: !27, line: 5419, baseType: !535, size: 64, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_typedef, name: "svtype", file: !6, line: 153, baseType: !5)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !738)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVIV", file: !27, line: 2660, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpviv", file: !6, line: 503, size: 320, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1138}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !1128, file: !6, line: 504, baseType: !500, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !1128, file: !6, line: 504, baseType: !512, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !1128, file: !6, line: 504, baseType: !560, size: 64, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !1128, file: !6, line: 504, baseType: !1134, size: 64, offset: 192)
!1134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1128, file: !6, line: 504, size: 64, elements: !1135)
!1135 = !{!1136, !1137}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !1134, file: !6, line: 504, baseType: !560, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !1134, file: !6, line: 504, baseType: !486, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "xiv_u", scope: !1128, file: !6, line: 505, baseType: !644, size: 64, offset: 256)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "XPVNV", file: !27, line: 2662, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xpvnv", file: !6, line: 517, size: 384, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1151, !1152}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_stash", scope: !1141, file: !6, line: 518, baseType: !500, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "xmg_u", scope: !1141, file: !6, line: 518, baseType: !512, size: 64, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_cur", scope: !1141, file: !6, line: 518, baseType: !560, size: 64, offset: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "xpv_len_u", scope: !1141, file: !6, line: 518, baseType: !1147, size: 64, offset: 192)
!1147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1141, file: !6, line: 518, size: 64, elements: !1148)
!1148 = !{!1149, !1150}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_len", scope: !1147, file: !6, line: 518, baseType: !560, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "xpvlenu_pv", scope: !1147, file: !6, line: 518, baseType: !486, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "xiv_u", scope: !1141, file: !6, line: 519, baseType: !644, size: 64, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "xnv_u", scope: !1141, file: !6, line: 520, baseType: !689, size: 64, offset: 320)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DIDerivedType(tag: DW_TAG_typedef, name: "IO", file: !27, line: 2654, baseType: !628)
!1158 = !{!0, !1159, !1166, !1171, !1176, !1181, !1186, !1191, !1196, !1201, !1206, !1211, !1216, !1221, !1226, !1231, !1233, !1238, !1243, !1248, !1253, !1273}
!1159 = !DIGlobalVariableExpression(var: !1160, expr: !DIExpression())
!1160 = distinct !DIGlobalVariable(name: "ASCII_invlist", scope: !2, file: !1161, line: 36, type: !1162, isLocal: true, isDefinition: true)
!1161 = !DIFile(filename: "apps/500.perlbench_r/src/charclass_invlists.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "8e8046495038864d3035a408d1fa1779")
!1162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 320, elements: !1164)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !546)
!1164 = !{!1165}
!1165 = !DISubrange(count: 5)
!1166 = !DIGlobalVariableExpression(var: !1167, expr: !DIExpression())
!1167 = distinct !DIGlobalVariable(name: "XPosixAlnum_invlist", scope: !2, file: !1161, line: 14823, type: !1168, isLocal: true, isDefinition: true)
!1168 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 80896, elements: !1169)
!1169 = !{!1170}
!1170 = !DISubrange(count: 1264)
!1171 = !DIGlobalVariableExpression(var: !1172, expr: !DIExpression())
!1172 = distinct !DIGlobalVariable(name: "XPosixAlpha_invlist", scope: !2, file: !1161, line: 16091, type: !1173, isLocal: true, isDefinition: true)
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 77056, elements: !1174)
!1174 = !{!1175}
!1175 = !DISubrange(count: 1204)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "XPosixBlank_invlist", scope: !2, file: !1161, line: 17299, type: !1178, isLocal: true, isDefinition: true)
!1178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 1280, elements: !1179)
!1179 = !{!1180}
!1180 = !DISubrange(count: 20)
!1181 = !DIGlobalVariableExpression(var: !1182, expr: !DIExpression())
!1182 = distinct !DIGlobalVariable(name: "Cased_invlist", scope: !2, file: !1161, line: 45, type: !1183, isLocal: true, isDefinition: true)
!1183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 16512, elements: !1184)
!1184 = !{!1185}
!1185 = !DISubrange(count: 258)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "XPosixCntrl_invlist", scope: !2, file: !1161, line: 17323, type: !1188, isLocal: true, isDefinition: true)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 448, elements: !1189)
!1189 = !{!1190}
!1190 = !DISubrange(count: 7)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "XPosixDigit_invlist", scope: !2, file: !1161, line: 17334, type: !1193, isLocal: true, isDefinition: true)
!1193 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 6656, elements: !1194)
!1194 = !{!1195}
!1195 = !DISubrange(count: 104)
!1196 = !DIGlobalVariableExpression(var: !1197, expr: !DIExpression())
!1197 = distinct !DIGlobalVariable(name: "XPosixGraph_invlist", scope: !2, file: !1161, line: 17442, type: !1198, isLocal: true, isDefinition: true)
!1198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 77696, elements: !1199)
!1199 = !{!1200}
!1200 = !DISubrange(count: 1214)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "XPosixLower_invlist", scope: !2, file: !1161, line: 18660, type: !1203, isLocal: true, isDefinition: true)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 81280, elements: !1204)
!1204 = !{!1205}
!1205 = !DISubrange(count: 1270)
!1206 = !DIGlobalVariableExpression(var: !1207, expr: !DIExpression())
!1207 = distinct !DIGlobalVariable(name: "XPosixPrint_invlist", scope: !2, file: !1161, line: 19934, type: !1208, isLocal: true, isDefinition: true)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 77312, elements: !1209)
!1209 = !{!1210}
!1210 = !DISubrange(count: 1208)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "XPosixPunct_invlist", scope: !2, file: !1161, line: 21146, type: !1213, isLocal: true, isDefinition: true)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 19456, elements: !1214)
!1214 = !{!1215}
!1215 = !DISubrange(count: 304)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "XPerlSpace_invlist", scope: !2, file: !1161, line: 14795, type: !1218, isLocal: true, isDefinition: true)
!1218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 1536, elements: !1219)
!1219 = !{!1220}
!1220 = !DISubrange(count: 24)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "XPosixUpper_invlist", scope: !2, file: !1161, line: 21482, type: !1223, isLocal: true, isDefinition: true)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 80512, elements: !1224)
!1224 = !{!1225}
!1225 = !DISubrange(count: 1258)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "VertSpace_invlist", scope: !2, file: !1161, line: 11779, type: !1228, isLocal: true, isDefinition: true)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 640, elements: !1229)
!1229 = !{!1230}
!1230 = !DISubrange(count: 10)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "XPosixWord_invlist", scope: !2, file: !1161, line: 22744, type: !1168, isLocal: true, isDefinition: true)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "XPosixXDigit_invlist", scope: !2, file: !1161, line: 24012, type: !1235, isLocal: true, isDefinition: true)
!1235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 1024, elements: !1236)
!1236 = !{!1237}
!1237 = !DISubrange(count: 16)
!1238 = !DIGlobalVariableExpression(var: !1239, expr: !DIExpression())
!1239 = distinct !DIGlobalVariable(name: "Grapheme_Cluster_Break_invlist", scope: !2, file: !1161, line: 307, type: !1240, isLocal: true, isDefinition: true)
!1240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 95168, elements: !1241)
!1241 = !{!1242}
!1242 = !DISubrange(count: 1487)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "Sentence_Break_invlist", scope: !2, file: !1161, line: 6056, type: !1245, isLocal: true, isDefinition: true)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 181632, elements: !1246)
!1246 = !{!1247}
!1247 = !DISubrange(count: 2838)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "Word_Break_invlist", scope: !2, file: !1161, line: 11793, type: !1250, isLocal: true, isDefinition: true)
!1250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1163, size: 94912, elements: !1251)
!1251 = !{!1252}
!1252 = !DISubrange(count: 1483)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "non_bincompat_options", scope: !1255, file: !1256, line: 1689, type: !1270, isLocal: true, isDefinition: true)
!1255 = distinct !DISubprogram(name: "S_Internals_V", scope: !1256, file: !1256, line: 1679, type: !807, scopeLine: 1680, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1257)
!1256 = !DIFile(filename: "apps/500.perlbench_r/src/perl.c", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "a37ca9d7e1e309dac7e15bd0f712f0e7")
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1263, !1265, !1266, !1267}
!1258 = !DILocalVariable(name: "cv", arg: 1, scope: !1255, file: !1256, line: 1679, type: !737)
!1259 = !DILocalVariable(name: "sp", scope: !1255, file: !1256, line: 1681, type: !594)
!1260 = !DILocalVariable(name: "ax", scope: !1255, file: !1256, line: 1681, type: !609)
!1261 = !DILocalVariable(name: "mark", scope: !1255, file: !1256, line: 1681, type: !594)
!1262 = !DILocalVariable(name: "items", scope: !1255, file: !1256, line: 1681, type: !609)
!1263 = !DILocalVariable(name: "local_patch_count", scope: !1255, file: !1256, line: 1683, type: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !477)
!1265 = !DILocalVariable(name: "entries", scope: !1255, file: !1256, line: 1687, type: !1264)
!1266 = !DILocalVariable(name: "i", scope: !1255, file: !1256, line: 1688, type: !477)
!1267 = !DILocalVariable(name: "tmpXSoff", scope: !1268, file: !1256, line: 1826, type: !1269)
!1268 = distinct !DILexicalBlock(scope: !1255, file: !1256, line: 1826, column: 5)
!1269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !543)
!1270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !877, size: 904, elements: !1271)
!1271 = !{!1272}
!1272 = !DISubrange(count: 113)
!1273 = !DIGlobalVariableExpression(var: !1274, expr: !DIExpression())
!1274 = distinct !DIGlobalVariable(name: "usage_msg", scope: !1275, file: !1256, line: 3011, type: !1282, isLocal: true, isDefinition: true)
!1275 = distinct !DISubprogram(name: "S_usage", scope: !1256, file: !1256, line: 3004, type: !1276, scopeLine: 3005, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1278)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null}
!1278 = !{!1279, !1281}
!1279 = !DILocalVariable(name: "p", scope: !1275, file: !1256, line: 3044, type: !1280)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!1281 = !DILocalVariable(name: "out", scope: !1275, file: !1256, line: 3045, type: !650)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 384, elements: !1283)
!1283 = !{!1284}
!1284 = !DISubrange(count: 6)
!1285 = !DIFile(filename: "apps/500.perlbench_r/src/patchlevel.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "d840461a3a35a46977be4e81e4836f9a")
!1286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 128, elements: !1287)
!1287 = !{!1288}
!1288 = !DISubrange(count: 2)
!1289 = !{i32 7, !"Dwarf Version", i32 5}
!1290 = !{i32 2, !"Debug Info Version", i32 3}
!1291 = !{i32 1, !"wchar_size", i32 4}
!1292 = !{i32 7, !"PIC Level", i32 2}
!1293 = !{i32 7, !"PIE Level", i32 2}
!1294 = !{i32 7, !"uwtable", i32 2}
!1295 = !{!"clang version 15.0.0 (https://www.github.com/llvm/llvm-project.git 61baf2ffa7071944c00a0642fdb9ff77d9cff0da)"}
!1296 = distinct !DISubprogram(name: "Perl_sys_init", scope: !1256, file: !1256, line: 116, type: !1297, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1300)
!1297 = !DISubroutineType(types: !1298)
!1298 = !{null, !1089, !1299}
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!1300 = !{!1301, !1302}
!1301 = !DILocalVariable(name: "argc", arg: 1, scope: !1296, file: !1256, line: 116, type: !1089)
!1302 = !DILocalVariable(name: "argv", arg: 2, scope: !1296, file: !1256, line: 116, type: !1299)
!1303 = !DILocation(line: 0, scope: !1296)
!1304 = !DILocation(line: 124, column: 5, scope: !1296)
!1305 = !DILocation(line: 125, column: 1, scope: !1296)
!1306 = !DISubprogram(name: "signal", linkageName: "__sysv_signal", scope: !479, file: !479, line: 93, type: !1307, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1307 = !DISubroutineType(types: !1308)
!1308 = !{!478, !477, !478}
!1309 = !{}
!1310 = distinct !DISubprogram(name: "Perl_sys_init3", scope: !1256, file: !1256, line: 128, type: !1311, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1313)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{null, !1089, !1299, !1299}
!1313 = !{!1314, !1315, !1316}
!1314 = !DILocalVariable(name: "argc", arg: 1, scope: !1310, file: !1256, line: 128, type: !1089)
!1315 = !DILocalVariable(name: "argv", arg: 2, scope: !1310, file: !1256, line: 128, type: !1299)
!1316 = !DILocalVariable(name: "env", arg: 3, scope: !1310, file: !1256, line: 128, type: !1299)
!1317 = !DILocation(line: 0, scope: !1310)
!1318 = !DILocation(line: 137, column: 5, scope: !1310)
!1319 = !DILocation(line: 138, column: 1, scope: !1310)
!1320 = distinct !DISubprogram(name: "Perl_sys_term", scope: !1256, file: !1256, line: 141, type: !1276, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1309)
!1321 = !DILocation(line: 144, column: 10, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1320, file: !1256, line: 144, column: 9)
!1323 = !DILocation(line: 144, column: 9, scope: !1320)
!1324 = !DILocation(line: 145, column: 2, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1322, file: !1256, line: 144, column: 27)
!1326 = !DILocation(line: 146, column: 5, scope: !1325)
!1327 = !DILocation(line: 147, column: 1, scope: !1320)
!1328 = !DISubprogram(name: "PerlIO_teardown", scope: !27, file: !27, line: 4508, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1329 = distinct !DISubprogram(name: "perl_alloc", scope: !1256, file: !1256, line: 192, type: !1330, scopeLine: 193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1332)
!1330 = !DISubroutineType(types: !1331)
!1331 = !{!480}
!1332 = !{!1333}
!1333 = !DILocalVariable(name: "my_perl", scope: !1329, file: !1256, line: 194, type: !480)
!1334 = !DILocation(line: 197, column: 33, scope: !1329)
!1335 = !DILocation(line: 0, scope: !1329)
!1336 = !DILocalVariable(name: "my_perl", arg: 1, scope: !1337, file: !1256, line: 86, type: !480)
!1337 = distinct !DISubprogram(name: "S_init_tls_and_interp", scope: !1256, file: !1256, line: 86, type: !1338, scopeLine: 87, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1340)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{null, !480}
!1340 = !{!1336}
!1341 = !DILocation(line: 0, scope: !1337, inlinedAt: !1342)
!1342 = distinct !DILocation(line: 199, column: 5, scope: !1329)
!1343 = !DILocation(line: 89, column: 10, scope: !1344, inlinedAt: !1342)
!1344 = distinct !DILexicalBlock(scope: !1337, file: !1256, line: 89, column: 9)
!1345 = !DILocation(line: 89, column: 9, scope: !1337, inlinedAt: !1342)
!1346 = !DILocation(line: 90, column: 2, scope: !1347, inlinedAt: !1342)
!1347 = distinct !DILexicalBlock(scope: !1344, file: !1256, line: 89, column: 24)
!1348 = !DILocation(line: 101, column: 5, scope: !1347, inlinedAt: !1342)
!1349 = !DILocation(line: 201, column: 32, scope: !1329)
!1350 = !DILocation(line: 201, column: 5, scope: !1329)
!1351 = distinct !DISubprogram(name: "perl_construct", scope: !1256, file: !1256, line: 219, type: !1338, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1352)
!1352 = !{!1353}
!1353 = !DILocalVariable(name: "my_perl", arg: 1, scope: !1351, file: !1256, line: 219, type: !480)
!1354 = !DILocation(line: 0, scope: !1351)
!1355 = !DILocation(line: 230, column: 8, scope: !1356)
!1356 = distinct !DILexicalBlock(scope: !1351, file: !1256, line: 230, column: 8)
!1357 = !DILocation(line: 230, column: 31, scope: !1356)
!1358 = !DILocation(line: 230, column: 8, scope: !1351)
!1359 = !DILocation(line: 52, column: 1, scope: !1360, inlinedAt: !1363)
!1360 = !DILexicalBlockFile(scope: !1362, file: !1361, discriminator: 0)
!1361 = !DIFile(filename: "apps/500.perlbench_r/src/intrpvar.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "ea36858c45fc11e41a9e2b6d8c7e39fa")
!1362 = distinct !DISubprogram(name: "S_init_interp", scope: !1256, file: !1256, line: 3621, type: !1276, scopeLine: 3622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1309)
!1363 = distinct !DILocation(line: 231, column: 8, scope: !1356)
!1364 = !DILocation(line: 53, column: 1, scope: !1360, inlinedAt: !1363)
!1365 = !DILocation(line: 56, column: 1, scope: !1360, inlinedAt: !1363)
!1366 = !DILocation(line: 63, column: 1, scope: !1360, inlinedAt: !1363)
!1367 = !DILocation(line: 68, column: 1, scope: !1360, inlinedAt: !1363)
!1368 = !DILocation(line: 70, column: 1, scope: !1360, inlinedAt: !1363)
!1369 = !DILocation(line: 102, column: 1, scope: !1360, inlinedAt: !1363)
!1370 = !DILocation(line: 123, column: 1, scope: !1360, inlinedAt: !1363)
!1371 = !DILocation(line: 129, column: 1, scope: !1360, inlinedAt: !1363)
!1372 = !DILocation(line: 179, column: 1, scope: !1360, inlinedAt: !1363)
!1373 = !DILocation(line: 206, column: 1, scope: !1360, inlinedAt: !1363)
!1374 = !DILocation(line: 217, column: 1, scope: !1360, inlinedAt: !1363)
!1375 = !DILocation(line: 234, column: 1, scope: !1360, inlinedAt: !1363)
!1376 = !DILocation(line: 268, column: 1, scope: !1360, inlinedAt: !1363)
!1377 = !DILocation(line: 292, column: 1, scope: !1360, inlinedAt: !1363)
!1378 = !DILocation(line: 306, column: 1, scope: !1360, inlinedAt: !1363)
!1379 = !DILocation(line: 308, column: 1, scope: !1360, inlinedAt: !1363)
!1380 = !DILocation(line: 324, column: 1, scope: !1360, inlinedAt: !1363)
!1381 = !DILocation(line: 331, column: 1, scope: !1360, inlinedAt: !1363)
!1382 = !DILocation(line: 347, column: 1, scope: !1360, inlinedAt: !1363)
!1383 = !DILocation(line: 356, column: 1, scope: !1360, inlinedAt: !1363)
!1384 = !DILocation(line: 420, column: 1, scope: !1360, inlinedAt: !1363)
!1385 = !DILocation(line: 430, column: 1, scope: !1360, inlinedAt: !1363)
!1386 = !DILocation(line: 449, column: 1, scope: !1360, inlinedAt: !1363)
!1387 = !DILocation(line: 450, column: 1, scope: !1360, inlinedAt: !1363)
!1388 = !DILocation(line: 452, column: 1, scope: !1360, inlinedAt: !1363)
!1389 = !DILocation(line: 454, column: 1, scope: !1360, inlinedAt: !1363)
!1390 = !DILocation(line: 460, column: 1, scope: !1360, inlinedAt: !1363)
!1391 = !DILocation(line: 461, column: 1, scope: !1360, inlinedAt: !1363)
!1392 = !DILocation(line: 479, column: 1, scope: !1360, inlinedAt: !1363)
!1393 = !DILocation(line: 495, column: 1, scope: !1360, inlinedAt: !1363)
!1394 = !DILocation(line: 499, column: 1, scope: !1360, inlinedAt: !1363)
!1395 = !DILocation(line: 500, column: 1, scope: !1360, inlinedAt: !1363)
!1396 = !DILocation(line: 502, column: 1, scope: !1360, inlinedAt: !1363)
!1397 = !DILocation(line: 509, column: 1, scope: !1360, inlinedAt: !1363)
!1398 = !DILocation(line: 512, column: 1, scope: !1360, inlinedAt: !1363)
!1399 = !DILocation(line: 520, column: 1, scope: !1360, inlinedAt: !1363)
!1400 = !DILocation(line: 523, column: 1, scope: !1360, inlinedAt: !1363)
!1401 = !DILocation(line: 537, column: 1, scope: !1360, inlinedAt: !1363)
!1402 = !DILocation(line: 539, column: 1, scope: !1360, inlinedAt: !1363)
!1403 = !DILocation(line: 572, column: 1, scope: !1360, inlinedAt: !1363)
!1404 = !DILocation(line: 574, column: 1, scope: !1360, inlinedAt: !1363)
!1405 = !DILocation(line: 579, column: 1, scope: !1360, inlinedAt: !1363)
!1406 = !DILocation(line: 653, column: 1, scope: !1360, inlinedAt: !1363)
!1407 = !DILocation(line: 679, column: 1, scope: !1360, inlinedAt: !1363)
!1408 = !DILocation(line: 680, column: 1, scope: !1360, inlinedAt: !1363)
!1409 = !DILocation(line: 681, column: 1, scope: !1360, inlinedAt: !1363)
!1410 = !DILocation(line: 684, column: 1, scope: !1360, inlinedAt: !1363)
!1411 = !DILocation(line: 685, column: 1, scope: !1360, inlinedAt: !1363)
!1412 = !DILocation(line: 696, column: 1, scope: !1360, inlinedAt: !1363)
!1413 = !DILocation(line: 697, column: 1, scope: !1360, inlinedAt: !1363)
!1414 = !DILocation(line: 700, column: 1, scope: !1360, inlinedAt: !1363)
!1415 = !DILocation(line: 703, column: 1, scope: !1360, inlinedAt: !1363)
!1416 = !DILocation(line: 704, column: 1, scope: !1360, inlinedAt: !1363)
!1417 = !DILocation(line: 711, column: 1, scope: !1360, inlinedAt: !1363)
!1418 = !DILocation(line: 713, column: 1, scope: !1360, inlinedAt: !1363)
!1419 = !DILocation(line: 716, column: 1, scope: !1360, inlinedAt: !1363)
!1420 = !DILocation(line: 719, column: 1, scope: !1360, inlinedAt: !1363)
!1421 = !DILocation(line: 722, column: 1, scope: !1360, inlinedAt: !1363)
!1422 = !DILocation(line: 735, column: 1, scope: !1360, inlinedAt: !1363)
!1423 = !DILocation(line: 739, column: 1, scope: !1360, inlinedAt: !1363)
!1424 = !DILocation(line: 747, column: 1, scope: !1360, inlinedAt: !1363)
!1425 = !DILocation(line: 752, column: 1, scope: !1360, inlinedAt: !1363)
!1426 = !DILocation(line: 754, column: 1, scope: !1360, inlinedAt: !1363)
!1427 = !DILocation(line: 231, column: 8, scope: !1356)
!1428 = !DILocation(line: 233, column: 15, scope: !1351)
!1429 = !DILocation(line: 239, column: 5, scope: !1351)
!1430 = !DILocation(line: 241, column: 5, scope: !1351)
!1431 = !DILocation(line: 242, column: 34, scope: !1351)
!1432 = !DILocation(line: 244, column: 20, scope: !1351)
!1433 = !DILocation(line: 249, column: 13, scope: !1351)
!1434 = !DILocation(line: 249, column: 11, scope: !1351)
!1435 = !DILocation(line: 4079, column: 23, scope: !1436, inlinedAt: !1437)
!1436 = distinct !DISubprogram(name: "Perl_init_stacks", scope: !1256, file: !1256, line: 4076, type: !1276, scopeLine: 4077, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1309)
!1437 = distinct !DILocation(line: 251, column: 5, scope: !1351)
!1438 = !DILocation(line: 4079, column: 21, scope: !1436, inlinedAt: !1437)
!1439 = !DILocation(line: 4081, column: 22, scope: !1436, inlinedAt: !1437)
!1440 = !DILocation(line: 4081, column: 30, scope: !1436, inlinedAt: !1437)
!1441 = !DILocation(line: 4082, column: 36, scope: !1436, inlinedAt: !1437)
!1442 = !DILocation(line: 4082, column: 17, scope: !1436, inlinedAt: !1437)
!1443 = !DILocation(line: 4083, column: 18, scope: !1436, inlinedAt: !1437)
!1444 = !DILocation(line: 4085, column: 21, scope: !1436, inlinedAt: !1437)
!1445 = !DILocation(line: 4085, column: 19, scope: !1436, inlinedAt: !1437)
!1446 = !DILocation(line: 4086, column: 17, scope: !1436, inlinedAt: !1437)
!1447 = !DILocation(line: 4087, column: 36, scope: !1436, inlinedAt: !1437)
!1448 = !DILocation(line: 4087, column: 34, scope: !1436, inlinedAt: !1437)
!1449 = !DILocation(line: 4087, column: 18, scope: !1436, inlinedAt: !1437)
!1450 = !DILocation(line: 4089, column: 5, scope: !1436, inlinedAt: !1437)
!1451 = !DILocation(line: 4090, column: 19, scope: !1436, inlinedAt: !1437)
!1452 = !DILocation(line: 4091, column: 16, scope: !1436, inlinedAt: !1437)
!1453 = !DILocation(line: 4092, column: 17, scope: !1436, inlinedAt: !1437)
!1454 = !DILocation(line: 4094, column: 5, scope: !1436, inlinedAt: !1437)
!1455 = !DILocation(line: 4095, column: 22, scope: !1436, inlinedAt: !1437)
!1456 = !DILocation(line: 4096, column: 37, scope: !1436, inlinedAt: !1437)
!1457 = !DILocation(line: 4096, column: 22, scope: !1436, inlinedAt: !1437)
!1458 = !DILocation(line: 4100, column: 5, scope: !1436, inlinedAt: !1437)
!1459 = !DILocation(line: 4104, column: 22, scope: !1436, inlinedAt: !1437)
!1460 = !DILocation(line: 4105, column: 23, scope: !1436, inlinedAt: !1437)
!1461 = !DILocation(line: 4107, column: 5, scope: !1436, inlinedAt: !1437)
!1462 = !DILocation(line: 4108, column: 21, scope: !1436, inlinedAt: !1437)
!1463 = !DILocation(line: 4109, column: 22, scope: !1436, inlinedAt: !1437)
!1464 = !DILocation(line: 3917, column: 26, scope: !1465, inlinedAt: !1477)
!1465 = distinct !DISubprogram(name: "S_init_ids", scope: !1256, file: !1256, line: 3912, type: !1276, scopeLine: 3913, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1466)
!1466 = !{!1467, !1471, !1472, !1476}
!1467 = !DILocalVariable(name: "my_uid", scope: !1465, file: !1256, line: 3917, type: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !825, line: 79, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !827, line: 146, baseType: !7)
!1471 = !DILocalVariable(name: "my_euid", scope: !1465, file: !1256, line: 3918, type: !1468)
!1472 = !DILocalVariable(name: "my_gid", scope: !1465, file: !1256, line: 3919, type: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1474)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !825, line: 64, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !827, line: 147, baseType: !7)
!1476 = !DILocalVariable(name: "my_egid", scope: !1465, file: !1256, line: 3920, type: !1473)
!1477 = distinct !DILocation(line: 253, column: 5, scope: !1351)
!1478 = !DILocation(line: 0, scope: !1465, inlinedAt: !1477)
!1479 = !DILocation(line: 3918, column: 27, scope: !1465, inlinedAt: !1477)
!1480 = !DILocation(line: 3919, column: 26, scope: !1465, inlinedAt: !1477)
!1481 = !DILocation(line: 3920, column: 27, scope: !1465, inlinedAt: !1477)
!1482 = !DILocation(line: 3926, column: 5, scope: !1465, inlinedAt: !1477)
!1483 = !{i8 0, i8 2}
!1484 = !DILocation(line: 255, column: 5, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1351, file: !1256, line: 255, column: 5)
!1486 = !DILocation(line: 256, column: 5, scope: !1351)
!1487 = !DILocation(line: 258, column: 5, scope: !1351)
!1488 = !DILocation(line: 261, column: 21, scope: !1351)
!1489 = !DILocation(line: 268, column: 5, scope: !1351)
!1490 = !DILocation(line: 270, column: 16, scope: !1351)
!1491 = !DILocation(line: 270, column: 14, scope: !1351)
!1492 = !DILocation(line: 271, column: 20, scope: !1351)
!1493 = !DILocation(line: 271, column: 18, scope: !1351)
!1494 = !DILocation(line: 272, column: 17, scope: !1351)
!1495 = !DILocation(line: 272, column: 15, scope: !1351)
!1496 = !DILocation(line: 273, column: 5, scope: !1351)
!1497 = !DILocation(line: 274, column: 5, scope: !1351)
!1498 = !DILocation(line: 275, column: 5, scope: !1351)
!1499 = !DILocation(line: 294, column: 9, scope: !1500)
!1500 = distinct !DILexicalBlock(scope: !1351, file: !1256, line: 294, column: 9)
!1501 = !DILocation(line: 294, column: 26, scope: !1500)
!1502 = !DILocation(line: 294, column: 9, scope: !1351)
!1503 = !DILocation(line: 295, column: 9, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1500, file: !1256, line: 294, column: 36)
!1505 = !DILocation(line: 296, column: 25, scope: !1504)
!1506 = !DILocation(line: 297, column: 5, scope: !1504)
!1507 = !DILocation(line: 303, column: 17, scope: !1351)
!1508 = !DILocation(line: 303, column: 15, scope: !1351)
!1509 = !DILocation(line: 305, column: 5, scope: !1351)
!1510 = !DILocation(line: 306, column: 5, scope: !1351)
!1511 = !DILocation(line: 308, column: 5, scope: !1351)
!1512 = !DILocation(line: 312, column: 22, scope: !1351)
!1513 = !DILocation(line: 312, column: 20, scope: !1351)
!1514 = !DILocation(line: 324, column: 16, scope: !1351)
!1515 = !DILocation(line: 326, column: 21, scope: !1351)
!1516 = !DILocation(line: 326, column: 19, scope: !1351)
!1517 = !DILocation(line: 328, column: 21, scope: !1351)
!1518 = !DILocation(line: 328, column: 19, scope: !1351)
!1519 = !DILocation(line: 372, column: 17, scope: !1351)
!1520 = !DILocation(line: 372, column: 15, scope: !1351)
!1521 = !DILocation(line: 374, column: 26, scope: !1351)
!1522 = !DILocation(line: 374, column: 24, scope: !1351)
!1523 = !DILocation(line: 376, column: 5, scope: !1351)
!1524 = !DILocation(line: 376, column: 31, scope: !1351)
!1525 = !DILocation(line: 378, column: 33, scope: !1351)
!1526 = !DILocation(line: 378, column: 31, scope: !1351)
!1527 = !DILocation(line: 379, column: 40, scope: !1351)
!1528 = !DILocation(line: 379, column: 38, scope: !1351)
!1529 = !DILocation(line: 380, column: 33, scope: !1351)
!1530 = !DILocation(line: 380, column: 31, scope: !1351)
!1531 = !DILocation(line: 381, column: 33, scope: !1351)
!1532 = !DILocation(line: 381, column: 31, scope: !1351)
!1533 = !DILocation(line: 382, column: 34, scope: !1351)
!1534 = !DILocation(line: 382, column: 31, scope: !1351)
!1535 = !DILocation(line: 383, column: 33, scope: !1351)
!1536 = !DILocation(line: 383, column: 31, scope: !1351)
!1537 = !DILocation(line: 384, column: 33, scope: !1351)
!1538 = !DILocation(line: 384, column: 31, scope: !1351)
!1539 = !DILocation(line: 385, column: 33, scope: !1351)
!1540 = !DILocation(line: 385, column: 31, scope: !1351)
!1541 = !DILocation(line: 386, column: 33, scope: !1351)
!1542 = !DILocation(line: 386, column: 31, scope: !1351)
!1543 = !DILocation(line: 387, column: 33, scope: !1351)
!1544 = !DILocation(line: 387, column: 31, scope: !1351)
!1545 = !DILocation(line: 388, column: 33, scope: !1351)
!1546 = !DILocation(line: 388, column: 31, scope: !1351)
!1547 = !DILocation(line: 389, column: 33, scope: !1351)
!1548 = !DILocation(line: 389, column: 31, scope: !1351)
!1549 = !DILocation(line: 390, column: 33, scope: !1351)
!1550 = !DILocation(line: 390, column: 31, scope: !1351)
!1551 = !DILocation(line: 391, column: 37, scope: !1351)
!1552 = !DILocation(line: 391, column: 35, scope: !1351)
!1553 = !DILocation(line: 392, column: 36, scope: !1351)
!1554 = !DILocation(line: 392, column: 34, scope: !1351)
!1555 = !DILocation(line: 393, column: 34, scope: !1351)
!1556 = !DILocation(line: 393, column: 32, scope: !1351)
!1557 = !DILocation(line: 394, column: 22, scope: !1351)
!1558 = !DILocation(line: 394, column: 20, scope: !1351)
!1559 = !DILocation(line: 395, column: 21, scope: !1351)
!1560 = !DILocation(line: 395, column: 19, scope: !1351)
!1561 = !DILocation(line: 396, column: 21, scope: !1351)
!1562 = !DILocation(line: 396, column: 19, scope: !1351)
!1563 = !DILocation(line: 398, column: 5, scope: !1351)
!1564 = !DILocation(line: 399, column: 1, scope: !1351)
!1565 = !DISubprogram(name: "Perl_init_constants", scope: !1566, file: !1566, line: 1826, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1566 = !DIFile(filename: "apps/500.perlbench_r/src/proto.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "86c1c4cb1b6333bdae0149184d61a8ce")
!1567 = !DISubprogram(name: "Perl_newSVpvn", scope: !1566, file: !1566, line: 3112, type: !1568, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{!530, !875, !1570}
!1570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !560)
!1571 = !DILocation(line: 4079, column: 23, scope: !1436)
!1572 = !DILocation(line: 4079, column: 21, scope: !1436)
!1573 = !DILocation(line: 4081, column: 22, scope: !1436)
!1574 = !DILocation(line: 4081, column: 30, scope: !1436)
!1575 = !DILocation(line: 4082, column: 36, scope: !1436)
!1576 = !DILocation(line: 4082, column: 17, scope: !1436)
!1577 = !DILocation(line: 4083, column: 18, scope: !1436)
!1578 = !DILocation(line: 4085, column: 21, scope: !1436)
!1579 = !DILocation(line: 4085, column: 19, scope: !1436)
!1580 = !DILocation(line: 4086, column: 17, scope: !1436)
!1581 = !DILocation(line: 4087, column: 36, scope: !1436)
!1582 = !DILocation(line: 4087, column: 34, scope: !1436)
!1583 = !DILocation(line: 4087, column: 18, scope: !1436)
!1584 = !DILocation(line: 4089, column: 5, scope: !1436)
!1585 = !DILocation(line: 4090, column: 19, scope: !1436)
!1586 = !DILocation(line: 4091, column: 16, scope: !1436)
!1587 = !DILocation(line: 4092, column: 17, scope: !1436)
!1588 = !DILocation(line: 4094, column: 5, scope: !1436)
!1589 = !DILocation(line: 4095, column: 22, scope: !1436)
!1590 = !DILocation(line: 4096, column: 37, scope: !1436)
!1591 = !DILocation(line: 4096, column: 22, scope: !1436)
!1592 = !DILocation(line: 4100, column: 5, scope: !1436)
!1593 = !DILocation(line: 4104, column: 22, scope: !1436)
!1594 = !DILocation(line: 4105, column: 23, scope: !1436)
!1595 = !DILocation(line: 4107, column: 5, scope: !1436)
!1596 = !DILocation(line: 4108, column: 21, scope: !1436)
!1597 = !DILocation(line: 4109, column: 22, scope: !1436)
!1598 = !DILocation(line: 4110, column: 1, scope: !1436)
!1599 = !DISubprogram(name: "Perl_init_i18nl10n", scope: !1566, file: !1566, line: 1829, type: !1600, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!477, !477}
!1602 = !DISubprogram(name: "PerlIO_init", scope: !652, file: !652, line: 205, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1603 = !DISubprogram(name: "Perl_newSV_type", scope: !1566, file: !1566, line: 3073, type: !1604, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!530, !1606}
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1123)
!1607 = !DISubprogram(name: "Perl_sv_setpvn", scope: !1566, file: !1566, line: 4641, type: !1608, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{null, !865, !875, !1570}
!1610 = !DISubprogram(name: "Perl_get_hash_seed", scope: !1566, file: !1566, line: 1292, type: !1611, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{null, !1613}
!1613 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1614)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!1615 = !DISubprogram(name: "Perl_hv_ksplit", scope: !1566, file: !1566, line: 1750, type: !1616, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{null, !500, !543}
!1618 = !DISubprogram(name: "Perl_savepvn", scope: !1566, file: !1566, line: 3959, type: !1619, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1619 = !DISubroutineType(types: !1620)
!1620 = !{!486, !876, !609}
!1621 = !DISubprogram(name: "Perl__new_invlist_C_array", scope: !1566, file: !1566, line: 7234, type: !1622, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1622 = !DISubroutineType(types: !1623)
!1623 = !{!530, !1624}
!1624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1626 = !DISubprogram(name: "Perl_push_scope", scope: !1566, file: !1566, line: 3507, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!1627 = distinct !DISubprogram(name: "Perl_nothreadhook", scope: !1256, file: !1256, line: 411, type: !1628, scopeLine: 412, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1309)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{!477}
!1630 = !DILocation(line: 414, column: 5, scope: !1627)
!1631 = distinct !DISubprogram(name: "perl_destruct", scope: !1256, file: !1256, line: 526, type: !1632, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1634)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{!477, !480}
!1634 = !{!1635, !1636, !1639, !1640, !1641, !1671, !1672, !1675, !1677, !1678, !1682, !1683, !1689, !1691, !1693, !1905, !1908, !1909}
!1635 = !DILocalVariable(name: "my_perl", arg: 1, scope: !1631, file: !1256, line: 526, type: !480)
!1636 = !DILocalVariable(name: "destruct_level", scope: !1631, file: !1256, line: 529, type: !1637)
!1637 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1638)
!1638 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1639 = !DILocalVariable(name: "hv", scope: !1631, file: !1256, line: 530, type: !500)
!1640 = !DILocalVariable(name: "i", scope: !1631, file: !1256, line: 534, type: !477)
!1641 = !DILocalVariable(name: "cur_env", scope: !1642, file: !1256, line: 575, type: !1644)
!1642 = distinct !DILexicalBlock(scope: !1643, file: !1256, line: 574, column: 49)
!1643 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 574, column: 9)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "JMPENV", file: !1074, line: 59, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "jmpenv", file: !1074, line: 32, size: 1728, elements: !1646)
!1646 = !{!1647, !1667, !1669, !1670}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "je_buf", scope: !1645, file: !1074, line: 49, baseType: !1648, size: 1600)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigjmp_buf", file: !1649, line: 83, baseType: !1650)
!1649 = !DIFile(filename: "/usr/include/setjmp.h", directory: "", checksumkind: CSK_MD5, checksum: "76b05e9ee1ce4e0a46e91c06a0fc7c7a")
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1651, size: 1600, elements: !612)
!1651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__jmp_buf_tag", file: !1649, line: 33, size: 1600, elements: !1652)
!1652 = !{!1653, !1659, !1660}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "__jmpbuf", scope: !1651, file: !1649, line: 39, baseType: !1654, size: 512)
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "__jmp_buf", file: !1655, line: 31, baseType: !1656)
!1655 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/setjmp.h", directory: "", checksumkind: CSK_MD5, checksum: "45ab2ca18833449ad9660bc3075914aa")
!1656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !1657)
!1657 = !{!1658}
!1658 = !DISubrange(count: 8)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "__mask_was_saved", scope: !1651, file: !1649, line: 40, baseType: !477, size: 32, offset: 512)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "__saved_mask", scope: !1651, file: !1649, line: 41, baseType: !1661, size: 1024, offset: 576)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigset_t", file: !1662, line: 8, baseType: !1663)
!1662 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h", directory: "", checksumkind: CSK_MD5, checksum: "acc6b14c0967857fec362a8d433e1cf2")
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1662, line: 5, size: 1024, elements: !1664)
!1664 = !{!1665}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !1663, file: !1662, line: 7, baseType: !1666, size: 1024)
!1666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !547, size: 1024, elements: !1236)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "je_prev", scope: !1645, file: !1074, line: 50, baseType: !1668, size: 64, offset: 1600)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "je_ret", scope: !1645, file: !1074, line: 55, baseType: !477, size: 32, offset: 1664)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "je_mustcatch", scope: !1645, file: !1074, line: 56, baseType: !795, size: 8, offset: 1696)
!1671 = !DILocalVariable(name: "x", scope: !1642, file: !1256, line: 576, type: !477)
!1672 = !DILocalVariable(name: "i", scope: !1673, file: !1256, line: 837, type: !609)
!1673 = distinct !DILexicalBlock(scope: !1674, file: !1256, line: 836, column: 5)
!1674 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 830, column: 9)
!1675 = !DILocalVariable(name: "riter", scope: !1676, file: !1256, line: 1165, type: !609)
!1676 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1158, column: 5)
!1677 = !DILocalVariable(name: "max", scope: !1676, file: !1256, line: 1166, type: !899)
!1678 = !DILocalVariable(name: "array", scope: !1676, file: !1256, line: 1167, type: !1679)
!1679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1680)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !597)
!1682 = !DILocalVariable(name: "hent", scope: !1676, file: !1256, line: 1168, type: !597)
!1683 = !DILocalVariable(name: "next", scope: !1684, file: !1256, line: 1172, type: !1681)
!1684 = distinct !DILexicalBlock(scope: !1685, file: !1256, line: 1171, column: 43)
!1685 = distinct !DILexicalBlock(scope: !1686, file: !1256, line: 1171, column: 10)
!1686 = distinct !DILexicalBlock(scope: !1687, file: !1256, line: 1170, column: 11)
!1687 = distinct !DILexicalBlock(scope: !1688, file: !1256, line: 1170, column: 2)
!1688 = distinct !DILexicalBlock(scope: !1676, file: !1256, line: 1170, column: 2)
!1689 = !DILocalVariable(name: "i", scope: !1690, file: !1256, line: 1211, type: !477)
!1690 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1210, column: 5)
!1691 = !DILocalVariable(name: "psig_save", scope: !1692, file: !1256, line: 1303, type: !1089)
!1692 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1300, column: 5)
!1693 = !DILocalVariable(name: "s", scope: !1694, file: !1256, line: 1330, type: !1695)
!1694 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1329, column: 30)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_slab", file: !555, line: 846, baseType: !1697)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regmatch_slab", file: !555, line: 843, size: 31808, elements: !1698)
!1698 = !{!1699, !1903, !1904}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1697, file: !555, line: 844, baseType: !1700, size: 31680)
!1700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1701, size: 31680, elements: !1901)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_state", file: !555, line: 834, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regmatch_state", file: !555, line: 665, size: 960, elements: !1703)
!1703 = !{!1704, !1705, !1706}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "resume_state", scope: !1702, file: !555, line: 666, baseType: !477, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "locinput", scope: !1702, file: !555, line: 667, baseType: !486, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1702, file: !555, line: 833, baseType: !1707, size: 832, offset: 128)
!1707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1702, file: !555, line: 669, size: 832, elements: !1708)
!1708 = !{!1709, !1768, !1769, !1773, !1781, !1796, !1812, !1823, !1830, !1837, !1841, !1853, !1863, !1883}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "info_aux", scope: !1707, file: !555, line: 690, baseType: !1710, size: 256)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_info_aux", file: !555, line: 627, baseType: !1711)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !555, line: 622, size: 256, elements: !1712)
!1712 = !{!1713, !1763, !1765, !1767}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "info_aux_eval", scope: !1711, file: !555, line: 623, baseType: !1714, size: 64)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_typedef, name: "regmatch_info_aux_eval", file: !555, line: 615, baseType: !1716)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !555, line: 602, size: 640, elements: !1717)
!1717 = !{!1718, !1721, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "rex", scope: !1716, file: !555, line: 603, baseType: !1719, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_typedef, name: "regexp", file: !555, line: 143, baseType: !554)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "curpm", scope: !1716, file: !555, line: 604, baseType: !1722, size: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_typedef, name: "PMOP", file: !27, line: 2624, baseType: !1724)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pmop", file: !763, line: 251, size: 768, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1749, !1754}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !1724, file: !763, line: 252, baseType: !760, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !1724, file: !763, line: 252, baseType: !760, size: 64, offset: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !1724, file: !763, line: 252, baseType: !768, size: 64, offset: 128)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !1724, file: !763, line: 252, baseType: !772, size: 64, offset: 192)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !1724, file: !763, line: 252, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !1724, file: !763, line: 252, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !1724, file: !763, line: 252, baseType: !719, size: 8, offset: 272)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !1724, file: !763, line: 252, baseType: !719, size: 8, offset: 280)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "op_first", scope: !1724, file: !763, line: 253, baseType: !760, size: 64, offset: 320)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "op_last", scope: !1724, file: !763, line: 254, baseType: !760, size: 64, offset: 384)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmregexp", scope: !1724, file: !763, line: 258, baseType: !577, size: 64, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmflags", scope: !1724, file: !763, line: 260, baseType: !487, size: 32, offset: 512)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmreplrootu", scope: !1724, file: !763, line: 268, baseType: !1745, size: 64, offset: 576)
!1745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !763, line: 261, size: 64, elements: !1746)
!1746 = !{!1747, !1748}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmreplroot", scope: !1745, file: !763, line: 262, baseType: !760, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmtargetgv", scope: !1745, file: !763, line: 266, baseType: !670, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmstashstartu", scope: !1724, file: !763, line: 276, baseType: !1750, size: 64, offset: 640)
!1750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1724, file: !763, line: 269, size: 64, elements: !1751)
!1751 = !{!1752, !1753}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmreplstart", scope: !1750, file: !763, line: 270, baseType: !760, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "op_pmstash", scope: !1750, file: !763, line: 274, baseType: !500, size: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "op_code_list", scope: !1724, file: !763, line: 277, baseType: !760, size: 64, offset: 704)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "saved_copy", scope: !1716, file: !555, line: 606, baseType: !530, size: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "subbeg", scope: !1716, file: !555, line: 608, baseType: !486, size: 64, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "sublen", scope: !1716, file: !555, line: 609, baseType: !560, size: 64, offset: 256)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "suboffset", scope: !1716, file: !555, line: 610, baseType: !560, size: 64, offset: 320)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "subcoffset", scope: !1716, file: !555, line: 611, baseType: !560, size: 64, offset: 384)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "pos_magic", scope: !1716, file: !555, line: 612, baseType: !515, size: 64, offset: 448)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1716, file: !555, line: 613, baseType: !824, size: 64, offset: 512)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pos_flags", scope: !1716, file: !555, line: 614, baseType: !719, size: 8, offset: 576)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "old_regmatch_state", scope: !1711, file: !555, line: 624, baseType: !1764, size: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "old_regmatch_slab", scope: !1711, file: !555, line: 625, baseType: !1766, size: 64, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "poscache", scope: !1711, file: !555, line: 626, baseType: !486, size: 64, offset: 192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "info_aux_eval", scope: !1707, file: !555, line: 692, baseType: !1715, size: 640)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "yes", scope: !1707, file: !555, line: 699, baseType: !1770, size: 64)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 697, size: 64, elements: !1771)
!1771 = !{!1772}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1770, file: !555, line: 698, baseType: !1764, size: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "branchlike", scope: !1707, file: !555, line: 711, baseType: !1774, size: 192)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 704, size: 192, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1774, file: !555, line: 706, baseType: !1764, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "lastparen", scope: !1774, file: !555, line: 707, baseType: !487, size: 32, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "lastcloseparen", scope: !1774, file: !555, line: 708, baseType: !487, size: 32, offset: 96)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1774, file: !555, line: 709, baseType: !1780, size: 32, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHECKPOINT", file: !555, line: 663, baseType: !609)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "branch", scope: !1707, file: !555, line: 721, baseType: !1782, size: 256)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 713, size: 256, elements: !1783)
!1783 = !{!1784, !1785, !1786, !1787, !1788}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1782, file: !555, line: 715, baseType: !1764, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "lastparen", scope: !1782, file: !555, line: 716, baseType: !487, size: 32, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "lastcloseparen", scope: !1782, file: !555, line: 717, baseType: !487, size: 32, offset: 96)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1782, file: !555, line: 718, baseType: !1780, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "next_branch", scope: !1782, file: !555, line: 720, baseType: !1789, size: 64, offset: 192)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "regnode", file: !555, line: 29, baseType: !1791)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "regnode", file: !555, line: 23, size: 32, elements: !1792)
!1792 = !{!1793, !1794, !1795}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1791, file: !555, line: 24, baseType: !719, size: 8)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1791, file: !555, line: 25, baseType: !719, size: 8, offset: 8)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "next_off", scope: !1791, file: !555, line: 26, baseType: !1000, size: 16, offset: 16)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "trie", scope: !1707, file: !555, line: 738, baseType: !1797, size: 512)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 723, size: 512, elements: !1798)
!1798 = !{!1799, !1800, !1801, !1802, !1803, !1804, !1805, !1807, !1808, !1809, !1810, !1811}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1797, file: !555, line: 725, baseType: !1764, size: 64)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "lastparen", scope: !1797, file: !555, line: 726, baseType: !487, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "lastcloseparen", scope: !1797, file: !555, line: 727, baseType: !487, size: 32, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1797, file: !555, line: 728, baseType: !1780, size: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "accepted", scope: !1797, file: !555, line: 730, baseType: !487, size: 32, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "longfold", scope: !1797, file: !555, line: 731, baseType: !795, size: 8, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1797, file: !555, line: 732, baseType: !1806, size: 64, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1797, file: !555, line: 733, baseType: !1789, size: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "firstpos", scope: !1797, file: !555, line: 734, baseType: !1116, size: 64, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "firstchars", scope: !1797, file: !555, line: 735, baseType: !487, size: 32, offset: 448)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nextword", scope: !1797, file: !555, line: 736, baseType: !1000, size: 16, offset: 480)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "topword", scope: !1797, file: !555, line: 737, baseType: !1000, size: 16, offset: 496)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1707, file: !555, line: 752, baseType: !1813, size: 448)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 742, size: 448, elements: !1814)
!1814 = !{!1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1813, file: !555, line: 744, baseType: !1764, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "prev_eval", scope: !1813, file: !555, line: 745, baseType: !1764, size: 64, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "prev_curlyx", scope: !1813, file: !555, line: 746, baseType: !1764, size: 64, offset: 128)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "prev_rex", scope: !1813, file: !555, line: 747, baseType: !577, size: 64, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1813, file: !555, line: 748, baseType: !1780, size: 32, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "lastcp", scope: !1813, file: !555, line: 749, baseType: !1780, size: 32, offset: 288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "close_paren", scope: !1813, file: !555, line: 750, baseType: !487, size: 32, offset: 320)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !1813, file: !555, line: 751, baseType: !1789, size: 64, offset: 384)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ifmatch", scope: !1707, file: !555, line: 760, baseType: !1824, size: 192)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 754, size: 192, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1824, file: !555, line: 756, baseType: !1764, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "wanted", scope: !1824, file: !555, line: 757, baseType: !609, size: 32, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "logical", scope: !1824, file: !555, line: 758, baseType: !609, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1824, file: !555, line: 759, baseType: !1789, size: 64, offset: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !1707, file: !555, line: 768, baseType: !1831, size: 256)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 762, size: 256, elements: !1832)
!1832 = !{!1833, !1834, !1835, !1836}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1831, file: !555, line: 764, baseType: !1764, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "prev_mark", scope: !1831, file: !555, line: 765, baseType: !1764, size: 64, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "mark_name", scope: !1831, file: !555, line: 766, baseType: !530, size: 64, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mark_loc", scope: !1831, file: !555, line: 767, baseType: !486, size: 64, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "keeper", scope: !1707, file: !555, line: 772, baseType: !1838, size: 32)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 770, size: 32, elements: !1839)
!1839 = !{!1840}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1838, file: !555, line: 771, baseType: !477, size: 32)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "curlyx", scope: !1707, file: !555, line: 789, baseType: !1842, size: 448)
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 776, size: 448, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1842, file: !555, line: 778, baseType: !1764, size: 64)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "prev_curlyx", scope: !1842, file: !555, line: 779, baseType: !1764, size: 64, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1842, file: !555, line: 780, baseType: !1789, size: 64, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !1842, file: !555, line: 781, baseType: !1789, size: 64, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1842, file: !555, line: 782, baseType: !1780, size: 32, offset: 256)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "minmod", scope: !1842, file: !555, line: 783, baseType: !795, size: 8, offset: 288)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "parenfloor", scope: !1842, file: !555, line: 784, baseType: !477, size: 32, offset: 320)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1842, file: !555, line: 787, baseType: !477, size: 32, offset: 352)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "lastloc", scope: !1842, file: !555, line: 788, baseType: !486, size: 64, offset: 384)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "whilem", scope: !1707, file: !555, line: 800, baseType: !1854, size: 320)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 791, size: 320, elements: !1855)
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1854, file: !555, line: 793, baseType: !1764, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "save_curlyx", scope: !1854, file: !555, line: 794, baseType: !1764, size: 64, offset: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1854, file: !555, line: 795, baseType: !1780, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "lastcp", scope: !1854, file: !555, line: 796, baseType: !1780, size: 32, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "save_lastloc", scope: !1854, file: !555, line: 797, baseType: !486, size: 64, offset: 192)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "cache_offset", scope: !1854, file: !555, line: 798, baseType: !609, size: 32, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "cache_mask", scope: !1854, file: !555, line: 799, baseType: !609, size: 32, offset: 288)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "curlym", scope: !1707, file: !555, line: 816, baseType: !1864, size: 768)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 802, size: 768, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1882}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "prev_yes_state", scope: !1864, file: !555, line: 804, baseType: !1764, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1864, file: !555, line: 805, baseType: !477, size: 32, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1864, file: !555, line: 805, baseType: !477, size: 32, offset: 96)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1864, file: !555, line: 806, baseType: !1780, size: 32, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "lastparen", scope: !1864, file: !555, line: 807, baseType: !487, size: 32, offset: 160)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "lastcloseparen", scope: !1864, file: !555, line: 808, baseType: !487, size: 32, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "alen", scope: !1864, file: !555, line: 809, baseType: !609, size: 32, offset: 224)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1864, file: !555, line: 810, baseType: !609, size: 32, offset: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "minmod", scope: !1864, file: !555, line: 811, baseType: !795, size: 8, offset: 288)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !1864, file: !555, line: 812, baseType: !1789, size: 64, offset: 320)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !1864, file: !555, line: 812, baseType: !1789, size: 64, offset: 384)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "me", scope: !1864, file: !555, line: 813, baseType: !1789, size: 64, offset: 448)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "c1_utf8", scope: !1864, file: !555, line: 814, baseType: !1879, size: 112, offset: 512)
!1879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !719, size: 112, elements: !1880)
!1880 = !{!1881}
!1881 = !DISubrange(count: 14)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "c2_utf8", scope: !1864, file: !555, line: 815, baseType: !1879, size: 112, offset: 624)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "curly", scope: !1707, file: !555, line: 831, baseType: !1884, size: 832)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !555, line: 818, size: 832, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "paren", scope: !1884, file: !555, line: 819, baseType: !487, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "cp", scope: !1884, file: !555, line: 820, baseType: !1780, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "lastparen", scope: !1884, file: !555, line: 821, baseType: !487, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "lastcloseparen", scope: !1884, file: !555, line: 822, baseType: !487, size: 32, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "c1", scope: !1884, file: !555, line: 823, baseType: !477, size: 32, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "c2", scope: !1884, file: !555, line: 823, baseType: !477, size: 32, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "maxpos", scope: !1884, file: !555, line: 824, baseType: !486, size: 64, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "oldloc", scope: !1884, file: !555, line: 825, baseType: !486, size: 64, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1884, file: !555, line: 826, baseType: !477, size: 32, offset: 320)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1884, file: !555, line: 827, baseType: !477, size: 32, offset: 352)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1884, file: !555, line: 827, baseType: !477, size: 32, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "A", scope: !1884, file: !555, line: 828, baseType: !1789, size: 64, offset: 448)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "B", scope: !1884, file: !555, line: 828, baseType: !1789, size: 64, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "c1_utf8", scope: !1884, file: !555, line: 829, baseType: !1879, size: 112, offset: 576)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "c2_utf8", scope: !1884, file: !555, line: 830, baseType: !1879, size: 112, offset: 688)
!1901 = !{!1902}
!1902 = !DISubrange(count: 33)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1697, file: !555, line: 845, baseType: !1766, size: 64, offset: 31680)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1697, file: !555, line: 845, baseType: !1766, size: 64, offset: 31744)
!1905 = !DILocalVariable(name: "mg", scope: !1906, file: !1256, line: 1341, type: !515)
!1906 = distinct !DILexicalBlock(scope: !1907, file: !1256, line: 1337, column: 21)
!1907 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1337, column: 9)
!1908 = !DILocalVariable(name: "moremagic", scope: !1906, file: !1256, line: 1342, type: !515)
!1909 = !DILocalVariable(name: "zok", scope: !1910, file: !1256, line: 1352, type: !560)
!1910 = distinct !DILexicalBlock(scope: !1911, file: !1256, line: 1352, column: 2)
!1911 = distinct !DILexicalBlock(scope: !1912, file: !1256, line: 1352, column: 2)
!1912 = distinct !DILexicalBlock(scope: !1913, file: !1256, line: 1352, column: 2)
!1913 = distinct !DILexicalBlock(scope: !1914, file: !1256, line: 1352, column: 2)
!1914 = distinct !DILexicalBlock(scope: !1906, file: !1256, line: 1352, column: 2)
!1915 = !DILocation(line: 0, scope: !1631)
!1916 = !DILocation(line: 529, column: 5, scope: !1631)
!1917 = !DILocation(line: 529, column: 21, scope: !1631)
!1918 = !DILocation(line: 546, column: 22, scope: !1631)
!1919 = !DILocation(line: 546, column: 20, scope: !1631)
!1920 = !DILocation(line: 574, column: 9, scope: !1643)
!1921 = !DILocation(line: 574, column: 23, scope: !1643)
!1922 = !DILocation(line: 574, column: 9, scope: !1631)
!1923 = !DILocation(line: 575, column: 9, scope: !1642)
!1924 = !DILocation(line: 0, scope: !1642)
!1925 = !DILocation(line: 578, column: 9, scope: !1926)
!1926 = distinct !DILexicalBlock(scope: !1642, file: !1256, line: 578, column: 9)
!1927 = !DILocation(line: 580, column: 13, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1642, file: !1256, line: 580, column: 13)
!1929 = !DILocation(line: 580, column: 22, scope: !1928)
!1930 = !DILocation(line: 581, column: 6, scope: !1931)
!1931 = distinct !DILexicalBlock(scope: !1928, file: !1256, line: 580, column: 38)
!1932 = !DILocation(line: 582, column: 13, scope: !1931)
!1933 = !DILocation(line: 583, column: 2, scope: !1931)
!1934 = !DILocation(line: 584, column: 9, scope: !1935)
!1935 = distinct !DILexicalBlock(scope: !1642, file: !1256, line: 584, column: 9)
!1936 = !DILocation(line: 585, column: 5, scope: !1643)
!1937 = !DILocation(line: 585, column: 5, scope: !1642)
!1938 = !DILocation(line: 586, column: 5, scope: !1631)
!1939 = !DILocation(line: 587, column: 5, scope: !1940)
!1940 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 587, column: 5)
!1941 = !DILocation(line: 587, column: 5, scope: !1631)
!1942 = !DILocation(line: 591, column: 5, scope: !1631)
!1943 = !DILocation(line: 607, column: 9, scope: !1944)
!1944 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 607, column: 9)
!1945 = !DILocation(line: 607, column: 9, scope: !1631)
!1946 = !DILocation(line: 609, column: 18, scope: !1947)
!1947 = distinct !DILexicalBlock(scope: !1944, file: !1256, line: 607, column: 30)
!1948 = !DILocation(line: 610, column: 9, scope: !1947)
!1949 = !DILocation(line: 774, column: 15, scope: !1631)
!1950 = !DILocation(line: 775, column: 9, scope: !1951)
!1951 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 775, column: 9)
!1952 = !DILocation(line: 775, column: 9, scope: !1631)
!1953 = !DILocation(line: 777, column: 6, scope: !1954)
!1954 = distinct !DILexicalBlock(scope: !1955, file: !1256, line: 777, column: 6)
!1955 = distinct !DILexicalBlock(scope: !1951, file: !1256, line: 775, column: 23)
!1956 = !DILocation(line: 777, column: 6, scope: !1955)
!1957 = !DILocation(line: 778, column: 6, scope: !1958)
!1958 = distinct !DILexicalBlock(scope: !1954, file: !1256, line: 777, column: 29)
!1959 = !DILocation(line: 779, column: 24, scope: !1958)
!1960 = !DILocation(line: 779, column: 22, scope: !1958)
!1961 = !DILocation(line: 780, column: 2, scope: !1958)
!1962 = !DILocation(line: 781, column: 2, scope: !1955)
!1963 = !DILocation(line: 782, column: 15, scope: !1955)
!1964 = !DILocation(line: 783, column: 5, scope: !1955)
!1965 = !DILocation(line: 784, column: 19, scope: !1631)
!1966 = !DILocation(line: 789, column: 5, scope: !1631)
!1967 = !DILocalVariable(name: "sv", arg: 1, scope: !1968, file: !1969, line: 159, type: !530)
!1968 = distinct !DISubprogram(name: "S_SvREFCNT_dec", scope: !1969, file: !1969, line: 159, type: !1970, scopeLine: 160, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1972)
!1969 = !DIFile(filename: "apps/500.perlbench_r/src/inline.h", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake", checksumkind: CSK_MD5, checksum: "9dcf1ef53064d59f1d960386b90ac6fb")
!1970 = !DISubroutineType(types: !1971)
!1971 = !{null, !530}
!1972 = !{!1967, !1973}
!1973 = !DILocalVariable(name: "rc", scope: !1974, file: !1969, line: 162, type: !487)
!1974 = distinct !DILexicalBlock(scope: !1975, file: !1969, line: 161, column: 29)
!1975 = distinct !DILexicalBlock(scope: !1968, file: !1969, line: 161, column: 9)
!1976 = !DILocation(line: 0, scope: !1968, inlinedAt: !1977)
!1977 = distinct !DILocation(line: 789, column: 5, scope: !1631)
!1978 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !1977)
!1979 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !1977)
!1980 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !1977)
!1981 = !DILocation(line: 0, scope: !1974, inlinedAt: !1977)
!1982 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !1977)
!1983 = distinct !DILexicalBlock(scope: !1974, file: !1969, line: 163, column: 6)
!1984 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !1977)
!1985 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !1977)
!1986 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !1977)
!1987 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !1977)
!1988 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !1977)
!1989 = !DILocation(line: 790, column: 16, scope: !1631)
!1990 = !DILocation(line: 791, column: 5, scope: !1631)
!1991 = !DILocation(line: 798, column: 5, scope: !1631)
!1992 = !DILocation(line: 805, column: 5, scope: !1631)
!1993 = !DILocation(line: 808, column: 5, scope: !1631)
!1994 = !DILocation(line: 0, scope: !1968, inlinedAt: !1995)
!1995 = distinct !DILocation(line: 808, column: 5, scope: !1631)
!1996 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !1995)
!1997 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !1995)
!1998 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !1995)
!1999 = !DILocation(line: 0, scope: !1974, inlinedAt: !1995)
!2000 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !1995)
!2001 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !1995)
!2002 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !1995)
!2003 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !1995)
!2004 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !1995)
!2005 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !1995)
!2006 = !DILocation(line: 809, column: 17, scope: !1631)
!2007 = !DILocation(line: 810, column: 5, scope: !1631)
!2008 = !DILocation(line: 0, scope: !1968, inlinedAt: !2009)
!2009 = distinct !DILocation(line: 810, column: 5, scope: !1631)
!2010 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2009)
!2011 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2009)
!2012 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2009)
!2013 = !DILocation(line: 0, scope: !1974, inlinedAt: !2009)
!2014 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2009)
!2015 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2009)
!2016 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2009)
!2017 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2009)
!2018 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2009)
!2019 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2009)
!2020 = !DILocation(line: 811, column: 16, scope: !1631)
!2021 = !DILocation(line: 814, column: 26, scope: !1631)
!2022 = !DILocation(line: 814, column: 29, scope: !1631)
!2023 = !DILocation(line: 814, column: 5, scope: !1631)
!2024 = !DILocation(line: 815, column: 2, scope: !1631)
!2025 = !DILocation(line: 815, column: 30, scope: !1631)
!2026 = !DILocation(line: 815, column: 67, scope: !1631)
!2027 = distinct !{!2027, !2023, !2028, !2029, !2030}
!2028 = !DILocation(line: 815, column: 70, scope: !1631)
!2029 = !{!"llvm.loop.mustprogress"}
!2030 = !{!"llvm.loop.unroll.disable"}
!2031 = !DILocation(line: 817, column: 5, scope: !1631)
!2032 = !DILocation(line: 819, column: 17, scope: !1631)
!2033 = !DILocation(line: 820, column: 20, scope: !1631)
!2034 = !DILocation(line: 822, column: 5, scope: !1631)
!2035 = !DILocation(line: 0, scope: !1968, inlinedAt: !2036)
!2036 = distinct !DILocation(line: 822, column: 5, scope: !1631)
!2037 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2036)
!2038 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2036)
!2039 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2036)
!2040 = !DILocation(line: 0, scope: !1974, inlinedAt: !2036)
!2041 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2036)
!2042 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2036)
!2043 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2036)
!2044 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2036)
!2045 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2036)
!2046 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2036)
!2047 = !DILocation(line: 830, column: 9, scope: !1674)
!2048 = !DILocation(line: 830, column: 20, scope: !1674)
!2049 = !DILocation(line: 830, column: 17, scope: !1674)
!2050 = !DILocation(line: 830, column: 35, scope: !1674)
!2051 = !DILocation(line: 0, scope: !1673)
!2052 = !DILocation(line: 839, column: 14, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !2054, file: !1256, line: 839, column: 2)
!2054 = distinct !DILexicalBlock(scope: !1673, file: !1256, line: 839, column: 2)
!2055 = !DILocation(line: 839, column: 2, scope: !2054)
!2056 = !DILocation(line: 840, column: 6, scope: !2053)
!2057 = !DILocation(line: 839, column: 27, scope: !2053)
!2058 = distinct !{!2058, !2055, !2059, !2029, !2030}
!2059 = !DILocation(line: 840, column: 28, scope: !2054)
!2060 = !DILocation(line: 843, column: 2, scope: !1673)
!2061 = !DILocation(line: 845, column: 12, scope: !1673)
!2062 = !DILocation(line: 845, column: 10, scope: !1673)
!2063 = !DILocation(line: 846, column: 5, scope: !1673)
!2064 = !DILocation(line: 850, column: 9, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 850, column: 9)
!2066 = !DILocation(line: 850, column: 24, scope: !2065)
!2067 = !DILocation(line: 850, column: 9, scope: !1631)
!2068 = !DILocation(line: 856, column: 2, scope: !2069)
!2069 = distinct !DILexicalBlock(scope: !2065, file: !1256, line: 850, column: 30)
!2070 = !DILocation(line: 859, column: 2, scope: !2069)
!2071 = !DILocation(line: 0, scope: !1968, inlinedAt: !2072)
!2072 = distinct !DILocation(line: 859, column: 2, scope: !2069)
!2073 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2072)
!2074 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2072)
!2075 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2072)
!2076 = !DILocation(line: 0, scope: !1974, inlinedAt: !2072)
!2077 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2072)
!2078 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2072)
!2079 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2072)
!2080 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2072)
!2081 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2072)
!2082 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2072)
!2083 = !DILocation(line: 862, column: 9, scope: !2069)
!2084 = !DILocation(line: 885, column: 5, scope: !1631)
!2085 = !DILocation(line: 0, scope: !1968, inlinedAt: !2086)
!2086 = distinct !DILocation(line: 885, column: 5, scope: !1631)
!2087 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2086)
!2088 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2086)
!2089 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2086)
!2090 = !DILocation(line: 0, scope: !1974, inlinedAt: !2086)
!2091 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2086)
!2092 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2086)
!2093 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2086)
!2094 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2086)
!2095 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2086)
!2096 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2086)
!2097 = !DILocation(line: 886, column: 19, scope: !1631)
!2098 = !DILocation(line: 891, column: 8, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 891, column: 8)
!2100 = !DILocation(line: 891, column: 18, scope: !2099)
!2101 = !DILocation(line: 891, column: 32, scope: !2099)
!2102 = !DILocation(line: 891, column: 21, scope: !2099)
!2103 = !DILocation(line: 891, column: 8, scope: !1631)
!2104 = !DILocation(line: 892, column: 8, scope: !2105)
!2105 = distinct !DILexicalBlock(scope: !2099, file: !1256, line: 891, column: 38)
!2106 = !DILocation(line: 893, column: 2, scope: !2105)
!2107 = !DILocation(line: 893, column: 13, scope: !2105)
!2108 = !DILocation(line: 893, column: 18, scope: !2105)
!2109 = !DILocation(line: 894, column: 5, scope: !2105)
!2110 = !DILocation(line: 896, column: 9, scope: !2111)
!2111 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 896, column: 9)
!2112 = !DILocation(line: 896, column: 9, scope: !1631)
!2113 = !DILocation(line: 897, column: 2, scope: !2114)
!2114 = distinct !DILexicalBlock(scope: !2111, file: !1256, line: 896, column: 21)
!2115 = !DILocation(line: 898, column: 14, scope: !2114)
!2116 = !DILocation(line: 899, column: 5, scope: !2114)
!2117 = !DILocation(line: 902, column: 21, scope: !1631)
!2118 = !DILocation(line: 903, column: 21, scope: !1631)
!2119 = !DILocation(line: 904, column: 21, scope: !1631)
!2120 = !DILocation(line: 905, column: 21, scope: !1631)
!2121 = !DILocation(line: 906, column: 21, scope: !1631)
!2122 = !DILocation(line: 907, column: 21, scope: !1631)
!2123 = !DILocation(line: 908, column: 21, scope: !1631)
!2124 = !DILocation(line: 912, column: 21, scope: !1631)
!2125 = !DILocation(line: 914, column: 5, scope: !1631)
!2126 = !DILocation(line: 915, column: 16, scope: !1631)
!2127 = !DILocation(line: 916, column: 5, scope: !1631)
!2128 = !DILocation(line: 0, scope: !1968, inlinedAt: !2129)
!2129 = distinct !DILocation(line: 916, column: 5, scope: !1631)
!2130 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2129)
!2131 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2129)
!2132 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2129)
!2133 = !DILocation(line: 0, scope: !1974, inlinedAt: !2129)
!2134 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2129)
!2135 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2129)
!2136 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2129)
!2137 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2129)
!2138 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2129)
!2139 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2129)
!2140 = !DILocation(line: 918, column: 9, scope: !2141)
!2141 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 918, column: 9)
!2142 = !DILocation(line: 918, column: 9, scope: !1631)
!2143 = !DILocation(line: 0, scope: !1968, inlinedAt: !2144)
!2144 = distinct !DILocation(line: 919, column: 2, scope: !2145)
!2145 = distinct !DILexicalBlock(scope: !2141, file: !1256, line: 918, column: 22)
!2146 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2144)
!2147 = !DILocation(line: 0, scope: !1974, inlinedAt: !2144)
!2148 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2144)
!2149 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2144)
!2150 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2144)
!2151 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2144)
!2152 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2144)
!2153 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2144)
!2154 = !DILocation(line: 920, column: 14, scope: !2145)
!2155 = !DILocation(line: 921, column: 5, scope: !2145)
!2156 = !DILocation(line: 923, column: 15, scope: !1631)
!2157 = !DILocation(line: 927, column: 5, scope: !1631)
!2158 = !DILocation(line: 0, scope: !1968, inlinedAt: !2159)
!2159 = distinct !DILocation(line: 927, column: 5, scope: !1631)
!2160 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2159)
!2161 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2159)
!2162 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2159)
!2163 = !DILocation(line: 0, scope: !1974, inlinedAt: !2159)
!2164 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2159)
!2165 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2159)
!2166 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2159)
!2167 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2159)
!2168 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2159)
!2169 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2159)
!2170 = !DILocation(line: 928, column: 14, scope: !1631)
!2171 = !DILocation(line: 930, column: 5, scope: !1631)
!2172 = !DILocation(line: 0, scope: !1968, inlinedAt: !2173)
!2173 = distinct !DILocation(line: 930, column: 5, scope: !1631)
!2174 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2173)
!2175 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2173)
!2176 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2173)
!2177 = !DILocation(line: 0, scope: !1974, inlinedAt: !2173)
!2178 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2173)
!2179 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2173)
!2180 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2173)
!2181 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2173)
!2182 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2173)
!2183 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2173)
!2184 = !DILocation(line: 931, column: 15, scope: !1631)
!2185 = !DILocation(line: 933, column: 5, scope: !1631)
!2186 = !DILocation(line: 0, scope: !1968, inlinedAt: !2187)
!2187 = distinct !DILocation(line: 933, column: 5, scope: !1631)
!2188 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2187)
!2189 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2187)
!2190 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2187)
!2191 = !DILocation(line: 0, scope: !1974, inlinedAt: !2187)
!2192 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2187)
!2193 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2187)
!2194 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2187)
!2195 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2187)
!2196 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2187)
!2197 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2187)
!2198 = !DILocation(line: 934, column: 11, scope: !1631)
!2199 = !DILocation(line: 936, column: 5, scope: !1631)
!2200 = !DILocation(line: 937, column: 15, scope: !1631)
!2201 = !DILocation(line: 939, column: 5, scope: !1631)
!2202 = !DILocation(line: 0, scope: !1968, inlinedAt: !2203)
!2203 = distinct !DILocation(line: 939, column: 5, scope: !1631)
!2204 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2203)
!2205 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2203)
!2206 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2203)
!2207 = !DILocation(line: 0, scope: !1974, inlinedAt: !2203)
!2208 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2203)
!2209 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2203)
!2210 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2203)
!2211 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2203)
!2212 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2203)
!2213 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2203)
!2214 = !DILocation(line: 940, column: 17, scope: !1631)
!2215 = !DILocation(line: 941, column: 15, scope: !1631)
!2216 = !DILocation(line: 946, column: 5, scope: !1631)
!2217 = !DILocation(line: 947, column: 18, scope: !1631)
!2218 = !DILocation(line: 948, column: 19, scope: !1631)
!2219 = !DILocation(line: 951, column: 5, scope: !1631)
!2220 = !DILocation(line: 0, scope: !1968, inlinedAt: !2221)
!2221 = distinct !DILocation(line: 951, column: 5, scope: !1631)
!2222 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2221)
!2223 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2221)
!2224 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2221)
!2225 = !DILocation(line: 0, scope: !1974, inlinedAt: !2221)
!2226 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2221)
!2227 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2221)
!2228 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2221)
!2229 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2221)
!2230 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2221)
!2231 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2221)
!2232 = !DILocation(line: 952, column: 5, scope: !1631)
!2233 = !DILocation(line: 0, scope: !1968, inlinedAt: !2234)
!2234 = distinct !DILocation(line: 952, column: 5, scope: !1631)
!2235 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2234)
!2236 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2234)
!2237 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2234)
!2238 = !DILocation(line: 0, scope: !1974, inlinedAt: !2234)
!2239 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2234)
!2240 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2234)
!2241 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2234)
!2242 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2234)
!2243 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2234)
!2244 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2234)
!2245 = !DILocation(line: 953, column: 5, scope: !1631)
!2246 = !DILocation(line: 0, scope: !1968, inlinedAt: !2247)
!2247 = distinct !DILocation(line: 953, column: 5, scope: !1631)
!2248 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2247)
!2249 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2247)
!2250 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2247)
!2251 = !DILocation(line: 0, scope: !1974, inlinedAt: !2247)
!2252 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2247)
!2253 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2247)
!2254 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2247)
!2255 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2247)
!2256 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2247)
!2257 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2247)
!2258 = !DILocation(line: 954, column: 5, scope: !1631)
!2259 = !DILocation(line: 0, scope: !1968, inlinedAt: !2260)
!2260 = distinct !DILocation(line: 954, column: 5, scope: !1631)
!2261 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2260)
!2262 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2260)
!2263 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2260)
!2264 = !DILocation(line: 0, scope: !1974, inlinedAt: !2260)
!2265 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2260)
!2266 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2260)
!2267 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2260)
!2268 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2260)
!2269 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2260)
!2270 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2260)
!2271 = !DILocation(line: 955, column: 5, scope: !1631)
!2272 = !DILocation(line: 0, scope: !1968, inlinedAt: !2273)
!2273 = distinct !DILocation(line: 955, column: 5, scope: !1631)
!2274 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2273)
!2275 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2273)
!2276 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2273)
!2277 = !DILocation(line: 0, scope: !1974, inlinedAt: !2273)
!2278 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2273)
!2279 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2273)
!2280 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2273)
!2281 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2273)
!2282 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2273)
!2283 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2273)
!2284 = !DILocation(line: 956, column: 5, scope: !1631)
!2285 = !DILocation(line: 0, scope: !1968, inlinedAt: !2286)
!2286 = distinct !DILocation(line: 956, column: 5, scope: !1631)
!2287 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2286)
!2288 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2286)
!2289 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2286)
!2290 = !DILocation(line: 0, scope: !1974, inlinedAt: !2286)
!2291 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2286)
!2292 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2286)
!2293 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2286)
!2294 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2286)
!2295 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2286)
!2296 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2286)
!2297 = !DILocation(line: 957, column: 5, scope: !1631)
!2298 = !DILocation(line: 0, scope: !1968, inlinedAt: !2299)
!2299 = distinct !DILocation(line: 957, column: 5, scope: !1631)
!2300 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2299)
!2301 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2299)
!2302 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2299)
!2303 = !DILocation(line: 0, scope: !1974, inlinedAt: !2299)
!2304 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2299)
!2305 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2299)
!2306 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2299)
!2307 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2299)
!2308 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2299)
!2309 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2299)
!2310 = !DILocation(line: 958, column: 5, scope: !1631)
!2311 = !DILocation(line: 0, scope: !1968, inlinedAt: !2312)
!2312 = distinct !DILocation(line: 958, column: 5, scope: !1631)
!2313 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2312)
!2314 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2312)
!2315 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2312)
!2316 = !DILocation(line: 0, scope: !1974, inlinedAt: !2312)
!2317 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2312)
!2318 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2312)
!2319 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2312)
!2320 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2312)
!2321 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2312)
!2322 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2312)
!2323 = !DILocation(line: 959, column: 16, scope: !1631)
!2324 = !DILocation(line: 960, column: 21, scope: !1631)
!2325 = !DILocation(line: 961, column: 14, scope: !1631)
!2326 = !DILocation(line: 962, column: 16, scope: !1631)
!2327 = !DILocation(line: 963, column: 21, scope: !1631)
!2328 = !DILocation(line: 964, column: 20, scope: !1631)
!2329 = !DILocation(line: 965, column: 25, scope: !1631)
!2330 = !DILocation(line: 966, column: 15, scope: !1631)
!2331 = !DILocation(line: 969, column: 15, scope: !1631)
!2332 = !DILocation(line: 970, column: 14, scope: !1631)
!2333 = !DILocation(line: 971, column: 18, scope: !1631)
!2334 = !DILocation(line: 972, column: 16, scope: !1631)
!2335 = !DILocation(line: 973, column: 17, scope: !1631)
!2336 = !DILocation(line: 974, column: 19, scope: !1631)
!2337 = !DILocation(line: 975, column: 17, scope: !1631)
!2338 = !DILocation(line: 976, column: 16, scope: !1631)
!2339 = !DILocation(line: 977, column: 17, scope: !1631)
!2340 = !DILocation(line: 979, column: 19, scope: !1631)
!2341 = !DILocation(line: 981, column: 13, scope: !1631)
!2342 = !DILocation(line: 982, column: 15, scope: !1631)
!2343 = !DILocation(line: 983, column: 17, scope: !1631)
!2344 = !DILocation(line: 985, column: 5, scope: !1631)
!2345 = !DILocation(line: 0, scope: !1968, inlinedAt: !2346)
!2346 = distinct !DILocation(line: 985, column: 5, scope: !1631)
!2347 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2346)
!2348 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2346)
!2349 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2346)
!2350 = !DILocation(line: 0, scope: !1974, inlinedAt: !2346)
!2351 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2346)
!2352 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2346)
!2353 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2346)
!2354 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2346)
!2355 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2346)
!2356 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2346)
!2357 = !DILocation(line: 986, column: 5, scope: !1631)
!2358 = !DILocation(line: 0, scope: !1968, inlinedAt: !2359)
!2359 = distinct !DILocation(line: 986, column: 5, scope: !1631)
!2360 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2359)
!2361 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2359)
!2362 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2359)
!2363 = !DILocation(line: 0, scope: !1974, inlinedAt: !2359)
!2364 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2359)
!2365 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2359)
!2366 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2359)
!2367 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2359)
!2368 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2359)
!2369 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2359)
!2370 = !DILocation(line: 987, column: 5, scope: !1631)
!2371 = !DILocation(line: 0, scope: !1968, inlinedAt: !2372)
!2372 = distinct !DILocation(line: 987, column: 5, scope: !1631)
!2373 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2372)
!2374 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2372)
!2375 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2372)
!2376 = !DILocation(line: 0, scope: !1974, inlinedAt: !2372)
!2377 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2372)
!2378 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2372)
!2379 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2372)
!2380 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2372)
!2381 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2372)
!2382 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2372)
!2383 = !DILocation(line: 988, column: 5, scope: !1631)
!2384 = !DILocation(line: 0, scope: !1968, inlinedAt: !2385)
!2385 = distinct !DILocation(line: 988, column: 5, scope: !1631)
!2386 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2385)
!2387 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2385)
!2388 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2385)
!2389 = !DILocation(line: 0, scope: !1974, inlinedAt: !2385)
!2390 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2385)
!2391 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2385)
!2392 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2385)
!2393 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2385)
!2394 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2385)
!2395 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2385)
!2396 = !DILocation(line: 989, column: 5, scope: !1631)
!2397 = !DILocation(line: 0, scope: !1968, inlinedAt: !2398)
!2398 = distinct !DILocation(line: 989, column: 5, scope: !1631)
!2399 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2398)
!2400 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2398)
!2401 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2398)
!2402 = !DILocation(line: 0, scope: !1974, inlinedAt: !2398)
!2403 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2398)
!2404 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2398)
!2405 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2398)
!2406 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2398)
!2407 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2398)
!2408 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2398)
!2409 = !DILocation(line: 990, column: 5, scope: !1631)
!2410 = !DILocation(line: 0, scope: !1968, inlinedAt: !2411)
!2411 = distinct !DILocation(line: 990, column: 5, scope: !1631)
!2412 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2411)
!2413 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2411)
!2414 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2411)
!2415 = !DILocation(line: 0, scope: !1974, inlinedAt: !2411)
!2416 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2411)
!2417 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2411)
!2418 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2411)
!2419 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2411)
!2420 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2411)
!2421 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2411)
!2422 = !DILocation(line: 991, column: 5, scope: !1631)
!2423 = !DILocation(line: 0, scope: !1968, inlinedAt: !2424)
!2424 = distinct !DILocation(line: 991, column: 5, scope: !1631)
!2425 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2424)
!2426 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2424)
!2427 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2424)
!2428 = !DILocation(line: 0, scope: !1974, inlinedAt: !2424)
!2429 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2424)
!2430 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2424)
!2431 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2424)
!2432 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2424)
!2433 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2424)
!2434 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2424)
!2435 = !DILocation(line: 992, column: 14, scope: !1631)
!2436 = !DILocation(line: 993, column: 14, scope: !1631)
!2437 = !DILocation(line: 994, column: 15, scope: !1631)
!2438 = !DILocation(line: 995, column: 15, scope: !1631)
!2439 = !DILocation(line: 996, column: 13, scope: !1631)
!2440 = !DILocation(line: 997, column: 15, scope: !1631)
!2441 = !DILocation(line: 998, column: 14, scope: !1631)
!2442 = !DILocation(line: 1000, column: 5, scope: !1631)
!2443 = !DILocation(line: 0, scope: !1968, inlinedAt: !2444)
!2444 = distinct !DILocation(line: 1000, column: 5, scope: !1631)
!2445 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2444)
!2446 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2444)
!2447 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2444)
!2448 = !DILocation(line: 0, scope: !1974, inlinedAt: !2444)
!2449 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2444)
!2450 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2444)
!2451 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2444)
!2452 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2444)
!2453 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2444)
!2454 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2444)
!2455 = !DILocation(line: 1001, column: 22, scope: !1631)
!2456 = !DILocation(line: 1003, column: 5, scope: !1631)
!2457 = !DILocation(line: 0, scope: !1968, inlinedAt: !2458)
!2458 = distinct !DILocation(line: 1003, column: 5, scope: !1631)
!2459 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2458)
!2460 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2458)
!2461 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2458)
!2462 = !DILocation(line: 0, scope: !1974, inlinedAt: !2458)
!2463 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2458)
!2464 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2458)
!2465 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2458)
!2466 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2458)
!2467 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2458)
!2468 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2458)
!2469 = !DILocation(line: 1004, column: 18, scope: !1631)
!2470 = !DILocation(line: 1005, column: 5, scope: !1631)
!2471 = !DILocation(line: 0, scope: !1968, inlinedAt: !2472)
!2472 = distinct !DILocation(line: 1005, column: 5, scope: !1631)
!2473 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2472)
!2474 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2472)
!2475 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2472)
!2476 = !DILocation(line: 0, scope: !1974, inlinedAt: !2472)
!2477 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2472)
!2478 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2472)
!2479 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2472)
!2480 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2472)
!2481 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2472)
!2482 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2472)
!2483 = !DILocation(line: 1006, column: 19, scope: !1631)
!2484 = !DILocation(line: 1007, column: 5, scope: !1631)
!2485 = !DILocation(line: 0, scope: !1968, inlinedAt: !2486)
!2486 = distinct !DILocation(line: 1007, column: 5, scope: !1631)
!2487 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2486)
!2488 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2486)
!2489 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2486)
!2490 = !DILocation(line: 0, scope: !1974, inlinedAt: !2486)
!2491 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2486)
!2492 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2486)
!2493 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2486)
!2494 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2486)
!2495 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2486)
!2496 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2486)
!2497 = !DILocation(line: 1008, column: 16, scope: !1631)
!2498 = !DILocation(line: 1013, column: 5, scope: !1631)
!2499 = !DILocation(line: 0, scope: !1968, inlinedAt: !2500)
!2500 = distinct !DILocation(line: 1013, column: 5, scope: !1631)
!2501 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2500)
!2502 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2500)
!2503 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2500)
!2504 = !DILocation(line: 0, scope: !1974, inlinedAt: !2500)
!2505 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2500)
!2506 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2500)
!2507 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2500)
!2508 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2500)
!2509 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2500)
!2510 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2500)
!2511 = !DILocation(line: 1014, column: 18, scope: !1631)
!2512 = !DILocation(line: 1015, column: 5, scope: !1631)
!2513 = !DILocation(line: 0, scope: !1968, inlinedAt: !2514)
!2514 = distinct !DILocation(line: 1015, column: 5, scope: !1631)
!2515 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2514)
!2516 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2514)
!2517 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2514)
!2518 = !DILocation(line: 0, scope: !1974, inlinedAt: !2514)
!2519 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2514)
!2520 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2514)
!2521 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2514)
!2522 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2514)
!2523 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2514)
!2524 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2514)
!2525 = !DILocation(line: 1016, column: 19, scope: !1631)
!2526 = !DILocation(line: 1017, column: 19, scope: !1631)
!2527 = !DILocation(line: 1033, column: 5, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1033, column: 5)
!2529 = !DILocation(line: 1034, column: 9, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2531, file: !1256, line: 1033, column: 45)
!2531 = distinct !DILexicalBlock(scope: !2528, file: !1256, line: 1033, column: 5)
!2532 = !DILocation(line: 0, scope: !1968, inlinedAt: !2533)
!2533 = distinct !DILocation(line: 1034, column: 9, scope: !2530)
!2534 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2533)
!2535 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2533)
!2536 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2533)
!2537 = !DILocation(line: 0, scope: !1974, inlinedAt: !2533)
!2538 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2533)
!2539 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2533)
!2540 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2533)
!2541 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2533)
!2542 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2533)
!2543 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2533)
!2544 = !DILocation(line: 1035, column: 31, scope: !2530)
!2545 = !DILocation(line: 1033, column: 41, scope: !2531)
!2546 = !DILocation(line: 1033, column: 19, scope: !2531)
!2547 = distinct !{!2547, !2527, !2548, !2029, !2030}
!2548 = !DILocation(line: 1036, column: 5, scope: !2528)
!2549 = !DILocation(line: 1037, column: 5, scope: !1631)
!2550 = !DILocation(line: 0, scope: !1968, inlinedAt: !2551)
!2551 = distinct !DILocation(line: 1037, column: 5, scope: !1631)
!2552 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2551)
!2553 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2551)
!2554 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2551)
!2555 = !DILocation(line: 0, scope: !1974, inlinedAt: !2551)
!2556 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2551)
!2557 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2551)
!2558 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2551)
!2559 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2551)
!2560 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2551)
!2561 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2551)
!2562 = !DILocation(line: 1038, column: 5, scope: !1631)
!2563 = !DILocation(line: 0, scope: !1968, inlinedAt: !2564)
!2564 = distinct !DILocation(line: 1038, column: 5, scope: !1631)
!2565 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2564)
!2566 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2564)
!2567 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2564)
!2568 = !DILocation(line: 0, scope: !1974, inlinedAt: !2564)
!2569 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2564)
!2570 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2564)
!2571 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2564)
!2572 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2564)
!2573 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2564)
!2574 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2564)
!2575 = !DILocation(line: 1039, column: 5, scope: !1631)
!2576 = !DILocation(line: 0, scope: !1968, inlinedAt: !2577)
!2577 = distinct !DILocation(line: 1039, column: 5, scope: !1631)
!2578 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2577)
!2579 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2577)
!2580 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2577)
!2581 = !DILocation(line: 0, scope: !1974, inlinedAt: !2577)
!2582 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2577)
!2583 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2577)
!2584 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2577)
!2585 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2577)
!2586 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2577)
!2587 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2577)
!2588 = !DILocation(line: 1040, column: 5, scope: !1631)
!2589 = !DILocation(line: 0, scope: !1968, inlinedAt: !2590)
!2590 = distinct !DILocation(line: 1040, column: 5, scope: !1631)
!2591 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2590)
!2592 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2590)
!2593 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2590)
!2594 = !DILocation(line: 0, scope: !1974, inlinedAt: !2590)
!2595 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2590)
!2596 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2590)
!2597 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2590)
!2598 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2590)
!2599 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2590)
!2600 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2590)
!2601 = !DILocation(line: 1041, column: 5, scope: !1631)
!2602 = !DILocation(line: 0, scope: !1968, inlinedAt: !2603)
!2603 = distinct !DILocation(line: 1041, column: 5, scope: !1631)
!2604 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2603)
!2605 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2603)
!2606 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2603)
!2607 = !DILocation(line: 0, scope: !1974, inlinedAt: !2603)
!2608 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2603)
!2609 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2603)
!2610 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2603)
!2611 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2603)
!2612 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2603)
!2613 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2603)
!2614 = !DILocation(line: 1042, column: 5, scope: !1631)
!2615 = !DILocation(line: 0, scope: !1968, inlinedAt: !2616)
!2616 = distinct !DILocation(line: 1042, column: 5, scope: !1631)
!2617 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2616)
!2618 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2616)
!2619 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2616)
!2620 = !DILocation(line: 0, scope: !1974, inlinedAt: !2616)
!2621 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2616)
!2622 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2616)
!2623 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2616)
!2624 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2616)
!2625 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2616)
!2626 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2616)
!2627 = !DILocation(line: 1043, column: 5, scope: !1631)
!2628 = !DILocation(line: 0, scope: !1968, inlinedAt: !2629)
!2629 = distinct !DILocation(line: 1043, column: 5, scope: !1631)
!2630 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2629)
!2631 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2629)
!2632 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2629)
!2633 = !DILocation(line: 0, scope: !1974, inlinedAt: !2629)
!2634 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2629)
!2635 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2629)
!2636 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2629)
!2637 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2629)
!2638 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2629)
!2639 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2629)
!2640 = !DILocation(line: 1044, column: 5, scope: !1631)
!2641 = !DILocation(line: 0, scope: !1968, inlinedAt: !2642)
!2642 = distinct !DILocation(line: 1044, column: 5, scope: !1631)
!2643 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2642)
!2644 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2642)
!2645 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2642)
!2646 = !DILocation(line: 0, scope: !1974, inlinedAt: !2642)
!2647 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2642)
!2648 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2642)
!2649 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2642)
!2650 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2642)
!2651 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2642)
!2652 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2642)
!2653 = !DILocation(line: 1045, column: 5, scope: !1631)
!2654 = !DILocation(line: 0, scope: !1968, inlinedAt: !2655)
!2655 = distinct !DILocation(line: 1045, column: 5, scope: !1631)
!2656 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2655)
!2657 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2655)
!2658 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2655)
!2659 = !DILocation(line: 0, scope: !1974, inlinedAt: !2655)
!2660 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2655)
!2661 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2655)
!2662 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2655)
!2663 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2655)
!2664 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2655)
!2665 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2655)
!2666 = !DILocation(line: 1046, column: 5, scope: !1631)
!2667 = !DILocation(line: 0, scope: !1968, inlinedAt: !2668)
!2668 = distinct !DILocation(line: 1046, column: 5, scope: !1631)
!2669 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2668)
!2670 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2668)
!2671 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2668)
!2672 = !DILocation(line: 0, scope: !1974, inlinedAt: !2668)
!2673 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2668)
!2674 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2668)
!2675 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2668)
!2676 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2668)
!2677 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2668)
!2678 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2668)
!2679 = !DILocation(line: 1047, column: 5, scope: !1631)
!2680 = !DILocation(line: 0, scope: !1968, inlinedAt: !2681)
!2681 = distinct !DILocation(line: 1047, column: 5, scope: !1631)
!2682 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2681)
!2683 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2681)
!2684 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2681)
!2685 = !DILocation(line: 0, scope: !1974, inlinedAt: !2681)
!2686 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2681)
!2687 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2681)
!2688 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2681)
!2689 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2681)
!2690 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2681)
!2691 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2681)
!2692 = !DILocation(line: 1048, column: 5, scope: !1631)
!2693 = !DILocation(line: 0, scope: !1968, inlinedAt: !2694)
!2694 = distinct !DILocation(line: 1048, column: 5, scope: !1631)
!2695 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2694)
!2696 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2694)
!2697 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2694)
!2698 = !DILocation(line: 0, scope: !1974, inlinedAt: !2694)
!2699 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2694)
!2700 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2694)
!2701 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2694)
!2702 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2694)
!2703 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2694)
!2704 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2694)
!2705 = !DILocation(line: 1049, column: 5, scope: !1631)
!2706 = !DILocation(line: 0, scope: !1968, inlinedAt: !2707)
!2707 = distinct !DILocation(line: 1049, column: 5, scope: !1631)
!2708 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2707)
!2709 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2707)
!2710 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2707)
!2711 = !DILocation(line: 0, scope: !1974, inlinedAt: !2707)
!2712 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2707)
!2713 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2707)
!2714 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2707)
!2715 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2707)
!2716 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2707)
!2717 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2707)
!2718 = !DILocation(line: 1050, column: 5, scope: !1631)
!2719 = !DILocation(line: 0, scope: !1968, inlinedAt: !2720)
!2720 = distinct !DILocation(line: 1050, column: 5, scope: !1631)
!2721 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2720)
!2722 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2720)
!2723 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2720)
!2724 = !DILocation(line: 0, scope: !1974, inlinedAt: !2720)
!2725 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2720)
!2726 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2720)
!2727 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2720)
!2728 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2720)
!2729 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2720)
!2730 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2720)
!2731 = !DILocation(line: 1051, column: 5, scope: !1631)
!2732 = !DILocation(line: 0, scope: !1968, inlinedAt: !2733)
!2733 = distinct !DILocation(line: 1051, column: 5, scope: !1631)
!2734 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2733)
!2735 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2733)
!2736 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2733)
!2737 = !DILocation(line: 0, scope: !1974, inlinedAt: !2733)
!2738 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2733)
!2739 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2733)
!2740 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2733)
!2741 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2733)
!2742 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2733)
!2743 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2733)
!2744 = !DILocation(line: 1055, column: 18, scope: !1631)
!2745 = !DILocation(line: 1056, column: 21, scope: !1631)
!2746 = !DILocation(line: 1057, column: 21, scope: !1631)
!2747 = !DILocation(line: 1058, column: 21, scope: !1631)
!2748 = !DILocation(line: 1059, column: 20, scope: !1631)
!2749 = !DILocation(line: 1060, column: 21, scope: !1631)
!2750 = !DILocation(line: 1061, column: 20, scope: !1631)
!2751 = !DILocation(line: 1062, column: 26, scope: !1631)
!2752 = !DILocation(line: 1063, column: 26, scope: !1631)
!2753 = !DILocation(line: 1064, column: 26, scope: !1631)
!2754 = !DILocation(line: 1065, column: 26, scope: !1631)
!2755 = !DILocation(line: 1069, column: 26, scope: !1631)
!2756 = !DILocation(line: 1070, column: 26, scope: !1631)
!2757 = !DILocation(line: 1071, column: 26, scope: !1631)
!2758 = !DILocation(line: 1072, column: 5, scope: !2759)
!2759 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1072, column: 5)
!2760 = !DILocation(line: 1073, column: 9, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2762, file: !1256, line: 1072, column: 42)
!2762 = distinct !DILexicalBlock(scope: !2759, file: !1256, line: 1072, column: 5)
!2763 = !DILocation(line: 0, scope: !1968, inlinedAt: !2764)
!2764 = distinct !DILocation(line: 1073, column: 9, scope: !2761)
!2765 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2764)
!2766 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2764)
!2767 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2764)
!2768 = !DILocation(line: 0, scope: !1974, inlinedAt: !2764)
!2769 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2764)
!2770 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2764)
!2771 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2764)
!2772 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2764)
!2773 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2764)
!2774 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2764)
!2775 = !DILocation(line: 1074, column: 27, scope: !2761)
!2776 = !DILocation(line: 1072, column: 38, scope: !2762)
!2777 = !DILocation(line: 1072, column: 19, scope: !2762)
!2778 = distinct !{!2778, !2758, !2779, !2029, !2030}
!2779 = !DILocation(line: 1075, column: 5, scope: !2759)
!2780 = !DILocation(line: 1076, column: 20, scope: !1631)
!2781 = !DILocation(line: 1077, column: 19, scope: !1631)
!2782 = !DILocation(line: 1078, column: 19, scope: !1631)
!2783 = !DILocation(line: 1080, column: 10, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1080, column: 9)
!2785 = !DILocation(line: 1081, column: 2, scope: !2784)
!2786 = !DILocation(line: 1082, column: 31, scope: !1631)
!2787 = !DILocation(line: 1083, column: 5, scope: !1631)
!2788 = !DILocation(line: 1084, column: 5, scope: !1631)
!2789 = !DILocation(line: 1085, column: 5, scope: !1631)
!2790 = !DILocation(line: 0, scope: !1968, inlinedAt: !2791)
!2791 = distinct !DILocation(line: 1085, column: 5, scope: !1631)
!2792 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2791)
!2793 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2791)
!2794 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2791)
!2795 = !DILocation(line: 0, scope: !1974, inlinedAt: !2791)
!2796 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2791)
!2797 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2791)
!2798 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2791)
!2799 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2791)
!2800 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2791)
!2801 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2791)
!2802 = !DILocation(line: 1089, column: 10, scope: !1631)
!2803 = !DILocation(line: 1091, column: 11, scope: !1631)
!2804 = !DILocation(line: 1092, column: 17, scope: !1631)
!2805 = !DILocation(line: 0, scope: !1968, inlinedAt: !2806)
!2806 = distinct !DILocation(line: 1093, column: 5, scope: !1631)
!2807 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2806)
!2808 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2806)
!2809 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2806)
!2810 = !DILocation(line: 0, scope: !1974, inlinedAt: !2806)
!2811 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2806)
!2812 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2806)
!2813 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2806)
!2814 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2806)
!2815 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2806)
!2816 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2806)
!2817 = !DILocation(line: 1094, column: 5, scope: !1631)
!2818 = !DILocation(line: 0, scope: !1968, inlinedAt: !2819)
!2819 = distinct !DILocation(line: 1094, column: 5, scope: !1631)
!2820 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2819)
!2821 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2819)
!2822 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2819)
!2823 = !DILocation(line: 0, scope: !1974, inlinedAt: !2819)
!2824 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2819)
!2825 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2819)
!2826 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2819)
!2827 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2819)
!2828 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2819)
!2829 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2819)
!2830 = !DILocation(line: 1095, column: 18, scope: !1631)
!2831 = !DILocation(line: 1098, column: 5, scope: !1631)
!2832 = !DILocation(line: 0, scope: !1968, inlinedAt: !2833)
!2833 = distinct !DILocation(line: 1098, column: 5, scope: !1631)
!2834 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2833)
!2835 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2833)
!2836 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2833)
!2837 = !DILocation(line: 0, scope: !1974, inlinedAt: !2833)
!2838 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2833)
!2839 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2833)
!2840 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2833)
!2841 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2833)
!2842 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2833)
!2843 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2833)
!2844 = !DILocation(line: 1099, column: 15, scope: !1631)
!2845 = !DILocation(line: 1101, column: 5, scope: !1631)
!2846 = !DILocation(line: 0, scope: !1968, inlinedAt: !2847)
!2847 = distinct !DILocation(line: 1101, column: 5, scope: !1631)
!2848 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2847)
!2849 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2847)
!2850 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2847)
!2851 = !DILocation(line: 0, scope: !1974, inlinedAt: !2847)
!2852 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2847)
!2853 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2847)
!2854 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2847)
!2855 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2847)
!2856 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2847)
!2857 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2847)
!2858 = !DILocation(line: 1103, column: 5, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1103, column: 5)
!2860 = !DILocation(line: 1103, column: 5, scope: !1631)
!2861 = !DILocation(line: 1104, column: 9, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1104, column: 9)
!2863 = !DILocation(line: 1104, column: 24, scope: !2862)
!2864 = !DILocation(line: 1104, column: 9, scope: !1631)
!2865 = !DILocation(line: 1105, column: 6, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2867, file: !1256, line: 1105, column: 6)
!2867 = distinct !DILexicalBlock(scope: !2862, file: !1256, line: 1104, column: 30)
!2868 = !DILocation(line: 1105, column: 23, scope: !2866)
!2869 = !DILocation(line: 1105, column: 6, scope: !2867)
!2870 = !DILocation(line: 1108, column: 9, scope: !2866)
!2871 = !DILocation(line: 1106, column: 6, scope: !2866)
!2872 = !DILocation(line: 1109, column: 6, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2867, file: !1256, line: 1109, column: 6)
!2874 = !DILocation(line: 1109, column: 22, scope: !2873)
!2875 = !DILocation(line: 1109, column: 6, scope: !2867)
!2876 = !DILocation(line: 1112, column: 9, scope: !2873)
!2877 = !DILocation(line: 1110, column: 6, scope: !2873)
!2878 = !DILocation(line: 1113, column: 6, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2867, file: !1256, line: 1113, column: 6)
!2880 = !DILocation(line: 1113, column: 20, scope: !2879)
!2881 = !DILocation(line: 1113, column: 6, scope: !2867)
!2882 = !DILocation(line: 1115, column: 29, scope: !2879)
!2883 = !DILocation(line: 1114, column: 6, scope: !2879)
!2884 = !DILocation(line: 1116, column: 6, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2867, file: !1256, line: 1116, column: 6)
!2886 = !DILocation(line: 1116, column: 17, scope: !2885)
!2887 = !DILocation(line: 1116, column: 6, scope: !2867)
!2888 = !DILocation(line: 1118, column: 9, scope: !2885)
!2889 = !DILocation(line: 1118, column: 26, scope: !2885)
!2890 = !DILocation(line: 1117, column: 6, scope: !2885)
!2891 = !DILocation(line: 1136, column: 5, scope: !1631)
!2892 = !DILocation(line: 1136, column: 12, scope: !1631)
!2893 = !DILocation(line: 1136, column: 27, scope: !1631)
!2894 = distinct !{!2894, !2891, !2895, !2029, !2030}
!2895 = !DILocation(line: 1137, column: 2, scope: !1631)
!2896 = !DILocation(line: 1143, column: 5, scope: !1631)
!2897 = !DILocation(line: 0, scope: !1968, inlinedAt: !2898)
!2898 = distinct !DILocation(line: 1144, column: 5, scope: !1631)
!2899 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2898)
!2900 = !DILocation(line: 0, scope: !1974, inlinedAt: !2898)
!2901 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2898)
!2902 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2898)
!2903 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2898)
!2904 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2898)
!2905 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2898)
!2906 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2898)
!2907 = !DILocation(line: 1145, column: 14, scope: !1631)
!2908 = !DILocation(line: 1152, column: 5, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1152, column: 5)
!2910 = !DILocation(line: 1153, column: 9, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2912, file: !1256, line: 1152, column: 43)
!2912 = distinct !DILexicalBlock(scope: !2909, file: !1256, line: 1152, column: 5)
!2913 = !DILocation(line: 0, scope: !1968, inlinedAt: !2914)
!2914 = distinct !DILocation(line: 1153, column: 9, scope: !2911)
!2915 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !2914)
!2916 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !2914)
!2917 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2914)
!2918 = !DILocation(line: 0, scope: !1974, inlinedAt: !2914)
!2919 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2914)
!2920 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2914)
!2921 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2914)
!2922 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2914)
!2923 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2914)
!2924 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2914)
!2925 = !DILocation(line: 1154, column: 25, scope: !2911)
!2926 = !DILocation(line: 1152, column: 39, scope: !2912)
!2927 = !DILocation(line: 1152, column: 19, scope: !2912)
!2928 = distinct !{!2928, !2908, !2929, !2029, !2030}
!2929 = !DILocation(line: 1155, column: 5, scope: !2909)
!2930 = !DILocation(line: 0, scope: !1676)
!2931 = !DILocation(line: 1166, column: 18, scope: !1676)
!2932 = !DILocation(line: 1167, column: 29, scope: !1676)
!2933 = !DILocation(line: 1170, column: 2, scope: !1676)
!2934 = !DILocation(line: 1171, column: 10, scope: !1685)
!2935 = !DILocation(line: 1170, column: 2, scope: !1688)
!2936 = !DILocation(line: 1171, column: 15, scope: !1685)
!2937 = !DILocation(line: 1171, column: 18, scope: !1685)
!2938 = !DILocation(line: 1171, column: 10, scope: !1686)
!2939 = distinct !{!2939, !2935, !2940, !2030}
!2940 = !DILocation(line: 1184, column: 2, scope: !1688)
!2941 = !DILocation(line: 1172, column: 21, scope: !1684)
!2942 = !DILocation(line: 0, scope: !1684)
!2943 = !DILocation(line: 1175, column: 20, scope: !1684)
!2944 = !DILocation(line: 1175, column: 28, scope: !1684)
!2945 = !DILocation(line: 1175, column: 43, scope: !1684)
!2946 = !DILocation(line: 1173, column: 3, scope: !1684)
!2947 = !DILocation(line: 1176, column: 3, scope: !1684)
!2948 = !DILocation(line: 1179, column: 11, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !1686, file: !1256, line: 1179, column: 10)
!2950 = !DILocation(line: 1179, column: 10, scope: !1686)
!2951 = !DILocation(line: 1180, column: 15, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !1256, line: 1180, column: 7)
!2953 = distinct !DILexicalBlock(scope: !2949, file: !1256, line: 1179, column: 17)
!2954 = !DILocation(line: 1180, column: 7, scope: !2953)
!2955 = !DILocation(line: 1180, column: 7, scope: !2952)
!2956 = !DILocation(line: 1182, column: 10, scope: !2953)
!2957 = !DILocation(line: 1183, column: 6, scope: !2953)
!2958 = !DILocation(line: 1186, column: 2, scope: !1676)
!2959 = !DILocation(line: 1187, column: 2, scope: !1676)
!2960 = !DILocation(line: 1187, column: 21, scope: !1676)
!2961 = !DILocation(line: 1188, column: 2, scope: !1676)
!2962 = !DILocation(line: 1188, column: 25, scope: !1676)
!2963 = !DILocation(line: 0, scope: !1968, inlinedAt: !2964)
!2964 = distinct !DILocation(line: 1190, column: 5, scope: !1631)
!2965 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !2964)
!2966 = !DILocation(line: 0, scope: !1974, inlinedAt: !2964)
!2967 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !2964)
!2968 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !2964)
!2969 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !2964)
!2970 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !2964)
!2971 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !2964)
!2972 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !2964)
!2973 = !DILocation(line: 1200, column: 26, scope: !1631)
!2974 = !DILocation(line: 1201, column: 5, scope: !1631)
!2975 = !DILocation(line: 1202, column: 23, scope: !1631)
!2976 = !DILocation(line: 1203, column: 25, scope: !1631)
!2977 = !DILocation(line: 1205, column: 25, scope: !1631)
!2978 = !DILocation(line: 1206, column: 5, scope: !1631)
!2979 = !DILocation(line: 1207, column: 22, scope: !1631)
!2980 = !DILocation(line: 1208, column: 24, scope: !1631)
!2981 = !DILocation(line: 0, scope: !1690)
!2982 = !DILocation(line: 1212, column: 9, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !1690, file: !1256, line: 1212, column: 9)
!2984 = !DILocation(line: 1213, column: 13, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2986, file: !1256, line: 1212, column: 30)
!2986 = distinct !DILexicalBlock(scope: !2983, file: !1256, line: 1212, column: 9)
!2987 = !DILocation(line: 1213, column: 41, scope: !2985)
!2988 = !DILocation(line: 1214, column: 13, scope: !2985)
!2989 = !DILocation(line: 1215, column: 38, scope: !2985)
!2990 = !DILocation(line: 1216, column: 13, scope: !2985)
!2991 = !DILocation(line: 1216, column: 40, scope: !2985)
!2992 = !DILocation(line: 1212, column: 26, scope: !2986)
!2993 = !DILocation(line: 1212, column: 20, scope: !2986)
!2994 = distinct !{!2994, !2982, !2995, !2029, !2030}
!2995 = !DILocation(line: 1217, column: 9, scope: !2983)
!2996 = !DILocation(line: 1220, column: 9, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !1631, file: !1256, line: 1220, column: 9)
!2998 = !DILocation(line: 1220, column: 21, scope: !2997)
!2999 = !DILocation(line: 1220, column: 26, scope: !2997)
!3000 = !DILocation(line: 1220, column: 29, scope: !2997)
!3001 = !DILocation(line: 1220, column: 9, scope: !1631)
!3002 = !DILocation(line: 1221, column: 75, scope: !2997)
!3003 = !DILocation(line: 1221, column: 2, scope: !2997)
!3004 = !DILocation(line: 1278, column: 17, scope: !1631)
!3005 = !DILocation(line: 1282, column: 5, scope: !1631)
!3006 = !DILocation(line: 1289, column: 28, scope: !1631)
!3007 = !DILocation(line: 1290, column: 5, scope: !1631)
!3008 = !DILocation(line: 1292, column: 5, scope: !1631)
!3009 = !DILocation(line: 1293, column: 21, scope: !1631)
!3010 = !DILocation(line: 1294, column: 5, scope: !1631)
!3011 = !DILocation(line: 1295, column: 5, scope: !1631)
!3012 = !DILocation(line: 1296, column: 5, scope: !1631)
!3013 = !DILocation(line: 1297, column: 5, scope: !1631)
!3014 = !DILocation(line: 1298, column: 18, scope: !1631)
!3015 = !DILocation(line: 1299, column: 17, scope: !1631)
!3016 = !DILocation(line: 1303, column: 19, scope: !1692)
!3017 = !DILocation(line: 0, scope: !1692)
!3018 = !DILocation(line: 1304, column: 15, scope: !1692)
!3019 = !DILocation(line: 1305, column: 2, scope: !1692)
!3020 = !DILocation(line: 4117, column: 29, scope: !3021, inlinedAt: !3184)
!3021 = distinct !DISubprogram(name: "S_nuke_stacks", scope: !1256, file: !1256, line: 4115, type: !1276, scopeLine: 4116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3022)
!3022 = !{!3023}
!3023 = !DILocalVariable(name: "p", scope: !3024, file: !1256, line: 4120, type: !3025)
!3024 = distinct !DILexicalBlock(scope: !3021, file: !1256, line: 4119, column: 29)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_typedef, name: "PERL_SI", file: !1074, line: 1129, baseType: !3027)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stackinfo", file: !1074, line: 1116, size: 384, elements: !3028)
!3028 = !{!3029, !3030, !3177, !3179, !3180, !3181, !3182, !3183}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "si_stack", scope: !3027, file: !1074, line: 1117, baseType: !489, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "si_cxstack", scope: !3027, file: !1074, line: 1118, baseType: !3031, size: 64, offset: 64)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "PERL_CONTEXT", file: !27, line: 2655, baseType: !3033)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "context", file: !1074, line: 967, size: 704, elements: !3034)
!3034 = !{!3035}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "cx_u", scope: !3033, file: !1074, line: 971, baseType: !3036, size: 704)
!3036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3033, file: !1074, line: 968, size: 704, elements: !3037)
!3037 = !{!3038, !3160}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "cx_blk", scope: !3036, file: !1074, line: 969, baseType: !3039, size: 640)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block", file: !1074, line: 838, size: 640, elements: !3040)
!3040 = !{!3041, !3042, !3043, !3044, !3045, !3072, !3073, !3074, !3075}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "blku_type", scope: !3039, file: !1074, line: 839, baseType: !719, size: 8)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "blku_gimme", scope: !3039, file: !1074, line: 840, baseType: !719, size: 8, offset: 8)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "blku_u16", scope: !3039, file: !1074, line: 841, baseType: !1000, size: 16, offset: 16)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "blku_oldsp", scope: !3039, file: !1074, line: 842, baseType: !609, size: 32, offset: 32)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "blku_oldcop", scope: !3039, file: !1074, line: 843, baseType: !3046, size: 64, offset: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DIDerivedType(tag: DW_TAG_typedef, name: "COP", file: !27, line: 2618, baseType: !3048)
!3048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cop", file: !1074, line: 393, size: 640, elements: !3049)
!3049 = !{!3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3066, !3067, !3068, !3069, !3070, !3071}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !3048, file: !1074, line: 394, baseType: !760, size: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !3048, file: !1074, line: 394, baseType: !760, size: 64, offset: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !3048, file: !1074, line: 394, baseType: !768, size: 64, offset: 128)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !3048, file: !1074, line: 394, baseType: !772, size: 64, offset: 192)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !3048, file: !1074, line: 394, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !3048, file: !1074, line: 394, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !3048, file: !1074, line: 394, baseType: !719, size: 8, offset: 272)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !3048, file: !1074, line: 394, baseType: !719, size: 8, offset: 280)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "cop_line", scope: !3048, file: !1074, line: 397, baseType: !3065, size: 32, offset: 288)
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "line_t", file: !488, line: 1734, baseType: !487)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "cop_stash", scope: !3048, file: !1074, line: 404, baseType: !500, size: 64, offset: 320)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "cop_filegv", scope: !3048, file: !1074, line: 405, baseType: !670, size: 64, offset: 384)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "cop_hints", scope: !3048, file: !1074, line: 407, baseType: !487, size: 32, offset: 448)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "cop_seq", scope: !3048, file: !1074, line: 408, baseType: !487, size: 32, offset: 480)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "cop_warnings", scope: !3048, file: !1074, line: 410, baseType: !1071, size: 64, offset: 512)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "cop_hints_hash", scope: !3048, file: !1074, line: 413, baseType: !1072, size: 64, offset: 576)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "blku_oldmarksp", scope: !3039, file: !1074, line: 844, baseType: !609, size: 32, offset: 128)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "blku_oldscopesp", scope: !3039, file: !1074, line: 845, baseType: !609, size: 32, offset: 160)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "blku_oldpm", scope: !3039, file: !1074, line: 846, baseType: !1722, size: 64, offset: 192)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "blk_u", scope: !3039, file: !1074, line: 854, baseType: !3076, size: 384, offset: 256)
!3076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3039, file: !1074, line: 848, size: 384, elements: !3077)
!3077 = !{!3078, !3087, !3094, !3104, !3156}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "blku_sub", scope: !3076, file: !1074, line: 849, baseType: !3079, size: 384)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_sub", file: !1074, line: 567, size: 384, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "retop", scope: !3079, file: !1074, line: 568, baseType: !760, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "cv", scope: !3079, file: !1074, line: 570, baseType: !737, size: 64, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "savearray", scope: !3079, file: !1074, line: 572, baseType: !489, size: 64, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "argarray", scope: !3079, file: !1074, line: 573, baseType: !489, size: 64, offset: 192)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "olddepth", scope: !3079, file: !1074, line: 574, baseType: !609, size: 32, offset: 256)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "oldcomppad", scope: !3079, file: !1074, line: 575, baseType: !830, size: 64, offset: 320)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "blku_format", scope: !3076, file: !1074, line: 850, baseType: !3088, size: 256)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_format", file: !1074, line: 580, size: 256, elements: !3089)
!3089 = !{!3090, !3091, !3092, !3093}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "retop", scope: !3088, file: !1074, line: 581, baseType: !760, size: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "cv", scope: !3088, file: !1074, line: 583, baseType: !737, size: 64, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "gv", scope: !3088, file: !1074, line: 585, baseType: !670, size: 64, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "dfoutgv", scope: !3088, file: !1074, line: 586, baseType: !670, size: 64, offset: 192)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "blku_eval", scope: !3076, file: !1074, line: 851, baseType: !3095, size: 384)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_eval", file: !1074, line: 714, size: 384, elements: !3096)
!3096 = !{!3097, !3098, !3099, !3100, !3101, !3102}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "retop", scope: !3095, file: !1074, line: 715, baseType: !760, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "old_namesv", scope: !3095, file: !1074, line: 717, baseType: !530, size: 64, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "old_eval_root", scope: !3095, file: !1074, line: 718, baseType: !760, size: 64, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "cur_text", scope: !3095, file: !1074, line: 719, baseType: !530, size: 64, offset: 192)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "cv", scope: !3095, file: !1074, line: 720, baseType: !737, size: 64, offset: 256)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "cur_top_env", scope: !3095, file: !1074, line: 721, baseType: !3103, size: 64, offset: 320)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "blku_loop", scope: !3076, file: !1074, line: 852, baseType: !3105, size: 320)
!3105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_loop", file: !1074, line: 756, size: 320, elements: !3106)
!3106 = !{!3107, !3108, !3132, !3138}
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "resetsp", scope: !3105, file: !1074, line: 757, baseType: !609, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "my_op", scope: !3105, file: !1074, line: 758, baseType: !3109, size: 64, offset: 64)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_typedef, name: "LOOP", file: !27, line: 2628, baseType: !3111)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !763, line: 422, size: 640, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3130, !3131}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !3111, file: !763, line: 423, baseType: !760, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !3111, file: !763, line: 423, baseType: !760, size: 64, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !3111, file: !763, line: 423, baseType: !768, size: 64, offset: 128)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !3111, file: !763, line: 423, baseType: !772, size: 64, offset: 192)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !3111, file: !763, line: 423, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !3111, file: !763, line: 423, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !3111, file: !763, line: 423, baseType: !719, size: 8, offset: 272)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !3111, file: !763, line: 423, baseType: !719, size: 8, offset: 280)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "op_first", scope: !3111, file: !763, line: 424, baseType: !760, size: 64, offset: 320)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "op_last", scope: !3111, file: !763, line: 425, baseType: !760, size: 64, offset: 384)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "op_redoop", scope: !3111, file: !763, line: 426, baseType: !760, size: 64, offset: 448)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "op_nextop", scope: !3111, file: !763, line: 427, baseType: !760, size: 64, offset: 512)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "op_lastop", scope: !3111, file: !763, line: 428, baseType: !760, size: 64, offset: 576)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "itervar_u", scope: !3105, file: !1074, line: 763, baseType: !3133, size: 64, offset: 128)
!3133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3105, file: !1074, line: 759, size: 64, elements: !3134)
!3134 = !{!3135, !3136, !3137}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "svp", scope: !3133, file: !1074, line: 760, baseType: !594, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "gv", scope: !3133, file: !1074, line: 761, baseType: !670, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "oldcomppad", scope: !3133, file: !1074, line: 762, baseType: !830, size: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "state_u", scope: !3105, file: !1074, line: 777, baseType: !3139, size: 128, offset: 192)
!3139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3105, file: !1074, line: 764, size: 128, elements: !3140)
!3140 = !{!3141, !3146, !3151}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "ary", scope: !3139, file: !1074, line: 768, baseType: !3142, size: 128)
!3142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3139, file: !1074, line: 765, size: 128, elements: !3143)
!3143 = !{!3144, !3145}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ary", scope: !3142, file: !1074, line: 766, baseType: !489, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "ix", scope: !3142, file: !1074, line: 767, baseType: !543, size: 64, offset: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "lazyiv", scope: !3139, file: !1074, line: 772, baseType: !3147, size: 128)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3139, file: !1074, line: 769, size: 128, elements: !3148)
!3148 = !{!3149, !3150}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3147, file: !1074, line: 770, baseType: !543, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3147, file: !1074, line: 771, baseType: !543, size: 64, offset: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "lazysv", scope: !3139, file: !1074, line: 776, baseType: !3152, size: 128)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3139, file: !1074, line: 773, size: 128, elements: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3152, file: !1074, line: 774, baseType: !530, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3152, file: !1074, line: 775, baseType: !530, size: 64, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "blku_givwhen", scope: !3076, file: !1074, line: 853, baseType: !3157, size: 64)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_givwhen", file: !1074, line: 828, size: 64, elements: !3158)
!3158 = !{!3159}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "leave_op", scope: !3157, file: !1074, line: 829, baseType: !760, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "cx_subst", scope: !3036, file: !1074, line: 970, baseType: !3161, size: 704)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subst", file: !1074, line: 911, size: 704, elements: !3162)
!3162 = !{!3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_type", scope: !3161, file: !1074, line: 912, baseType: !719, size: 8)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_rflags", scope: !3161, file: !1074, line: 913, baseType: !719, size: 8, offset: 8)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_rxtainted", scope: !3161, file: !1074, line: 914, baseType: !1000, size: 16, offset: 16)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_oldsave", scope: !3161, file: !1074, line: 915, baseType: !609, size: 32, offset: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_iters", scope: !3161, file: !1074, line: 916, baseType: !824, size: 64, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_maxiters", scope: !3161, file: !1074, line: 917, baseType: !824, size: 64, offset: 128)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_orig", scope: !3161, file: !1074, line: 918, baseType: !486, size: 64, offset: 192)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_dstr", scope: !3161, file: !1074, line: 919, baseType: !530, size: 64, offset: 256)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_targ", scope: !3161, file: !1074, line: 920, baseType: !530, size: 64, offset: 320)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_s", scope: !3161, file: !1074, line: 921, baseType: !486, size: 64, offset: 384)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_m", scope: !3161, file: !1074, line: 922, baseType: !486, size: 64, offset: 448)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_strend", scope: !3161, file: !1074, line: 923, baseType: !486, size: 64, offset: 512)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_rxres", scope: !3161, file: !1074, line: 924, baseType: !535, size: 64, offset: 576)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "sbu_rx", scope: !3161, file: !1074, line: 925, baseType: !577, size: 64, offset: 640)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "si_prev", scope: !3027, file: !1074, line: 1119, baseType: !3178, size: 64, offset: 128)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "si_next", scope: !3027, file: !1074, line: 1120, baseType: !3178, size: 64, offset: 192)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "si_cxix", scope: !3027, file: !1074, line: 1121, baseType: !609, size: 32, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "si_cxmax", scope: !3027, file: !1074, line: 1122, baseType: !609, size: 32, offset: 288)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "si_type", scope: !3027, file: !1074, line: 1123, baseType: !609, size: 32, offset: 320)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "si_markoff", scope: !3027, file: !1074, line: 1124, baseType: !609, size: 32, offset: 352)
!3184 = distinct !DILocation(line: 1307, column: 5, scope: !1631)
!3185 = !DILocation(line: 4117, column: 5, scope: !3021, inlinedAt: !3184)
!3186 = !DILocation(line: 4119, column: 5, scope: !3021, inlinedAt: !3184)
!3187 = !DILocation(line: 4118, column: 18, scope: !3021, inlinedAt: !3184)
!3188 = distinct !{!3188, !3185, !3189, !2029, !2030}
!3189 = !DILocation(line: 4118, column: 37, scope: !3021, inlinedAt: !3184)
!3190 = !DILocation(line: 4120, column: 32, scope: !3024, inlinedAt: !3184)
!3191 = !DILocation(line: 0, scope: !3024, inlinedAt: !3184)
!3192 = !DILocation(line: 4122, column: 2, scope: !3024, inlinedAt: !3184)
!3193 = !DILocation(line: 4123, column: 2, scope: !3024, inlinedAt: !3184)
!3194 = !DILocation(line: 4124, column: 18, scope: !3024, inlinedAt: !3184)
!3195 = distinct !{!3195, !3186, !3196, !2029, !2030}
!3196 = !DILocation(line: 4125, column: 5, scope: !3021, inlinedAt: !3184)
!3197 = !DILocation(line: 4126, column: 5, scope: !3021, inlinedAt: !3184)
!3198 = !DILocation(line: 4127, column: 5, scope: !3021, inlinedAt: !3184)
!3199 = !DILocation(line: 4128, column: 5, scope: !3021, inlinedAt: !3184)
!3200 = !DILocation(line: 4132, column: 5, scope: !3021, inlinedAt: !3184)
!3201 = !DILocation(line: 1308, column: 5, scope: !1631)
!3202 = !DILocation(line: 1309, column: 5, scope: !1631)
!3203 = !DILocation(line: 1310, column: 14, scope: !1631)
!3204 = !DILocation(line: 1314, column: 14, scope: !1631)
!3205 = !DILocation(line: 1323, column: 24, scope: !1631)
!3206 = !DILocation(line: 1324, column: 24, scope: !1631)
!3207 = !DILocation(line: 1325, column: 19, scope: !1631)
!3208 = !DILocation(line: 1327, column: 5, scope: !1631)
!3209 = !DILocation(line: 1329, column: 12, scope: !1631)
!3210 = !DILocation(line: 1329, column: 5, scope: !1631)
!3211 = !DILocation(line: 0, scope: !1694)
!3212 = !DILocation(line: 1331, column: 39, scope: !1694)
!3213 = !DILocation(line: 1331, column: 19, scope: !1694)
!3214 = !DILocation(line: 1332, column: 2, scope: !1694)
!3215 = distinct !{!3215, !3210, !3216, !2029, !2030}
!3216 = !DILocation(line: 1333, column: 5, scope: !1631)
!3217 = !DILocation(line: 1337, column: 9, scope: !1907)
!3218 = !DILocation(line: 1337, column: 9, scope: !1631)
!3219 = !DILocation(line: 1343, column: 12, scope: !3220)
!3220 = distinct !DILexicalBlock(scope: !1906, file: !1256, line: 1343, column: 2)
!3221 = !DILocation(line: 0, scope: !1906)
!3222 = !DILocation(line: 1343, column: 2, scope: !3220)
!3223 = !DILocation(line: 1344, column: 22, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3225, file: !1256, line: 1343, column: 53)
!3225 = distinct !DILexicalBlock(scope: !3220, file: !1256, line: 1343, column: 2)
!3226 = !DILocation(line: 1345, column: 14, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3224, file: !1256, line: 1345, column: 10)
!3228 = !DILocation(line: 1345, column: 10, scope: !3227)
!3229 = !DILocation(line: 1345, column: 21, scope: !3227)
!3230 = !DILocation(line: 1345, column: 28, scope: !3227)
!3231 = !DILocation(line: 1345, column: 36, scope: !3227)
!3232 = !DILocation(line: 1346, column: 3, scope: !3227)
!3233 = !DILocation(line: 1346, column: 10, scope: !3227)
!3234 = !DILocation(line: 1346, column: 17, scope: !3227)
!3235 = !DILocation(line: 1345, column: 10, scope: !3224)
!3236 = !DILocation(line: 1347, column: 3, scope: !3227)
!3237 = !DILocation(line: 1348, column: 6, scope: !3224)
!3238 = distinct !{!3238, !3222, !3239, !2029, !2030}
!3239 = !DILocation(line: 1349, column: 2, scope: !3220)
!3240 = !DILocation(line: 1352, column: 2, scope: !1913)
!3241 = !DILocation(line: 1352, column: 2, scope: !1914)
!3242 = !DILocation(line: 1352, column: 2, scope: !1911)
!3243 = !DILocation(line: 0, scope: !1912)
!3244 = !DILocation(line: 1352, column: 2, scope: !1912)
!3245 = !DILocation(line: 1352, column: 2, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !1256, line: 1352, column: 2)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !1256, line: 1352, column: 2)
!3248 = distinct !DILexicalBlock(scope: !1910, file: !1256, line: 1352, column: 2)
!3249 = !DILocation(line: 0, scope: !1910)
!3250 = !DILocation(line: 1352, column: 2, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3246, file: !1256, line: 1352, column: 2)
!3252 = !DILocation(line: 1352, column: 2, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3251, file: !1256, line: 1352, column: 2)
!3254 = !DILocation(line: 0, scope: !3247)
!3255 = !DILocation(line: 1352, column: 2, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !1910, file: !1256, line: 1352, column: 2)
!3257 = !DILocation(line: 1352, column: 2, scope: !1910)
!3258 = !DILocation(line: 1353, column: 2, scope: !1906)
!3259 = !DILocation(line: 1354, column: 2, scope: !1906)
!3260 = !DILocation(line: 1355, column: 13, scope: !1906)
!3261 = !DILocation(line: 1356, column: 5, scope: !1906)
!3262 = !DILocation(line: 1358, column: 1, scope: !1631)
!3263 = distinct !DISubprogram(name: "Perl_call_list", scope: !1256, file: !1256, line: 4878, type: !3264, scopeLine: 4879, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3266)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{null, !609, !489}
!3266 = !{!3267, !3268, !3269, !3270, !3273, !3274, !3275, !3276, !3277}
!3267 = !DILocalVariable(name: "oldscope", arg: 1, scope: !3263, file: !1256, line: 4878, type: !609)
!3268 = !DILocalVariable(name: "paramList", arg: 2, scope: !3263, file: !1256, line: 4878, type: !489)
!3269 = !DILocalVariable(name: "atsv", scope: !3263, file: !1256, line: 4880, type: !530)
!3270 = !DILocalVariable(name: "oldline", scope: !3263, file: !1256, line: 4881, type: !3271)
!3271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3272)
!3272 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !3065)
!3273 = !DILocalVariable(name: "cv", scope: !3263, file: !1256, line: 4882, type: !737)
!3274 = !DILocalVariable(name: "len", scope: !3263, file: !1256, line: 4883, type: !560)
!3275 = !DILocalVariable(name: "ret", scope: !3263, file: !1256, line: 4884, type: !477)
!3276 = !DILocalVariable(name: "cur_env", scope: !3263, file: !1256, line: 4885, type: !1644)
!3277 = !DILocalVariable(name: "mark_stack_entry", scope: !3278, file: !1256, line: 4910, type: !1154)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4910, column: 6)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !1256, line: 4908, column: 15)
!3280 = distinct !DILexicalBlock(scope: !3263, file: !1256, line: 4889, column: 39)
!3281 = !DILocation(line: 0, scope: !3263)
!3282 = !DILocation(line: 4881, column: 5, scope: !3263)
!3283 = !DILocation(line: 4881, column: 27, scope: !3263)
!3284 = !DILocation(line: 4881, column: 37, scope: !3263)
!3285 = !DILocation(line: 4881, column: 49, scope: !3263)
!3286 = !DILocation(line: 4883, column: 5, scope: !3263)
!3287 = !DILocation(line: 4885, column: 5, scope: !3263)
!3288 = !DILocation(line: 4889, column: 5, scope: !3263)
!3289 = !DILocalVariable(name: "av", arg: 1, scope: !3290, file: !1969, line: 18, type: !489)
!3290 = distinct !DISubprogram(name: "S_av_top_index", scope: !1969, file: !1969, line: 18, type: !3291, scopeLine: 19, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3293)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!824, !489}
!3293 = !{!3289}
!3294 = !DILocation(line: 0, scope: !3290, inlinedAt: !3295)
!3295 = distinct !DILocation(line: 4889, column: 12, scope: !3263)
!3296 = !DILocation(line: 23, column: 12, scope: !3290, inlinedAt: !3295)
!3297 = !DILocation(line: 4889, column: 33, scope: !3263)
!3298 = !DILocation(line: 4890, column: 7, scope: !3280)
!3299 = !DILocation(line: 4891, column: 6, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3280, file: !1256, line: 4891, column: 6)
!3301 = !DILocation(line: 4891, column: 6, scope: !3280)
!3302 = !DILocation(line: 4892, column: 23, scope: !3303)
!3303 = distinct !DILexicalBlock(scope: !3304, file: !1256, line: 4892, column: 10)
!3304 = distinct !DILexicalBlock(scope: !3300, file: !1256, line: 4891, column: 20)
!3305 = !DILocation(line: 4892, column: 20, scope: !3303)
!3306 = !DILocation(line: 4892, column: 10, scope: !3304)
!3307 = !DILocation(line: 4894, column: 3, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3303, file: !1256, line: 4892, column: 35)
!3309 = !DILocation(line: 4895, column: 6, scope: !3308)
!3310 = !DILocation(line: 4896, column: 28, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3303, file: !1256, line: 4896, column: 15)
!3312 = !DILocation(line: 4896, column: 25, scope: !3311)
!3313 = !DILocation(line: 4896, column: 15, scope: !3303)
!3314 = !DILocation(line: 4898, column: 3, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3311, file: !1256, line: 4896, column: 40)
!3316 = !DILocation(line: 4899, column: 6, scope: !3315)
!3317 = !DILocation(line: 4900, column: 28, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3311, file: !1256, line: 4900, column: 15)
!3319 = !DILocation(line: 4900, column: 25, scope: !3318)
!3320 = !DILocation(line: 4900, column: 15, scope: !3311)
!3321 = !DILocation(line: 4902, column: 3, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3318, file: !1256, line: 4900, column: 44)
!3323 = !DILocation(line: 4903, column: 6, scope: !3322)
!3324 = !DILocation(line: 4905, column: 13, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3300, file: !1256, line: 4904, column: 9)
!3326 = !DILocation(line: 4907, column: 2, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3280, file: !1256, line: 4907, column: 2)
!3328 = !DILocation(line: 4908, column: 2, scope: !3280)
!3329 = !DILocation(line: 4910, column: 6, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3278, file: !1256, line: 4910, column: 6)
!3331 = !DILocation(line: 0, scope: !3278)
!3332 = !DILocation(line: 4910, column: 6, scope: !3278)
!3333 = !DILocation(line: 4910, column: 6, scope: !3279)
!3334 = !DILocation(line: 4911, column: 13, scope: !3279)
!3335 = !DILocation(line: 4912, column: 12, scope: !3279)
!3336 = !DILocation(line: 4913, column: 10, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4913, column: 10)
!3338 = !DILocation(line: 4913, column: 10, scope: !3279)
!3339 = !DILocation(line: 4914, column: 13, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3337, file: !1256, line: 4913, column: 15)
!3341 = !DILocation(line: 4915, column: 3, scope: !3340)
!3342 = !DILocation(line: 4916, column: 20, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3340, file: !1256, line: 4916, column: 7)
!3344 = !DILocation(line: 4916, column: 17, scope: !3343)
!3345 = !DILocation(line: 4916, column: 7, scope: !3340)
!3346 = !DILocation(line: 4917, column: 7, scope: !3343)
!3347 = !DILocation(line: 4921, column: 21, scope: !3343)
!3348 = !DILocation(line: 4921, column: 18, scope: !3343)
!3349 = !DILocation(line: 4921, column: 8, scope: !3343)
!3350 = !DILocation(line: 4922, column: 23, scope: !3343)
!3351 = !DILocation(line: 4922, column: 20, scope: !3343)
!3352 = !DILocation(line: 4922, column: 10, scope: !3343)
!3353 = !DILocation(line: 4923, column: 23, scope: !3343)
!3354 = !DILocation(line: 4923, column: 20, scope: !3343)
!3355 = !DILocation(line: 4923, column: 10, scope: !3343)
!3356 = !DILocation(line: 4919, column: 7, scope: !3343)
!3357 = !DILocation(line: 4925, column: 10, scope: !3340)
!3358 = !DILocation(line: 4925, column: 27, scope: !3340)
!3359 = !DILocation(line: 4925, column: 3, scope: !3340)
!3360 = !DILocation(line: 4926, column: 7, scope: !3340)
!3361 = distinct !{!3361, !3359, !3360, !2029, !2030}
!3362 = !DILocation(line: 4927, column: 3, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3340, file: !1256, line: 4927, column: 3)
!3364 = !DILocation(line: 4928, column: 3, scope: !3340)
!3365 = !DILocation(line: 4929, column: 6, scope: !3340)
!3366 = !DILocation(line: 4932, column: 6, scope: !3279)
!3367 = !DILocation(line: 4936, column: 13, scope: !3279)
!3368 = !DILocation(line: 4936, column: 30, scope: !3279)
!3369 = !DILocation(line: 4936, column: 6, scope: !3279)
!3370 = !DILocation(line: 4937, column: 3, scope: !3279)
!3371 = distinct !{!3371, !3369, !3370, !2029, !2030}
!3372 = !DILocation(line: 4938, column: 6, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4938, column: 6)
!3374 = !DILocation(line: 4938, column: 6, scope: !3279)
!3375 = !DILocation(line: 4939, column: 6, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4939, column: 6)
!3377 = !DILocation(line: 4939, column: 6, scope: !3279)
!3378 = !DILocation(line: 0, scope: !1968, inlinedAt: !3379)
!3379 = distinct !DILocation(line: 4939, column: 6, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3376, file: !1256, line: 4939, column: 6)
!3381 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !3379)
!3382 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !3379)
!3383 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !3379)
!3384 = !DILocation(line: 0, scope: !1974, inlinedAt: !3379)
!3385 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !3379)
!3386 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !3379)
!3387 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !3379)
!3388 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !3379)
!3389 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !3379)
!3390 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !3379)
!3391 = !DILocation(line: 4939, column: 6, scope: !3380)
!3392 = !DILocalVariable(name: "sv", arg: 1, scope: !3393, file: !1969, line: 140, type: !530)
!3393 = distinct !DISubprogram(name: "S_SvREFCNT_inc", scope: !1969, file: !1969, line: 140, type: !3394, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3396)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!530, !530}
!3396 = !{!3392}
!3397 = !DILocation(line: 0, scope: !3393, inlinedAt: !3398)
!3398 = distinct !DILocation(line: 4939, column: 6, scope: !3380)
!3399 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !3398)
!3400 = distinct !DILexicalBlock(scope: !3393, file: !1969, line: 142, column: 9)
!3401 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !3398)
!3402 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !3398)
!3403 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !3398)
!3404 = !DILocation(line: 4940, column: 16, scope: !3279)
!3405 = !DILocation(line: 4941, column: 6, scope: !3279)
!3406 = !DILocation(line: 4942, column: 6, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4942, column: 6)
!3408 = !DILocation(line: 4943, column: 6, scope: !3279)
!3409 = !DILocation(line: 4944, column: 6, scope: !3279)
!3410 = !DILocation(line: 4946, column: 10, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4946, column: 10)
!3412 = !DILocation(line: 4946, column: 10, scope: !3279)
!3413 = !DILocation(line: 4947, column: 13, scope: !3414)
!3414 = distinct !DILexicalBlock(scope: !3411, file: !1256, line: 4946, column: 24)
!3415 = !DILocation(line: 4948, column: 3, scope: !3414)
!3416 = !DILocation(line: 4949, column: 3, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3418, file: !1256, line: 4949, column: 3)
!3418 = distinct !DILexicalBlock(scope: !3414, file: !1256, line: 4949, column: 3)
!3419 = !DILocation(line: 4949, column: 3, scope: !3418)
!3420 = !DILocation(line: 4951, column: 20, scope: !3279)
!3421 = !DILocation(line: 4951, column: 6, scope: !3279)
!3422 = !DILocation(line: 4952, column: 6, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3279, file: !1256, line: 4952, column: 6)
!3424 = !DILocation(line: 4952, column: 6, scope: !3279)
!3425 = !DILocation(line: 4955, column: 2, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3280, file: !1256, line: 4955, column: 2)
!3427 = distinct !{!3427, !3288, !3428, !2029, !2030}
!3428 = !DILocation(line: 4956, column: 5, scope: !3263)
!3429 = !DILocation(line: 4957, column: 1, scope: !3263)
!3430 = !DISubprogram(name: "Perl_pop_scope", scope: !1566, file: !1566, line: 3451, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3431 = !DISubprogram(name: "Perl_free_tmps", scope: !1566, file: !1566, line: 1268, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3432 = !DISubprogram(name: "Perl_my_fflush_all", scope: !1566, file: !1566, line: 2797, type: !3433, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3433 = !DISubroutineType(types: !3434)
!3434 = !{!609}
!3435 = !DISubprogram(name: "Perl_op_free", scope: !1566, file: !1566, line: 3256, type: !3436, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{null, !760}
!3438 = !DISubprogram(name: "PerlIO_destruct", scope: !652, file: !652, line: 352, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3439 = !DISubprogram(name: "Perl_sv_clean_objs", scope: !1566, file: !1566, line: 4262, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3440 = !DISubprogram(name: "Perl_safesysfree", scope: !1566, file: !1566, line: 3750, type: !798, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3441 = !DISubprogram(name: "PerlIO_cleanup", scope: !652, file: !652, line: 357, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3442 = !DISubprogram(name: "Perl_PerlIO_close", scope: !1566, file: !1566, line: 8249, type: !3443, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!477, !650}
!3445 = !DISubprogram(name: "Perl_refcounted_he_free", scope: !1566, file: !1566, line: 3588, type: !3446, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{null, !1078}
!3448 = !DISubprogram(name: "Perl_hv_common_key_len", scope: !1566, file: !1566, line: 1627, type: !3449, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!535, !500, !876, !609, !1264, !530, !878}
!3451 = !DISubprogram(name: "Perl_ck_warner_d", scope: !1566, file: !1566, line: 706, type: !3452, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{null, !487, !876, null}
!3454 = !DISubprogram(name: "Perl_sv_clean_all", scope: !1566, file: !1566, line: 4261, type: !3433, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3455 = !DISubprogram(name: "Perl_ckwarn_d", scope: !1566, file: !1566, line: 713, type: !3456, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!795, !487}
!3458 = !DISubprogram(name: "Perl_warner", scope: !1566, file: !1566, line: 5194, type: !3452, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3459 = !DISubprogram(name: "Perl_sv_clear", scope: !1566, file: !1566, line: 4263, type: !3460, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3460 = !DISubroutineType(types: !3461)
!3461 = !{null, !865}
!3462 = !DISubprogram(name: "Perl_free_tied_hv_pool", scope: !1566, file: !1566, line: 1267, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3463 = !DISubprogram(name: "Perl_sv_free_arenas", scope: !1566, file: !1566, line: 4376, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3464 = distinct !DISubprogram(name: "perl_free", scope: !1256, file: !1256, line: 1369, type: !1338, scopeLine: 1370, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3465)
!3465 = !{!3466}
!3466 = !DILocalVariable(name: "my_perl", arg: 1, scope: !3464, file: !1256, line: 1369, type: !480)
!3467 = !DILocation(line: 0, scope: !3464)
!3468 = !DILocation(line: 1375, column: 9, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3464, file: !1256, line: 1375, column: 9)
!3470 = !DILocation(line: 1375, column: 9, scope: !3464)
!3471 = !DILocation(line: 1422, column: 5, scope: !3464)
!3472 = !DILocation(line: 1424, column: 1, scope: !3464)
!3473 = distinct !DISubprogram(name: "Perl_call_atexit", scope: !1256, file: !1256, line: 1457, type: !3474, scopeLine: 1458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3477)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{null, !3476, !535}
!3476 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATEXIT_t", file: !27, line: 5401, baseType: !797)
!3477 = !{!3478, !3479}
!3478 = !DILocalVariable(name: "fn", arg: 1, scope: !3473, file: !1256, line: 1457, type: !3476)
!3479 = !DILocalVariable(name: "ptr", arg: 2, scope: !3473, file: !1256, line: 1457, type: !535)
!3480 = !DILocation(line: 0, scope: !3473)
!3481 = !DILocation(line: 1459, column: 5, scope: !3473)
!3482 = !DILocation(line: 1460, column: 17, scope: !3473)
!3483 = !DILocation(line: 1460, column: 5, scope: !3473)
!3484 = !DILocation(line: 1460, column: 36, scope: !3473)
!3485 = !DILocation(line: 1461, column: 5, scope: !3473)
!3486 = !DILocation(line: 1461, column: 17, scope: !3473)
!3487 = !DILocation(line: 1461, column: 33, scope: !3473)
!3488 = !DILocation(line: 1461, column: 37, scope: !3473)
!3489 = !DILocation(line: 1462, column: 5, scope: !3473)
!3490 = !DILocation(line: 1463, column: 1, scope: !3473)
!3491 = !DISubprogram(name: "Perl_safesysrealloc", scope: !1566, file: !1566, line: 3755, type: !3492, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!535, !535, !561}
!3494 = distinct !DISubprogram(name: "perl_parse", scope: !1256, file: !1256, line: 1480, type: !3495, scopeLine: 1481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3499)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!477, !480, !3497, !477, !884, !884}
!3497 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSINIT_t", file: !27, line: 5400, baseType: !3498)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!3499 = !{!3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3511, !3512, !3513}
!3500 = !DILocalVariable(name: "my_perl", arg: 1, scope: !3494, file: !1256, line: 1480, type: !480)
!3501 = !DILocalVariable(name: "xsinit", arg: 2, scope: !3494, file: !1256, line: 1480, type: !3497)
!3502 = !DILocalVariable(name: "argc", arg: 3, scope: !3494, file: !1256, line: 1480, type: !477)
!3503 = !DILocalVariable(name: "argv", arg: 4, scope: !3494, file: !1256, line: 1480, type: !884)
!3504 = !DILocalVariable(name: "env", arg: 5, scope: !3494, file: !1256, line: 1480, type: !884)
!3505 = !DILocalVariable(name: "oldscope", scope: !3494, file: !1256, line: 1483, type: !609)
!3506 = !DILocalVariable(name: "ret", scope: !3494, file: !1256, line: 1484, type: !477)
!3507 = !DILocalVariable(name: "cur_env", scope: !3494, file: !1256, line: 1485, type: !1644)
!3508 = !DILocalVariable(name: "s", scope: !3509, file: !1256, line: 1527, type: !876)
!3509 = distinct !DILexicalBlock(scope: !3510, file: !1256, line: 1519, column: 10)
!3510 = distinct !DILexicalBlock(scope: !3494, file: !1256, line: 1516, column: 9)
!3511 = !DILocalVariable(name: "i", scope: !3509, file: !1256, line: 1528, type: !477)
!3512 = !DILocalVariable(name: "mask", scope: !3509, file: !1256, line: 1529, type: !1163)
!3513 = !DILocalVariable(name: "aligned", scope: !3509, file: !1256, line: 1531, type: !1163)
!3514 = !DILocation(line: 0, scope: !3494)
!3515 = !DILocation(line: 1485, column: 5, scope: !3494)
!3516 = !DILocation(line: 1513, column: 17, scope: !3494)
!3517 = !DILocation(line: 1514, column: 17, scope: !3494)
!3518 = !DILocation(line: 1516, column: 9, scope: !3510)
!3519 = !DILocation(line: 1516, column: 21, scope: !3510)
!3520 = !DILocation(line: 1516, column: 9, scope: !3494)
!3521 = !DILocation(line: 0, scope: !3509)
!3522 = !DILocation(line: 1532, column: 26, scope: !3509)
!3523 = !DILocation(line: 1532, column: 42, scope: !3509)
!3524 = !DILocation(line: 1532, column: 50, scope: !3509)
!3525 = !DILocation(line: 1543, column: 19, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3509, file: !1256, line: 1543, column: 7)
!3527 = !DILocation(line: 0, scope: !3526)
!3528 = !DILocation(line: 1544, column: 15, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3526, file: !1256, line: 1543, column: 64)
!3530 = !DILocation(line: 1544, column: 8, scope: !3529)
!3531 = !DILocation(line: 1544, column: 20, scope: !3529)
!3532 = distinct !{!3532, !3530, !3531, !2029, !2030}
!3533 = !DILocation(line: 1545, column: 22, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !1256, line: 1545, column: 8)
!3535 = distinct !DILexicalBlock(scope: !3529, file: !1256, line: 1545, column: 8)
!3536 = !DILocation(line: 1545, column: 8, scope: !3535)
!3537 = !DILocation(line: 1546, column: 11, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !1256, line: 1546, column: 10)
!3539 = distinct !DILexicalBlock(scope: !3534, file: !1256, line: 1545, column: 42)
!3540 = !DILocation(line: 1546, column: 31, scope: !3538)
!3541 = !DILocation(line: 1546, column: 26, scope: !3538)
!3542 = !DILocation(line: 1551, column: 10, scope: !3538)
!3543 = !DILocation(line: 1552, column: 19, scope: !3538)
!3544 = !DILocation(line: 1559, column: 4, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3538, file: !1256, line: 1557, column: 6)
!3546 = !DILocation(line: 0, scope: !3545)
!3547 = !DILocation(line: 1559, column: 11, scope: !3545)
!3548 = !DILocation(line: 1559, column: 16, scope: !3545)
!3549 = distinct !{!3549, !3544, !3548, !2029, !2030}
!3550 = !DILocation(line: 1545, column: 38, scope: !3534)
!3551 = distinct !{!3551, !3536, !3552, !2029, !2030}
!3552 = !DILocation(line: 1563, column: 8, scope: !3535)
!3553 = !DILocation(line: 1568, column: 7, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3509, file: !1256, line: 1568, column: 7)
!3555 = !DILocation(line: 1568, column: 9, scope: !3554)
!3556 = !DILocation(line: 1569, column: 13, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3558, file: !1256, line: 1569, column: 12)
!3558 = distinct !DILexicalBlock(scope: !3554, file: !1256, line: 1568, column: 51)
!3559 = !DILocation(line: 1569, column: 36, scope: !3557)
!3560 = !DILocation(line: 1569, column: 31, scope: !3557)
!3561 = !DILocation(line: 1570, column: 5, scope: !3557)
!3562 = !DILocation(line: 1571, column: 14, scope: !3557)
!3563 = !DILocation(line: 1579, column: 6, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3557, file: !1256, line: 1576, column: 8)
!3565 = !DILocation(line: 0, scope: !3564)
!3566 = !DILocation(line: 1579, column: 13, scope: !3564)
!3567 = !DILocation(line: 1579, column: 18, scope: !3564)
!3568 = distinct !{!3568, !3563, !3567, !2029, !2030}
!3569 = !DILocation(line: 1581, column: 6, scope: !3564)
!3570 = !DILocation(line: 1583, column: 18, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3572, file: !1256, line: 1583, column: 6)
!3572 = distinct !DILexicalBlock(scope: !3564, file: !1256, line: 1583, column: 6)
!3573 = !DILocation(line: 1583, column: 6, scope: !3572)
!3574 = !DILocation(line: 1584, column: 31, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3576, file: !1256, line: 1584, column: 8)
!3576 = distinct !DILexicalBlock(scope: !3571, file: !1256, line: 1583, column: 42)
!3577 = !DILocation(line: 1584, column: 26, scope: !3575)
!3578 = !DILocation(line: 1585, column: 8, scope: !3575)
!3579 = !DILocation(line: 1586, column: 17, scope: !3575)
!3580 = !DILocation(line: 1593, column: 9, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3575, file: !1256, line: 1591, column: 4)
!3582 = !DILocation(line: 0, scope: !3581)
!3583 = !DILocation(line: 1593, column: 16, scope: !3581)
!3584 = !DILocation(line: 1593, column: 21, scope: !3581)
!3585 = distinct !{!3585, !3580, !3584, !2029, !2030}
!3586 = !DILocation(line: 1583, column: 38, scope: !3571)
!3587 = distinct !{!3587, !3573, !3588, !2029, !2030}
!3588 = !DILocation(line: 1597, column: 6, scope: !3572)
!3589 = !DILocation(line: 1602, column: 17, scope: !3509)
!3590 = !DILocation(line: 1602, column: 25, scope: !3509)
!3591 = !DILocation(line: 1602, column: 23, scope: !3509)
!3592 = !DILocation(line: 1602, column: 40, scope: !3509)
!3593 = !DILocation(line: 0, scope: !3510)
!3594 = !DILocation(line: 1605, column: 9, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3494, file: !1256, line: 1605, column: 9)
!3596 = !DILocation(line: 1605, column: 9, scope: !3494)
!3597 = !DILocation(line: 1609, column: 20, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3595, file: !1256, line: 1605, column: 23)
!3599 = !DILocation(line: 1609, column: 18, scope: !3598)
!3600 = !DILocation(line: 1610, column: 15, scope: !3598)
!3601 = !DILocation(line: 1611, column: 2, scope: !3598)
!3602 = !DILocation(line: 1611, column: 13, scope: !3598)
!3603 = !DILocation(line: 3917, column: 26, scope: !1465, inlinedAt: !3604)
!3604 = distinct !DILocation(line: 1612, column: 2, scope: !3598)
!3605 = !DILocation(line: 0, scope: !1465, inlinedAt: !3604)
!3606 = !DILocation(line: 3918, column: 27, scope: !1465, inlinedAt: !3604)
!3607 = !DILocation(line: 3919, column: 26, scope: !1465, inlinedAt: !3604)
!3608 = !DILocation(line: 3920, column: 27, scope: !1465, inlinedAt: !3604)
!3609 = !DILocation(line: 3926, column: 5, scope: !1465, inlinedAt: !3604)
!3610 = !DILocation(line: 1614, column: 2, scope: !3598)
!3611 = !DILocation(line: 1615, column: 2, scope: !3598)
!3612 = !DILocation(line: 1616, column: 2, scope: !3598)
!3613 = !DILocation(line: 1617, column: 2, scope: !3598)
!3614 = !DILocation(line: 1618, column: 2, scope: !3598)
!3615 = !DILocation(line: 1621, column: 9, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3494, file: !1256, line: 1621, column: 9)
!3617 = !DILocation(line: 1621, column: 9, scope: !3494)
!3618 = !DILocation(line: 1622, column: 2, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !1256, line: 1621, column: 23)
!3620 = !DILocation(line: 1623, column: 15, scope: !3619)
!3621 = !DILocation(line: 1624, column: 5, scope: !3619)
!3622 = !DILocation(line: 1625, column: 19, scope: !3494)
!3623 = !DILocation(line: 1626, column: 5, scope: !3494)
!3624 = !DILocation(line: 0, scope: !1968, inlinedAt: !3625)
!3625 = distinct !DILocation(line: 1626, column: 5, scope: !3494)
!3626 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !3625)
!3627 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !3625)
!3628 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !3625)
!3629 = !DILocation(line: 0, scope: !1974, inlinedAt: !3625)
!3630 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !3625)
!3631 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !3625)
!3632 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !3625)
!3633 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !3625)
!3634 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !3625)
!3635 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !3625)
!3636 = !DILocation(line: 1627, column: 16, scope: !3494)
!3637 = !DILocation(line: 1629, column: 5, scope: !3494)
!3638 = !DILocation(line: 1630, column: 16, scope: !3494)
!3639 = !DILocation(line: 1631, column: 15, scope: !3494)
!3640 = !DILocation(line: 1633, column: 5, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3494, file: !1256, line: 1633, column: 5)
!3642 = !DILocation(line: 1634, column: 5, scope: !3494)
!3643 = !DILocalVariable(name: "env", arg: 1, scope: !3644, file: !1256, line: 1839, type: !884)
!3644 = distinct !DISubprogram(name: "S_parse_body", scope: !1256, file: !1256, line: 1839, type: !3645, scopeLine: 1840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!535, !884, !3497}
!3647 = !{!3643, !3648, !3649, !3650, !3651, !3652, !3653, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3663, !3670, !3672, !3674, !3676, !3678, !3683, !3684, !3685, !3688, !3689, !3690}
!3648 = !DILocalVariable(name: "xsinit", arg: 2, scope: !3644, file: !1256, line: 1839, type: !3497)
!3649 = !DILocalVariable(name: "rsfp", scope: !3644, file: !1256, line: 1842, type: !650)
!3650 = !DILocalVariable(name: "argc", scope: !3644, file: !1256, line: 1843, type: !477)
!3651 = !DILocalVariable(name: "argv", scope: !3644, file: !1256, line: 1844, type: !884)
!3652 = !DILocalVariable(name: "scriptname", scope: !3644, file: !1256, line: 1845, type: !876)
!3653 = !DILocalVariable(name: "dosearch", scope: !3644, file: !1256, line: 1846, type: !3654)
!3654 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !795)
!3655 = !DILocalVariable(name: "c", scope: !3644, file: !1256, line: 1847, type: !485)
!3656 = !DILocalVariable(name: "doextract", scope: !3644, file: !1256, line: 1848, type: !795)
!3657 = !DILocalVariable(name: "cddir", scope: !3644, file: !1256, line: 1849, type: !876)
!3658 = !DILocalVariable(name: "linestr_sv", scope: !3644, file: !1256, line: 1853, type: !530)
!3659 = !DILocalVariable(name: "add_read_e_script", scope: !3644, file: !1256, line: 1854, type: !795)
!3660 = !DILocalVariable(name: "lex_start_flags", scope: !3644, file: !1256, line: 1855, type: !487)
!3661 = !DILocalVariable(name: "s", scope: !3662, file: !1256, line: 1862, type: !876)
!3662 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 1861, column: 5)
!3663 = !DILocalVariable(name: "len", scope: !3664, file: !1256, line: 1960, type: !560)
!3664 = distinct !DILexicalBlock(scope: !3665, file: !1256, line: 1959, column: 19)
!3665 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1959, column: 10)
!3666 = distinct !DILexicalBlock(scope: !3667, file: !1256, line: 1868, column: 20)
!3667 = distinct !DILexicalBlock(scope: !3668, file: !1256, line: 1863, column: 50)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !1256, line: 1863, column: 5)
!3669 = distinct !DILexicalBlock(scope: !3662, file: !1256, line: 1863, column: 5)
!3670 = !DILocalVariable(name: "opts_prog", scope: !3671, file: !1256, line: 1973, type: !530)
!3671 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1972, column: 6)
!3672 = !DILocalVariable(name: "s", scope: !3673, file: !1256, line: 2020, type: !486)
!3673 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2019, column: 5)
!3674 = !DILocalVariable(name: "suidscript", scope: !3675, file: !1256, line: 2160, type: !795)
!3675 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2159, column: 5)
!3676 = !DILocalVariable(name: "sigstate", scope: !3677, file: !1256, line: 2176, type: !472)
!3677 = distinct !DILexicalBlock(scope: !3675, file: !1256, line: 2172, column: 2)
!3678 = !DILocalVariable(name: "io", scope: !3679, file: !1256, line: 2247, type: !1156)
!3679 = distinct !DILexicalBlock(scope: !3680, file: !1256, line: 2246, column: 66)
!3680 = distinct !DILexicalBlock(scope: !3681, file: !1256, line: 2246, column: 7)
!3681 = distinct !DILexicalBlock(scope: !3682, file: !1256, line: 2244, column: 21)
!3682 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2244, column: 9)
!3683 = !DILocalVariable(name: "fp", scope: !3679, file: !1256, line: 2248, type: !650)
!3684 = !DILocalVariable(name: "sv", scope: !3679, file: !1256, line: 2249, type: !530)
!3685 = !DILocalVariable(name: "in", scope: !3686, file: !1256, line: 2268, type: !487)
!3686 = distinct !DILexicalBlock(scope: !3687, file: !1256, line: 2267, column: 18)
!3687 = distinct !DILexicalBlock(scope: !3679, file: !1256, line: 2265, column: 12)
!3688 = !DILocalVariable(name: "out", scope: !3686, file: !1256, line: 2269, type: !487)
!3689 = !DILabel(scope: !3667, name: "reswitch", file: !1256, line: 1867)
!3690 = !DILabel(scope: !3644, name: "switch_end", file: !1256, line: 2017)
!3691 = !DILocation(line: 0, scope: !3644, inlinedAt: !3692)
!3692 = distinct !DILocation(line: 1636, column: 2, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3494, file: !1256, line: 1634, column: 18)
!3694 = !DILocation(line: 1843, column: 16, scope: !3644, inlinedAt: !3692)
!3695 = !DILocation(line: 1844, column: 19, scope: !3644, inlinedAt: !3692)
!3696 = !DILocation(line: 1846, column: 5, scope: !3644, inlinedAt: !3692)
!3697 = !DILocation(line: 1846, column: 14, scope: !3644, inlinedAt: !3692)
!3698 = !DILocation(line: 1857, column: 5, scope: !3644, inlinedAt: !3692)
!3699 = !DILocation(line: 3657, column: 39, scope: !3700, inlinedAt: !3711)
!3700 = distinct !DISubprogram(name: "S_init_main_stash", scope: !1256, file: !1256, line: 3653, type: !1276, scopeLine: 3654, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3701)
!3701 = !{!3702, !3703, !3705, !3709}
!3702 = !DILocalVariable(name: "gv", scope: !3700, file: !1256, line: 3655, type: !670)
!3703 = !DILocalVariable(name: "svp", scope: !3704, file: !1256, line: 3691, type: !924)
!3704 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3691, column: 5)
!3705 = !DILocalVariable(name: "errsv", scope: !3706, file: !1256, line: 3691, type: !865)
!3706 = distinct !DILexicalBlock(scope: !3707, file: !1256, line: 3691, column: 5)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !1256, line: 3691, column: 5)
!3708 = distinct !DILexicalBlock(scope: !3704, file: !1256, line: 3691, column: 5)
!3709 = !DILabel(scope: !3710, name: "clresv_newemptypv", file: !1256, line: 3691)
!3710 = distinct !DILexicalBlock(scope: !3707, file: !1256, line: 3691, column: 5)
!3711 = distinct !DILocation(line: 1859, column: 5, scope: !3644, inlinedAt: !3692)
!3712 = !DILocation(line: 3657, column: 31, scope: !3700, inlinedAt: !3711)
!3713 = !DILocation(line: 3657, column: 17, scope: !3700, inlinedAt: !3711)
!3714 = !DILocation(line: 3661, column: 20, scope: !3700, inlinedAt: !3711)
!3715 = !DILocation(line: 3661, column: 18, scope: !3700, inlinedAt: !3711)
!3716 = !DILocation(line: 3662, column: 10, scope: !3700, inlinedAt: !3711)
!3717 = !DILocation(line: 0, scope: !3700, inlinedAt: !3711)
!3718 = !DILocation(line: 3667, column: 5, scope: !3700, inlinedAt: !3711)
!3719 = !DILocation(line: 0, scope: !1968, inlinedAt: !3720)
!3720 = distinct !DILocation(line: 3667, column: 5, scope: !3700, inlinedAt: !3711)
!3721 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !3720)
!3722 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !3720)
!3723 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !3720)
!3724 = !DILocation(line: 0, scope: !1974, inlinedAt: !3720)
!3725 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !3720)
!3726 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !3720)
!3727 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !3720)
!3728 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !3720)
!3729 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !3720)
!3730 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !3720)
!3731 = !DILocation(line: 3668, column: 5, scope: !3700, inlinedAt: !3711)
!3732 = !DILocation(line: 3669, column: 16, scope: !3700, inlinedAt: !3711)
!3733 = !DILocation(line: 0, scope: !3393, inlinedAt: !3734)
!3734 = distinct !DILocation(line: 3669, column: 16, scope: !3700, inlinedAt: !3711)
!3735 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !3734)
!3736 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !3734)
!3737 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !3734)
!3738 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !3734)
!3739 = !DILocation(line: 3669, column: 5, scope: !3700, inlinedAt: !3711)
!3740 = !DILocation(line: 3669, column: 14, scope: !3700, inlinedAt: !3711)
!3741 = !DILocation(line: 3670, column: 5, scope: !3700, inlinedAt: !3711)
!3742 = !DILocation(line: 3671, column: 16, scope: !3700, inlinedAt: !3711)
!3743 = !DILocation(line: 3671, column: 14, scope: !3700, inlinedAt: !3711)
!3744 = !DILocation(line: 3673, column: 5, scope: !3745, inlinedAt: !3711)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !1256, line: 3673, column: 5)
!3746 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3673, column: 5)
!3747 = !DILocation(line: 3673, column: 5, scope: !3746, inlinedAt: !3711)
!3748 = !DILocation(line: 3674, column: 5, scope: !3700, inlinedAt: !3711)
!3749 = !DILocation(line: 3675, column: 17, scope: !3700, inlinedAt: !3711)
!3750 = !DILocation(line: 3675, column: 15, scope: !3700, inlinedAt: !3711)
!3751 = !DILocation(line: 3676, column: 5, scope: !3752, inlinedAt: !3711)
!3752 = distinct !DILexicalBlock(scope: !3753, file: !1256, line: 3676, column: 5)
!3753 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3676, column: 5)
!3754 = !DILocation(line: 3676, column: 5, scope: !3753, inlinedAt: !3711)
!3755 = !DILocation(line: 3677, column: 5, scope: !3700, inlinedAt: !3711)
!3756 = !DILocation(line: 3678, column: 16, scope: !3700, inlinedAt: !3711)
!3757 = !DILocation(line: 3678, column: 14, scope: !3700, inlinedAt: !3711)
!3758 = !DILocation(line: 3679, column: 5, scope: !3759, inlinedAt: !3711)
!3759 = distinct !DILexicalBlock(scope: !3760, file: !1256, line: 3679, column: 5)
!3760 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3679, column: 5)
!3761 = !DILocation(line: 3679, column: 5, scope: !3760, inlinedAt: !3711)
!3762 = !DILocation(line: 3680, column: 16, scope: !3700, inlinedAt: !3711)
!3763 = !DILocation(line: 3680, column: 14, scope: !3700, inlinedAt: !3711)
!3764 = !DILocation(line: 3681, column: 5, scope: !3765, inlinedAt: !3711)
!3765 = distinct !DILexicalBlock(scope: !3766, file: !1256, line: 3681, column: 5)
!3766 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3681, column: 5)
!3767 = !DILocation(line: 3681, column: 5, scope: !3766, inlinedAt: !3711)
!3768 = !DILocation(line: 3682, column: 5, scope: !3700, inlinedAt: !3711)
!3769 = !DILocation(line: 3683, column: 17, scope: !3700, inlinedAt: !3711)
!3770 = !DILocation(line: 3683, column: 15, scope: !3700, inlinedAt: !3711)
!3771 = !DILocation(line: 3684, column: 5, scope: !3772, inlinedAt: !3711)
!3772 = distinct !DILexicalBlock(scope: !3773, file: !1256, line: 3684, column: 5)
!3773 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3684, column: 5)
!3774 = !DILocation(line: 3684, column: 5, scope: !3773, inlinedAt: !3711)
!3775 = !DILocation(line: 3685, column: 5, scope: !3700, inlinedAt: !3711)
!3776 = !DILocation(line: 3686, column: 11, scope: !3700, inlinedAt: !3711)
!3777 = !DILocation(line: 3688, column: 11, scope: !3700, inlinedAt: !3711)
!3778 = !DILocation(line: 3690, column: 5, scope: !3700, inlinedAt: !3711)
!3779 = !DILocation(line: 3691, column: 5, scope: !3704, inlinedAt: !3711)
!3780 = !DILocation(line: 0, scope: !3704, inlinedAt: !3711)
!3781 = !DILocation(line: 3691, column: 5, scope: !3708, inlinedAt: !3711)
!3782 = !DILocation(line: 3691, column: 5, scope: !3707, inlinedAt: !3711)
!3783 = !DILocalVariable(name: "sv", arg: 1, scope: !3784, file: !1969, line: 171, type: !530)
!3784 = distinct !DISubprogram(name: "S_SvREFCNT_dec_NN", scope: !1969, file: !1969, line: 171, type: !1970, scopeLine: 172, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3785)
!3785 = !{!3783, !3786}
!3786 = !DILocalVariable(name: "rc", scope: !3784, file: !1969, line: 173, type: !487)
!3787 = !DILocation(line: 0, scope: !3784, inlinedAt: !3788)
!3788 = distinct !DILocation(line: 3691, column: 5, scope: !3710, inlinedAt: !3711)
!3789 = !DILocation(line: 173, column: 14, scope: !3784, inlinedAt: !3788)
!3790 = !DILocation(line: 174, column: 9, scope: !3791, inlinedAt: !3788)
!3791 = distinct !DILexicalBlock(scope: !3784, file: !1969, line: 174, column: 9)
!3792 = !DILocation(line: 174, column: 9, scope: !3784, inlinedAt: !3788)
!3793 = !DILocation(line: 175, column: 20, scope: !3791, inlinedAt: !3788)
!3794 = !DILocation(line: 175, column: 15, scope: !3791, inlinedAt: !3788)
!3795 = !DILocation(line: 175, column: 2, scope: !3791, inlinedAt: !3788)
!3796 = !DILocation(line: 177, column: 2, scope: !3791, inlinedAt: !3788)
!3797 = !DILocation(line: 3691, column: 5, scope: !3710, inlinedAt: !3711)
!3798 = !DILocation(line: 0, scope: !3706, inlinedAt: !3711)
!3799 = !DILocation(line: 3691, column: 5, scope: !3706, inlinedAt: !3711)
!3800 = !DILocation(line: 3691, column: 5, scope: !3801, inlinedAt: !3711)
!3801 = distinct !DILexicalBlock(scope: !3706, file: !1256, line: 3691, column: 5)
!3802 = !DILocation(line: 3691, column: 5, scope: !3803, inlinedAt: !3711)
!3803 = distinct !DILexicalBlock(scope: !3801, file: !1256, line: 3691, column: 5)
!3804 = !DILocation(line: 3692, column: 5, scope: !3805, inlinedAt: !3711)
!3805 = distinct !DILexicalBlock(scope: !3700, file: !1256, line: 3692, column: 5)
!3806 = !DILocation(line: 3692, column: 5, scope: !3700, inlinedAt: !3711)
!3807 = !DILocation(line: 0, scope: !1968, inlinedAt: !3808)
!3808 = distinct !DILocation(line: 3692, column: 5, scope: !3809, inlinedAt: !3711)
!3809 = distinct !DILexicalBlock(scope: !3805, file: !1256, line: 3692, column: 5)
!3810 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !3808)
!3811 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !3808)
!3812 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !3808)
!3813 = !DILocation(line: 0, scope: !1974, inlinedAt: !3808)
!3814 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !3808)
!3815 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !3808)
!3816 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !3808)
!3817 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !3808)
!3818 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !3808)
!3819 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !3808)
!3820 = !DILocation(line: 3692, column: 5, scope: !3809, inlinedAt: !3711)
!3821 = !DILocation(line: 0, scope: !3393, inlinedAt: !3822)
!3822 = distinct !DILocation(line: 3692, column: 5, scope: !3809, inlinedAt: !3711)
!3823 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !3822)
!3824 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !3822)
!3825 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !3822)
!3826 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !3822)
!3827 = !DILocation(line: 3693, column: 5, scope: !3700, inlinedAt: !3711)
!3828 = !DILocation(line: 3694, column: 19, scope: !3700, inlinedAt: !3711)
!3829 = !DILocation(line: 3694, column: 17, scope: !3700, inlinedAt: !3711)
!3830 = !DILocation(line: 3695, column: 22, scope: !3700, inlinedAt: !3711)
!3831 = !DILocation(line: 3695, column: 20, scope: !3700, inlinedAt: !3711)
!3832 = !DILocalVariable(name: "name", arg: 1, scope: !3833, file: !1256, line: 2486, type: !876)
!3833 = distinct !DISubprogram(name: "Perl_get_sv", scope: !1256, file: !1256, line: 2486, type: !3834, scopeLine: 2487, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3836)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!530, !876, !609}
!3836 = !{!3832, !3837, !3838}
!3837 = !DILocalVariable(name: "flags", arg: 2, scope: !3833, file: !1256, line: 2486, type: !609)
!3838 = !DILocalVariable(name: "gv", scope: !3833, file: !1256, line: 2488, type: !670)
!3839 = !DILocation(line: 0, scope: !3833, inlinedAt: !3840)
!3840 = distinct !DILocation(line: 3698, column: 5, scope: !3700, inlinedAt: !3711)
!3841 = !DILocation(line: 2492, column: 10, scope: !3833, inlinedAt: !3840)
!3842 = !DILocation(line: 2493, column: 9, scope: !3843, inlinedAt: !3840)
!3843 = distinct !DILexicalBlock(scope: !3833, file: !1256, line: 2493, column: 9)
!3844 = !DILocation(line: 2493, column: 9, scope: !3833, inlinedAt: !3840)
!3845 = !DILocation(line: 2494, column: 9, scope: !3843, inlinedAt: !3840)
!3846 = !DILocation(line: 2494, column: 2, scope: !3843, inlinedAt: !3840)
!3847 = !DILocation(line: 3698, column: 5, scope: !3700, inlinedAt: !3711)
!3848 = !DILocation(line: 0, scope: !3669, inlinedAt: !3692)
!3849 = !DILocation(line: 1863, column: 30, scope: !3668, inlinedAt: !3692)
!3850 = !DILocation(line: 1863, column: 5, scope: !3669, inlinedAt: !3692)
!3851 = !DILocation(line: 1864, column: 6, scope: !3852, inlinedAt: !3692)
!3852 = distinct !DILexicalBlock(scope: !3667, file: !1256, line: 1864, column: 6)
!3853 = !DILocation(line: 1864, column: 17, scope: !3852, inlinedAt: !3692)
!3854 = !DILocation(line: 1864, column: 24, scope: !3852, inlinedAt: !3692)
!3855 = !DILocation(line: 1864, column: 28, scope: !3852, inlinedAt: !3692)
!3856 = !DILocation(line: 1864, column: 6, scope: !3667, inlinedAt: !3692)
!3857 = !DILocation(line: 1868, column: 2, scope: !3667, inlinedAt: !3692)
!3858 = !DILocation(line: 0, scope: !3667, inlinedAt: !3692)
!3859 = !DILocation(line: 0, scope: !3662, inlinedAt: !3692)
!3860 = !DILocation(line: 1867, column: 7, scope: !3667, inlinedAt: !3692)
!3861 = !DILocation(line: 1868, column: 15, scope: !3667, inlinedAt: !3692)
!3862 = !DILocation(line: 1868, column: 10, scope: !3667, inlinedAt: !3692)
!3863 = !DILocation(line: 1894, column: 15, scope: !3864, inlinedAt: !3692)
!3864 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1894, column: 10)
!3865 = !DILocation(line: 1894, column: 13, scope: !3864, inlinedAt: !3692)
!3866 = !DILocation(line: 1894, column: 10, scope: !3666, inlinedAt: !3692)
!3867 = !DILocation(line: 1906, column: 11, scope: !3868, inlinedAt: !3692)
!3868 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1906, column: 10)
!3869 = !DILocation(line: 1906, column: 10, scope: !3666, inlinedAt: !3692)
!3870 = !DILocation(line: 1907, column: 11, scope: !3871, inlinedAt: !3692)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !1256, line: 1906, column: 26)
!3872 = !DILocation(line: 1908, column: 11, scope: !3871, inlinedAt: !3692)
!3873 = !DILocation(line: 1909, column: 6, scope: !3871, inlinedAt: !3692)
!3874 = !DILocation(line: 1911, column: 7, scope: !3666, inlinedAt: !3692)
!3875 = !DILocation(line: 1912, column: 6, scope: !3666, inlinedAt: !3692)
!3876 = !DILocation(line: 1921, column: 6, scope: !3666, inlinedAt: !3692)
!3877 = !DILocation(line: 1922, column: 6, scope: !3666, inlinedAt: !3692)
!3878 = !DILocation(line: 1924, column: 7, scope: !3666, inlinedAt: !3692)
!3879 = !DILocation(line: 1925, column: 6, scope: !3666, inlinedAt: !3692)
!3880 = !DILocation(line: 1928, column: 17, scope: !3666, inlinedAt: !3692)
!3881 = !DILocation(line: 1928, column: 6, scope: !3666, inlinedAt: !3692)
!3882 = !DILocation(line: 1932, column: 11, scope: !3883, inlinedAt: !3692)
!3883 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1932, column: 10)
!3884 = !DILocation(line: 1932, column: 10, scope: !3666, inlinedAt: !3692)
!3885 = !DILocation(line: 1933, column: 17, scope: !3886, inlinedAt: !3692)
!3886 = distinct !DILexicalBlock(scope: !3883, file: !1256, line: 1932, column: 24)
!3887 = !DILocation(line: 1933, column: 15, scope: !3886, inlinedAt: !3692)
!3888 = !DILocation(line: 1935, column: 6, scope: !3886, inlinedAt: !3692)
!3889 = !DILocation(line: 1936, column: 11, scope: !3890, inlinedAt: !3692)
!3890 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1936, column: 10)
!3891 = !DILocation(line: 1936, column: 10, scope: !3890, inlinedAt: !3692)
!3892 = !DILocation(line: 1936, column: 10, scope: !3666, inlinedAt: !3692)
!3893 = !DILocation(line: 1937, column: 3, scope: !3890, inlinedAt: !3692)
!3894 = !DILocation(line: 1938, column: 15, scope: !3895, inlinedAt: !3692)
!3895 = distinct !DILexicalBlock(scope: !3890, file: !1256, line: 1938, column: 15)
!3896 = !DILocation(line: 1938, column: 15, scope: !3890, inlinedAt: !3692)
!3897 = !DILocation(line: 1939, column: 3, scope: !3898, inlinedAt: !3692)
!3898 = distinct !DILexicalBlock(scope: !3895, file: !1256, line: 1938, column: 24)
!3899 = !DILocation(line: 1940, column: 7, scope: !3898, inlinedAt: !3692)
!3900 = !DILocation(line: 1941, column: 6, scope: !3898, inlinedAt: !3692)
!3901 = !DILocation(line: 1943, column: 3, scope: !3895, inlinedAt: !3692)
!3902 = !DILocation(line: 1944, column: 6, scope: !3666, inlinedAt: !3692)
!3903 = !DILocation(line: 1945, column: 6, scope: !3666, inlinedAt: !3692)
!3904 = !DILocation(line: 1951, column: 7, scope: !3666, inlinedAt: !3692)
!3905 = !DILocation(line: 1952, column: 6, scope: !3666, inlinedAt: !3692)
!3906 = !DILocation(line: 1956, column: 12, scope: !3907, inlinedAt: !3692)
!3907 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1956, column: 10)
!3908 = !DILocation(line: 1956, column: 11, scope: !3907, inlinedAt: !3692)
!3909 = !DILocation(line: 1956, column: 16, scope: !3907, inlinedAt: !3692)
!3910 = !DILocation(line: 1956, column: 22, scope: !3907, inlinedAt: !3692)
!3911 = !DILocation(line: 1956, column: 31, scope: !3907, inlinedAt: !3692)
!3912 = !DILocation(line: 1956, column: 10, scope: !3666, inlinedAt: !3692)
!3913 = !DILocation(line: 1957, column: 7, scope: !3914, inlinedAt: !3692)
!3914 = distinct !DILexicalBlock(scope: !3907, file: !1256, line: 1956, column: 40)
!3915 = !DILocation(line: 1959, column: 15, scope: !3665, inlinedAt: !3692)
!3916 = !DILocation(line: 1959, column: 10, scope: !3666, inlinedAt: !3692)
!3917 = !DILocation(line: 1960, column: 16, scope: !3664, inlinedAt: !3692)
!3918 = !DILocation(line: 0, scope: !3664, inlinedAt: !3692)
!3919 = !DILocation(line: 1961, column: 3, scope: !3664, inlinedAt: !3692)
!3920 = !DILocation(line: 1962, column: 6, scope: !3664, inlinedAt: !3692)
!3921 = !DILocation(line: 1964, column: 3, scope: !3665, inlinedAt: !3692)
!3922 = !DILocation(line: 1968, column: 15, scope: !3666, inlinedAt: !3692)
!3923 = !DILocation(line: 1969, column: 7, scope: !3666, inlinedAt: !3692)
!3924 = !DILocation(line: 1970, column: 6, scope: !3666, inlinedAt: !3692)
!3925 = !DILocation(line: 1975, column: 8, scope: !3926, inlinedAt: !3692)
!3926 = distinct !DILexicalBlock(scope: !3671, file: !1256, line: 1975, column: 7)
!3927 = !DILocation(line: 1975, column: 7, scope: !3926, inlinedAt: !3692)
!3928 = !DILocation(line: 1975, column: 12, scope: !3926, inlinedAt: !3692)
!3929 = !DILocation(line: 1975, column: 7, scope: !3671, inlinedAt: !3692)
!3930 = !DILocation(line: 1976, column: 19, scope: !3931, inlinedAt: !3692)
!3931 = distinct !DILexicalBlock(scope: !3926, file: !1256, line: 1975, column: 21)
!3932 = !DILocation(line: 0, scope: !3671, inlinedAt: !3692)
!3933 = !DILocation(line: 1977, column: 3, scope: !3931, inlinedAt: !3692)
!3934 = !DILocation(line: 1979, column: 7, scope: !3935, inlinedAt: !3692)
!3935 = distinct !DILexicalBlock(scope: !3926, file: !1256, line: 1978, column: 8)
!3936 = !DILocation(line: 1980, column: 19, scope: !3935, inlinedAt: !3692)
!3937 = !DILocation(line: 1983, column: 12, scope: !3935, inlinedAt: !3692)
!3938 = !DILocation(line: 1983, column: 9, scope: !3935, inlinedAt: !3692)
!3939 = !DILocation(line: 0, scope: !3926, inlinedAt: !3692)
!3940 = !DILocation(line: 1985, column: 3, scope: !3671, inlinedAt: !3692)
!3941 = !DILocation(line: 1992, column: 7, scope: !3666, inlinedAt: !3692)
!3942 = !DILocation(line: 1993, column: 10, scope: !3943, inlinedAt: !3692)
!3943 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1993, column: 10)
!3944 = !DILocation(line: 1993, column: 10, scope: !3666, inlinedAt: !3692)
!3945 = !DILocation(line: 1999, column: 12, scope: !3946, inlinedAt: !3692)
!3946 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 1999, column: 10)
!3947 = !DILocation(line: 1999, column: 11, scope: !3946, inlinedAt: !3692)
!3948 = !DILocation(line: 1999, column: 16, scope: !3946, inlinedAt: !3692)
!3949 = !DILocation(line: 1999, column: 19, scope: !3946, inlinedAt: !3692)
!3950 = !DILocation(line: 1999, column: 10, scope: !3666, inlinedAt: !3692)
!3951 = !DILocation(line: 2000, column: 7, scope: !3952, inlinedAt: !3692)
!3952 = distinct !DILexicalBlock(scope: !3946, file: !1256, line: 1999, column: 32)
!3953 = !DILocation(line: 2000, column: 14, scope: !3952, inlinedAt: !3692)
!3954 = !DILocation(line: 2001, column: 3, scope: !3952, inlinedAt: !3692)
!3955 = !DILocation(line: 2005, column: 10, scope: !3956, inlinedAt: !3692)
!3956 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 2005, column: 10)
!3957 = !DILocation(line: 2005, column: 10, scope: !3666, inlinedAt: !3692)
!3958 = !DILocation(line: 2006, column: 3, scope: !3956, inlinedAt: !3692)
!3959 = !DILocation(line: 2007, column: 10, scope: !3960, inlinedAt: !3692)
!3960 = distinct !DILexicalBlock(scope: !3666, file: !1256, line: 2007, column: 10)
!3961 = !DILocation(line: 2007, column: 10, scope: !3666, inlinedAt: !3692)
!3962 = !DILocation(line: 2008, column: 3, scope: !3960, inlinedAt: !3692)
!3963 = !DILocation(line: 2012, column: 6, scope: !3666, inlinedAt: !3692)
!3964 = !DILocation(line: 2013, column: 2, scope: !3666, inlinedAt: !3692)
!3965 = !DILocation(line: 1854, column: 10, scope: !3644, inlinedAt: !3692)
!3966 = !DILocation(line: 1863, column: 21, scope: !3669, inlinedAt: !3692)
!3967 = !DILocation(line: 1863, column: 14, scope: !3669, inlinedAt: !3692)
!3968 = distinct !{!3968, !3850, !3969, !2029, !2030}
!3969 = !DILocation(line: 2014, column: 5, scope: !3669, inlinedAt: !3692)
!3970 = !DILocation(line: 1845, column: 17, scope: !3644, inlinedAt: !3692)
!3971 = !DILocation(line: 2017, column: 3, scope: !3644, inlinedAt: !3692)
!3972 = !DILocation(line: 2098, column: 5, scope: !3644, inlinedAt: !3692)
!3973 = !DILocation(line: 2099, column: 5, scope: !3644, inlinedAt: !3692)
!3974 = !DILocation(line: 2100, column: 5, scope: !3644, inlinedAt: !3692)
!3975 = !DILocation(line: 2142, column: 10, scope: !3976, inlinedAt: !3692)
!3976 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2142, column: 9)
!3977 = !DILocation(line: 2142, column: 9, scope: !3644, inlinedAt: !3692)
!3978 = !DILocation(line: 2143, column: 15, scope: !3976, inlinedAt: !3692)
!3979 = !DILocation(line: 2143, column: 2, scope: !3976, inlinedAt: !3692)
!3980 = !DILocation(line: 2144, column: 9, scope: !3981, inlinedAt: !3692)
!3981 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2144, column: 9)
!3982 = !DILocation(line: 2144, column: 9, scope: !3644, inlinedAt: !3692)
!3983 = !DILocation(line: 2145, column: 6, scope: !3984, inlinedAt: !3692)
!3984 = distinct !DILexicalBlock(scope: !3981, file: !1256, line: 2144, column: 22)
!3985 = !DILocation(line: 2145, column: 13, scope: !3984, inlinedAt: !3692)
!3986 = !DILocation(line: 2147, column: 5, scope: !3984, inlinedAt: !3692)
!3987 = !DILocation(line: 2148, column: 25, scope: !3988, inlinedAt: !3692)
!3988 = distinct !DILexicalBlock(scope: !3981, file: !1256, line: 2148, column: 14)
!3989 = !DILocation(line: 2148, column: 14, scope: !3981, inlinedAt: !3692)
!3990 = !DILocation(line: 0, scope: !3981, inlinedAt: !3692)
!3991 = !DILocation(line: 4359, column: 5, scope: !3992, inlinedAt: !3993)
!3992 = distinct !DISubprogram(name: "S_init_perllib", scope: !1256, file: !1256, line: 4355, type: !1276, scopeLine: 4356, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1309)
!3993 = distinct !DILocation(line: 2157, column: 5, scope: !3644, inlinedAt: !3692)
!3994 = !DILocation(line: 4360, column: 5, scope: !3992, inlinedAt: !3993)
!3995 = !DILocation(line: 0, scope: !3675, inlinedAt: !3692)
!3996 = !DILocation(line: 2162, column: 9, scope: !3675, inlinedAt: !3692)
!3997 = !DILocalVariable(name: "scriptname", arg: 1, scope: !3998, file: !1256, line: 3702, type: !876)
!3998 = distinct !DISubprogram(name: "S_open_script", scope: !1256, file: !1256, line: 3702, type: !3999, scopeLine: 3703, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4001)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!650, !876, !795, !925}
!4001 = !{!3997, !4002, !4003, !4004, !4005, !4006, !4040, !4041, !4044}
!4002 = !DILocalVariable(name: "dosearch", arg: 2, scope: !3998, file: !1256, line: 3702, type: !795)
!4003 = !DILocalVariable(name: "suidscript", arg: 3, scope: !3998, file: !1256, line: 3702, type: !925)
!4004 = !DILocalVariable(name: "fdscript", scope: !3998, file: !1256, line: 3704, type: !477)
!4005 = !DILocalVariable(name: "rsfp", scope: !3998, file: !1256, line: 3705, type: !650)
!4006 = !DILocalVariable(name: "tmpstatbuf", scope: !3998, file: !1256, line: 3706, type: !4007)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !4008, line: 46, size: 1152, elements: !4009)
!4008 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "", checksumkind: CSK_MD5, checksum: "f8d5b541c4f89219f8e8ff8c3e2940d9")
!4009 = !{!4010, !4012, !4014, !4016, !4018, !4019, !4020, !4021, !4022, !4024, !4026, !4028, !4036, !4037, !4038}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4007, file: !4008, line: 48, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !827, line: 145, baseType: !547)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4007, file: !4008, line: 53, baseType: !4013, size: 64, offset: 64)
!4013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !827, line: 148, baseType: !547)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4007, file: !4008, line: 61, baseType: !4015, size: 64, offset: 128)
!4015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !827, line: 151, baseType: !547)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4007, file: !4008, line: 62, baseType: !4017, size: 32, offset: 192)
!4017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !827, line: 150, baseType: !7)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4007, file: !4008, line: 64, baseType: !1470, size: 32, offset: 224)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4007, file: !4008, line: 65, baseType: !1475, size: 32, offset: 256)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4007, file: !4008, line: 67, baseType: !477, size: 32, offset: 288)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4007, file: !4008, line: 69, baseType: !4011, size: 64, offset: 320)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4007, file: !4008, line: 74, baseType: !4023, size: 64, offset: 384)
!4023 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !827, line: 152, baseType: !544)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4007, file: !4008, line: 78, baseType: !4025, size: 64, offset: 448)
!4025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !827, line: 174, baseType: !544)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4007, file: !4008, line: 80, baseType: !4027, size: 64, offset: 512)
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !827, line: 179, baseType: !544)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4007, file: !4008, line: 91, baseType: !4029, size: 128, offset: 576)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4030, line: 10, size: 128, elements: !4031)
!4030 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "", checksumkind: CSK_MD5, checksum: "33f28095c70788baa6982a79b13f774b")
!4031 = !{!4032, !4034}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4029, file: !4030, line: 12, baseType: !4033, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !827, line: 160, baseType: !544)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4029, file: !4030, line: 16, baseType: !4035, size: 64, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !827, line: 196, baseType: !544)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4007, file: !4008, line: 92, baseType: !4029, size: 128, offset: 704)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4007, file: !4008, line: 93, baseType: !4029, size: 128, offset: 832)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4007, file: !4008, line: 106, baseType: !4039, size: 192, offset: 960)
!4039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4035, size: 192, elements: !946)
!4040 = !DILocalVariable(name: "fd", scope: !3998, file: !1256, line: 3707, type: !477)
!4041 = !DILocalVariable(name: "s", scope: !4042, file: !1256, line: 3715, type: !876)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !1256, line: 3714, column: 10)
!4043 = distinct !DILexicalBlock(scope: !3998, file: !1256, line: 3711, column: 9)
!4044 = !DILocalVariable(name: "uv", scope: !4042, file: !1256, line: 3716, type: !546)
!4045 = !DILocation(line: 0, scope: !3998, inlinedAt: !4046)
!4046 = distinct !DILocation(line: 2162, column: 9, scope: !3675, inlinedAt: !3692)
!4047 = !DILocation(line: 3706, column: 5, scope: !3998, inlinedAt: !4046)
!4048 = !DILocation(line: 3706, column: 12, scope: !3998, inlinedAt: !4046)
!4049 = !DILocation(line: 3711, column: 9, scope: !4043, inlinedAt: !4046)
!4050 = !DILocation(line: 3711, column: 9, scope: !3998, inlinedAt: !4046)
!4051 = !DILocation(line: 3712, column: 20, scope: !4052, inlinedAt: !4046)
!4052 = distinct !DILexicalBlock(scope: !4043, file: !1256, line: 3711, column: 22)
!4053 = !DILocation(line: 3712, column: 18, scope: !4052, inlinedAt: !4046)
!4054 = !DILocation(line: 3713, column: 5, scope: !4052, inlinedAt: !4046)
!4055 = !DILocation(line: 3715, column: 9, scope: !4042, inlinedAt: !4046)
!4056 = !DILocation(line: 3716, column: 9, scope: !4042, inlinedAt: !4046)
!4057 = !DILocation(line: 3718, column: 33, scope: !4042, inlinedAt: !4046)
!4058 = !DILocation(line: 3718, column: 31, scope: !4042, inlinedAt: !4046)
!4059 = !DILocation(line: 3720, column: 6, scope: !4060, inlinedAt: !4046)
!4060 = distinct !DILexicalBlock(scope: !4042, file: !1256, line: 3720, column: 6)
!4061 = !DILocation(line: 3721, column: 13, scope: !4060, inlinedAt: !4046)
!4062 = !DILocation(line: 3721, column: 16, scope: !4060, inlinedAt: !4046)
!4063 = !DILocation(line: 3722, column: 13, scope: !4060, inlinedAt: !4046)
!4064 = !DILocation(line: 0, scope: !4042, inlinedAt: !4046)
!4065 = !DILocation(line: 3722, column: 16, scope: !4060, inlinedAt: !4046)
!4066 = !DILocation(line: 3723, column: 13, scope: !4060, inlinedAt: !4046)
!4067 = !DILocation(line: 3725, column: 24, scope: !4068, inlinedAt: !4046)
!4068 = distinct !DILexicalBlock(scope: !4060, file: !1256, line: 3724, column: 11)
!4069 = !DILocation(line: 3726, column: 11, scope: !4070, inlinedAt: !4046)
!4070 = distinct !DILexicalBlock(scope: !4068, file: !1256, line: 3726, column: 10)
!4071 = !DILocation(line: 3726, column: 10, scope: !4070, inlinedAt: !4046)
!4072 = !DILocation(line: 3726, column: 10, scope: !4068, inlinedAt: !4046)
!4073 = !DILocation(line: 3742, column: 7, scope: !4074, inlinedAt: !4046)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !1256, line: 3741, column: 18)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !1256, line: 3741, column: 7)
!4076 = distinct !DILexicalBlock(scope: !4070, file: !1256, line: 3726, column: 14)
!4077 = !DILocation(line: 3744, column: 11, scope: !4078, inlinedAt: !4046)
!4078 = distinct !DILexicalBlock(scope: !4076, file: !1256, line: 3744, column: 7)
!4079 = !DILocation(line: 3743, column: 3, scope: !4074, inlinedAt: !4046)
!4080 = !DILocation(line: 3744, column: 12, scope: !4078, inlinedAt: !4046)
!4081 = !DILocation(line: 3744, column: 9, scope: !4078, inlinedAt: !4046)
!4082 = !DILocation(line: 3744, column: 7, scope: !4076, inlinedAt: !4046)
!4083 = !DILocation(line: 3745, column: 7, scope: !4084, inlinedAt: !4046)
!4084 = distinct !DILexicalBlock(scope: !4078, file: !1256, line: 3744, column: 17)
!4085 = !DILocation(line: 3747, column: 16, scope: !4076, inlinedAt: !4046)
!4086 = !DILocation(line: 3746, column: 3, scope: !4084, inlinedAt: !4046)
!4087 = !DILocation(line: 3748, column: 3, scope: !4076, inlinedAt: !4046)
!4088 = !DILocation(line: 3749, column: 19, scope: !4076, inlinedAt: !4046)
!4089 = !DILocation(line: 3750, column: 6, scope: !4076, inlinedAt: !4046)
!4090 = !DILocation(line: 3752, column: 5, scope: !4043, inlinedAt: !4046)
!4091 = !DILocation(line: 3704, column: 9, scope: !3998, inlinedAt: !4046)
!4092 = !DILocation(line: 3754, column: 5, scope: !3998, inlinedAt: !4046)
!4093 = !DILocation(line: 0, scope: !1968, inlinedAt: !4094)
!4094 = distinct !DILocation(line: 3754, column: 5, scope: !3998, inlinedAt: !4046)
!4095 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !4094)
!4096 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !4094)
!4097 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !4094)
!4098 = !DILocation(line: 0, scope: !1974, inlinedAt: !4094)
!4099 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !4094)
!4100 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !4094)
!4101 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !4094)
!4102 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !4094)
!4103 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !4094)
!4104 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !4094)
!4105 = !DILocation(line: 3755, column: 5, scope: !3998, inlinedAt: !4046)
!4106 = !DILocation(line: 0, scope: !3393, inlinedAt: !4107)
!4107 = distinct !DILocation(line: 3755, column: 5, scope: !3998, inlinedAt: !4046)
!4108 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !4107)
!4109 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !4107)
!4110 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4107)
!4111 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4107)
!4112 = !DILocation(line: 3756, column: 10, scope: !4113, inlinedAt: !4046)
!4113 = distinct !DILexicalBlock(scope: !3998, file: !1256, line: 3756, column: 9)
!4114 = !DILocation(line: 3756, column: 9, scope: !4113, inlinedAt: !4046)
!4115 = !DILocation(line: 3756, column: 26, scope: !4113, inlinedAt: !4046)
!4116 = !DILocation(line: 3756, column: 33, scope: !4113, inlinedAt: !4046)
!4117 = !DILocation(line: 3756, column: 36, scope: !4113, inlinedAt: !4046)
!4118 = !DILocation(line: 3756, column: 55, scope: !4113, inlinedAt: !4046)
!4119 = !DILocation(line: 3756, column: 9, scope: !3998, inlinedAt: !4046)
!4120 = !DILocation(line: 3758, column: 18, scope: !4121, inlinedAt: !4046)
!4121 = distinct !DILexicalBlock(scope: !3998, file: !1256, line: 3758, column: 9)
!4122 = !DILocation(line: 3758, column: 9, scope: !3998, inlinedAt: !4046)
!4123 = !DILocation(line: 3759, column: 9, scope: !4124, inlinedAt: !4046)
!4124 = distinct !DILexicalBlock(scope: !4121, file: !1256, line: 3758, column: 24)
!4125 = !DILocation(line: 3760, column: 5, scope: !4124, inlinedAt: !4046)
!4126 = !DILocation(line: 3761, column: 15, scope: !4127, inlinedAt: !4046)
!4127 = distinct !DILexicalBlock(scope: !4121, file: !1256, line: 3761, column: 14)
!4128 = !DILocation(line: 3761, column: 14, scope: !4121, inlinedAt: !4046)
!4129 = !DILocation(line: 3837, column: 1, scope: !3998, inlinedAt: !4046)
!4130 = !DILocation(line: 2163, column: 6, scope: !3675, inlinedAt: !3692)
!4131 = !DILocation(line: 3800, column: 9, scope: !4132, inlinedAt: !4046)
!4132 = distinct !DILexicalBlock(scope: !4127, file: !1256, line: 3765, column: 10)
!4133 = !DILocation(line: 0, scope: !4121, inlinedAt: !4046)
!4134 = !DILocation(line: 3810, column: 10, scope: !4135, inlinedAt: !4046)
!4135 = distinct !DILexicalBlock(scope: !3998, file: !1256, line: 3810, column: 9)
!4136 = !DILocation(line: 3810, column: 9, scope: !3998, inlinedAt: !4046)
!4137 = !DILocation(line: 3812, column: 6, scope: !4138, inlinedAt: !4046)
!4138 = distinct !DILexicalBlock(scope: !4139, file: !1256, line: 3812, column: 6)
!4139 = distinct !DILexicalBlock(scope: !4135, file: !1256, line: 3810, column: 16)
!4140 = !DILocation(line: 3812, column: 6, scope: !4139, inlinedAt: !4046)
!4141 = !DILocation(line: 3813, column: 56, scope: !4138, inlinedAt: !4046)
!4142 = !DILocation(line: 3813, column: 6, scope: !4138, inlinedAt: !4046)
!4143 = !DILocation(line: 3816, column: 7, scope: !4138, inlinedAt: !4046)
!4144 = !DILocation(line: 3816, column: 27, scope: !4138, inlinedAt: !4046)
!4145 = !DILocation(line: 3815, column: 6, scope: !4138, inlinedAt: !4046)
!4146 = !DILocation(line: 3818, column: 10, scope: !3998, inlinedAt: !4046)
!4147 = !DILocation(line: 3820, column: 12, scope: !4148, inlinedAt: !4046)
!4148 = distinct !DILexicalBlock(scope: !3998, file: !1256, line: 3820, column: 9)
!4149 = !DILocation(line: 3820, column: 9, scope: !3998, inlinedAt: !4046)
!4150 = !DILocation(line: 3822, column: 13, scope: !4151, inlinedAt: !4046)
!4151 = distinct !DILexicalBlock(scope: !4152, file: !1256, line: 3822, column: 13)
!4152 = distinct !DILexicalBlock(scope: !4148, file: !1256, line: 3820, column: 18)
!4153 = !DILocation(line: 3822, column: 35, scope: !4151, inlinedAt: !4046)
!4154 = !DILocation(line: 3822, column: 13, scope: !4152, inlinedAt: !4046)
!4155 = !DILocation(line: 3824, column: 24, scope: !4156, inlinedAt: !4046)
!4156 = distinct !DILexicalBlock(scope: !4151, file: !1256, line: 3822, column: 40)
!4157 = !DILocation(line: 3824, column: 44, scope: !4156, inlinedAt: !4046)
!4158 = !DILocation(line: 3823, column: 13, scope: !4156, inlinedAt: !4046)
!4159 = !DILocation(line: 3825, column: 9, scope: !4156, inlinedAt: !4046)
!4160 = !DILocalVariable(name: "__fd", arg: 1, scope: !4161, file: !4162, line: 467, type: !477)
!4161 = distinct !DISubprogram(name: "fstat", scope: !4162, file: !4162, line: 467, type: !4163, scopeLine: 468, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4166)
!4162 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "", checksumkind: CSK_MD5, checksum: "461013b06495e219438a7cca03a67307")
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!477, !477, !4165}
!4165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4166 = !{!4160, !4167}
!4167 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4161, file: !4162, line: 467, type: !4165)
!4168 = !DILocation(line: 0, scope: !4161, inlinedAt: !4169)
!4169 = distinct !DILocation(line: 3830, column: 10, scope: !4170, inlinedAt: !4046)
!4170 = distinct !DILexicalBlock(scope: !3998, file: !1256, line: 3829, column: 9)
!4171 = !DILocation(line: 469, column: 10, scope: !4161, inlinedAt: !4169)
!4172 = !DILocation(line: 3830, column: 41, scope: !4170, inlinedAt: !4046)
!4173 = !DILocation(line: 3831, column: 10, scope: !4170, inlinedAt: !4046)
!4174 = !DILocation(line: 3831, column: 13, scope: !4170, inlinedAt: !4046)
!4175 = !DILocation(line: 3829, column: 9, scope: !3998, inlinedAt: !4046)
!4176 = !DILocation(line: 3833, column: 13, scope: !4170, inlinedAt: !4046)
!4177 = !DILocation(line: 3834, column: 13, scope: !4170, inlinedAt: !4046)
!4178 = !DILocation(line: 3832, column: 9, scope: !4170, inlinedAt: !4046)
!4179 = !DILocation(line: 2164, column: 13, scope: !4180, inlinedAt: !3692)
!4180 = distinct !DILexicalBlock(scope: !4181, file: !1256, line: 2163, column: 13)
!4181 = distinct !DILexicalBlock(scope: !3675, file: !1256, line: 2163, column: 6)
!4182 = !DILocation(line: 2166, column: 2, scope: !4180, inlinedAt: !3692)
!4183 = !DILocation(line: 2176, column: 30, scope: !3677, inlinedAt: !3692)
!4184 = !DILocation(line: 0, scope: !3677, inlinedAt: !3692)
!4185 = !DILocation(line: 2177, column: 19, scope: !4186, inlinedAt: !3692)
!4186 = distinct !DILexicalBlock(scope: !3677, file: !1256, line: 2177, column: 10)
!4187 = !DILocation(line: 2177, column: 10, scope: !3677, inlinedAt: !3692)
!4188 = !DILocation(line: 2178, column: 3, scope: !4189, inlinedAt: !3692)
!4189 = distinct !DILexicalBlock(scope: !4186, file: !1256, line: 2177, column: 46)
!4190 = !DILocation(line: 2180, column: 9, scope: !4189, inlinedAt: !3692)
!4191 = !DILocation(line: 2181, column: 6, scope: !4189, inlinedAt: !3692)
!4192 = !DILocation(line: 2186, column: 6, scope: !4193, inlinedAt: !3692)
!4193 = distinct !DILexicalBlock(scope: !3675, file: !1256, line: 2186, column: 6)
!4194 = !DILocation(line: 2186, column: 6, scope: !3675, inlinedAt: !3692)
!4195 = !DILocation(line: 2193, column: 19, scope: !4196, inlinedAt: !3692)
!4196 = distinct !DILexicalBlock(scope: !4193, file: !1256, line: 2186, column: 17)
!4197 = !DILocation(line: 2194, column: 22, scope: !4196, inlinedAt: !3692)
!4198 = !DILocalVariable(name: "linestr_sv", arg: 1, scope: !4199, file: !1256, line: 3883, type: !530)
!4199 = distinct !DISubprogram(name: "S_find_beginning", scope: !1256, file: !1256, line: 3883, type: !4200, scopeLine: 3884, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4202)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{null, !530, !650}
!4202 = !{!4198, !4203, !4204, !4205}
!4203 = !DILocalVariable(name: "rsfp", arg: 2, scope: !4199, file: !1256, line: 3883, type: !650)
!4204 = !DILocalVariable(name: "s", scope: !4199, file: !1256, line: 3885, type: !876)
!4205 = !DILocalVariable(name: "s2", scope: !4199, file: !1256, line: 3886, type: !876)
!4206 = !DILocation(line: 0, scope: !4199, inlinedAt: !4207)
!4207 = distinct !DILocation(line: 2195, column: 6, scope: !4196, inlinedAt: !3692)
!4208 = !DILocation(line: 3892, column: 5, scope: !4199, inlinedAt: !4207)
!4209 = !DILocation(line: 3893, column: 11, scope: !4210, inlinedAt: !4207)
!4210 = distinct !DILexicalBlock(scope: !4211, file: !1256, line: 3893, column: 6)
!4211 = distinct !DILexicalBlock(scope: !4199, file: !1256, line: 3892, column: 8)
!4212 = !DILocation(line: 3893, column: 41, scope: !4210, inlinedAt: !4207)
!4213 = !DILocation(line: 3893, column: 6, scope: !4211, inlinedAt: !4207)
!4214 = !DILocation(line: 3894, column: 6, scope: !4210, inlinedAt: !4207)
!4215 = !DILocation(line: 3896, column: 16, scope: !4199, inlinedAt: !4207)
!4216 = !DILocation(line: 3896, column: 19, scope: !4199, inlinedAt: !4207)
!4217 = !DILocation(line: 3896, column: 26, scope: !4199, inlinedAt: !4207)
!4218 = !DILocation(line: 3896, column: 29, scope: !4199, inlinedAt: !4207)
!4219 = !DILocation(line: 3896, column: 34, scope: !4199, inlinedAt: !4207)
!4220 = !DILocation(line: 3896, column: 41, scope: !4199, inlinedAt: !4207)
!4221 = !DILocation(line: 3896, column: 50, scope: !4199, inlinedAt: !4207)
!4222 = !DILocation(line: 3896, column: 48, scope: !4199, inlinedAt: !4207)
!4223 = !DILocation(line: 3896, column: 67, scope: !4199, inlinedAt: !4207)
!4224 = !DILocation(line: 3896, column: 75, scope: !4199, inlinedAt: !4207)
!4225 = !DILocation(line: 3896, column: 5, scope: !4211, inlinedAt: !4207)
!4226 = distinct !{!4226, !4208, !4227, !2029, !2030}
!4227 = !DILocation(line: 3896, column: 94, scope: !4199, inlinedAt: !4207)
!4228 = !DILocation(line: 3897, column: 5, scope: !4199, inlinedAt: !4207)
!4229 = !DILocation(line: 3898, column: 12, scope: !4199, inlinedAt: !4207)
!4230 = !DILocation(line: 3898, column: 15, scope: !4199, inlinedAt: !4207)
!4231 = !DILocation(line: 3898, column: 20, scope: !4199, inlinedAt: !4207)
!4232 = !DILocation(line: 3898, column: 33, scope: !4199, inlinedAt: !4207)
!4233 = !DILocation(line: 3898, column: 5, scope: !4199, inlinedAt: !4207)
!4234 = !DILocation(line: 3898, column: 49, scope: !4199, inlinedAt: !4207)
!4235 = distinct !{!4235, !4233, !4234, !2029, !2030}
!4236 = !DILocation(line: 3900, column: 5, scope: !4199, inlinedAt: !4207)
!4237 = !DILocation(line: 3900, column: 12, scope: !4199, inlinedAt: !4207)
!4238 = !DILocation(line: 3900, column: 22, scope: !4199, inlinedAt: !4207)
!4239 = !DILocation(line: 3900, column: 38, scope: !4199, inlinedAt: !4207)
!4240 = distinct !{!4240, !4236, !4239, !2029, !2030}
!4241 = !DILocation(line: 3901, column: 11, scope: !4242, inlinedAt: !4207)
!4242 = distinct !DILexicalBlock(scope: !4199, file: !1256, line: 3901, column: 9)
!4243 = !DILocation(line: 3901, column: 14, scope: !4242, inlinedAt: !4207)
!4244 = !DILocation(line: 3901, column: 9, scope: !4199, inlinedAt: !4207)
!4245 = !DILocation(line: 3902, column: 9, scope: !4246, inlinedAt: !4207)
!4246 = distinct !DILexicalBlock(scope: !4242, file: !1256, line: 3901, column: 22)
!4247 = !DILocation(line: 3902, column: 25, scope: !4246, inlinedAt: !4207)
!4248 = distinct !{!4248, !4249, !4250, !2029, !2030}
!4249 = !DILocation(line: 3902, column: 2, scope: !4246, inlinedAt: !4207)
!4250 = !DILocation(line: 3903, column: 29, scope: !4246, inlinedAt: !4207)
!4251 = !DILocation(line: 3904, column: 6, scope: !4252, inlinedAt: !4207)
!4252 = distinct !DILexicalBlock(scope: !4246, file: !1256, line: 3904, column: 6)
!4253 = !DILocation(line: 3904, column: 6, scope: !4246, inlinedAt: !4207)
!4254 = !DILocation(line: 0, scope: !4242, inlinedAt: !4207)
!4255 = !DILocation(line: 3905, column: 18, scope: !4252, inlinedAt: !4207)
!4256 = !DILocation(line: 3905, column: 6, scope: !4252, inlinedAt: !4207)
!4257 = distinct !{!4257, !4256, !4258, !2029, !2030}
!4258 = !DILocation(line: 3906, column: 3, scope: !4252, inlinedAt: !4207)
!4259 = !DILocation(line: 2196, column: 10, scope: !4260, inlinedAt: !3692)
!4260 = distinct !DILexicalBlock(scope: !4196, file: !1256, line: 2196, column: 10)
!4261 = !DILocation(line: 2196, column: 16, scope: !4260, inlinedAt: !3692)
!4262 = !DILocation(line: 2196, column: 19, scope: !4260, inlinedAt: !3692)
!4263 = !DILocation(line: 2196, column: 50, scope: !4260, inlinedAt: !3692)
!4264 = !DILocation(line: 2196, column: 10, scope: !4196, inlinedAt: !3692)
!4265 = !DILocation(line: 2197, column: 3, scope: !4260, inlinedAt: !3692)
!4266 = !DILocation(line: 2201, column: 30, scope: !3644, inlinedAt: !3692)
!4267 = !DILocation(line: 2201, column: 28, scope: !3644, inlinedAt: !3692)
!4268 = !DILocation(line: 2201, column: 16, scope: !3644, inlinedAt: !3692)
!4269 = !DILocation(line: 2202, column: 5, scope: !3644, inlinedAt: !3692)
!4270 = !DILocation(line: 2204, column: 5, scope: !3644, inlinedAt: !3692)
!4271 = !DILocation(line: 2206, column: 17, scope: !3644, inlinedAt: !3692)
!4272 = !DILocation(line: 2206, column: 15, scope: !3644, inlinedAt: !3692)
!4273 = !DILocation(line: 2208, column: 5, scope: !3644, inlinedAt: !3692)
!4274 = !DILocation(line: 2209, column: 5, scope: !3644, inlinedAt: !3692)
!4275 = !DILocation(line: 2210, column: 5, scope: !3644, inlinedAt: !3692)
!4276 = !DILocation(line: 2211, column: 5, scope: !3644, inlinedAt: !3692)
!4277 = !DILocation(line: 2213, column: 9, scope: !4278, inlinedAt: !3692)
!4278 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2213, column: 9)
!4279 = !DILocation(line: 2213, column: 9, scope: !3644, inlinedAt: !3692)
!4280 = !DILocation(line: 2214, column: 2, scope: !4278, inlinedAt: !3692)
!4281 = !DILocation(line: 0, scope: !3833, inlinedAt: !4282)
!4282 = distinct !DILocation(line: 4175, column: 5, scope: !4283, inlinedAt: !4287)
!4283 = distinct !DISubprogram(name: "S_init_predump_symbols", scope: !1256, file: !1256, line: 4170, type: !1276, scopeLine: 4171, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4284)
!4284 = !{!4285, !4286}
!4285 = !DILocalVariable(name: "tmpgv", scope: !4283, file: !1256, line: 4172, type: !670)
!4286 = !DILocalVariable(name: "io", scope: !4283, file: !1256, line: 4173, type: !1156)
!4287 = distinct !DILocation(line: 2229, column: 5, scope: !3644, inlinedAt: !3692)
!4288 = !DILocation(line: 2492, column: 10, scope: !3833, inlinedAt: !4282)
!4289 = !DILocation(line: 2493, column: 9, scope: !3843, inlinedAt: !4282)
!4290 = !DILocation(line: 2493, column: 9, scope: !3833, inlinedAt: !4282)
!4291 = !DILocation(line: 2494, column: 9, scope: !3843, inlinedAt: !4282)
!4292 = !DILocation(line: 2494, column: 2, scope: !3843, inlinedAt: !4282)
!4293 = !DILocation(line: 4175, column: 5, scope: !4283, inlinedAt: !4287)
!4294 = !DILocation(line: 4176, column: 21, scope: !4283, inlinedAt: !4287)
!4295 = !DILocation(line: 0, scope: !3393, inlinedAt: !4296)
!4296 = distinct !DILocation(line: 4176, column: 21, scope: !4283, inlinedAt: !4287)
!4297 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !4296)
!4298 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !4296)
!4299 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4296)
!4300 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4296)
!4301 = !DILocation(line: 4176, column: 14, scope: !4283, inlinedAt: !4287)
!4302 = !DILocation(line: 4192, column: 5, scope: !4283, inlinedAt: !4287)
!4303 = !DILocation(line: 4198, column: 18, scope: !4283, inlinedAt: !4287)
!4304 = !DILocation(line: 4198, column: 16, scope: !4283, inlinedAt: !4287)
!4305 = !DILocation(line: 4199, column: 5, scope: !4283, inlinedAt: !4287)
!4306 = !DILocation(line: 4200, column: 10, scope: !4283, inlinedAt: !4287)
!4307 = !DILocation(line: 0, scope: !4283, inlinedAt: !4287)
!4308 = !DILocation(line: 4201, column: 5, scope: !4283, inlinedAt: !4287)
!4309 = !DILocation(line: 4201, column: 16, scope: !4283, inlinedAt: !4287)
!4310 = !DILocation(line: 4202, column: 17, scope: !4283, inlinedAt: !4287)
!4311 = !DILocation(line: 4202, column: 5, scope: !4283, inlinedAt: !4287)
!4312 = !DILocation(line: 4202, column: 15, scope: !4283, inlinedAt: !4287)
!4313 = !DILocation(line: 4203, column: 13, scope: !4283, inlinedAt: !4287)
!4314 = !DILocation(line: 4204, column: 5, scope: !4283, inlinedAt: !4287)
!4315 = !DILocation(line: 0, scope: !3393, inlinedAt: !4316)
!4316 = distinct !DILocation(line: 4205, column: 20, scope: !4283, inlinedAt: !4287)
!4317 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4316)
!4318 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4316)
!4319 = !DILocation(line: 4205, column: 5, scope: !4283, inlinedAt: !4287)
!4320 = !DILocation(line: 4205, column: 18, scope: !4283, inlinedAt: !4287)
!4321 = !DILocation(line: 4207, column: 13, scope: !4283, inlinedAt: !4287)
!4322 = !DILocation(line: 4208, column: 5, scope: !4283, inlinedAt: !4287)
!4323 = !DILocation(line: 4209, column: 10, scope: !4283, inlinedAt: !4287)
!4324 = !DILocation(line: 4210, column: 5, scope: !4283, inlinedAt: !4287)
!4325 = !DILocation(line: 4210, column: 16, scope: !4283, inlinedAt: !4287)
!4326 = !DILocation(line: 4211, column: 29, scope: !4283, inlinedAt: !4287)
!4327 = !DILocation(line: 4211, column: 17, scope: !4283, inlinedAt: !4287)
!4328 = !DILocation(line: 4211, column: 27, scope: !4283, inlinedAt: !4287)
!4329 = !DILocation(line: 4211, column: 5, scope: !4283, inlinedAt: !4287)
!4330 = !DILocation(line: 4211, column: 15, scope: !4283, inlinedAt: !4287)
!4331 = !DILocation(line: 4212, column: 5, scope: !4283, inlinedAt: !4287)
!4332 = !DILocation(line: 4213, column: 13, scope: !4283, inlinedAt: !4287)
!4333 = !DILocation(line: 4214, column: 5, scope: !4283, inlinedAt: !4287)
!4334 = !DILocation(line: 0, scope: !3393, inlinedAt: !4335)
!4335 = distinct !DILocation(line: 4215, column: 20, scope: !4283, inlinedAt: !4287)
!4336 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4335)
!4337 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4335)
!4338 = !DILocation(line: 4215, column: 5, scope: !4283, inlinedAt: !4287)
!4339 = !DILocation(line: 4215, column: 18, scope: !4283, inlinedAt: !4287)
!4340 = !DILocation(line: 4217, column: 19, scope: !4283, inlinedAt: !4287)
!4341 = !DILocation(line: 4217, column: 17, scope: !4283, inlinedAt: !4287)
!4342 = !DILocation(line: 4218, column: 5, scope: !4283, inlinedAt: !4287)
!4343 = !DILocation(line: 4219, column: 10, scope: !4283, inlinedAt: !4287)
!4344 = !DILocation(line: 4220, column: 5, scope: !4283, inlinedAt: !4287)
!4345 = !DILocation(line: 4220, column: 16, scope: !4283, inlinedAt: !4287)
!4346 = !DILocation(line: 4221, column: 29, scope: !4283, inlinedAt: !4287)
!4347 = !DILocation(line: 4221, column: 17, scope: !4283, inlinedAt: !4287)
!4348 = !DILocation(line: 4221, column: 27, scope: !4283, inlinedAt: !4287)
!4349 = !DILocation(line: 4221, column: 5, scope: !4283, inlinedAt: !4287)
!4350 = !DILocation(line: 4221, column: 15, scope: !4283, inlinedAt: !4287)
!4351 = !DILocation(line: 4222, column: 13, scope: !4283, inlinedAt: !4287)
!4352 = !DILocation(line: 4223, column: 5, scope: !4283, inlinedAt: !4287)
!4353 = !DILocation(line: 0, scope: !3393, inlinedAt: !4354)
!4354 = distinct !DILocation(line: 4224, column: 20, scope: !4283, inlinedAt: !4287)
!4355 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4354)
!4356 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4354)
!4357 = !DILocation(line: 4224, column: 5, scope: !4283, inlinedAt: !4287)
!4358 = !DILocation(line: 4224, column: 18, scope: !4283, inlinedAt: !4287)
!4359 = !DILocation(line: 4226, column: 19, scope: !4283, inlinedAt: !4287)
!4360 = !DILocation(line: 4226, column: 17, scope: !4283, inlinedAt: !4287)
!4361 = !DILocation(line: 2233, column: 10, scope: !4362, inlinedAt: !3692)
!4362 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2233, column: 9)
!4363 = !DILocation(line: 2233, column: 9, scope: !3644, inlinedAt: !3692)
!4364 = !DILocation(line: 2234, column: 2, scope: !4362, inlinedAt: !3692)
!4365 = !DILocation(line: 2244, column: 9, scope: !3682, inlinedAt: !3692)
!4366 = !DILocation(line: 2244, column: 9, scope: !3644, inlinedAt: !3692)
!4367 = !DILocation(line: 2246, column: 20, scope: !3680, inlinedAt: !3692)
!4368 = !DILocation(line: 2246, column: 48, scope: !3680, inlinedAt: !3692)
!4369 = !DILocation(line: 2253, column: 24, scope: !4370, inlinedAt: !3692)
!4370 = distinct !DILexicalBlock(scope: !3679, file: !1256, line: 2253, column: 12)
!4371 = !DILocation(line: 2253, column: 51, scope: !4370, inlinedAt: !3692)
!4372 = !DILocation(line: 2254, column: 26, scope: !4370, inlinedAt: !3692)
!4373 = !DILocation(line: 0, scope: !3679, inlinedAt: !3692)
!4374 = !DILocation(line: 2254, column: 24, scope: !4370, inlinedAt: !3692)
!4375 = !DILocation(line: 2254, column: 44, scope: !4370, inlinedAt: !3692)
!4376 = !DILocation(line: 2255, column: 11, scope: !4370, inlinedAt: !3692)
!4377 = !DILocation(line: 2255, column: 9, scope: !4370, inlinedAt: !3692)
!4378 = !DILocation(line: 2253, column: 12, scope: !3679, inlinedAt: !3692)
!4379 = !DILocation(line: 2256, column: 31, scope: !4370, inlinedAt: !3692)
!4380 = !DILocation(line: 2256, column: 6, scope: !4370, inlinedAt: !3692)
!4381 = !DILocation(line: 2257, column: 13, scope: !4382, inlinedAt: !3692)
!4382 = distinct !DILexicalBlock(scope: !3679, file: !1256, line: 2257, column: 12)
!4383 = !DILocation(line: 2257, column: 24, scope: !4382, inlinedAt: !3692)
!4384 = !DILocation(line: 2257, column: 52, scope: !4382, inlinedAt: !3692)
!4385 = !DILocation(line: 2258, column: 26, scope: !4382, inlinedAt: !3692)
!4386 = !DILocation(line: 2258, column: 24, scope: !4382, inlinedAt: !3692)
!4387 = !DILocation(line: 2258, column: 45, scope: !4382, inlinedAt: !3692)
!4388 = !DILocation(line: 2259, column: 11, scope: !4382, inlinedAt: !3692)
!4389 = !DILocation(line: 2259, column: 9, scope: !4382, inlinedAt: !3692)
!4390 = !DILocation(line: 2257, column: 12, scope: !3679, inlinedAt: !3692)
!4391 = !DILocation(line: 2260, column: 31, scope: !4382, inlinedAt: !3692)
!4392 = !DILocation(line: 2260, column: 6, scope: !4382, inlinedAt: !3692)
!4393 = !DILocation(line: 2261, column: 13, scope: !4394, inlinedAt: !3692)
!4394 = distinct !DILexicalBlock(scope: !3679, file: !1256, line: 2261, column: 12)
!4395 = !DILocation(line: 2261, column: 24, scope: !4394, inlinedAt: !3692)
!4396 = !DILocation(line: 2261, column: 52, scope: !4394, inlinedAt: !3692)
!4397 = !DILocation(line: 2262, column: 26, scope: !4394, inlinedAt: !3692)
!4398 = !DILocation(line: 2262, column: 24, scope: !4394, inlinedAt: !3692)
!4399 = !DILocation(line: 2262, column: 45, scope: !4394, inlinedAt: !3692)
!4400 = !DILocation(line: 2263, column: 11, scope: !4394, inlinedAt: !3692)
!4401 = !DILocation(line: 2263, column: 9, scope: !4394, inlinedAt: !3692)
!4402 = !DILocation(line: 2261, column: 12, scope: !3679, inlinedAt: !3692)
!4403 = !DILocation(line: 2264, column: 31, scope: !4394, inlinedAt: !3692)
!4404 = !DILocation(line: 2264, column: 6, scope: !4394, inlinedAt: !3692)
!4405 = !DILocation(line: 2265, column: 13, scope: !3687, inlinedAt: !3692)
!4406 = !DILocation(line: 2265, column: 24, scope: !3687, inlinedAt: !3692)
!4407 = !DILocation(line: 2265, column: 51, scope: !3687, inlinedAt: !3692)
!4408 = !DILocation(line: 2266, column: 11, scope: !3687, inlinedAt: !3692)
!4409 = !DILocation(line: 2266, column: 9, scope: !3687, inlinedAt: !3692)
!4410 = !DILocation(line: 2265, column: 12, scope: !3679, inlinedAt: !3692)
!4411 = !DILocation(line: 2268, column: 16, scope: !3686, inlinedAt: !3692)
!4412 = !DILocation(line: 2268, column: 27, scope: !3686, inlinedAt: !3692)
!4413 = !DILocation(line: 0, scope: !3686, inlinedAt: !3692)
!4414 = !DILocation(line: 2269, column: 27, scope: !3686, inlinedAt: !3692)
!4415 = !DILocation(line: 2270, column: 10, scope: !4416, inlinedAt: !3692)
!4416 = distinct !DILexicalBlock(scope: !3686, file: !1256, line: 2270, column: 10)
!4417 = !DILocation(line: 0, scope: !4416, inlinedAt: !3692)
!4418 = !DILocation(line: 2270, column: 10, scope: !3686, inlinedAt: !3692)
!4419 = !DILocation(line: 2271, column: 8, scope: !4420, inlinedAt: !3692)
!4420 = distinct !DILexicalBlock(scope: !4416, file: !1256, line: 2270, column: 14)
!4421 = !DILocation(line: 2272, column: 9, scope: !4422, inlinedAt: !3692)
!4422 = distinct !DILexicalBlock(scope: !4420, file: !1256, line: 2271, column: 8)
!4423 = !DILocation(line: 2274, column: 9, scope: !4422, inlinedAt: !3692)
!4424 = !DILocation(line: 2276, column: 15, scope: !4416, inlinedAt: !3692)
!4425 = !DILocation(line: 2277, column: 4, scope: !4426, inlinedAt: !3692)
!4426 = distinct !DILexicalBlock(scope: !4416, file: !1256, line: 2276, column: 15)
!4427 = !DILocation(line: 2278, column: 6, scope: !4428, inlinedAt: !3692)
!4428 = distinct !DILexicalBlock(scope: !4429, file: !1256, line: 2278, column: 6)
!4429 = distinct !DILexicalBlock(scope: !3686, file: !1256, line: 2278, column: 6)
!4430 = !DILocation(line: 2278, column: 6, scope: !4429, inlinedAt: !3692)
!4431 = !DILocation(line: 2299, column: 5, scope: !3644, inlinedAt: !3692)
!4432 = !DILocation(line: 0, scope: !1968, inlinedAt: !4433)
!4433 = distinct !DILocation(line: 2300, column: 5, scope: !3644, inlinedAt: !3692)
!4434 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !4433)
!4435 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !4433)
!4436 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !4433)
!4437 = !DILocation(line: 0, scope: !1974, inlinedAt: !4433)
!4438 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !4433)
!4439 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !4433)
!4440 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !4433)
!4441 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !4433)
!4442 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !4433)
!4443 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !4433)
!4444 = !DILocation(line: 2302, column: 18, scope: !3644, inlinedAt: !3692)
!4445 = !DILocation(line: 2302, column: 16, scope: !3644, inlinedAt: !3692)
!4446 = !DILocation(line: 2304, column: 9, scope: !4447, inlinedAt: !3692)
!4447 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2304, column: 9)
!4448 = !DILocation(line: 2304, column: 9, scope: !3644, inlinedAt: !3692)
!4449 = !DILocation(line: 2305, column: 2, scope: !4447, inlinedAt: !3692)
!4450 = !DILocation(line: 2309, column: 5, scope: !3644, inlinedAt: !3692)
!4451 = !DILocation(line: 2310, column: 9, scope: !4452, inlinedAt: !3692)
!4452 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2310, column: 9)
!4453 = !DILocation(line: 2310, column: 27, scope: !4452, inlinedAt: !3692)
!4454 = !DILocation(line: 2310, column: 30, scope: !4452, inlinedAt: !3692)
!4455 = !DILocation(line: 2310, column: 41, scope: !4452, inlinedAt: !3692)
!4456 = !DILocation(line: 2310, column: 9, scope: !3644, inlinedAt: !3692)
!4457 = !DILocation(line: 2311, column: 6, scope: !4458, inlinedAt: !3692)
!4458 = distinct !DILexicalBlock(scope: !4459, file: !1256, line: 2311, column: 6)
!4459 = distinct !DILexicalBlock(scope: !4452, file: !1256, line: 2310, column: 54)
!4460 = !DILocation(line: 0, scope: !4458, inlinedAt: !3692)
!4461 = !DILocation(line: 2318, column: 5, scope: !3644, inlinedAt: !3692)
!4462 = !DILocation(line: 2319, column: 5, scope: !4463, inlinedAt: !3692)
!4463 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2319, column: 5)
!4464 = !DILocation(line: 2319, column: 5, scope: !3644, inlinedAt: !3692)
!4465 = !DILocation(line: 0, scope: !1968, inlinedAt: !4466)
!4466 = distinct !DILocation(line: 2319, column: 5, scope: !4467, inlinedAt: !3692)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !1256, line: 2319, column: 5)
!4468 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !4466)
!4469 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !4466)
!4470 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !4466)
!4471 = !DILocation(line: 0, scope: !1974, inlinedAt: !4466)
!4472 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !4466)
!4473 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !4466)
!4474 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !4466)
!4475 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !4466)
!4476 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !4466)
!4477 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !4466)
!4478 = !DILocation(line: 2319, column: 5, scope: !4467, inlinedAt: !3692)
!4479 = !DILocation(line: 0, scope: !3393, inlinedAt: !4480)
!4480 = distinct !DILocation(line: 2319, column: 5, scope: !4467, inlinedAt: !3692)
!4481 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !4480)
!4482 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !4480)
!4483 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4480)
!4484 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4480)
!4485 = !DILocation(line: 2320, column: 9, scope: !4486, inlinedAt: !3692)
!4486 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2320, column: 9)
!4487 = !DILocation(line: 2320, column: 9, scope: !3644, inlinedAt: !3692)
!4488 = !DILocation(line: 0, scope: !1968, inlinedAt: !4489)
!4489 = distinct !DILocation(line: 2321, column: 2, scope: !4490, inlinedAt: !3692)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !1256, line: 2320, column: 22)
!4491 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !4489)
!4492 = !DILocation(line: 0, scope: !1974, inlinedAt: !4489)
!4493 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !4489)
!4494 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !4489)
!4495 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !4489)
!4496 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !4489)
!4497 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !4489)
!4498 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !4489)
!4499 = !DILocation(line: 2322, column: 14, scope: !4490, inlinedAt: !3692)
!4500 = !DILocation(line: 2323, column: 5, scope: !4490, inlinedAt: !3692)
!4501 = !DILocation(line: 2328, column: 9, scope: !4502, inlinedAt: !3692)
!4502 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2328, column: 9)
!4503 = !DILocation(line: 2328, column: 9, scope: !3644, inlinedAt: !3692)
!4504 = !DILocation(line: 2329, column: 2, scope: !4505, inlinedAt: !3692)
!4505 = distinct !DILexicalBlock(scope: !4502, file: !1256, line: 2328, column: 22)
!4506 = !DILocation(line: 2330, column: 2, scope: !4505, inlinedAt: !3692)
!4507 = !DILocation(line: 2331, column: 2, scope: !4505, inlinedAt: !3692)
!4508 = !DILocation(line: 2332, column: 5, scope: !4505, inlinedAt: !3692)
!4509 = !DILocation(line: 2334, column: 5, scope: !3644, inlinedAt: !3692)
!4510 = !DILocation(line: 2335, column: 5, scope: !4511, inlinedAt: !3692)
!4511 = distinct !DILexicalBlock(scope: !3644, file: !1256, line: 2335, column: 5)
!4512 = !DILocation(line: 2335, column: 5, scope: !3644, inlinedAt: !3692)
!4513 = !DILocation(line: 2349, column: 5, scope: !3644, inlinedAt: !3692)
!4514 = !DILocation(line: 2350, column: 22, scope: !3644, inlinedAt: !3692)
!4515 = !DILocation(line: 2351, column: 18, scope: !3644, inlinedAt: !3692)
!4516 = !DILocation(line: 2353, column: 1, scope: !3644, inlinedAt: !3692)
!4517 = !DILocation(line: 1637, column: 6, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !3693, file: !1256, line: 1637, column: 6)
!4519 = !DILocation(line: 1637, column: 6, scope: !3693)
!4520 = !DILocation(line: 1638, column: 6, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4518, file: !1256, line: 1637, column: 22)
!4522 = !DILocation(line: 1639, column: 2, scope: !4521)
!4523 = !DILocation(line: 1640, column: 6, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !3693, file: !1256, line: 1640, column: 6)
!4525 = !DILocation(line: 1640, column: 6, scope: !3693)
!4526 = !DILocation(line: 1641, column: 6, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4524, file: !1256, line: 1640, column: 18)
!4528 = !DILocation(line: 1642, column: 6, scope: !4527)
!4529 = !DILocation(line: 1643, column: 2, scope: !4527)
!4530 = !DILocation(line: 1647, column: 2, scope: !3693)
!4531 = !DILocation(line: 1651, column: 9, scope: !3693)
!4532 = !DILocation(line: 1651, column: 26, scope: !3693)
!4533 = !DILocation(line: 1651, column: 2, scope: !3693)
!4534 = !DILocation(line: 1652, column: 6, scope: !3693)
!4535 = distinct !{!4535, !4533, !4534, !2029, !2030}
!4536 = !DILocation(line: 1653, column: 2, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !3693, file: !1256, line: 1653, column: 2)
!4538 = !DILocation(line: 1653, column: 2, scope: !3693)
!4539 = !DILocation(line: 1654, column: 2, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !3693, file: !1256, line: 1654, column: 2)
!4541 = !DILocation(line: 1654, column: 2, scope: !3693)
!4542 = !DILocation(line: 0, scope: !1968, inlinedAt: !4543)
!4543 = distinct !DILocation(line: 1654, column: 2, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4540, file: !1256, line: 1654, column: 2)
!4545 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !4543)
!4546 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !4543)
!4547 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !4543)
!4548 = !DILocation(line: 0, scope: !1974, inlinedAt: !4543)
!4549 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !4543)
!4550 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !4543)
!4551 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !4543)
!4552 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !4543)
!4553 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !4543)
!4554 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !4543)
!4555 = !DILocation(line: 1654, column: 2, scope: !4544)
!4556 = !DILocation(line: 0, scope: !3393, inlinedAt: !4557)
!4557 = distinct !DILocation(line: 1654, column: 2, scope: !4544)
!4558 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !4557)
!4559 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !4557)
!4560 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4557)
!4561 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4557)
!4562 = !DILocation(line: 1655, column: 6, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !3693, file: !1256, line: 1655, column: 6)
!4564 = !DILocation(line: 1655, column: 6, scope: !3693)
!4565 = !DILocation(line: 1656, column: 6, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !1256, line: 1655, column: 22)
!4567 = !DILocation(line: 1657, column: 2, scope: !4566)
!4568 = !DILocation(line: 1658, column: 6, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !3693, file: !1256, line: 1658, column: 6)
!4570 = !DILocation(line: 1658, column: 6, scope: !3693)
!4571 = !DILocation(line: 1659, column: 6, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4569, file: !1256, line: 1658, column: 18)
!4573 = !DILocation(line: 1660, column: 6, scope: !4572)
!4574 = !DILocation(line: 1661, column: 2, scope: !4572)
!4575 = !DILocation(line: 1662, column: 8, scope: !3693)
!4576 = !DILocation(line: 1663, column: 2, scope: !3693)
!4577 = !DILocation(line: 1665, column: 16, scope: !3693)
!4578 = !DILocation(line: 1665, column: 2, scope: !3693)
!4579 = !DILocation(line: 1667, column: 2, scope: !3693)
!4580 = !DILocation(line: 1669, column: 5, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !3494, file: !1256, line: 1669, column: 5)
!4582 = !DILocation(line: 1670, column: 5, scope: !3494)
!4583 = !DILocation(line: 1671, column: 1, scope: !3494)
!4584 = !DISubprogram(name: "Perl_my_setenv", scope: !1566, file: !1566, line: 2807, type: !4585, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4585 = !DISubroutineType(types: !4586)
!4586 = !{null, !876, !876}
!4587 = !DISubprogram(name: "Perl_savepv", scope: !1566, file: !1566, line: 3955, type: !4588, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{!486, !876}
!4590 = !DISubprogram(name: "Perl_set_caret_X", scope: !1566, file: !1566, line: 4032, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4591 = distinct !DISubprogram(name: "S_init_postdump_symbols", scope: !1256, file: !1256, line: 4276, type: !4592, scopeLine: 4277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4594)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{null, !477, !884, !884}
!4594 = !{!4595, !4596, !4597, !4598, !4599, !4602, !4603, !4606, !4607}
!4595 = !DILocalVariable(name: "argc", arg: 1, scope: !4591, file: !1256, line: 4276, type: !477)
!4596 = !DILocalVariable(name: "argv", arg: 2, scope: !4591, file: !1256, line: 4276, type: !884)
!4597 = !DILocalVariable(name: "env", arg: 3, scope: !4591, file: !1256, line: 4276, type: !884)
!4598 = !DILocalVariable(name: "tmpgv", scope: !4591, file: !1256, line: 4281, type: !670)
!4599 = !DILocalVariable(name: "hv", scope: !4600, file: !1256, line: 4299, type: !500)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !1256, line: 4298, column: 71)
!4601 = distinct !DILexicalBlock(scope: !4591, file: !1256, line: 4298, column: 9)
!4602 = !DILocalVariable(name: "env_is_not_environ", scope: !4600, file: !1256, line: 4300, type: !795)
!4603 = !DILocalVariable(name: "s", scope: !4604, file: !1256, line: 4324, type: !486)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !1256, line: 4323, column: 11)
!4605 = distinct !DILexicalBlock(scope: !4600, file: !1256, line: 4323, column: 6)
!4606 = !DILocalVariable(name: "old_var", scope: !4604, file: !1256, line: 4324, type: !486)
!4607 = !DILocalVariable(name: "sv", scope: !4604, file: !1256, line: 4325, type: !530)
!4608 = !DILocation(line: 0, scope: !4591)
!4609 = !DILocation(line: 4285, column: 20, scope: !4591)
!4610 = !DILocation(line: 4285, column: 18, scope: !4591)
!4611 = !DILocation(line: 4286, column: 5, scope: !4591)
!4612 = !DILocation(line: 4287, column: 21, scope: !4591)
!4613 = !DILocation(line: 4287, column: 19, scope: !4591)
!4614 = !DILocation(line: 4288, column: 5, scope: !4591)
!4615 = !DILocation(line: 4289, column: 21, scope: !4591)
!4616 = !DILocation(line: 4289, column: 19, scope: !4591)
!4617 = !DILocation(line: 4291, column: 5, scope: !4591)
!4618 = !DILocation(line: 4293, column: 5, scope: !4591)
!4619 = !DILocation(line: 4295, column: 18, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4591, file: !1256, line: 4295, column: 9)
!4621 = !DILocation(line: 4295, column: 16, scope: !4620)
!4622 = !DILocation(line: 4295, column: 9, scope: !4591)
!4623 = !DILocation(line: 4296, column: 2, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4620, file: !1256, line: 4295, column: 64)
!4625 = !DILocation(line: 4297, column: 5, scope: !4624)
!4626 = !DILocation(line: 4298, column: 21, scope: !4601)
!4627 = !DILocation(line: 4298, column: 19, scope: !4601)
!4628 = !DILocation(line: 4298, column: 9, scope: !4591)
!4629 = !DILocation(line: 4301, column: 2, scope: !4600)
!4630 = !DILocation(line: 4302, column: 2, scope: !4600)
!4631 = !DILocation(line: 4303, column: 7, scope: !4600)
!4632 = !DILocation(line: 0, scope: !4600)
!4633 = !DILocation(line: 4304, column: 2, scope: !4600)
!4634 = !DILocation(line: 4312, column: 7, scope: !4635)
!4635 = distinct !DILexicalBlock(scope: !4600, file: !1256, line: 4312, column: 6)
!4636 = !DILocation(line: 4312, column: 6, scope: !4600)
!4637 = !DILocation(line: 4314, column: 27, scope: !4600)
!4638 = !DILocation(line: 4315, column: 6, scope: !4600)
!4639 = !DILocation(line: 4321, column: 17, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4641, file: !1256, line: 4320, column: 2)
!4641 = distinct !DILexicalBlock(scope: !4600, file: !1256, line: 4315, column: 6)
!4642 = !DILocation(line: 4322, column: 2, scope: !4640)
!4643 = !DILocation(line: 4323, column: 6, scope: !4605)
!4644 = !DILocation(line: 4323, column: 6, scope: !4600)
!4645 = !DILocation(line: 4326, column: 11, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !1256, line: 4326, column: 4)
!4647 = distinct !DILexicalBlock(scope: !4604, file: !1256, line: 4326, column: 4)
!4648 = !DILocation(line: 4326, column: 4, scope: !4647)
!4649 = !DILocation(line: 4339, column: 10, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4646, file: !1256, line: 4326, column: 24)
!4651 = !DILocation(line: 0, scope: !4604)
!4652 = !DILocation(line: 4329, column: 16, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4650, file: !1256, line: 4329, column: 10)
!4654 = !DILocation(line: 4329, column: 14, scope: !4653)
!4655 = !DILocation(line: 4329, column: 37, scope: !4653)
!4656 = !DILocation(line: 4337, column: 11, scope: !4650)
!4657 = !DILocation(line: 4338, column: 12, scope: !4650)
!4658 = !DILocation(line: 4326, column: 20, scope: !4646)
!4659 = distinct !{!4659, !4648, !4660, !2029, !2030}
!4660 = !DILocation(line: 4341, column: 4, scope: !4647)
!4661 = !DILocation(line: 4340, column: 10, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4650, file: !1256, line: 4339, column: 10)
!4663 = !DILocation(line: 4346, column: 5, scope: !4591)
!4664 = !DILocation(line: 4349, column: 9, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4591, file: !1256, line: 4349, column: 9)
!4666 = !DILocation(line: 4349, column: 9, scope: !4591)
!4667 = !DILocalVariable(name: "name", arg: 1, scope: !4668, file: !1256, line: 2515, type: !876)
!4668 = distinct !DISubprogram(name: "Perl_get_av", scope: !1256, file: !1256, line: 2515, type: !4669, scopeLine: 2516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4671)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!489, !876, !609}
!4671 = !{!4667, !4672, !4673}
!4672 = !DILocalVariable(name: "flags", arg: 2, scope: !4668, file: !1256, line: 2515, type: !609)
!4673 = !DILocalVariable(name: "gv", scope: !4668, file: !1256, line: 2517, type: !4674)
!4674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!4675 = !DILocation(line: 0, scope: !4668, inlinedAt: !4676)
!4676 = distinct !DILocation(line: 4350, column: 14, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4665, file: !1256, line: 4349, column: 21)
!4678 = !DILocation(line: 2517, column: 20, scope: !4668, inlinedAt: !4676)
!4679 = !DILocation(line: 2522, column: 13, scope: !4680, inlinedAt: !4676)
!4680 = distinct !DILexicalBlock(scope: !4668, file: !1256, line: 2521, column: 9)
!4681 = !DILocation(line: 2526, column: 1, scope: !4668, inlinedAt: !4676)
!4682 = !DILocation(line: 4352, column: 1, scope: !4591)
!4683 = !DISubprogram(name: "time", scope: !4684, file: !4684, line: 75, type: !4685, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4684 = !DIFile(filename: "/usr/include/time.h", directory: "", checksumkind: CSK_MD5, checksum: "2dc9fb937b28c900f98919b5c35320c2")
!4685 = !DISubroutineType(types: !4686)
!4686 = !{!4687, !4689}
!4687 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !4688, line: 7, baseType: !4033)
!4688 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "", checksumkind: CSK_MD5, checksum: "49b4e16ef1215de5afdbb283400ab90c")
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4690 = !DISubprogram(name: "PerlIO_printf", scope: !652, file: !652, line: 268, type: !4691, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!477, !650, !876, null}
!4693 = !DISubprogram(name: "Perl_PerlIO_stderr", scope: !1566, file: !1566, line: 8274, type: !4694, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4694 = !DISubroutineType(types: !4695)
!4695 = !{!650}
!4696 = distinct !DISubprogram(name: "perl_run", scope: !1256, file: !1256, line: 2364, type: !1632, scopeLine: 2365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4697)
!4697 = !{!4698, !4699, !4700, !4701, !4702, !4709, !4711}
!4698 = !DILocalVariable(name: "my_perl", arg: 1, scope: !4696, file: !1256, line: 2364, type: !480)
!4699 = !DILocalVariable(name: "oldscope", scope: !4696, file: !1256, line: 2366, type: !609)
!4700 = !DILocalVariable(name: "ret", scope: !4696, file: !1256, line: 2367, type: !477)
!4701 = !DILocalVariable(name: "cur_env", scope: !4696, file: !1256, line: 2368, type: !1644)
!4702 = !DILocalVariable(name: "sp", scope: !4703, file: !1256, line: 2409, type: !594)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !1256, line: 2409, column: 6)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !1256, line: 2409, column: 6)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !1256, line: 2409, column: 6)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !1256, line: 2408, column: 20)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !1256, line: 2408, column: 6)
!4708 = distinct !DILexicalBlock(scope: !4696, file: !1256, line: 2381, column: 18)
!4709 = !DILocalVariable(name: "prev", scope: !4703, file: !1256, line: 2409, type: !4710)
!4710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3025)
!4711 = !DILabel(scope: !4708, name: "redo_body", file: !1256, line: 2386)
!4712 = !DILocation(line: 0, scope: !4696)
!4713 = !DILocation(line: 2368, column: 5, scope: !4696)
!4714 = !DILocation(line: 2375, column: 16, scope: !4696)
!4715 = !DILocation(line: 2380, column: 5, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4696, file: !1256, line: 2380, column: 5)
!4717 = !DILocation(line: 2381, column: 5, scope: !4696)
!4718 = !DILocation(line: 2390, column: 9, scope: !4708)
!4719 = !DILocation(line: 2390, column: 26, scope: !4708)
!4720 = !DILocation(line: 2390, column: 2, scope: !4708)
!4721 = !DILocation(line: 2383, column: 2, scope: !4708)
!4722 = !DILocation(line: 2383, column: 13, scope: !4708)
!4723 = !DILocation(line: 2384, column: 2, scope: !4708)
!4724 = !DILocation(line: 2386, column: 2, scope: !4708)
!4725 = !DILocalVariable(name: "oldscope", arg: 1, scope: !4726, file: !1256, line: 2423, type: !609)
!4726 = distinct !DISubprogram(name: "S_run_body", scope: !1256, file: !1256, line: 2423, type: !4727, scopeLine: 2424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4729)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{null, !609}
!4729 = !{!4725}
!4730 = !DILocation(line: 0, scope: !4726, inlinedAt: !4731)
!4731 = distinct !DILocation(line: 2387, column: 2, scope: !4708)
!4732 = !DILocation(line: 2429, column: 10, scope: !4733, inlinedAt: !4731)
!4733 = distinct !DILexicalBlock(scope: !4726, file: !1256, line: 2429, column: 9)
!4734 = !DILocation(line: 2429, column: 9, scope: !4726, inlinedAt: !4731)
!4735 = !DILocation(line: 2455, column: 5, scope: !4726, inlinedAt: !4731)
!4736 = !DILocation(line: 2457, column: 9, scope: !4726, inlinedAt: !4731)
!4737 = !DILocation(line: 2437, column: 6, scope: !4738, inlinedAt: !4731)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !1256, line: 2437, column: 6)
!4739 = distinct !DILexicalBlock(scope: !4733, file: !1256, line: 2429, column: 24)
!4740 = !DILocation(line: 2437, column: 6, scope: !4739, inlinedAt: !4731)
!4741 = !DILocation(line: 2438, column: 20, scope: !4742, inlinedAt: !4731)
!4742 = distinct !DILexicalBlock(scope: !4738, file: !1256, line: 2437, column: 18)
!4743 = !DILocation(line: 2438, column: 54, scope: !4742, inlinedAt: !4731)
!4744 = !DILocation(line: 2438, column: 6, scope: !4742, inlinedAt: !4731)
!4745 = !DILocalVariable(name: "status", arg: 1, scope: !4746, file: !1256, line: 4960, type: !487)
!4746 = distinct !DISubprogram(name: "Perl_my_exit", scope: !1256, file: !1256, line: 4960, type: !4747, scopeLine: 4961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4749)
!4747 = !DISubroutineType(types: !4748)
!4748 = !{null, !487}
!4749 = !{!4745}
!4750 = !DILocation(line: 0, scope: !4746, inlinedAt: !4751)
!4751 = distinct !DILocation(line: 2439, column: 6, scope: !4742, inlinedAt: !4731)
!4752 = !DILocation(line: 4962, column: 9, scope: !4753, inlinedAt: !4751)
!4753 = distinct !DILexicalBlock(scope: !4746, file: !1256, line: 4962, column: 9)
!4754 = !DILocation(line: 4962, column: 23, scope: !4753, inlinedAt: !4751)
!4755 = !DILocation(line: 4962, column: 9, scope: !4746, inlinedAt: !4751)
!4756 = !DILocation(line: 4963, column: 2, scope: !4757, inlinedAt: !4751)
!4757 = distinct !DILexicalBlock(scope: !4753, file: !1256, line: 4962, column: 42)
!4758 = !DILocation(line: 4965, column: 23, scope: !4759, inlinedAt: !4751)
!4759 = distinct !DILexicalBlock(scope: !4746, file: !1256, line: 4965, column: 9)
!4760 = !DILocation(line: 4965, column: 9, scope: !4746, inlinedAt: !4751)
!4761 = !DILocation(line: 4966, column: 16, scope: !4762, inlinedAt: !4751)
!4762 = distinct !DILexicalBlock(scope: !4759, file: !1256, line: 4965, column: 41)
!4763 = !DILocation(line: 4967, column: 2, scope: !4762, inlinedAt: !4751)
!4764 = !DILocation(line: 4968, column: 16, scope: !4762, inlinedAt: !4751)
!4765 = !DILocation(line: 4969, column: 5, scope: !4762, inlinedAt: !4751)
!4766 = !DILocation(line: 4972, column: 2, scope: !4767, inlinedAt: !4751)
!4767 = distinct !DILexicalBlock(scope: !4746, file: !1256, line: 4970, column: 21)
!4768 = !DILocation(line: 0, scope: !4767, inlinedAt: !4751)
!4769 = !DILocation(line: 4981, column: 5, scope: !4746, inlinedAt: !4751)
!4770 = !DILocation(line: 4982, column: 1, scope: !4746, inlinedAt: !4751)
!4771 = !DILocation(line: 2441, column: 6, scope: !4772, inlinedAt: !4731)
!4772 = distinct !DILexicalBlock(scope: !4739, file: !1256, line: 2441, column: 6)
!4773 = !DILocation(line: 2441, column: 20, scope: !4772, inlinedAt: !4731)
!4774 = !DILocation(line: 2442, column: 28, scope: !4772, inlinedAt: !4731)
!4775 = !DILocation(line: 2442, column: 13, scope: !4772, inlinedAt: !4731)
!4776 = !DILocation(line: 2443, column: 6, scope: !4777, inlinedAt: !4731)
!4777 = distinct !DILexicalBlock(scope: !4739, file: !1256, line: 2443, column: 6)
!4778 = !DILocation(line: 2443, column: 6, scope: !4739, inlinedAt: !4731)
!4779 = !DILocation(line: 2444, column: 6, scope: !4780, inlinedAt: !4731)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !1256, line: 2443, column: 17)
!4781 = !DILocation(line: 2445, column: 6, scope: !4780, inlinedAt: !4731)
!4782 = !DILocation(line: 2457, column: 9, scope: !4783, inlinedAt: !4731)
!4783 = distinct !DILexicalBlock(scope: !4726, file: !1256, line: 2457, column: 9)
!4784 = !DILocation(line: 2458, column: 19, scope: !4785, inlinedAt: !4731)
!4785 = distinct !DILexicalBlock(scope: !4783, file: !1256, line: 2457, column: 23)
!4786 = !DILocation(line: 2459, column: 8, scope: !4785, inlinedAt: !4731)
!4787 = !DILocation(line: 2460, column: 15, scope: !4785, inlinedAt: !4731)
!4788 = !DILocation(line: 2462, column: 5, scope: !4785, inlinedAt: !4731)
!4789 = !DILocation(line: 2463, column: 14, scope: !4790, inlinedAt: !4731)
!4790 = distinct !DILexicalBlock(scope: !4783, file: !1256, line: 2463, column: 14)
!4791 = !DILocation(line: 2463, column: 14, scope: !4783, inlinedAt: !4731)
!4792 = !DILocation(line: 2464, column: 2, scope: !4793, inlinedAt: !4731)
!4793 = distinct !DILexicalBlock(scope: !4790, file: !1256, line: 2463, column: 29)
!4794 = !DILocalVariable(name: "sv", arg: 1, scope: !4795, file: !1969, line: 37, type: !4798)
!4795 = distinct !DISubprogram(name: "S_CvDEPTHp", scope: !1969, file: !1969, line: 37, type: !4796, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4799)
!4796 = !DISubroutineType(types: !4797)
!4797 = !{!1154, !4798}
!4798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1124)
!4799 = !{!4794}
!4800 = !DILocation(line: 0, scope: !4795, inlinedAt: !4801)
!4801 = distinct !DILocation(line: 2464, column: 2, scope: !4793, inlinedAt: !4731)
!4802 = !DILocation(line: 40, column: 34, scope: !4795, inlinedAt: !4801)
!4803 = !DILocation(line: 2464, column: 22, scope: !4793, inlinedAt: !4731)
!4804 = !DILocation(line: 2465, column: 8, scope: !4793, inlinedAt: !4731)
!4805 = !DILocation(line: 2467, column: 5, scope: !4793, inlinedAt: !4731)
!4806 = !DILocation(line: 0, scope: !4783, inlinedAt: !4731)
!4807 = !DILocation(line: 4962, column: 9, scope: !4753, inlinedAt: !4808)
!4808 = distinct !DILocation(line: 2468, column: 5, scope: !4726, inlinedAt: !4731)
!4809 = !DILocation(line: 0, scope: !4746, inlinedAt: !4808)
!4810 = !DILocation(line: 4962, column: 23, scope: !4753, inlinedAt: !4808)
!4811 = !DILocation(line: 4962, column: 9, scope: !4746, inlinedAt: !4808)
!4812 = !DILocation(line: 4963, column: 2, scope: !4757, inlinedAt: !4808)
!4813 = !DILocation(line: 4965, column: 23, scope: !4759, inlinedAt: !4808)
!4814 = !DILocation(line: 4965, column: 9, scope: !4746, inlinedAt: !4808)
!4815 = !DILocation(line: 4966, column: 16, scope: !4762, inlinedAt: !4808)
!4816 = !DILocation(line: 4967, column: 2, scope: !4762, inlinedAt: !4808)
!4817 = !DILocation(line: 4968, column: 16, scope: !4762, inlinedAt: !4808)
!4818 = !DILocation(line: 4969, column: 5, scope: !4762, inlinedAt: !4808)
!4819 = !DILocation(line: 4972, column: 2, scope: !4767, inlinedAt: !4808)
!4820 = !DILocation(line: 0, scope: !4767, inlinedAt: !4808)
!4821 = !DILocation(line: 4981, column: 5, scope: !4746, inlinedAt: !4808)
!4822 = !DILocation(line: 4982, column: 1, scope: !4746, inlinedAt: !4808)
!4823 = !DILocation(line: 2391, column: 6, scope: !4708)
!4824 = distinct !{!4824, !4720, !4823, !2029, !2030}
!4825 = !DILocation(line: 2392, column: 2, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4708, file: !1256, line: 2392, column: 2)
!4827 = !DILocation(line: 2392, column: 2, scope: !4708)
!4828 = !DILocation(line: 2393, column: 2, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4708, file: !1256, line: 2393, column: 2)
!4830 = !DILocation(line: 2393, column: 2, scope: !4708)
!4831 = !DILocation(line: 0, scope: !1968, inlinedAt: !4832)
!4832 = distinct !DILocation(line: 2393, column: 2, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4829, file: !1256, line: 2393, column: 2)
!4834 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !4832)
!4835 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !4832)
!4836 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !4832)
!4837 = !DILocation(line: 0, scope: !1974, inlinedAt: !4832)
!4838 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !4832)
!4839 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !4832)
!4840 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !4832)
!4841 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !4832)
!4842 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !4832)
!4843 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !4832)
!4844 = !DILocation(line: 2393, column: 2, scope: !4833)
!4845 = !DILocation(line: 0, scope: !3393, inlinedAt: !4846)
!4846 = distinct !DILocation(line: 2393, column: 2, scope: !4833)
!4847 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !4846)
!4848 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !4846)
!4849 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !4846)
!4850 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !4846)
!4851 = !DILocation(line: 2394, column: 8, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4708, file: !1256, line: 2394, column: 6)
!4853 = !DILocation(line: 2394, column: 22, scope: !4852)
!4854 = !DILocation(line: 2394, column: 48, scope: !4852)
!4855 = !DILocation(line: 2396, column: 6, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4852, file: !1256, line: 2395, column: 31)
!4857 = !DILocation(line: 2397, column: 6, scope: !4856)
!4858 = !DILocation(line: 2398, column: 2, scope: !4856)
!4859 = !DILocation(line: 2405, column: 8, scope: !4708)
!4860 = !DILocation(line: 2406, column: 2, scope: !4708)
!4861 = !DILocation(line: 2408, column: 6, scope: !4707)
!4862 = !DILocation(line: 2408, column: 6, scope: !4708)
!4863 = !DILocation(line: 2409, column: 6, scope: !4705)
!4864 = !DILocation(line: 2409, column: 6, scope: !4704)
!4865 = !DILocation(line: 2409, column: 6, scope: !4703)
!4866 = !DILocation(line: 0, scope: !4703)
!4867 = !DILocation(line: 2409, column: 6, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4703, file: !1256, line: 2409, column: 6)
!4869 = !DILocation(line: 2409, column: 6, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4868, file: !1256, line: 2409, column: 6)
!4871 = !DILocation(line: 2409, column: 6, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4703, file: !1256, line: 2409, column: 6)
!4873 = distinct !{!4873, !4863, !4863, !2029, !2030}
!4874 = !DILocation(line: 2412, column: 16, scope: !4708)
!4875 = !DILocation(line: 2412, column: 2, scope: !4708)
!4876 = !DILocation(line: 2413, column: 2, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4708, file: !1256, line: 2413, column: 2)
!4878 = !DILocation(line: 2413, column: 2, scope: !4708)
!4879 = !DILocation(line: 2418, column: 5, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4696, file: !1256, line: 2418, column: 5)
!4881 = !DILocation(line: 2420, column: 1, scope: !4696)
!4882 = !DILocation(line: 2419, column: 5, scope: !4696)
!4883 = !DISubprogram(name: "Perl_dounwind", scope: !1566, file: !1566, line: 1103, type: !4727, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4884 = !DISubprogram(name: "Perl_croak_popstack", scope: !1566, file: !1566, line: 754, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4885 = !DILocation(line: 0, scope: !3833)
!4886 = !DILocation(line: 2492, column: 10, scope: !3833)
!4887 = !DILocation(line: 2493, column: 9, scope: !3843)
!4888 = !DILocation(line: 2493, column: 9, scope: !3833)
!4889 = !DILocation(line: 2494, column: 9, scope: !3843)
!4890 = !DILocation(line: 2494, column: 2, scope: !3843)
!4891 = !DILocation(line: 2496, column: 1, scope: !3833)
!4892 = !DISubprogram(name: "Perl_gv_fetchpv", scope: !1566, file: !1566, line: 1520, type: !4893, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4893 = !DISubroutineType(types: !4894)
!4894 = !{!670, !876, !609, !1606}
!4895 = !DILocation(line: 0, scope: !4668)
!4896 = !DILocation(line: 2517, column: 20, scope: !4668)
!4897 = !DILocation(line: 2521, column: 9, scope: !4680)
!4898 = !DILocation(line: 2521, column: 9, scope: !4668)
!4899 = !DILocation(line: 2522, column: 13, scope: !4680)
!4900 = !DILocation(line: 2523, column: 9, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4668, file: !1256, line: 2523, column: 9)
!4902 = !DILocation(line: 2523, column: 9, scope: !4668)
!4903 = !DILocation(line: 2526, column: 1, scope: !4668)
!4904 = !DISubprogram(name: "Perl_gv_add_by_type", scope: !1566, file: !1566, line: 1391, type: !4905, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4905 = !DISubroutineType(types: !4906)
!4906 = !{!670, !670, !1123}
!4907 = distinct !DISubprogram(name: "Perl_get_hv", scope: !1256, file: !1256, line: 2542, type: !4908, scopeLine: 2543, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4910)
!4908 = !DISubroutineType(types: !4909)
!4909 = !{!500, !876, !609}
!4910 = !{!4911, !4912, !4913}
!4911 = !DILocalVariable(name: "name", arg: 1, scope: !4907, file: !1256, line: 2542, type: !876)
!4912 = !DILocalVariable(name: "flags", arg: 2, scope: !4907, file: !1256, line: 2542, type: !609)
!4913 = !DILocalVariable(name: "gv", scope: !4907, file: !1256, line: 2544, type: !4674)
!4914 = !DILocation(line: 0, scope: !4907)
!4915 = !DILocation(line: 2544, column: 20, scope: !4907)
!4916 = !DILocation(line: 2548, column: 9, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4907, file: !1256, line: 2548, column: 9)
!4918 = !DILocation(line: 2548, column: 9, scope: !4907)
!4919 = !DILocation(line: 2549, column: 13, scope: !4917)
!4920 = !DILocation(line: 2550, column: 9, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4907, file: !1256, line: 2550, column: 9)
!4922 = !DILocation(line: 2550, column: 9, scope: !4907)
!4923 = !DILocation(line: 2553, column: 1, scope: !4907)
!4924 = distinct !DISubprogram(name: "Perl_get_cvn_flags", scope: !1256, file: !1256, line: 2574, type: !4925, scopeLine: 2575, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4927)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!737, !876, !560, !609}
!4927 = !{!4928, !4929, !4930, !4931}
!4928 = !DILocalVariable(name: "name", arg: 1, scope: !4924, file: !1256, line: 2574, type: !876)
!4929 = !DILocalVariable(name: "len", arg: 2, scope: !4924, file: !1256, line: 2574, type: !560)
!4930 = !DILocalVariable(name: "flags", arg: 3, scope: !4924, file: !1256, line: 2574, type: !609)
!4931 = !DILocalVariable(name: "gv", scope: !4924, file: !1256, line: 2576, type: !4674)
!4932 = !DILocation(line: 0, scope: !4924)
!4933 = !DILocation(line: 2576, column: 20, scope: !4924)
!4934 = !DILocation(line: 2583, column: 16, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4924, file: !1256, line: 2583, column: 9)
!4936 = !DILocation(line: 2583, column: 34, scope: !4935)
!4937 = !DILocation(line: 2583, column: 38, scope: !4935)
!4938 = !DILocation(line: 2583, column: 9, scope: !4924)
!4939 = !DILocation(line: 2584, column: 13, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4935, file: !1256, line: 2583, column: 49)
!4941 = !DILocation(line: 2584, column: 6, scope: !4940)
!4942 = !DILocation(line: 2586, column: 9, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4924, file: !1256, line: 2586, column: 9)
!4944 = !DILocation(line: 2586, column: 9, scope: !4924)
!4945 = !DILocation(line: 2587, column: 9, scope: !4943)
!4946 = !DILocation(line: 2589, column: 1, scope: !4924)
!4947 = !DISubprogram(name: "Perl_gv_fetchpvn_flags", scope: !1566, file: !1566, line: 1525, type: !4948, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!670, !876, !560, !609, !1606}
!4950 = !DISubprogram(name: "Perl_newSTUB", scope: !1566, file: !1566, line: 3049, type: !4951, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!737, !670, !795}
!4953 = distinct !DISubprogram(name: "Perl_get_cv", scope: !1256, file: !1256, line: 2594, type: !4954, scopeLine: 2595, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4956)
!4954 = !DISubroutineType(types: !4955)
!4955 = !{!737, !876, !609}
!4956 = !{!4957, !4958}
!4957 = !DILocalVariable(name: "name", arg: 1, scope: !4953, file: !1256, line: 2594, type: !876)
!4958 = !DILocalVariable(name: "flags", arg: 2, scope: !4953, file: !1256, line: 2594, type: !609)
!4959 = !DILocation(line: 0, scope: !4953)
!4960 = !DILocation(line: 2598, column: 12, scope: !4953)
!4961 = !DILocation(line: 0, scope: !4924, inlinedAt: !4962)
!4962 = distinct !DILocation(line: 2598, column: 12, scope: !4953)
!4963 = !DILocation(line: 2576, column: 20, scope: !4924, inlinedAt: !4962)
!4964 = !DILocation(line: 2583, column: 16, scope: !4935, inlinedAt: !4962)
!4965 = !DILocation(line: 2583, column: 34, scope: !4935, inlinedAt: !4962)
!4966 = !DILocation(line: 2583, column: 38, scope: !4935, inlinedAt: !4962)
!4967 = !DILocation(line: 2583, column: 9, scope: !4924, inlinedAt: !4962)
!4968 = !DILocation(line: 2584, column: 13, scope: !4940, inlinedAt: !4962)
!4969 = !DILocation(line: 2584, column: 6, scope: !4940, inlinedAt: !4962)
!4970 = !DILocation(line: 2586, column: 9, scope: !4943, inlinedAt: !4962)
!4971 = !DILocation(line: 2586, column: 9, scope: !4924, inlinedAt: !4962)
!4972 = !DILocation(line: 2587, column: 9, scope: !4943, inlinedAt: !4962)
!4973 = !DILocation(line: 2598, column: 5, scope: !4953)
!4974 = distinct !DISubprogram(name: "Perl_call_argv", scope: !1256, file: !1256, line: 2619, type: !4975, scopeLine: 2623, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4977)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!609, !876, !609, !884}
!4977 = !{!4978, !4979, !4980, !4981, !4982}
!4978 = !DILocalVariable(name: "sub_name", arg: 1, scope: !4974, file: !1256, line: 2619, type: !876)
!4979 = !DILocalVariable(name: "flags", arg: 2, scope: !4974, file: !1256, line: 2619, type: !609)
!4980 = !DILocalVariable(name: "argv", arg: 3, scope: !4974, file: !1256, line: 2619, type: !884)
!4981 = !DILocalVariable(name: "sp", scope: !4974, file: !1256, line: 2624, type: !594)
!4982 = !DILocalVariable(name: "mark_stack_entry", scope: !4983, file: !1256, line: 2628, type: !1154)
!4983 = distinct !DILexicalBlock(scope: !4974, file: !1256, line: 2628, column: 5)
!4984 = !DILocation(line: 0, scope: !4974)
!4985 = !DILocation(line: 2624, column: 5, scope: !4974)
!4986 = !DILocation(line: 2628, column: 5, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4983, file: !1256, line: 2628, column: 5)
!4988 = !DILocation(line: 0, scope: !4983)
!4989 = !DILocation(line: 2628, column: 5, scope: !4983)
!4990 = !DILocation(line: 2629, column: 12, scope: !4974)
!4991 = !DILocation(line: 2629, column: 5, scope: !4974)
!4992 = !DILocation(line: 2630, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !1256, line: 2630, column: 9)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !1256, line: 2630, column: 9)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !1256, line: 2630, column: 9)
!4996 = distinct !DILexicalBlock(scope: !4974, file: !1256, line: 2629, column: 19)
!4997 = !DILocation(line: 2630, column: 9, scope: !4994)
!4998 = !DILocation(line: 2630, column: 9, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4993, file: !1256, line: 2630, column: 9)
!5000 = !DILocation(line: 2630, column: 9, scope: !4995)
!5001 = !DILocation(line: 2631, column: 13, scope: !4996)
!5002 = distinct !{!5002, !4991, !5003, !2029, !2030}
!5003 = !DILocation(line: 2632, column: 5, scope: !4974)
!5004 = !DILocation(line: 2633, column: 5, scope: !4974)
!5005 = !DILocalVariable(name: "sub_name", arg: 1, scope: !5006, file: !1256, line: 2646, type: !876)
!5006 = distinct !DISubprogram(name: "Perl_call_pv", scope: !1256, file: !1256, line: 2646, type: !5007, scopeLine: 2649, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5009)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!609, !876, !609}
!5009 = !{!5005, !5010}
!5010 = !DILocalVariable(name: "flags", arg: 2, scope: !5006, file: !1256, line: 2646, type: !609)
!5011 = !DILocation(line: 0, scope: !5006, inlinedAt: !5012)
!5012 = distinct !DILocation(line: 2634, column: 12, scope: !4974)
!5013 = !DILocation(line: 0, scope: !4953, inlinedAt: !5014)
!5014 = distinct !DILocation(line: 2652, column: 12, scope: !5006, inlinedAt: !5012)
!5015 = !DILocation(line: 2598, column: 12, scope: !4953, inlinedAt: !5014)
!5016 = !DILocation(line: 0, scope: !4924, inlinedAt: !5017)
!5017 = distinct !DILocation(line: 2598, column: 12, scope: !4953, inlinedAt: !5014)
!5018 = !DILocation(line: 2576, column: 20, scope: !4924, inlinedAt: !5017)
!5019 = !DILocation(line: 2583, column: 38, scope: !4935, inlinedAt: !5017)
!5020 = !DILocation(line: 2583, column: 9, scope: !4924, inlinedAt: !5017)
!5021 = !DILocation(line: 2584, column: 13, scope: !4940, inlinedAt: !5017)
!5022 = !DILocation(line: 2584, column: 6, scope: !4940, inlinedAt: !5017)
!5023 = !DILocation(line: 2652, column: 12, scope: !5006, inlinedAt: !5012)
!5024 = !DILocation(line: 2634, column: 5, scope: !4974)
!5025 = !DISubprogram(name: "Perl_markstack_grow", scope: !1566, file: !1566, line: 2624, type: !5026, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{!1154}
!5028 = !DISubprogram(name: "Perl_stack_grow", scope: !1566, file: !1566, line: 4061, type: !5029, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5029 = !DISubroutineType(types: !5030)
!5030 = !{!594, !594, !594, !824}
!5031 = !DISubprogram(name: "Perl_sv_2mortal", scope: !1566, file: !1566, line: 4114, type: !5032, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5032 = !DISubroutineType(types: !5033)
!5033 = !{!530, !865}
!5034 = !DISubprogram(name: "Perl_newSVpv", scope: !1566, file: !1566, line: 3096, type: !1568, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5035 = !DILocation(line: 0, scope: !5006)
!5036 = !DILocation(line: 0, scope: !4953, inlinedAt: !5037)
!5037 = distinct !DILocation(line: 2652, column: 12, scope: !5006)
!5038 = !DILocation(line: 2598, column: 12, scope: !4953, inlinedAt: !5037)
!5039 = !DILocation(line: 0, scope: !4924, inlinedAt: !5040)
!5040 = distinct !DILocation(line: 2598, column: 12, scope: !4953, inlinedAt: !5037)
!5041 = !DILocation(line: 2576, column: 20, scope: !4924, inlinedAt: !5040)
!5042 = !DILocation(line: 2583, column: 38, scope: !4935, inlinedAt: !5040)
!5043 = !DILocation(line: 2583, column: 9, scope: !4924, inlinedAt: !5040)
!5044 = !DILocation(line: 2584, column: 13, scope: !4940, inlinedAt: !5040)
!5045 = !DILocation(line: 2584, column: 6, scope: !4940, inlinedAt: !5040)
!5046 = !DILocation(line: 2652, column: 12, scope: !5006)
!5047 = !DILocation(line: 2652, column: 5, scope: !5006)
!5048 = distinct !DISubprogram(name: "Perl_call_sv", scope: !1256, file: !1256, line: 2706, type: !5049, scopeLine: 2708, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5052)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{!609, !530, !5051}
!5051 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !609)
!5052 = !{!5053, !5054, !5055, !5056, !5076, !5100, !5101, !5102, !5103, !5104, !5105, !5107, !5108, !5115, !5119, !5120}
!5053 = !DILocalVariable(name: "sv", arg: 1, scope: !5048, file: !1256, line: 2706, type: !530)
!5054 = !DILocalVariable(name: "flags", arg: 2, scope: !5048, file: !1256, line: 2706, type: !5051)
!5055 = !DILocalVariable(name: "sp", scope: !5048, file: !1256, line: 2709, type: !594)
!5056 = !DILocalVariable(name: "myop", scope: !5048, file: !1256, line: 2710, type: !5057)
!5057 = !DIDerivedType(tag: DW_TAG_typedef, name: "LOGOP", file: !27, line: 2623, baseType: !5058)
!5058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "logop", file: !763, line: 223, size: 448, elements: !5059)
!5059 = !{!5060, !5061, !5062, !5063, !5064, !5065, !5066, !5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5075}
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !5058, file: !763, line: 224, baseType: !760, size: 64)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !5058, file: !763, line: 224, baseType: !760, size: 64, offset: 64)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !5058, file: !763, line: 224, baseType: !768, size: 64, offset: 128)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !5058, file: !763, line: 224, baseType: !772, size: 64, offset: 192)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !5058, file: !763, line: 224, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !5058, file: !763, line: 224, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !5058, file: !763, line: 224, baseType: !719, size: 8, offset: 272)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !5058, file: !763, line: 224, baseType: !719, size: 8, offset: 280)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "op_first", scope: !5058, file: !763, line: 225, baseType: !760, size: 64, offset: 320)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "op_other", scope: !5058, file: !763, line: 226, baseType: !760, size: 64, offset: 384)
!5076 = !DILocalVariable(name: "method_op", scope: !5048, file: !1256, line: 2711, type: !5077)
!5077 = !DIDerivedType(tag: DW_TAG_typedef, name: "METHOP", file: !27, line: 2629, baseType: !5078)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "methop", file: !763, line: 235, size: 448, elements: !5079)
!5079 = !{!5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5091, !5092, !5093, !5094, !5099}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !5078, file: !763, line: 236, baseType: !760, size: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !5078, file: !763, line: 236, baseType: !760, size: 64, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !5078, file: !763, line: 236, baseType: !768, size: 64, offset: 128)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !5078, file: !763, line: 236, baseType: !772, size: 64, offset: 192)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !5078, file: !763, line: 236, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !5078, file: !763, line: 236, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !5078, file: !763, line: 236, baseType: !719, size: 8, offset: 272)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !5078, file: !763, line: 236, baseType: !719, size: 8, offset: 280)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "op_u", scope: !5078, file: !763, line: 243, baseType: !5095, size: 64, offset: 320)
!5095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5078, file: !763, line: 237, size: 64, elements: !5096)
!5096 = !{!5097, !5098}
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "op_first", scope: !5095, file: !763, line: 241, baseType: !760, size: 64)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "op_meth_sv", scope: !5095, file: !763, line: 242, baseType: !530, size: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "op_rclass_sv", scope: !5078, file: !763, line: 247, baseType: !530, size: 64, offset: 384)
!5100 = !DILocalVariable(name: "oldmark", scope: !5048, file: !1256, line: 2712, type: !609)
!5101 = !DILocalVariable(name: "retval", scope: !5048, file: !1256, line: 2713, type: !5051)
!5102 = !DILocalVariable(name: "oldscope", scope: !5048, file: !1256, line: 2714, type: !609)
!5103 = !DILocalVariable(name: "oldcatch", scope: !5048, file: !1256, line: 2715, type: !795)
!5104 = !DILocalVariable(name: "ret", scope: !5048, file: !1256, line: 2716, type: !477)
!5105 = !DILocalVariable(name: "oldop", scope: !5048, file: !1256, line: 2717, type: !5106)
!5106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !760)
!5107 = !DILocalVariable(name: "cur_env", scope: !5048, file: !1256, line: 2718, type: !1644)
!5108 = !DILocalVariable(name: "svp", scope: !5109, file: !1256, line: 2790, type: !924)
!5109 = distinct !DILexicalBlock(scope: !5110, file: !1256, line: 2790, column: 3)
!5110 = distinct !DILexicalBlock(scope: !5111, file: !1256, line: 2789, column: 32)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2789, column: 10)
!5112 = distinct !DILexicalBlock(scope: !5113, file: !1256, line: 2784, column: 15)
!5113 = distinct !DILexicalBlock(scope: !5114, file: !1256, line: 2776, column: 10)
!5114 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2770, column: 9)
!5115 = !DILocalVariable(name: "errsv", scope: !5116, file: !1256, line: 2790, type: !865)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !1256, line: 2790, column: 3)
!5117 = distinct !DILexicalBlock(scope: !5118, file: !1256, line: 2790, column: 3)
!5118 = distinct !DILexicalBlock(scope: !5109, file: !1256, line: 2790, column: 3)
!5119 = !DILabel(scope: !5112, name: "redo_body", file: !1256, line: 2786)
!5120 = !DILabel(scope: !5121, name: "clresv_newemptypv", file: !1256, line: 2790)
!5121 = distinct !DILexicalBlock(scope: !5117, file: !1256, line: 2790, column: 3)
!5122 = !DILocation(line: 0, scope: !5048)
!5123 = !DILocation(line: 2706, column: 36, scope: !5048)
!5124 = !DILocation(line: 2709, column: 11, scope: !5048)
!5125 = !DILocation(line: 2710, column: 5, scope: !5048)
!5126 = !DILocation(line: 2710, column: 11, scope: !5048)
!5127 = !DILocation(line: 2711, column: 5, scope: !5048)
!5128 = !DILocation(line: 2711, column: 12, scope: !5048)
!5129 = !DILocation(line: 2713, column: 5, scope: !5048)
!5130 = !DILocation(line: 2713, column: 13, scope: !5048)
!5131 = !DILocation(line: 2715, column: 21, scope: !5048)
!5132 = !DILocation(line: 2717, column: 23, scope: !5048)
!5133 = !DILocation(line: 2718, column: 5, scope: !5048)
!5134 = !DILocation(line: 2722, column: 9, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2722, column: 9)
!5136 = !DILocation(line: 2722, column: 15, scope: !5135)
!5137 = !DILocation(line: 2722, column: 9, scope: !5048)
!5138 = !DILocation(line: 2723, column: 2, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5135, file: !1256, line: 2722, column: 28)
!5140 = !DILocation(line: 2724, column: 2, scope: !5139)
!5141 = !DILocation(line: 2725, column: 5, scope: !5139)
!5142 = !DILocation(line: 2726, column: 11, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2726, column: 9)
!5144 = !DILocation(line: 2726, column: 17, scope: !5143)
!5145 = !DILocation(line: 2726, column: 9, scope: !5048)
!5146 = !DILocation(line: 2729, column: 8, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5143, file: !1256, line: 2726, column: 28)
!5148 = !DILocation(line: 2730, column: 5, scope: !5147)
!5149 = !DILocation(line: 2732, column: 5, scope: !5048)
!5150 = !DILocation(line: 2733, column: 11, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2733, column: 9)
!5152 = !DILocation(line: 2733, column: 9, scope: !5048)
!5153 = !DILocation(line: 2735, column: 22, scope: !5048)
!5154 = !DILocation(line: 2735, column: 10, scope: !5048)
!5155 = !DILocation(line: 2735, column: 19, scope: !5048)
!5156 = !DILocation(line: 2736, column: 5, scope: !5048)
!5157 = !DILocation(line: 2737, column: 11, scope: !5048)
!5158 = !DILocation(line: 2739, column: 5, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5160, file: !1256, line: 2739, column: 5)
!5160 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2739, column: 5)
!5161 = !DILocation(line: 2739, column: 5, scope: !5160)
!5162 = !DILocation(line: 2739, column: 5, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5159, file: !1256, line: 2739, column: 5)
!5164 = !DILocation(line: 2740, column: 11, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2740, column: 9)
!5166 = !DILocation(line: 2740, column: 17, scope: !5165)
!5167 = !DILocation(line: 2740, column: 9, scope: !5048)
!5168 = !DILocation(line: 2741, column: 10, scope: !5165)
!5169 = !DILocation(line: 2741, column: 24, scope: !5165)
!5170 = !DILocation(line: 2741, column: 9, scope: !5165)
!5171 = !DILocation(line: 2742, column: 15, scope: !5048)
!5172 = !DILocation(line: 2743, column: 16, scope: !5048)
!5173 = !DILocation(line: 2745, column: 9, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2745, column: 9)
!5175 = !DILocation(line: 2745, column: 20, scope: !5174)
!5176 = !DILocation(line: 2745, column: 23, scope: !5174)
!5177 = !DILocation(line: 2745, column: 38, scope: !5174)
!5178 = !DILocation(line: 2745, column: 35, scope: !5174)
!5179 = !DILocation(line: 2747, column: 4, scope: !5174)
!5180 = !DILocation(line: 2747, column: 8, scope: !5174)
!5181 = !DILocation(line: 2747, column: 16, scope: !5174)
!5182 = !DILocation(line: 2747, column: 30, scope: !5174)
!5183 = !DILocation(line: 2747, column: 28, scope: !5174)
!5184 = !DILocation(line: 2750, column: 4, scope: !5174)
!5185 = !DILocation(line: 2750, column: 8, scope: !5174)
!5186 = !DILocation(line: 2750, column: 19, scope: !5174)
!5187 = !DILocation(line: 2750, column: 31, scope: !5174)
!5188 = !DILocation(line: 2750, column: 34, scope: !5174)
!5189 = !DILocation(line: 2750, column: 58, scope: !5174)
!5190 = !DILocation(line: 2751, column: 4, scope: !5174)
!5191 = !DILocation(line: 2751, column: 9, scope: !5174)
!5192 = !DILocation(line: 2751, column: 15, scope: !5174)
!5193 = !DILocation(line: 2745, column: 9, scope: !5048)
!5194 = !DILocation(line: 2752, column: 7, scope: !5174)
!5195 = !DILocation(line: 2752, column: 18, scope: !5174)
!5196 = !DILocation(line: 2752, column: 2, scope: !5174)
!5197 = !DILocation(line: 2754, column: 9, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2754, column: 9)
!5199 = !DILocation(line: 2754, column: 15, scope: !5198)
!5200 = !DILocation(line: 2754, column: 9, scope: !5048)
!5201 = !DILocation(line: 2755, column: 9, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !5198, file: !1256, line: 2754, column: 44)
!5203 = !DILocation(line: 2756, column: 27, scope: !5202)
!5204 = !DILocation(line: 2757, column: 15, scope: !5202)
!5205 = !DILocation(line: 2758, column: 14, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5202, file: !1256, line: 2758, column: 14)
!5207 = !DILocation(line: 2758, column: 20, scope: !5206)
!5208 = !DILocation(line: 2758, column: 14, scope: !5202)
!5209 = !DILocation(line: 2759, column: 35, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5206, file: !1256, line: 2758, column: 39)
!5211 = !DILocation(line: 2759, column: 23, scope: !5210)
!5212 = !DILocation(line: 2759, column: 33, scope: !5210)
!5213 = !DILocation(line: 2760, column: 23, scope: !5210)
!5214 = !DILocation(line: 2760, column: 31, scope: !5210)
!5215 = !DILocation(line: 2761, column: 23, scope: !5210)
!5216 = !DILocation(line: 2761, column: 39, scope: !5210)
!5217 = !DILocation(line: 2762, column: 9, scope: !5210)
!5218 = !DILocation(line: 2763, column: 35, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5206, file: !1256, line: 2762, column: 16)
!5220 = !DILocation(line: 2763, column: 23, scope: !5219)
!5221 = !DILocation(line: 2763, column: 33, scope: !5219)
!5222 = !DILocation(line: 2764, column: 23, scope: !5219)
!5223 = !DILocation(line: 2764, column: 31, scope: !5219)
!5224 = !DILocation(line: 2766, column: 26, scope: !5202)
!5225 = !DILocation(line: 2766, column: 14, scope: !5202)
!5226 = !DILocation(line: 2766, column: 24, scope: !5202)
!5227 = !DILocation(line: 2767, column: 14, scope: !5202)
!5228 = !DILocation(line: 2767, column: 22, scope: !5202)
!5229 = !DILocation(line: 2768, column: 5, scope: !5202)
!5230 = !DILocation(line: 2770, column: 11, scope: !5114)
!5231 = !DILocation(line: 2770, column: 17, scope: !5114)
!5232 = !DILocation(line: 2770, column: 9, scope: !5048)
!5233 = !DILocation(line: 2771, column: 2, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5235, file: !1256, line: 2771, column: 2)
!5235 = distinct !DILexicalBlock(scope: !5114, file: !1256, line: 2770, column: 28)
!5236 = !DILocation(line: 2772, column: 2, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5235, file: !1256, line: 2772, column: 2)
!5238 = !DILocation(line: 2772, column: 2, scope: !5235)
!5239 = !DILocation(line: 2772, column: 2, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5235, file: !1256, line: 2772, column: 2)
!5241 = !DILocation(line: 2773, column: 11, scope: !5235)
!5242 = !DILocation(line: 2773, column: 26, scope: !5235)
!5243 = !DILocation(line: 2773, column: 40, scope: !5235)
!5244 = !DILocation(line: 2773, column: 23, scope: !5235)
!5245 = !DILocation(line: 2773, column: 9, scope: !5235)
!5246 = !DILocation(line: 2774, column: 2, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5235, file: !1256, line: 2774, column: 2)
!5248 = !DILocation(line: 2775, column: 5, scope: !5235)
!5249 = !DILocation(line: 2777, column: 7, scope: !5113)
!5250 = !DILocation(line: 2777, column: 16, scope: !5113)
!5251 = !DILocation(line: 2778, column: 18, scope: !5113)
!5252 = !DILocation(line: 2779, column: 2, scope: !5113)
!5253 = !DILocation(line: 2780, column: 18, scope: !5113)
!5254 = !DILocation(line: 2782, column: 2, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5113, file: !1256, line: 2782, column: 2)
!5256 = !DILocation(line: 2784, column: 2, scope: !5113)
!5257 = !DILocation(line: 2787, column: 6, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2787, column: 6)
!5259 = !DILocation(line: 2786, column: 2, scope: !5112)
!5260 = !DILocation(line: 2787, column: 6, scope: !5112)
!5261 = !DILocation(line: 2787, column: 6, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2787, column: 6)
!5263 = !DILocation(line: 2788, column: 15, scope: !5112)
!5264 = !DILocation(line: 2788, column: 30, scope: !5112)
!5265 = !DILocation(line: 2788, column: 44, scope: !5112)
!5266 = !DILocation(line: 2788, column: 27, scope: !5112)
!5267 = !DILocation(line: 2788, column: 13, scope: !5112)
!5268 = !DILocation(line: 2789, column: 12, scope: !5111)
!5269 = !DILocation(line: 2789, column: 18, scope: !5111)
!5270 = !DILocation(line: 2789, column: 10, scope: !5112)
!5271 = !DILocation(line: 2790, column: 3, scope: !5109)
!5272 = !DILocation(line: 0, scope: !5109)
!5273 = !DILocation(line: 2790, column: 3, scope: !5118)
!5274 = !DILocation(line: 2790, column: 3, scope: !5117)
!5275 = !DILocation(line: 0, scope: !3784, inlinedAt: !5276)
!5276 = distinct !DILocation(line: 2790, column: 3, scope: !5121)
!5277 = !DILocation(line: 173, column: 14, scope: !3784, inlinedAt: !5276)
!5278 = !DILocation(line: 174, column: 9, scope: !3791, inlinedAt: !5276)
!5279 = !DILocation(line: 174, column: 9, scope: !3784, inlinedAt: !5276)
!5280 = !DILocation(line: 175, column: 20, scope: !3791, inlinedAt: !5276)
!5281 = !DILocation(line: 175, column: 15, scope: !3791, inlinedAt: !5276)
!5282 = !DILocation(line: 175, column: 2, scope: !3791, inlinedAt: !5276)
!5283 = !DILocation(line: 177, column: 2, scope: !3791, inlinedAt: !5276)
!5284 = !DILocation(line: 2790, column: 3, scope: !5121)
!5285 = !DILocation(line: 0, scope: !5116)
!5286 = !DILocation(line: 2790, column: 3, scope: !5116)
!5287 = !DILocation(line: 2790, column: 3, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5116, file: !1256, line: 2790, column: 3)
!5289 = !DILocation(line: 2790, column: 3, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5288, file: !1256, line: 2790, column: 3)
!5291 = !DILocation(line: 2794, column: 6, scope: !5112)
!5292 = !DILocation(line: 2798, column: 6, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2798, column: 6)
!5294 = !DILocation(line: 2798, column: 6, scope: !5112)
!5295 = !DILocation(line: 0, scope: !1968, inlinedAt: !5296)
!5296 = distinct !DILocation(line: 2798, column: 6, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5293, file: !1256, line: 2798, column: 6)
!5298 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !5296)
!5299 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !5296)
!5300 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !5296)
!5301 = !DILocation(line: 0, scope: !1974, inlinedAt: !5296)
!5302 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !5296)
!5303 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !5296)
!5304 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !5296)
!5305 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !5296)
!5306 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !5296)
!5307 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !5296)
!5308 = !DILocation(line: 2798, column: 6, scope: !5297)
!5309 = !DILocation(line: 0, scope: !3393, inlinedAt: !5310)
!5310 = distinct !DILocation(line: 2798, column: 6, scope: !5297)
!5311 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !5310)
!5312 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !5310)
!5313 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !5310)
!5314 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !5310)
!5315 = !DILocation(line: 2799, column: 6, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2799, column: 6)
!5317 = !DILocation(line: 2799, column: 6, scope: !5112)
!5318 = !DILocation(line: 2800, column: 6, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2800, column: 6)
!5320 = !DILocation(line: 2801, column: 6, scope: !5112)
!5321 = !DILocation(line: 2802, column: 6, scope: !5112)
!5322 = !DILocation(line: 2804, column: 10, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2804, column: 10)
!5324 = !DILocation(line: 2804, column: 10, scope: !5112)
!5325 = !DILocation(line: 2805, column: 20, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5323, file: !1256, line: 2804, column: 24)
!5327 = !DILocation(line: 2806, column: 9, scope: !5326)
!5328 = !DILocation(line: 2807, column: 16, scope: !5326)
!5329 = !DILocation(line: 2808, column: 3, scope: !5326)
!5330 = !DILocation(line: 2810, column: 20, scope: !5112)
!5331 = !DILocation(line: 2810, column: 34, scope: !5112)
!5332 = !DILocation(line: 2810, column: 18, scope: !5112)
!5333 = !DILocation(line: 2811, column: 11, scope: !5334)
!5334 = distinct !DILexicalBlock(scope: !5112, file: !1256, line: 2811, column: 10)
!5335 = !DILocation(line: 2811, column: 17, scope: !5334)
!5336 = !DILocation(line: 2811, column: 27, scope: !5334)
!5337 = !DILocation(line: 2811, column: 10, scope: !5112)
!5338 = !DILocation(line: 2812, column: 10, scope: !5334)
!5339 = !DILocation(line: 2812, column: 3, scope: !5334)
!5340 = !DILocation(line: 2814, column: 10, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5334, file: !1256, line: 2813, column: 11)
!5342 = !DILocation(line: 2815, column: 4, scope: !5341)
!5343 = !DILocation(line: 2815, column: 18, scope: !5341)
!5344 = !DILocation(line: 2820, column: 6, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5113, file: !1256, line: 2820, column: 6)
!5346 = !DILocation(line: 2820, column: 23, scope: !5345)
!5347 = !DILocation(line: 2820, column: 6, scope: !5113)
!5348 = !DILocation(line: 2821, column: 6, scope: !5345)
!5349 = !DILocation(line: 2822, column: 2, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5113, file: !1256, line: 2822, column: 2)
!5351 = !DILocation(line: 2825, column: 9, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5048, file: !1256, line: 2825, column: 9)
!5353 = !DILocation(line: 2825, column: 15, scope: !5352)
!5354 = !DILocation(line: 2825, column: 9, scope: !5048)
!5355 = !DILocation(line: 2826, column: 16, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5352, file: !1256, line: 2825, column: 28)
!5357 = !DILocation(line: 2826, column: 30, scope: !5356)
!5358 = !DILocation(line: 2826, column: 14, scope: !5356)
!5359 = !DILocation(line: 2827, column: 9, scope: !5356)
!5360 = !DILocation(line: 2828, column: 2, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5356, file: !1256, line: 2828, column: 2)
!5362 = !DILocation(line: 2828, column: 2, scope: !5356)
!5363 = !DILocation(line: 2829, column: 2, scope: !5356)
!5364 = !DILocation(line: 2830, column: 5, scope: !5356)
!5365 = !DILocation(line: 2831, column: 11, scope: !5048)
!5366 = !DILocation(line: 2832, column: 12, scope: !5048)
!5367 = !DILocation(line: 2833, column: 1, scope: !5048)
!5368 = !DILocation(line: 2832, column: 5, scope: !5048)
!5369 = distinct !DISubprogram(name: "Perl_call_method", scope: !1256, file: !1256, line: 2665, type: !5007, scopeLine: 2668, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5370)
!5370 = !{!5371, !5372, !5373, !5374}
!5371 = !DILocalVariable(name: "methname", arg: 1, scope: !5369, file: !1256, line: 2665, type: !876)
!5372 = !DILocalVariable(name: "flags", arg: 2, scope: !5369, file: !1256, line: 2665, type: !609)
!5373 = !DILocalVariable(name: "len", scope: !5369, file: !1256, line: 2669, type: !560)
!5374 = !DILocalVariable(name: "sv", scope: !5369, file: !1256, line: 2670, type: !530)
!5375 = !DILocation(line: 0, scope: !5369)
!5376 = !DILocation(line: 2673, column: 11, scope: !5369)
!5377 = !DILocation(line: 2674, column: 16, scope: !5369)
!5378 = !DILocation(line: 2674, column: 10, scope: !5369)
!5379 = !DILocation(line: 2675, column: 11, scope: !5369)
!5380 = !DILocation(line: 2676, column: 11, scope: !5369)
!5381 = !DILocation(line: 2678, column: 12, scope: !5369)
!5382 = !DILocation(line: 2678, column: 5, scope: !5369)
!5383 = !DISubprogram(name: "Perl_newSVpvn_share", scope: !1566, file: !1566, line: 3120, type: !5384, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{!530, !876, !609, !487}
!5386 = !DISubprogram(name: "Perl_newSVpvn_flags", scope: !1566, file: !1566, line: 3116, type: !5387, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!530, !875, !1570, !878}
!5389 = !DISubprogram(name: "Perl_save_strlen", scope: !1566, file: !1566, line: 3940, type: !5390, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5390 = !DISubroutineType(types: !5391)
!5391 = !{null, !1071}
!5392 = !DISubprogram(name: "Perl_save_pushptr", scope: !1566, file: !1566, line: 3917, type: !5393, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{null, !5395, !1264}
!5395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !535)
!5396 = !DISubprogram(name: "Perl_create_eval_scope", scope: !1566, file: !1566, line: 740, type: !5397, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5397 = !DISubroutineType(types: !5398)
!5398 = !{!3031, !487}
!5399 = !DISubprogram(name: "Perl_mg_free", scope: !1566, file: !1566, line: 2660, type: !5400, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{!477, !530}
!5402 = distinct !DISubprogram(name: "S_my_exit_jump", scope: !1256, file: !1256, line: 5078, type: !1276, scopeLine: 5079, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5403)
!5403 = !{!5404, !5408}
!5404 = !DILocalVariable(name: "sp", scope: !5405, file: !1256, line: 5085, type: !594)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !1256, line: 5085, column: 5)
!5406 = distinct !DILexicalBlock(scope: !5407, file: !1256, line: 5085, column: 5)
!5407 = distinct !DILexicalBlock(scope: !5402, file: !1256, line: 5085, column: 5)
!5408 = !DILocalVariable(name: "prev", scope: !5405, file: !1256, line: 5085, type: !4710)
!5409 = !DILocation(line: 5080, column: 9, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5402, file: !1256, line: 5080, column: 9)
!5411 = !DILocation(line: 5080, column: 9, scope: !5402)
!5412 = !DILocation(line: 0, scope: !1968, inlinedAt: !5413)
!5413 = distinct !DILocation(line: 5081, column: 2, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5410, file: !1256, line: 5080, column: 22)
!5415 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !5413)
!5416 = !DILocation(line: 0, scope: !1974, inlinedAt: !5413)
!5417 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !5413)
!5418 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !5413)
!5419 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !5413)
!5420 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !5413)
!5421 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !5413)
!5422 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !5413)
!5423 = !DILocation(line: 5082, column: 14, scope: !5414)
!5424 = !DILocation(line: 5083, column: 5, scope: !5414)
!5425 = !DILocation(line: 5085, column: 5, scope: !5407)
!5426 = !DILocation(line: 5085, column: 5, scope: !5406)
!5427 = !DILocation(line: 5085, column: 5, scope: !5405)
!5428 = !DILocation(line: 0, scope: !5405)
!5429 = !DILocation(line: 5085, column: 5, scope: !5430)
!5430 = distinct !DILexicalBlock(scope: !5405, file: !1256, line: 5085, column: 5)
!5431 = !DILocation(line: 5085, column: 5, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5430, file: !1256, line: 5085, column: 5)
!5433 = !DILocation(line: 5085, column: 5, scope: !5434)
!5434 = distinct !DILexicalBlock(scope: !5405, file: !1256, line: 5085, column: 5)
!5435 = distinct !{!5435, !5425, !5425, !2029, !2030}
!5436 = !DILocation(line: 5086, column: 5, scope: !5402)
!5437 = !DILocation(line: 5087, column: 5, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !1256, line: 5087, column: 5)
!5439 = distinct !DILexicalBlock(scope: !5402, file: !1256, line: 5087, column: 5)
!5440 = !DILocation(line: 5087, column: 5, scope: !5439)
!5441 = !DILocation(line: 5089, column: 5, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5443, file: !1256, line: 5089, column: 5)
!5443 = distinct !DILexicalBlock(scope: !5402, file: !1256, line: 5089, column: 5)
!5444 = !DILocation(line: 5089, column: 5, scope: !5443)
!5445 = !DILocation(line: 5089, column: 5, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5443, file: !1256, line: 5089, column: 5)
!5447 = !DISubprogram(name: "Perl_delete_eval_scope", scope: !1566, file: !1566, line: 902, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5448 = distinct !DISubprogram(name: "Perl_eval_sv", scope: !1256, file: !1256, line: 2847, type: !5449, scopeLine: 2850, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5451)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!609, !530, !609}
!5451 = !{!5452, !5453, !5454, !5455, !5474, !5475, !5476, !5477, !5478, !5479, !5484, !5488, !5489, !5491}
!5452 = !DILocalVariable(name: "sv", arg: 1, scope: !5448, file: !1256, line: 2847, type: !530)
!5453 = !DILocalVariable(name: "flags", arg: 2, scope: !5448, file: !1256, line: 2847, type: !609)
!5454 = !DILocalVariable(name: "sp", scope: !5448, file: !1256, line: 2852, type: !594)
!5455 = !DILocalVariable(name: "myop", scope: !5448, file: !1256, line: 2853, type: !5456)
!5456 = !DIDerivedType(tag: DW_TAG_typedef, name: "UNOP", file: !27, line: 2619, baseType: !5457)
!5457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unop", file: !763, line: 206, size: 384, elements: !5458)
!5458 = !{!5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "op_next", scope: !5457, file: !763, line: 207, baseType: !760, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "op_sibling", scope: !5457, file: !763, line: 207, baseType: !760, size: 64, offset: 64)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "op_ppaddr", scope: !5457, file: !763, line: 207, baseType: !768, size: 64, offset: 128)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "op_targ", scope: !5457, file: !763, line: 207, baseType: !772, size: 64, offset: 192)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "op_type", scope: !5457, file: !763, line: 207, baseType: !7, size: 9, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "op_opt", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 265, flags: DIFlagBitField, extraData: i64 256)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "op_slabbed", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 266, flags: DIFlagBitField, extraData: i64 256)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "op_savefree", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 267, flags: DIFlagBitField, extraData: i64 256)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "op_static", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 268, flags: DIFlagBitField, extraData: i64 256)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "op_folded", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 269, flags: DIFlagBitField, extraData: i64 256)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "op_moresib", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 270, flags: DIFlagBitField, extraData: i64 256)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "op_spare", scope: !5457, file: !763, line: 207, baseType: !7, size: 1, offset: 271, flags: DIFlagBitField, extraData: i64 256)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "op_flags", scope: !5457, file: !763, line: 207, baseType: !719, size: 8, offset: 272)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "op_private", scope: !5457, file: !763, line: 207, baseType: !719, size: 8, offset: 280)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "op_first", scope: !5457, file: !763, line: 208, baseType: !760, size: 64, offset: 320)
!5474 = !DILocalVariable(name: "oldmark", scope: !5448, file: !1256, line: 2854, type: !5051)
!5475 = !DILocalVariable(name: "retval", scope: !5448, file: !1256, line: 2855, type: !5051)
!5476 = !DILocalVariable(name: "ret", scope: !5448, file: !1256, line: 2856, type: !477)
!5477 = !DILocalVariable(name: "oldop", scope: !5448, file: !1256, line: 2857, type: !5106)
!5478 = !DILocalVariable(name: "cur_env", scope: !5448, file: !1256, line: 2858, type: !1644)
!5479 = !DILocalVariable(name: "svp", scope: !5480, file: !1256, line: 2899, type: !924)
!5480 = distinct !DILexicalBlock(scope: !5481, file: !1256, line: 2899, column: 6)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !1256, line: 2898, column: 28)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2898, column: 6)
!5483 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2888, column: 18)
!5484 = !DILocalVariable(name: "errsv", scope: !5485, file: !1256, line: 2899, type: !865)
!5485 = distinct !DILexicalBlock(scope: !5486, file: !1256, line: 2899, column: 6)
!5486 = distinct !DILexicalBlock(scope: !5487, file: !1256, line: 2899, column: 6)
!5487 = distinct !DILexicalBlock(scope: !5480, file: !1256, line: 2899, column: 6)
!5488 = !DILabel(scope: !5483, name: "redo_body", file: !1256, line: 2890)
!5489 = !DILabel(scope: !5490, name: "clresv_newemptypv", file: !1256, line: 2899)
!5490 = distinct !DILexicalBlock(scope: !5486, file: !1256, line: 2899, column: 6)
!5491 = !DILabel(scope: !5483, name: "fail", file: !1256, line: 2919)
!5492 = !DILocation(line: 0, scope: !5448)
!5493 = !DILocation(line: 2852, column: 5, scope: !5448)
!5494 = !DILocation(line: 2853, column: 5, scope: !5448)
!5495 = !DILocation(line: 2853, column: 10, scope: !5448)
!5496 = !DILocation(line: 2854, column: 5, scope: !5448)
!5497 = !DILocation(line: 2854, column: 13, scope: !5448)
!5498 = !DILocation(line: 2854, column: 28, scope: !5448)
!5499 = !DILocation(line: 2854, column: 26, scope: !5448)
!5500 = !DILocation(line: 2854, column: 23, scope: !5448)
!5501 = !DILocation(line: 2855, column: 5, scope: !5448)
!5502 = !DILocation(line: 2855, column: 13, scope: !5448)
!5503 = !DILocation(line: 2857, column: 23, scope: !5448)
!5504 = !DILocation(line: 2858, column: 5, scope: !5448)
!5505 = !DILocation(line: 2862, column: 15, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2862, column: 9)
!5507 = !DILocation(line: 2862, column: 9, scope: !5448)
!5508 = !DILocation(line: 2863, column: 2, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5506, file: !1256, line: 2862, column: 28)
!5510 = !DILocation(line: 2864, column: 2, scope: !5509)
!5511 = !DILocation(line: 2867, column: 5, scope: !5448)
!5512 = !DILocation(line: 2865, column: 5, scope: !5509)
!5513 = !DILocation(line: 2868, column: 11, scope: !5448)
!5514 = !DILocation(line: 2869, column: 5, scope: !5448)
!5515 = !DILocation(line: 2870, column: 5, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5517, file: !1256, line: 2870, column: 5)
!5517 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2870, column: 5)
!5518 = !DILocation(line: 2870, column: 5, scope: !5517)
!5519 = !DILocation(line: 2870, column: 5, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5516, file: !1256, line: 2870, column: 5)
!5521 = !DILocation(line: 2871, column: 6, scope: !5448)
!5522 = !DILocation(line: 2871, column: 20, scope: !5448)
!5523 = !DILocation(line: 2873, column: 17, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2873, column: 9)
!5525 = !DILocation(line: 2873, column: 9, scope: !5448)
!5526 = !DILocation(line: 2876, column: 19, scope: !5448)
!5527 = !DILocation(line: 2875, column: 10, scope: !5448)
!5528 = !DILocation(line: 2875, column: 18, scope: !5448)
!5529 = !DILocation(line: 2876, column: 22, scope: !5448)
!5530 = !DILocation(line: 2876, column: 10, scope: !5448)
!5531 = !DILocation(line: 2877, column: 15, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2877, column: 9)
!5533 = !DILocation(line: 2877, column: 9, scope: !5448)
!5534 = !DILocation(line: 2880, column: 15, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2880, column: 9)
!5536 = !DILocation(line: 2880, column: 9, scope: !5448)
!5537 = !DILocation(line: 2881, column: 7, scope: !5535)
!5538 = !DILocation(line: 2881, column: 18, scope: !5535)
!5539 = !DILocation(line: 2881, column: 2, scope: !5535)
!5540 = !DILocation(line: 2885, column: 5, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2885, column: 5)
!5542 = !DILocation(line: 2885, column: 5, scope: !5448)
!5543 = !DILocation(line: 2885, column: 5, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5541, file: !1256, line: 2885, column: 5)
!5545 = !DILocation(line: 2887, column: 5, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2887, column: 5)
!5547 = !DILocation(line: 2888, column: 5, scope: !5448)
!5548 = !DILocation(line: 2891, column: 6, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2891, column: 6)
!5550 = !DILocation(line: 2890, column: 2, scope: !5483)
!5551 = !DILocation(line: 2891, column: 12, scope: !5549)
!5552 = !DILocation(line: 2891, column: 6, scope: !5483)
!5553 = !DILocation(line: 2892, column: 14, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5549, file: !1256, line: 2891, column: 29)
!5555 = !DILocation(line: 2892, column: 12, scope: !5554)
!5556 = !DILocation(line: 2893, column: 11, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5554, file: !1256, line: 2893, column: 10)
!5558 = !DILocation(line: 2893, column: 10, scope: !5554)
!5559 = !DILocation(line: 2896, column: 2, scope: !5483)
!5560 = !DILocation(line: 2897, column: 11, scope: !5483)
!5561 = !DILocation(line: 2897, column: 26, scope: !5483)
!5562 = !DILocation(line: 2897, column: 42, scope: !5483)
!5563 = !DILocation(line: 2897, column: 40, scope: !5483)
!5564 = !DILocation(line: 2897, column: 23, scope: !5483)
!5565 = !DILocation(line: 2897, column: 9, scope: !5483)
!5566 = !DILocation(line: 2898, column: 6, scope: !5483)
!5567 = !DILocation(line: 2899, column: 6, scope: !5480)
!5568 = !DILocation(line: 0, scope: !5480)
!5569 = !DILocation(line: 2899, column: 6, scope: !5487)
!5570 = !DILocation(line: 2899, column: 6, scope: !5486)
!5571 = !DILocation(line: 0, scope: !3784, inlinedAt: !5572)
!5572 = distinct !DILocation(line: 2899, column: 6, scope: !5490)
!5573 = !DILocation(line: 173, column: 14, scope: !3784, inlinedAt: !5572)
!5574 = !DILocation(line: 174, column: 9, scope: !3791, inlinedAt: !5572)
!5575 = !DILocation(line: 174, column: 9, scope: !3784, inlinedAt: !5572)
!5576 = !DILocation(line: 175, column: 20, scope: !3791, inlinedAt: !5572)
!5577 = !DILocation(line: 175, column: 15, scope: !3791, inlinedAt: !5572)
!5578 = !DILocation(line: 175, column: 2, scope: !3791, inlinedAt: !5572)
!5579 = !DILocation(line: 177, column: 2, scope: !3791, inlinedAt: !5572)
!5580 = !DILocation(line: 2899, column: 6, scope: !5490)
!5581 = !DILocation(line: 0, scope: !5485)
!5582 = !DILocation(line: 2899, column: 6, scope: !5485)
!5583 = !DILocation(line: 2899, column: 6, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5485, file: !1256, line: 2899, column: 6)
!5585 = !DILocation(line: 2899, column: 6, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5584, file: !1256, line: 2899, column: 6)
!5587 = !DILocation(line: 2903, column: 2, scope: !5483)
!5588 = !DILocation(line: 2907, column: 2, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2907, column: 2)
!5590 = !DILocation(line: 2907, column: 2, scope: !5483)
!5591 = !DILocation(line: 0, scope: !1968, inlinedAt: !5592)
!5592 = distinct !DILocation(line: 2907, column: 2, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5589, file: !1256, line: 2907, column: 2)
!5594 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !5592)
!5595 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !5592)
!5596 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !5592)
!5597 = !DILocation(line: 0, scope: !1974, inlinedAt: !5592)
!5598 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !5592)
!5599 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !5592)
!5600 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !5592)
!5601 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !5592)
!5602 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !5592)
!5603 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !5592)
!5604 = !DILocation(line: 2907, column: 2, scope: !5593)
!5605 = !DILocation(line: 0, scope: !3393, inlinedAt: !5606)
!5606 = distinct !DILocation(line: 2907, column: 2, scope: !5593)
!5607 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !5606)
!5608 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !5606)
!5609 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !5606)
!5610 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !5606)
!5611 = !DILocation(line: 2908, column: 2, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2908, column: 2)
!5613 = !DILocation(line: 2908, column: 2, scope: !5483)
!5614 = !DILocation(line: 2909, column: 2, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2909, column: 2)
!5616 = !DILocation(line: 2910, column: 2, scope: !5483)
!5617 = !DILocation(line: 2911, column: 2, scope: !5483)
!5618 = !DILocation(line: 2913, column: 6, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2913, column: 6)
!5620 = !DILocation(line: 2913, column: 6, scope: !5483)
!5621 = !DILocation(line: 2914, column: 23, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5619, file: !1256, line: 2913, column: 20)
!5623 = !DILocation(line: 2915, column: 12, scope: !5622)
!5624 = !DILocation(line: 2916, column: 19, scope: !5622)
!5625 = !DILocation(line: 2917, column: 6, scope: !5622)
!5626 = !DILocation(line: 2919, column: 7, scope: !5483)
!5627 = !DILocation(line: 2920, column: 16, scope: !5483)
!5628 = !DILocation(line: 2920, column: 32, scope: !5483)
!5629 = !DILocation(line: 2920, column: 30, scope: !5483)
!5630 = !DILocation(line: 2920, column: 14, scope: !5483)
!5631 = !DILocation(line: 2921, column: 23, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5483, file: !1256, line: 2921, column: 6)
!5633 = !DILocation(line: 2921, column: 6, scope: !5483)
!5634 = !DILocation(line: 2922, column: 13, scope: !5632)
!5635 = !DILocation(line: 2922, column: 6, scope: !5632)
!5636 = !DILocation(line: 2924, column: 13, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5632, file: !1256, line: 2923, column: 7)
!5638 = !DILocation(line: 2925, column: 7, scope: !5637)
!5639 = !DILocation(line: 2925, column: 21, scope: !5637)
!5640 = !DILocation(line: 2930, column: 5, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2930, column: 5)
!5642 = !DILocation(line: 2931, column: 9, scope: !5448)
!5643 = !DILocation(line: 2932, column: 16, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !1256, line: 2931, column: 28)
!5645 = distinct !DILexicalBlock(scope: !5448, file: !1256, line: 2931, column: 9)
!5646 = !DILocation(line: 2932, column: 32, scope: !5644)
!5647 = !DILocation(line: 2932, column: 30, scope: !5644)
!5648 = !DILocation(line: 2932, column: 14, scope: !5644)
!5649 = !DILocation(line: 2933, column: 9, scope: !5644)
!5650 = !DILocation(line: 2934, column: 2, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5644, file: !1256, line: 2934, column: 2)
!5652 = !DILocation(line: 2934, column: 2, scope: !5644)
!5653 = !DILocation(line: 2935, column: 2, scope: !5644)
!5654 = !DILocation(line: 2936, column: 5, scope: !5644)
!5655 = !DILocation(line: 2937, column: 11, scope: !5448)
!5656 = !DILocation(line: 2938, column: 12, scope: !5448)
!5657 = !DILocation(line: 2939, column: 1, scope: !5448)
!5658 = !DILocation(line: 2938, column: 5, scope: !5448)
!5659 = !DISubprogram(name: "Perl_taint_proper", scope: !1566, file: !1566, line: 4875, type: !5660, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5660 = !DISubroutineType(types: !5661)
!5661 = !{null, !876, !875}
!5662 = distinct !DISubprogram(name: "Perl_eval_pv", scope: !1256, file: !1256, line: 2950, type: !3834, scopeLine: 2951, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5663)
!5663 = !{!5664, !5665, !5666, !5667, !5669}
!5664 = !DILocalVariable(name: "p", arg: 1, scope: !5662, file: !1256, line: 2950, type: !876)
!5665 = !DILocalVariable(name: "croak_on_error", arg: 2, scope: !5662, file: !1256, line: 2950, type: !609)
!5666 = !DILocalVariable(name: "sv", scope: !5662, file: !1256, line: 2952, type: !530)
!5667 = !DILocalVariable(name: "sp", scope: !5668, file: !1256, line: 2960, type: !594)
!5668 = distinct !DILexicalBlock(scope: !5662, file: !1256, line: 2959, column: 5)
!5669 = !DILocalVariable(name: "errsv", scope: !5670, file: !1256, line: 2967, type: !865)
!5670 = distinct !DILexicalBlock(scope: !5671, file: !1256, line: 2966, column: 25)
!5671 = distinct !DILexicalBlock(scope: !5662, file: !1256, line: 2966, column: 9)
!5672 = !DILocation(line: 0, scope: !5662)
!5673 = !DILocation(line: 2952, column: 14, scope: !5662)
!5674 = !DILocation(line: 2956, column: 5, scope: !5662)
!5675 = !DILocation(line: 0, scope: !1968, inlinedAt: !5676)
!5676 = distinct !DILocation(line: 2957, column: 5, scope: !5662)
!5677 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !5676)
!5678 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !5676)
!5679 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !5676)
!5680 = !DILocation(line: 0, scope: !1974, inlinedAt: !5676)
!5681 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !5676)
!5682 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !5676)
!5683 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !5676)
!5684 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !5676)
!5685 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !5676)
!5686 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !5676)
!5687 = !DILocation(line: 2960, column: 9, scope: !5668)
!5688 = !DILocation(line: 0, scope: !5668)
!5689 = !DILocation(line: 2961, column: 14, scope: !5668)
!5690 = !DILocation(line: 2962, column: 9, scope: !5668)
!5691 = !DILocation(line: 2966, column: 9, scope: !5671)
!5692 = !DILocation(line: 2966, column: 9, scope: !5662)
!5693 = !DILocation(line: 2967, column: 21, scope: !5670)
!5694 = !DILocation(line: 0, scope: !5670)
!5695 = !DILocation(line: 2968, column: 5, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5670, file: !1256, line: 2968, column: 5)
!5697 = !DILocation(line: 2968, column: 5, scope: !5670)
!5698 = !DILocation(line: 2970, column: 33, scope: !5696)
!5699 = !DILocation(line: 2970, column: 6, scope: !5696)
!5700 = !DILocation(line: 2973, column: 5, scope: !5662)
!5701 = !DISubprogram(name: "Perl_sv_2bool_flags", scope: !1566, file: !1566, line: 4088, type: !5702, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!795, !530, !609}
!5704 = !DISubprogram(name: "Perl_croak", scope: !1566, file: !1566, line: 741, type: !5705, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5705 = !DISubroutineType(types: !5706)
!5706 = !{null, !876, null}
!5707 = !DISubprogram(name: "Perl_sv_2pv_flags", scope: !1566, file: !1566, line: 4130, type: !5708, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5708 = !DISubroutineType(types: !5709)
!5709 = !{!486, !865, !5710, !899}
!5710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1071)
!5711 = distinct !DISubprogram(name: "Perl_require_pv", scope: !1256, file: !1256, line: 2990, type: !5712, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5714)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{null, !876}
!5714 = !{!5715, !5716, !5717, !5718, !5720, !5722}
!5715 = !DILocalVariable(name: "pv", arg: 1, scope: !5711, file: !1256, line: 2990, type: !876)
!5716 = !DILocalVariable(name: "sp", scope: !5711, file: !1256, line: 2992, type: !594)
!5717 = !DILocalVariable(name: "sv", scope: !5711, file: !1256, line: 2993, type: !530)
!5718 = !DILocalVariable(name: "next", scope: !5719, file: !1256, line: 2997, type: !3025)
!5719 = distinct !DILexicalBlock(scope: !5711, file: !1256, line: 2997, column: 5)
!5720 = !DILocalVariable(name: "sp", scope: !5721, file: !1256, line: 3000, type: !594)
!5721 = distinct !DILexicalBlock(scope: !5711, file: !1256, line: 3000, column: 5)
!5722 = !DILocalVariable(name: "prev", scope: !5721, file: !1256, line: 3000, type: !4710)
!5723 = !DILocation(line: 0, scope: !5711)
!5724 = !DILocation(line: 2992, column: 5, scope: !5711)
!5725 = !DILocation(line: 2997, column: 5, scope: !5719)
!5726 = !DILocation(line: 0, scope: !5719)
!5727 = !DILocation(line: 2997, column: 5, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5719, file: !1256, line: 2997, column: 5)
!5729 = !DILocation(line: 2997, column: 5, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5728, file: !1256, line: 2997, column: 5)
!5731 = !DILocation(line: 2997, column: 5, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5719, file: !1256, line: 2997, column: 5)
!5733 = !DILocation(line: 2998, column: 10, scope: !5711)
!5734 = !DILocation(line: 2999, column: 5, scope: !5711)
!5735 = !DILocation(line: 3000, column: 5, scope: !5721)
!5736 = !DILocation(line: 0, scope: !5721)
!5737 = !DILocation(line: 3000, column: 5, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5721, file: !1256, line: 3000, column: 5)
!5739 = !DILocation(line: 3000, column: 5, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5738, file: !1256, line: 3000, column: 5)
!5741 = !DILocation(line: 3000, column: 5, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5721, file: !1256, line: 3000, column: 5)
!5743 = !DILocation(line: 3001, column: 1, scope: !5711)
!5744 = !DISubprogram(name: "Perl_new_stackinfo", scope: !1566, file: !1566, line: 3186, type: !5745, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!3025, !609, !609}
!5747 = !DISubprogram(name: "Perl_newSVpvf", scope: !1566, file: !1566, line: 3104, type: !5748, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!5748 = !DISubroutineType(types: !5749)
!5749 = !{!530, !875, null}
!5750 = distinct !DISubprogram(name: "Perl_moreswitches", scope: !1256, file: !1256, line: 3126, type: !5751, scopeLine: 3127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5753)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!876, !876}
!5753 = !{!5754, !5755, !5756, !5757, !5760, !5761, !5764, !5765, !5770, !5773, !5774, !5775, !5777, !5780, !5781, !5784, !5785, !5788, !5789, !5790, !5791}
!5754 = !DILocalVariable(name: "s", arg: 1, scope: !5750, file: !1256, line: 3126, type: !876)
!5755 = !DILocalVariable(name: "rschar", scope: !5750, file: !1256, line: 3129, type: !546)
!5756 = !DILocalVariable(name: "option", scope: !5750, file: !1256, line: 3130, type: !877)
!5757 = !DILocalVariable(name: "flags", scope: !5758, file: !1256, line: 3137, type: !609)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3136, column: 5)
!5759 = distinct !DILexicalBlock(scope: !5750, file: !1256, line: 3134, column: 17)
!5760 = !DILocalVariable(name: "numlen", scope: !5758, file: !1256, line: 3138, type: !560)
!5761 = !DILocalVariable(name: "e", scope: !5762, file: !1256, line: 3142, type: !876)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !1256, line: 3141, column: 28)
!5763 = distinct !DILexicalBlock(scope: !5758, file: !1256, line: 3141, column: 7)
!5764 = !DILocalVariable(name: "tmps", scope: !5762, file: !1256, line: 3143, type: !1116)
!5765 = !DILocalVariable(name: "ch", scope: !5766, file: !1256, line: 3170, type: !485)
!5766 = distinct !DILexicalBlock(scope: !5767, file: !1256, line: 3169, column: 13)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !1256, line: 3167, column: 17)
!5768 = distinct !DILexicalBlock(scope: !5769, file: !1256, line: 3165, column: 12)
!5769 = distinct !DILexicalBlock(scope: !5763, file: !1256, line: 3162, column: 8)
!5770 = !DILocalVariable(name: "start", scope: !5771, file: !1256, line: 3213, type: !876)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !1256, line: 3212, column: 30)
!5772 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3212, column: 6)
!5773 = !DILocalVariable(name: "end", scope: !5771, file: !1256, line: 3214, type: !876)
!5774 = !DILocalVariable(name: "sv", scope: !5771, file: !1256, line: 3215, type: !530)
!5775 = !DILocalVariable(name: "start", scope: !5776, file: !1256, line: 3274, type: !875)
!5776 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3273, column: 2)
!5777 = !DILocalVariable(name: "e", scope: !5778, file: !1256, line: 3292, type: !876)
!5778 = distinct !DILexicalBlock(scope: !5779, file: !1256, line: 3291, column: 10)
!5779 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3291, column: 6)
!5780 = !DILocalVariable(name: "p", scope: !5778, file: !1256, line: 3292, type: !876)
!5781 = !DILocalVariable(name: "flags", scope: !5782, file: !1256, line: 3318, type: !609)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !1256, line: 3317, column: 19)
!5783 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3317, column: 6)
!5784 = !DILocalVariable(name: "numlen", scope: !5782, file: !1256, line: 3319, type: !560)
!5785 = !DILocalVariable(name: "start", scope: !5786, file: !1256, line: 3340, type: !876)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !1256, line: 3339, column: 12)
!5787 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3339, column: 6)
!5788 = !DILocalVariable(name: "end", scope: !5786, file: !1256, line: 3341, type: !876)
!5789 = !DILocalVariable(name: "sv", scope: !5786, file: !1256, line: 3342, type: !530)
!5790 = !DILocalVariable(name: "use", scope: !5786, file: !1256, line: 3343, type: !876)
!5791 = !DILocalVariable(name: "colon", scope: !5786, file: !1256, line: 3344, type: !795)
!5792 = !DILocation(line: 0, scope: !5750)
!5793 = !DILocation(line: 3130, column: 25, scope: !5750)
!5794 = !DILocation(line: 3134, column: 13, scope: !5750)
!5795 = !DILocation(line: 3134, column: 5, scope: !5750)
!5796 = !DILocation(line: 3447, column: 9, scope: !5759)
!5797 = !DILocation(line: 3137, column: 3, scope: !5758)
!5798 = !DILocation(line: 0, scope: !5758)
!5799 = !DILocation(line: 3137, column: 7, scope: !5758)
!5800 = !DILocation(line: 3138, column: 3, scope: !5758)
!5801 = !DILocation(line: 3140, column: 3, scope: !5758)
!5802 = !DILocation(line: 0, scope: !1968, inlinedAt: !5803)
!5803 = distinct !DILocation(line: 3140, column: 3, scope: !5758)
!5804 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !5803)
!5805 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !5803)
!5806 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !5803)
!5807 = !DILocation(line: 0, scope: !1974, inlinedAt: !5803)
!5808 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !5803)
!5809 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !5803)
!5810 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !5803)
!5811 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !5803)
!5812 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !5803)
!5813 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !5803)
!5814 = !DILocation(line: 3141, column: 7, scope: !5763)
!5815 = !DILocation(line: 3141, column: 12, scope: !5763)
!5816 = !DILocation(line: 3141, column: 19, scope: !5763)
!5817 = !DILocation(line: 3141, column: 22, scope: !5763)
!5818 = !DILocation(line: 3141, column: 7, scope: !5758)
!5819 = !DILocation(line: 3142, column: 25, scope: !5762)
!5820 = !DILocation(line: 0, scope: !5762)
!5821 = !DILocation(line: 3145, column: 8, scope: !5762)
!5822 = !DILocation(line: 3146, column: 4, scope: !5762)
!5823 = !DILocation(line: 3145, column: 15, scope: !5762)
!5824 = distinct !{!5824, !5821, !5822, !2029, !2030}
!5825 = !DILocation(line: 3147, column: 19, scope: !5762)
!5826 = !DILocation(line: 3147, column: 15, scope: !5762)
!5827 = !DILocation(line: 3148, column: 14, scope: !5762)
!5828 = !DILocation(line: 3149, column: 22, scope: !5762)
!5829 = !DILocation(line: 3149, column: 17, scope: !5762)
!5830 = !DILocation(line: 3150, column: 12, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5762, file: !1256, line: 3150, column: 12)
!5832 = !DILocation(line: 3150, column: 16, scope: !5831)
!5833 = !DILocation(line: 3150, column: 14, scope: !5831)
!5834 = !DILocation(line: 3150, column: 23, scope: !5831)
!5835 = !DILocation(line: 3150, column: 12, scope: !5762)
!5836 = !DILocation(line: 3152, column: 13, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5831, file: !1256, line: 3150, column: 28)
!5838 = !DILocation(line: 3153, column: 7, scope: !5837)
!5839 = !DILocation(line: 3154, column: 8, scope: !5837)
!5840 = !DILocation(line: 3155, column: 16, scope: !5762)
!5841 = !DILocation(line: 3155, column: 14, scope: !5762)
!5842 = !DILocation(line: 3156, column: 8, scope: !5762)
!5843 = !DILocation(line: 3157, column: 20, scope: !5762)
!5844 = !DILocation(line: 3158, column: 8, scope: !5762)
!5845 = !DILocation(line: 3159, column: 8, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5762, file: !1256, line: 3159, column: 8)
!5847 = !DILocation(line: 3160, column: 8, scope: !5762)
!5848 = !DILocation(line: 3161, column: 3, scope: !5762)
!5849 = !DILocation(line: 3163, column: 15, scope: !5769)
!5850 = !DILocation(line: 3164, column: 22, scope: !5769)
!5851 = !DILocation(line: 3165, column: 19, scope: !5768)
!5852 = !DILocation(line: 3165, column: 12, scope: !5769)
!5853 = !DILocation(line: 3166, column: 12, scope: !5768)
!5854 = !DILocation(line: 3166, column: 6, scope: !5768)
!5855 = !DILocation(line: 3164, column: 17, scope: !5769)
!5856 = !DILocation(line: 3167, column: 18, scope: !5767)
!5857 = !DILocation(line: 3167, column: 25, scope: !5767)
!5858 = !DILocation(line: 3168, column: 14, scope: !5767)
!5859 = !DILocation(line: 3168, column: 12, scope: !5767)
!5860 = !DILocation(line: 3168, column: 6, scope: !5767)
!5861 = !DILocation(line: 3170, column: 6, scope: !5766)
!5862 = !DILocation(line: 3170, column: 16, scope: !5766)
!5863 = !DILocation(line: 0, scope: !5766)
!5864 = !DILocation(line: 3170, column: 11, scope: !5766)
!5865 = !DILocation(line: 3171, column: 14, scope: !5766)
!5866 = !DILocation(line: 3171, column: 12, scope: !5766)
!5867 = !DILocation(line: 3172, column: 8, scope: !5767)
!5868 = !DILocation(line: 0, scope: !3833, inlinedAt: !5869)
!5869 = distinct !DILocation(line: 3174, column: 3, scope: !5758)
!5870 = !DILocation(line: 2492, column: 10, scope: !3833, inlinedAt: !5869)
!5871 = !DILocation(line: 2493, column: 9, scope: !3843, inlinedAt: !5869)
!5872 = !DILocation(line: 2493, column: 9, scope: !3833, inlinedAt: !5869)
!5873 = !DILocation(line: 2494, column: 9, scope: !3843, inlinedAt: !5869)
!5874 = !DILocation(line: 2494, column: 2, scope: !3843, inlinedAt: !5869)
!5875 = !DILocation(line: 3174, column: 3, scope: !5758)
!5876 = !DILocation(line: 3175, column: 10, scope: !5758)
!5877 = !DILocation(line: 3175, column: 14, scope: !5758)
!5878 = !DILocation(line: 3175, column: 12, scope: !5758)
!5879 = !DILocation(line: 3176, column: 5, scope: !5759)
!5880 = !DILocation(line: 3178, column: 10, scope: !5759)
!5881 = !DILocation(line: 3179, column: 22, scope: !5759)
!5882 = !DILocation(line: 3179, column: 20, scope: !5759)
!5883 = !DILocation(line: 3180, column: 17, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3180, column: 6)
!5885 = !DILocation(line: 3180, column: 6, scope: !5759)
!5886 = !DILocation(line: 3181, column: 19, scope: !5884)
!5887 = !DILocation(line: 3181, column: 6, scope: !5884)
!5888 = !DILocation(line: 3182, column: 9, scope: !5759)
!5889 = !DILocation(line: 3182, column: 2, scope: !5759)
!5890 = !DILocation(line: 3184, column: 13, scope: !5759)
!5891 = !DILocation(line: 3185, column: 13, scope: !5759)
!5892 = !DILocation(line: 3186, column: 20, scope: !5759)
!5893 = !DILocation(line: 3187, column: 16, scope: !5759)
!5894 = !DILocation(line: 3187, column: 14, scope: !5759)
!5895 = !DILocation(line: 3188, column: 9, scope: !5759)
!5896 = !DILocation(line: 3188, column: 12, scope: !5759)
!5897 = !DILocation(line: 3188, column: 16, scope: !5759)
!5898 = !DILocation(line: 3188, column: 2, scope: !5759)
!5899 = !DILocation(line: 3188, column: 29, scope: !5759)
!5900 = distinct !{!5900, !5898, !5901, !2029, !2030}
!5901 = !DILocation(line: 3188, column: 31, scope: !5759)
!5902 = !DILocation(line: 3190, column: 9, scope: !5759)
!5903 = !DILocation(line: 3189, column: 16, scope: !5759)
!5904 = !DILocation(line: 3189, column: 14, scope: !5759)
!5905 = !DILocation(line: 3190, column: 2, scope: !5759)
!5906 = !DILocation(line: 3192, column: 13, scope: !5759)
!5907 = !DILocation(line: 3193, column: 20, scope: !5759)
!5908 = !DILocation(line: 3194, column: 3, scope: !5759)
!5909 = !DILocation(line: 3195, column: 2, scope: !5759)
!5910 = !DILocation(line: 3197, column: 13, scope: !5759)
!5911 = !DILocation(line: 3198, column: 3, scope: !5759)
!5912 = !DILocation(line: 3199, column: 2, scope: !5759)
!5913 = !DILocation(line: 3202, column: 3, scope: !5759)
!5914 = !DILocation(line: 3205, column: 6, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3205, column: 6)
!5916 = !DILocation(line: 3205, column: 9, scope: !5915)
!5917 = !DILocation(line: 3205, column: 16, scope: !5915)
!5918 = !DILocation(line: 3205, column: 20, scope: !5915)
!5919 = !DILocation(line: 3205, column: 6, scope: !5759)
!5920 = !DILocation(line: 3207, column: 6, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5915, file: !1256, line: 3205, column: 38)
!5922 = !DILocation(line: 3212, column: 6, scope: !5772)
!5923 = !DILocation(line: 3208, column: 2, scope: !5921)
!5924 = !DILocation(line: 3212, column: 7, scope: !5772)
!5925 = !DILocation(line: 3212, column: 16, scope: !5772)
!5926 = !DILocation(line: 3217, column: 11, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5771, file: !1256, line: 3217, column: 10)
!5928 = !DILocation(line: 3217, column: 10, scope: !5927)
!5929 = !DILocation(line: 3217, column: 15, scope: !5927)
!5930 = !DILocation(line: 3217, column: 10, scope: !5771)
!5931 = !DILocation(line: 3218, column: 3, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5927, file: !1256, line: 3217, column: 23)
!5933 = !DILocation(line: 3219, column: 8, scope: !5932)
!5934 = !DILocation(line: 0, scope: !5771)
!5935 = !DILocation(line: 3220, column: 6, scope: !5932)
!5936 = !DILocation(line: 3221, column: 8, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5927, file: !1256, line: 3220, column: 13)
!5938 = !DILocation(line: 3224, column: 14, scope: !5771)
!5939 = !DILocation(line: 0, scope: !5927)
!5940 = !DILocation(line: 3225, column: 16, scope: !5771)
!5941 = !DILocation(line: 3225, column: 14, scope: !5771)
!5942 = !DILocation(line: 3228, column: 12, scope: !5771)
!5943 = !DILocation(line: 3228, column: 27, scope: !5771)
!5944 = !DILocation(line: 3228, column: 39, scope: !5771)
!5945 = distinct !{!5945, !5946, !5947, !2029, !2030}
!5946 = !DILocation(line: 3228, column: 6, scope: !5771)
!5947 = !DILocation(line: 3228, column: 41, scope: !5771)
!5948 = !DILocation(line: 3229, column: 13, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5771, file: !1256, line: 3229, column: 10)
!5950 = !DILocation(line: 3229, column: 10, scope: !5771)
!5951 = !DILocation(line: 3230, column: 3, scope: !5949)
!5952 = !DILocation(line: 3232, column: 3, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5949, file: !1256, line: 3231, column: 11)
!5954 = !DILocation(line: 3235, column: 50, scope: !5953)
!5955 = !DILocation(line: 3235, column: 3, scope: !5953)
!5956 = !DILocation(line: 3237, column: 8, scope: !5771)
!5957 = !DILocation(line: 3238, column: 6, scope: !5771)
!5958 = !DILocation(line: 0, scope: !1968, inlinedAt: !5959)
!5959 = distinct !DILocation(line: 3239, column: 6, scope: !5771)
!5960 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !5959)
!5961 = !DILocation(line: 0, scope: !1974, inlinedAt: !5959)
!5962 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !5959)
!5963 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !5959)
!5964 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !5959)
!5965 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !5959)
!5966 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !5959)
!5967 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !5959)
!5968 = !DILocation(line: 3241, column: 7, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3241, column: 6)
!5970 = !DILocation(line: 3241, column: 6, scope: !5759)
!5971 = !DILocation(line: 3242, column: 16, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !1256, line: 3241, column: 18)
!5973 = !DILocation(line: 3243, column: 6, scope: !5972)
!5974 = !DILocation(line: 3244, column: 2, scope: !5972)
!5975 = !DILocation(line: 3253, column: 6, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5977, file: !1256, line: 3253, column: 6)
!5977 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3247, column: 5)
!5978 = !DILocation(line: 3253, column: 6, scope: !5977)
!5979 = !DILocation(line: 3254, column: 6, scope: !5976)
!5980 = !DILocation(line: 3256, column: 2, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5977, file: !1256, line: 3256, column: 2)
!5982 = !DILocation(line: 0, scope: !5981)
!5983 = !DILocation(line: 3256, column: 12, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5981, file: !1256, line: 3256, column: 2)
!5985 = distinct !{!5985, !5980, !5986, !2029, !2030}
!5986 = !DILocation(line: 3256, column: 33, scope: !5981)
!5987 = !DILocation(line: 3262, column: 2, scope: !5759)
!5988 = !DILocation(line: 3263, column: 9, scope: !5759)
!5989 = !DILocation(line: 3266, column: 2, scope: !5759)
!5990 = !DILocation(line: 3274, column: 33, scope: !5776)
!5991 = !DILocation(line: 0, scope: !5776)
!5992 = !DILocation(line: 3275, column: 13, scope: !5776)
!5993 = !DILocation(line: 3275, column: 16, scope: !5776)
!5994 = !DILocation(line: 3275, column: 20, scope: !5776)
!5995 = !DILocation(line: 3275, column: 6, scope: !5776)
!5996 = !DILocation(line: 3276, column: 3, scope: !5776)
!5997 = distinct !{!5997, !5995, !5998, !2029, !2030}
!5998 = !DILocation(line: 3276, column: 5, scope: !5776)
!5999 = !DILocation(line: 3280, column: 7, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3280, column: 6)
!6001 = !DILocation(line: 3278, column: 19, scope: !5776)
!6002 = !DILocation(line: 3278, column: 17, scope: !5776)
!6003 = !DILocation(line: 3280, column: 6, scope: !6000)
!6004 = !DILocation(line: 3280, column: 6, scope: !5759)
!6005 = !DILocation(line: 3281, column: 6, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6000, file: !1256, line: 3280, column: 10)
!6007 = !DILocation(line: 3282, column: 10, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !6006, file: !1256, line: 3282, column: 10)
!6009 = !DILocation(line: 3282, column: 13, scope: !6008)
!6010 = !DILocation(line: 3282, column: 10, scope: !6006)
!6011 = !DILocation(line: 3283, column: 4, scope: !6008)
!6012 = !DILocation(line: 3283, column: 3, scope: !6008)
!6013 = !DILocation(line: 0, scope: !5759)
!6014 = !DILocation(line: 3289, column: 9, scope: !5759)
!6015 = !DILocation(line: 3289, column: 12, scope: !5759)
!6016 = !DILocation(line: 3289, column: 15, scope: !5759)
!6017 = !DILocation(line: 3289, column: 2, scope: !5759)
!6018 = distinct !{!6018, !6017, !6019, !2029, !2030}
!6019 = !DILocation(line: 3290, column: 8, scope: !5759)
!6020 = !DILocation(line: 3296, column: 8, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6022, file: !1256, line: 3296, column: 3)
!6022 = distinct !DILexicalBlock(scope: !5778, file: !1256, line: 3295, column: 9)
!6023 = !DILocation(line: 3296, column: 15, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6021, file: !1256, line: 3296, column: 3)
!6025 = !DILocation(line: 0, scope: !5778)
!6026 = !DILocation(line: 3296, column: 18, scope: !6024)
!6027 = !DILocation(line: 3296, column: 22, scope: !6024)
!6028 = !DILocation(line: 3296, column: 3, scope: !6021)
!6029 = !DILocation(line: 3296, column: 36, scope: !6024)
!6030 = distinct !{!6030, !6028, !6031, !2029, !2030}
!6031 = !DILocation(line: 3296, column: 40, scope: !6021)
!6032 = !DILocation(line: 0, scope: !6021)
!6033 = !DILocation(line: 3298, column: 3, scope: !6022)
!6034 = !DILocation(line: 0, scope: !6022)
!6035 = !DILocation(line: 3298, column: 10, scope: !6022)
!6036 = !DILocation(line: 3299, column: 8, scope: !6022)
!6037 = distinct !{!6037, !6033, !6036, !2029, !2030}
!6038 = !DILocation(line: 3300, column: 18, scope: !5778)
!6039 = !DILocation(line: 3301, column: 6, scope: !5778)
!6040 = !DILocation(line: 3303, column: 8, scope: !5778)
!6041 = !DILocation(line: 3304, column: 10, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !5778, file: !1256, line: 3304, column: 10)
!6043 = !DILocation(line: 3304, column: 13, scope: !6042)
!6044 = !DILocation(line: 3304, column: 10, scope: !5778)
!6045 = !DILocation(line: 3308, column: 6, scope: !5779)
!6046 = !DILocation(line: 3311, column: 13, scope: !5759)
!6047 = !DILocation(line: 3312, column: 3, scope: !5759)
!6048 = !DILocation(line: 3313, column: 6, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3313, column: 6)
!6050 = !DILocation(line: 3313, column: 6, scope: !5759)
!6051 = !DILocation(line: 0, scope: !1968, inlinedAt: !6052)
!6052 = distinct !DILocation(line: 3314, column: 6, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6049, file: !1256, line: 3313, column: 17)
!6054 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !6052)
!6055 = !DILocation(line: 0, scope: !1974, inlinedAt: !6052)
!6056 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !6052)
!6057 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !6052)
!6058 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !6052)
!6059 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !6052)
!6060 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !6052)
!6061 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !6052)
!6062 = !DILocation(line: 3315, column: 16, scope: !6053)
!6063 = !DILocation(line: 3316, column: 2, scope: !6053)
!6064 = !DILocation(line: 3317, column: 6, scope: !5783)
!6065 = !DILocation(line: 3317, column: 6, scope: !5759)
!6066 = !DILocation(line: 3318, column: 13, scope: !5782)
!6067 = !DILocation(line: 0, scope: !5782)
!6068 = !DILocation(line: 3318, column: 17, scope: !5782)
!6069 = !DILocation(line: 3319, column: 6, scope: !5782)
!6070 = !DILocation(line: 3320, column: 18, scope: !5782)
!6071 = !DILocation(line: 3320, column: 16, scope: !5782)
!6072 = !DILocation(line: 3321, column: 20, scope: !5782)
!6073 = !DILocation(line: 3321, column: 23, scope: !5782)
!6074 = !DILocation(line: 3321, column: 17, scope: !5782)
!6075 = !DILocation(line: 3321, column: 13, scope: !5782)
!6076 = !DILocation(line: 3322, column: 32, scope: !5782)
!6077 = !DILocation(line: 3322, column: 26, scope: !5782)
!6078 = !DILocation(line: 3322, column: 7, scope: !5782)
!6079 = !DILocation(line: 3322, column: 24, scope: !5782)
!6080 = !DILocation(line: 3323, column: 11, scope: !5782)
!6081 = !DILocation(line: 3323, column: 8, scope: !5782)
!6082 = !DILocation(line: 3324, column: 2, scope: !5783)
!6083 = !DILocation(line: 3324, column: 2, scope: !5782)
!6084 = !DILocation(line: 3326, column: 10, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6086, file: !1256, line: 3326, column: 10)
!6086 = distinct !DILexicalBlock(scope: !5783, file: !1256, line: 3325, column: 7)
!6087 = !DILocation(line: 3326, column: 10, scope: !6086)
!6088 = !DILocation(line: 3327, column: 15, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !1256, line: 3326, column: 25)
!6090 = !DILocation(line: 3327, column: 13, scope: !6089)
!6091 = !DILocation(line: 3328, column: 6, scope: !6089)
!6092 = !DILocation(line: 3330, column: 15, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6085, file: !1256, line: 3329, column: 11)
!6094 = !DILocation(line: 3330, column: 13, scope: !6093)
!6095 = !DILocation(line: 3339, column: 7, scope: !5787)
!6096 = !DILocation(line: 3339, column: 6, scope: !5787)
!6097 = !DILocation(line: 3339, column: 6, scope: !5759)
!6098 = !DILocation(line: 0, scope: !5786)
!6099 = !DILocation(line: 3348, column: 37, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6101, file: !1256, line: 3348, column: 21)
!6101 = distinct !DILexicalBlock(scope: !5786, file: !1256, line: 3348, column: 10)
!6102 = !DILocation(line: 3348, column: 42, scope: !6100)
!6103 = !DILocation(line: 3350, column: 14, scope: !5786)
!6104 = !DILocation(line: 3349, column: 11, scope: !5786)
!6105 = !DILocation(line: 3352, column: 12, scope: !5786)
!6106 = !DILocation(line: 3352, column: 27, scope: !5786)
!6107 = !DILocation(line: 3353, column: 9, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6109, file: !1256, line: 3353, column: 7)
!6109 = distinct !DILexicalBlock(scope: !5786, file: !1256, line: 3352, column: 39)
!6110 = !DILocation(line: 3353, column: 7, scope: !6108)
!6111 = !DILocation(line: 3353, column: 12, scope: !6108)
!6112 = !DILocation(line: 3353, column: 7, scope: !6109)
!6113 = !DILocation(line: 3354, column: 11, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6115, file: !1256, line: 3354, column: 11)
!6115 = distinct !DILexicalBlock(scope: !6108, file: !1256, line: 3353, column: 21)
!6116 = !DILocation(line: 3354, column: 14, scope: !6114)
!6117 = !DILocation(line: 3354, column: 11, scope: !6115)
!6118 = !DILocation(line: 3355, column: 5, scope: !6114)
!6119 = !DILocation(line: 3355, column: 4, scope: !6114)
!6120 = distinct !{!6120, !6121, !6122, !2029, !2030}
!6121 = !DILocation(line: 3352, column: 6, scope: !5786)
!6122 = !DILocation(line: 3359, column: 6, scope: !5786)
!6123 = !DILocation(line: 3360, column: 12, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !5786, file: !1256, line: 3360, column: 10)
!6125 = !DILocation(line: 3360, column: 10, scope: !5786)
!6126 = !DILocation(line: 3361, column: 3, scope: !6124)
!6127 = !DILocation(line: 3363, column: 10, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !5786, file: !1256, line: 3363, column: 10)
!6129 = !DILocation(line: 3363, column: 10, scope: !5786)
!6130 = !DILocation(line: 3366, column: 17, scope: !6128)
!6131 = !DILocation(line: 3366, column: 9, scope: !6128)
!6132 = !DILocation(line: 3364, column: 3, scope: !6128)
!6133 = !DILocation(line: 3367, column: 16, scope: !5786)
!6134 = !DILocation(line: 3367, column: 14, scope: !5786)
!6135 = !DILocation(line: 3368, column: 10, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !5786, file: !1256, line: 3368, column: 10)
!6137 = !DILocation(line: 3368, column: 13, scope: !6136)
!6138 = !DILocation(line: 3368, column: 10, scope: !5786)
!6139 = !DILocation(line: 3369, column: 3, scope: !6140)
!6140 = distinct !DILexicalBlock(scope: !6136, file: !1256, line: 3368, column: 21)
!6141 = !DILocation(line: 3370, column: 14, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6140, file: !1256, line: 3370, column: 7)
!6143 = !DILocation(line: 3370, column: 7, scope: !6140)
!6144 = !DILocation(line: 3371, column: 11, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6146, file: !1256, line: 3371, column: 11)
!6146 = distinct !DILexicalBlock(scope: !6142, file: !1256, line: 3370, column: 22)
!6147 = !DILocation(line: 3371, column: 14, scope: !6145)
!6148 = !DILocation(line: 3371, column: 11, scope: !6146)
!6149 = !DILocation(line: 3372, column: 4, scope: !6145)
!6150 = !DILocation(line: 3373, column: 7, scope: !6146)
!6151 = !DILocation(line: 3374, column: 3, scope: !6146)
!6152 = !DILocation(line: 3376, column: 3, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6136, file: !1256, line: 3375, column: 13)
!6154 = !DILocation(line: 3378, column: 3, scope: !6153)
!6155 = !DILocation(line: 3379, column: 3, scope: !6153)
!6156 = !DILocation(line: 3380, column: 3, scope: !6153)
!6157 = !DILocation(line: 3381, column: 3, scope: !6153)
!6158 = !DILocation(line: 3383, column: 8, scope: !5786)
!6159 = !DILocation(line: 3384, column: 6, scope: !5786)
!6160 = !DILocation(line: 3385, column: 2, scope: !5786)
!6161 = !DILocation(line: 3387, column: 6, scope: !5787)
!6162 = !DILocation(line: 3390, column: 13, scope: !5759)
!6163 = !DILocation(line: 3391, column: 3, scope: !5759)
!6164 = !DILocation(line: 3392, column: 2, scope: !5759)
!6165 = !DILocation(line: 3394, column: 13, scope: !5759)
!6166 = !DILocation(line: 3395, column: 3, scope: !5759)
!6167 = !DILocation(line: 3396, column: 2, scope: !5759)
!6168 = !DILocation(line: 3399, column: 16, scope: !5759)
!6169 = !DILocation(line: 3400, column: 3, scope: !5759)
!6170 = !DILocation(line: 3401, column: 2, scope: !5759)
!6171 = !DILocation(line: 3410, column: 14, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3410, column: 13)
!6173 = !DILocation(line: 3410, column: 13, scope: !5759)
!6174 = !DILocation(line: 3411, column: 6, scope: !6172)
!6175 = !DILocation(line: 3413, column: 10, scope: !5759)
!6176 = !DILocation(line: 3414, column: 2, scope: !5759)
!6177 = !DILocation(line: 3416, column: 15, scope: !5759)
!6178 = !DILocation(line: 3417, column: 3, scope: !5759)
!6179 = !DILocation(line: 3418, column: 2, scope: !5759)
!6180 = !DILocation(line: 3420, column: 12, scope: !5759)
!6181 = !DILocation(line: 3421, column: 3, scope: !5759)
!6182 = !DILocation(line: 3422, column: 2, scope: !5759)
!6183 = !DILocation(line: 3424, column: 2, scope: !5759)
!6184 = !DILocation(line: 3426, column: 9, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3426, column: 6)
!6186 = !DILocation(line: 3426, column: 19, scope: !6185)
!6187 = !DILocation(line: 3426, column: 6, scope: !5759)
!6188 = !DILocation(line: 3427, column: 16, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6185, file: !1256, line: 3426, column: 39)
!6190 = !DILocation(line: 3428, column: 2, scope: !6189)
!6191 = !DILocation(line: 3429, column: 3, scope: !5759)
!6192 = !DILocation(line: 3430, column: 2, scope: !5759)
!6193 = !DILocation(line: 3432, column: 12, scope: !5759)
!6194 = !DILocation(line: 3433, column: 14, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3433, column: 13)
!6196 = !DILocation(line: 3434, column: 13, scope: !6195)
!6197 = !DILocation(line: 3435, column: 28, scope: !5759)
!6198 = !DILocation(line: 3436, column: 3, scope: !5759)
!6199 = !DILocation(line: 3437, column: 2, scope: !5759)
!6200 = !DILocation(line: 3439, column: 12, scope: !5759)
!6201 = !DILocation(line: 3440, column: 14, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3440, column: 13)
!6203 = !DILocation(line: 3441, column: 13, scope: !6202)
!6204 = !DILocation(line: 3442, column: 28, scope: !5759)
!6205 = !DILocation(line: 3443, column: 3, scope: !5759)
!6206 = !DILocation(line: 3444, column: 2, scope: !5759)
!6207 = !DILocation(line: 3447, column: 16, scope: !5759)
!6208 = !DILocation(line: 3447, column: 17, scope: !5759)
!6209 = !DILocation(line: 3448, column: 11, scope: !5759)
!6210 = distinct !{!6210, !5796, !6211, !2029, !2030}
!6211 = !DILocation(line: 3448, column: 13, scope: !5759)
!6212 = !DILocation(line: 3450, column: 14, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !5759, file: !1256, line: 3449, column: 6)
!6214 = !DILocation(line: 3450, column: 6, scope: !6213)
!6215 = !DILocation(line: 3469, column: 2, scope: !5759)
!6216 = !DILocation(line: 3471, column: 2, scope: !5759)
!6217 = !DILocation(line: 3474, column: 5, scope: !5759)
!6218 = !DILocation(line: 3476, column: 1, scope: !5750)
!6219 = !DISubprogram(name: "Perl_grok_hex", scope: !1566, file: !1566, line: 1351, type: !6220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!546, !876, !1071, !1154, !6222}
!6222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!6223 = !DISubprogram(name: "Perl_sv_grow", scope: !1566, file: !1566, line: 4389, type: !6224, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6224 = !DISubroutineType(types: !6225)
!6225 = !{!486, !865, !560}
!6226 = !DISubprogram(name: "Perl_uvoffuni_to_utf8_flags", scope: !1566, file: !1566, line: 5070, type: !6227, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!1116, !1116, !546, !546}
!6229 = !DISubprogram(name: "Perl_grok_oct", scope: !1566, file: !1566, line: 1381, type: !6220, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6230 = !DISubprogram(name: "Perl_sv_setsv_flags", scope: !1566, file: !1566, line: 4683, type: !6231, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6231 = !DISubroutineType(types: !6232)
!6232 = !{null, !530, !530, !899}
!6233 = !DISubprogram(name: "Perl_parse_unicode_opts", scope: !1566, file: !1566, line: 3407, type: !6234, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!487, !1153}
!6236 = !DISubprogram(name: "Perl_sv_catpvn_flags", scope: !1566, file: !1566, line: 4229, type: !6237, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6237 = !DISubroutineType(types: !6238)
!6238 = !{null, !865, !876, !1570, !899}
!6239 = !DISubprogram(name: "Perl_sv_catpvf", scope: !1566, file: !1566, line: 4209, type: !6240, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6240 = !DISubroutineType(types: !6241)
!6241 = !{null, !865, !875, null}
!6242 = distinct !DISubprogram(name: "Perl_init_debugger", scope: !1256, file: !1256, line: 4025, type: !1276, scopeLine: 4026, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6243)
!6243 = !{!6244, !6246}
!6244 = !DILocalVariable(name: "ostash", scope: !6242, file: !1256, line: 4027, type: !6245)
!6245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !500)
!6246 = !DILocalVariable(name: "mg", scope: !6242, file: !1256, line: 4028, type: !515)
!6247 = !DILocation(line: 4027, column: 25, scope: !6242)
!6248 = !DILocation(line: 0, scope: !6242)
!6249 = !DILocation(line: 4030, column: 25, scope: !6242)
!6250 = !DILocation(line: 0, scope: !3393, inlinedAt: !6251)
!6251 = distinct !DILocation(line: 4030, column: 25, scope: !6242)
!6252 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !6251)
!6253 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !6251)
!6254 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !6251)
!6255 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !6251)
!6256 = !DILocation(line: 4030, column: 17, scope: !6242)
!6257 = !DILocation(line: 4032, column: 5, scope: !6242)
!6258 = !DILocation(line: 4033, column: 15, scope: !6242)
!6259 = !DILocation(line: 0, scope: !3393, inlinedAt: !6260)
!6260 = distinct !DILocation(line: 4033, column: 15, scope: !6242)
!6261 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !6260)
!6262 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !6260)
!6263 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !6260)
!6264 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !6260)
!6265 = !DILocation(line: 4033, column: 13, scope: !6242)
!6266 = !DILocation(line: 4036, column: 17, scope: !6242)
!6267 = !DILocation(line: 0, scope: !3393, inlinedAt: !6268)
!6268 = distinct !DILocation(line: 4036, column: 17, scope: !6242)
!6269 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !6268)
!6270 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !6268)
!6271 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !6268)
!6272 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !6268)
!6273 = !DILocation(line: 4036, column: 15, scope: !6242)
!6274 = !DILocation(line: 4039, column: 16, scope: !6242)
!6275 = !DILocation(line: 0, scope: !3393, inlinedAt: !6276)
!6276 = distinct !DILocation(line: 4039, column: 16, scope: !6242)
!6277 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !6276)
!6278 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !6276)
!6279 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !6276)
!6280 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !6276)
!6281 = !DILocation(line: 4039, column: 14, scope: !6242)
!6282 = !DILocation(line: 4042, column: 19, scope: !6242)
!6283 = !DILocation(line: 4042, column: 17, scope: !6242)
!6284 = !DILocation(line: 4043, column: 10, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6242, file: !1256, line: 4043, column: 9)
!6286 = !DILocation(line: 4043, column: 9, scope: !6242)
!6287 = !DILocation(line: 4044, column: 2, scope: !6285)
!6288 = !DILocation(line: 4045, column: 10, scope: !6242)
!6289 = !DILocation(line: 4046, column: 9, scope: !6242)
!6290 = !DILocation(line: 4046, column: 20, scope: !6242)
!6291 = !DILocation(line: 4047, column: 5, scope: !6292)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !1256, line: 4047, column: 5)
!6293 = distinct !DILexicalBlock(scope: !6242, file: !1256, line: 4047, column: 5)
!6294 = !DILocation(line: 4047, column: 5, scope: !6293)
!6295 = !DILocation(line: 4049, column: 18, scope: !6242)
!6296 = !DILocation(line: 4049, column: 16, scope: !6242)
!6297 = !DILocation(line: 4050, column: 10, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6242, file: !1256, line: 4050, column: 9)
!6299 = !DILocation(line: 4050, column: 9, scope: !6242)
!6300 = !DILocation(line: 4051, column: 2, scope: !6298)
!6301 = !DILocation(line: 4052, column: 10, scope: !6242)
!6302 = !DILocation(line: 4053, column: 9, scope: !6242)
!6303 = !DILocation(line: 4053, column: 20, scope: !6242)
!6304 = !DILocation(line: 4054, column: 5, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6306, file: !1256, line: 4054, column: 5)
!6306 = distinct !DILexicalBlock(scope: !6242, file: !1256, line: 4054, column: 5)
!6307 = !DILocation(line: 4054, column: 5, scope: !6306)
!6308 = !DILocation(line: 4056, column: 19, scope: !6242)
!6309 = !DILocation(line: 4056, column: 17, scope: !6242)
!6310 = !DILocation(line: 4057, column: 10, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6242, file: !1256, line: 4057, column: 9)
!6312 = !DILocation(line: 4057, column: 9, scope: !6242)
!6313 = !DILocation(line: 4058, column: 2, scope: !6311)
!6314 = !DILocation(line: 4059, column: 10, scope: !6242)
!6315 = !DILocation(line: 4060, column: 9, scope: !6242)
!6316 = !DILocation(line: 4060, column: 20, scope: !6242)
!6317 = !DILocation(line: 4061, column: 5, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !1256, line: 4061, column: 5)
!6319 = distinct !DILexicalBlock(scope: !6242, file: !1256, line: 4061, column: 5)
!6320 = !DILocation(line: 4061, column: 5, scope: !6319)
!6321 = !DILocation(line: 4063, column: 5, scope: !6242)
!6322 = !DILocation(line: 0, scope: !1968, inlinedAt: !6323)
!6323 = distinct !DILocation(line: 4063, column: 5, scope: !6242)
!6324 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !6323)
!6325 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !6323)
!6326 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !6323)
!6327 = !DILocation(line: 0, scope: !1974, inlinedAt: !6323)
!6328 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !6323)
!6329 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !6323)
!6330 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !6323)
!6331 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !6323)
!6332 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !6323)
!6333 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !6323)
!6334 = !DILocation(line: 4064, column: 17, scope: !6242)
!6335 = !DILocation(line: 4065, column: 1, scope: !6242)
!6336 = !DILocation(line: 0, scope: !1275)
!6337 = !DILocation(line: 3045, column: 19, scope: !1275)
!6338 = !DILocation(line: 3049, column: 5, scope: !1275)
!6339 = !DILocation(line: 3047, column: 5, scope: !1275)
!6340 = !DILocation(line: 3050, column: 5, scope: !1275)
!6341 = !DILocation(line: 3051, column: 21, scope: !1275)
!6342 = !DILocation(line: 3051, column: 2, scope: !1275)
!6343 = !DILocation(line: 3050, column: 12, scope: !1275)
!6344 = distinct !{!6344, !6340, !6345, !2029, !2030}
!6345 = !DILocation(line: 3051, column: 23, scope: !1275)
!6346 = !DILocation(line: 0, scope: !4746, inlinedAt: !6347)
!6347 = distinct !DILocation(line: 3052, column: 5, scope: !1275)
!6348 = !DILocation(line: 4962, column: 9, scope: !4753, inlinedAt: !6347)
!6349 = !DILocation(line: 4962, column: 23, scope: !4753, inlinedAt: !6347)
!6350 = !DILocation(line: 4962, column: 9, scope: !4746, inlinedAt: !6347)
!6351 = !DILocation(line: 4963, column: 2, scope: !4757, inlinedAt: !6347)
!6352 = !DILocation(line: 4965, column: 23, scope: !4759, inlinedAt: !6347)
!6353 = !DILocation(line: 4965, column: 9, scope: !4746, inlinedAt: !6347)
!6354 = !DILocation(line: 4966, column: 16, scope: !4762, inlinedAt: !6347)
!6355 = !DILocation(line: 4967, column: 2, scope: !4762, inlinedAt: !6347)
!6356 = !DILocation(line: 4968, column: 16, scope: !4762, inlinedAt: !6347)
!6357 = !DILocation(line: 4969, column: 5, scope: !4762, inlinedAt: !6347)
!6358 = !DILocation(line: 4972, column: 2, scope: !4767, inlinedAt: !6347)
!6359 = !DILocation(line: 0, scope: !4767, inlinedAt: !6347)
!6360 = !DILocation(line: 4981, column: 5, scope: !4746, inlinedAt: !6347)
!6361 = !DILocation(line: 4982, column: 1, scope: !4746, inlinedAt: !6347)
!6362 = distinct !DISubprogram(name: "S_incpush", scope: !1256, file: !1256, line: 4720, type: !6363, scopeLine: 4721, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6365)
!6363 = !DISubroutineType(types: !6364)
!6364 = !{null, !875, !560, !487}
!6365 = !{!6366, !6367, !6368, !6369, !6371, !6372, !6373, !6374, !6375, !6376, !6378, !6380, !6381, !6384, !6386, !6387}
!6366 = !DILocalVariable(name: "dir", arg: 1, scope: !6362, file: !1256, line: 4720, type: !875)
!6367 = !DILocalVariable(name: "len", arg: 2, scope: !6362, file: !1256, line: 4720, type: !560)
!6368 = !DILocalVariable(name: "flags", arg: 3, scope: !6362, file: !1256, line: 4720, type: !487)
!6369 = !DILocalVariable(name: "using_sub_dirs", scope: !6362, file: !1256, line: 4723, type: !6370)
!6370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !719)
!6371 = !DILocalVariable(name: "add_versioned_sub_dirs", scope: !6362, file: !1256, line: 4726, type: !6370)
!6372 = !DILocalVariable(name: "add_archonly_sub_dirs", scope: !6362, file: !1256, line: 4728, type: !6370)
!6373 = !DILocalVariable(name: "addoldvers", scope: !6362, file: !1256, line: 4731, type: !6370)
!6374 = !DILocalVariable(name: "unshift", scope: !6362, file: !1256, line: 4734, type: !6370)
!6375 = !DILocalVariable(name: "push_basedir", scope: !6362, file: !1256, line: 4735, type: !6370)
!6376 = !DILocalVariable(name: "inc", scope: !6362, file: !1256, line: 4736, type: !6377)
!6377 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !489)
!6378 = !DILocalVariable(name: "libdir", scope: !6379, file: !1256, line: 4744, type: !865)
!6379 = distinct !DILexicalBlock(scope: !6362, file: !1256, line: 4743, column: 5)
!6380 = !DILocalVariable(name: "av", scope: !6379, file: !1256, line: 4753, type: !6377)
!6381 = !DILocalVariable(name: "subdir", scope: !6382, file: !1256, line: 4760, type: !530)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !1256, line: 4759, column: 22)
!6383 = distinct !DILexicalBlock(scope: !6379, file: !1256, line: 4759, column: 6)
!6384 = !DILocalVariable(name: "incverlist", scope: !6382, file: !1256, line: 4763, type: !6385)
!6385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !875, size: 64, elements: !612)
!6386 = !DILocalVariable(name: "incver", scope: !6382, file: !1256, line: 4764, type: !1280)
!6387 = !DILocalVariable(name: "extra", scope: !6388, file: !1256, line: 4803, type: !561)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !1256, line: 4799, column: 15)
!6389 = distinct !DILexicalBlock(scope: !6379, file: !1256, line: 4799, column: 6)
!6390 = !DILocation(line: 0, scope: !6362)
!6391 = !DILocation(line: 4724, column: 4, scope: !6362)
!6392 = !DILocation(line: 4734, column: 28, scope: !6362)
!6393 = !DILocation(line: 4735, column: 29, scope: !6362)
!6394 = !DILocation(line: 4736, column: 21, scope: !6362)
!6395 = !DILocalVariable(name: "dir", arg: 1, scope: !6396, file: !1256, line: 4585, type: !875)
!6396 = distinct !DISubprogram(name: "S_mayberelocate", scope: !1256, file: !1256, line: 4585, type: !6397, scopeLine: 4586, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6399)
!6397 = !DISubroutineType(types: !6398)
!6398 = !{!530, !875, !560, !487}
!6399 = !{!6395, !6400, !6401, !6402, !6403}
!6400 = !DILocalVariable(name: "len", arg: 2, scope: !6396, file: !1256, line: 4585, type: !560)
!6401 = !DILocalVariable(name: "flags", arg: 3, scope: !6396, file: !1256, line: 4585, type: !487)
!6402 = !DILocalVariable(name: "canrelocate", scope: !6396, file: !1256, line: 4587, type: !6370)
!6403 = !DILocalVariable(name: "libdir", scope: !6396, file: !1256, line: 4588, type: !530)
!6404 = !DILocation(line: 0, scope: !6396, inlinedAt: !6405)
!6405 = distinct !DILocation(line: 4744, column: 21, scope: !6379)
!6406 = !DILocation(line: 4598, column: 14, scope: !6396, inlinedAt: !6405)
!6407 = !DILocation(line: 0, scope: !6379)
!6408 = !DILocation(line: 4753, column: 17, scope: !6379)
!6409 = !DILocation(line: 4753, column: 37, scope: !6379)
!6410 = !DILocation(line: 4753, column: 47, scope: !6379)
!6411 = !DILocation(line: 4760, column: 19, scope: !6382)
!6412 = !DILocation(line: 0, scope: !6382)
!6413 = !DILocation(line: 4767, column: 10, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6382, file: !1256, line: 4767, column: 10)
!6415 = !DILocation(line: 4767, column: 10, scope: !6382)
!6416 = !DILocation(line: 4769, column: 3, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6414, file: !1256, line: 4767, column: 34)
!6418 = !DILocalVariable(name: "av", arg: 1, scope: !6419, file: !1256, line: 4566, type: !6377)
!6419 = distinct !DISubprogram(name: "S_incpush_if_exists", scope: !1256, file: !1256, line: 4566, type: !6420, scopeLine: 4567, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6422)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!530, !6377, !530, !865}
!6422 = !{!6418, !6423, !6424, !6425}
!6423 = !DILocalVariable(name: "dir", arg: 2, scope: !6419, file: !1256, line: 4566, type: !530)
!6424 = !DILocalVariable(name: "stem", arg: 3, scope: !6419, file: !1256, line: 4566, type: !865)
!6425 = !DILocalVariable(name: "tmpstatbuf", scope: !6419, file: !1256, line: 4568, type: !4007)
!6426 = !DILocation(line: 0, scope: !6419, inlinedAt: !6427)
!6427 = distinct !DILocation(line: 4770, column: 12, scope: !6417)
!6428 = !DILocation(line: 4568, column: 5, scope: !6419, inlinedAt: !6427)
!6429 = !DILocation(line: 4568, column: 12, scope: !6419, inlinedAt: !6427)
!6430 = !DILocation(line: 4572, column: 9, scope: !6431, inlinedAt: !6427)
!6431 = distinct !DILexicalBlock(scope: !6419, file: !1256, line: 4572, column: 9)
!6432 = !DILocalVariable(name: "__path", arg: 1, scope: !6433, file: !4162, line: 453, type: !876)
!6433 = distinct !DISubprogram(name: "stat", scope: !4162, file: !4162, line: 453, type: !6434, scopeLine: 454, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6436)
!6434 = !DISubroutineType(types: !6435)
!6435 = !{!477, !876, !4165}
!6436 = !{!6432, !6437}
!6437 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !6433, file: !4162, line: 453, type: !4165)
!6438 = !DILocation(line: 0, scope: !6433, inlinedAt: !6439)
!6439 = distinct !DILocation(line: 4572, column: 9, scope: !6431, inlinedAt: !6427)
!6440 = !DILocation(line: 455, column: 10, scope: !6433, inlinedAt: !6439)
!6441 = !DILocation(line: 4572, column: 53, scope: !6431, inlinedAt: !6427)
!6442 = !DILocation(line: 4572, column: 58, scope: !6431, inlinedAt: !6427)
!6443 = !DILocation(line: 4573, column: 2, scope: !6431, inlinedAt: !6427)
!6444 = !DILocation(line: 4572, column: 9, scope: !6419, inlinedAt: !6427)
!6445 = !DILocation(line: 4574, column: 2, scope: !6446, inlinedAt: !6427)
!6446 = distinct !DILexicalBlock(scope: !6431, file: !1256, line: 4573, column: 31)
!6447 = !DILocation(line: 4575, column: 8, scope: !6446, inlinedAt: !6427)
!6448 = !DILocation(line: 4576, column: 5, scope: !6446, inlinedAt: !6427)
!6449 = !DILocation(line: 4578, column: 2, scope: !6450, inlinedAt: !6427)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !1256, line: 4578, column: 2)
!6451 = distinct !DILexicalBlock(scope: !6431, file: !1256, line: 4576, column: 12)
!6452 = !DILocation(line: 4581, column: 1, scope: !6419, inlinedAt: !6427)
!6453 = !DILocation(line: 4773, column: 3, scope: !6417)
!6454 = !DILocation(line: 0, scope: !6419, inlinedAt: !6455)
!6455 = distinct !DILocation(line: 4774, column: 12, scope: !6417)
!6456 = !DILocation(line: 4568, column: 5, scope: !6419, inlinedAt: !6455)
!6457 = !DILocation(line: 4568, column: 12, scope: !6419, inlinedAt: !6455)
!6458 = !DILocation(line: 4572, column: 9, scope: !6431, inlinedAt: !6455)
!6459 = !DILocation(line: 0, scope: !6433, inlinedAt: !6460)
!6460 = distinct !DILocation(line: 4572, column: 9, scope: !6431, inlinedAt: !6455)
!6461 = !DILocation(line: 455, column: 10, scope: !6433, inlinedAt: !6460)
!6462 = !DILocation(line: 4572, column: 53, scope: !6431, inlinedAt: !6455)
!6463 = !DILocation(line: 4572, column: 58, scope: !6431, inlinedAt: !6455)
!6464 = !DILocation(line: 4573, column: 2, scope: !6431, inlinedAt: !6455)
!6465 = !DILocation(line: 4572, column: 9, scope: !6419, inlinedAt: !6455)
!6466 = !DILocation(line: 4574, column: 2, scope: !6446, inlinedAt: !6455)
!6467 = !DILocation(line: 4575, column: 8, scope: !6446, inlinedAt: !6455)
!6468 = !DILocation(line: 4576, column: 5, scope: !6446, inlinedAt: !6455)
!6469 = !DILocation(line: 4578, column: 2, scope: !6450, inlinedAt: !6455)
!6470 = !DILocation(line: 4581, column: 1, scope: !6419, inlinedAt: !6455)
!6471 = !DILocation(line: 4775, column: 6, scope: !6417)
!6472 = !DILocation(line: 4787, column: 10, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6382, file: !1256, line: 4787, column: 10)
!6474 = !DILocation(line: 4787, column: 10, scope: !6382)
!6475 = !DILocation(line: 4789, column: 3, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !1256, line: 4787, column: 33)
!6477 = !DILocation(line: 0, scope: !6419, inlinedAt: !6478)
!6478 = distinct !DILocation(line: 4790, column: 12, scope: !6476)
!6479 = !DILocation(line: 4568, column: 5, scope: !6419, inlinedAt: !6478)
!6480 = !DILocation(line: 4568, column: 12, scope: !6419, inlinedAt: !6478)
!6481 = !DILocation(line: 4572, column: 9, scope: !6431, inlinedAt: !6478)
!6482 = !DILocation(line: 0, scope: !6433, inlinedAt: !6483)
!6483 = distinct !DILocation(line: 4572, column: 9, scope: !6431, inlinedAt: !6478)
!6484 = !DILocation(line: 455, column: 10, scope: !6433, inlinedAt: !6483)
!6485 = !DILocation(line: 4572, column: 53, scope: !6431, inlinedAt: !6478)
!6486 = !DILocation(line: 4572, column: 58, scope: !6431, inlinedAt: !6478)
!6487 = !DILocation(line: 4573, column: 2, scope: !6431, inlinedAt: !6478)
!6488 = !DILocation(line: 4572, column: 9, scope: !6419, inlinedAt: !6478)
!6489 = !DILocation(line: 4574, column: 2, scope: !6446, inlinedAt: !6478)
!6490 = !DILocation(line: 4575, column: 8, scope: !6446, inlinedAt: !6478)
!6491 = !DILocation(line: 4576, column: 5, scope: !6446, inlinedAt: !6478)
!6492 = !DILocation(line: 4578, column: 2, scope: !6450, inlinedAt: !6478)
!6493 = !DILocation(line: 4581, column: 1, scope: !6419, inlinedAt: !6478)
!6494 = !DILocation(line: 4792, column: 6, scope: !6476)
!6495 = !DILocation(line: 0, scope: !1968, inlinedAt: !6496)
!6496 = distinct !DILocation(line: 4795, column: 6, scope: !6382)
!6497 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !6496)
!6498 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !6496)
!6499 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !6496)
!6500 = !DILocation(line: 0, scope: !1974, inlinedAt: !6496)
!6501 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !6496)
!6502 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !6496)
!6503 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !6496)
!6504 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !6496)
!6505 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !6496)
!6506 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !6496)
!6507 = !DILocation(line: 4799, column: 6, scope: !6389)
!6508 = !DILocation(line: 4799, column: 6, scope: !6379)
!6509 = !DILocation(line: 0, scope: !3290, inlinedAt: !6510)
!6510 = distinct !DILocation(line: 4803, column: 21, scope: !6388)
!6511 = !DILocation(line: 23, column: 12, scope: !3290, inlinedAt: !6510)
!6512 = !DILocation(line: 4803, column: 35, scope: !6388)
!6513 = !DILocation(line: 0, scope: !6388)
!6514 = !DILocation(line: 4805, column: 6, scope: !6388)
!6515 = !DILocation(line: 4806, column: 10, scope: !6516)
!6516 = distinct !DILexicalBlock(scope: !6388, file: !1256, line: 4806, column: 10)
!6517 = !DILocation(line: 4806, column: 10, scope: !6388)
!6518 = !DILocation(line: 4807, column: 3, scope: !6516)
!6519 = !DILocation(line: 4809, column: 6, scope: !6388)
!6520 = !DILocation(line: 4809, column: 18, scope: !6388)
!6521 = !DILocation(line: 4820, column: 3, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6388, file: !1256, line: 4809, column: 22)
!6523 = !DILocation(line: 0, scope: !3393, inlinedAt: !6524)
!6524 = distinct !DILocation(line: 4820, column: 3, scope: !6522)
!6525 = !DILocation(line: 142, column: 9, scope: !3400, inlinedAt: !6524)
!6526 = !DILocation(line: 142, column: 9, scope: !3393, inlinedAt: !6524)
!6527 = !DILocation(line: 143, column: 2, scope: !3400, inlinedAt: !6524)
!6528 = !DILocation(line: 143, column: 14, scope: !3400, inlinedAt: !6524)
!6529 = distinct !{!6529, !6519, !6530, !2029, !2030}
!6530 = !DILocation(line: 4821, column: 6, scope: !6388)
!6531 = !DILocation(line: 0, scope: !1968, inlinedAt: !6532)
!6532 = distinct !DILocation(line: 4822, column: 6, scope: !6388)
!6533 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !6532)
!6534 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !6532)
!6535 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !6532)
!6536 = !DILocation(line: 0, scope: !1974, inlinedAt: !6532)
!6537 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !6532)
!6538 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !6532)
!6539 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !6532)
!6540 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !6532)
!6541 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !6532)
!6542 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !6532)
!6543 = !DILocation(line: 4825, column: 11, scope: !6389)
!6544 = !DILocation(line: 4826, column: 6, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !1256, line: 4825, column: 25)
!6546 = distinct !DILexicalBlock(scope: !6389, file: !1256, line: 4825, column: 11)
!6547 = !DILocation(line: 4829, column: 6, scope: !6379)
!6548 = !DILocation(line: 4829, column: 7, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6379, file: !1256, line: 4829, column: 6)
!6550 = !DILocation(line: 0, scope: !1968, inlinedAt: !6551)
!6551 = distinct !DILocation(line: 4831, column: 6, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6549, file: !1256, line: 4829, column: 21)
!6553 = !DILocation(line: 161, column: 9, scope: !1975, inlinedAt: !6551)
!6554 = !DILocation(line: 161, column: 9, scope: !1968, inlinedAt: !6551)
!6555 = !DILocation(line: 162, column: 11, scope: !1974, inlinedAt: !6551)
!6556 = !DILocation(line: 0, scope: !1974, inlinedAt: !6551)
!6557 = !DILocation(line: 163, column: 6, scope: !1983, inlinedAt: !6551)
!6558 = !DILocation(line: 163, column: 6, scope: !1974, inlinedAt: !6551)
!6559 = !DILocation(line: 164, column: 24, scope: !1983, inlinedAt: !6551)
!6560 = !DILocation(line: 164, column: 19, scope: !1983, inlinedAt: !6551)
!6561 = !DILocation(line: 164, column: 6, scope: !1983, inlinedAt: !6551)
!6562 = !DILocation(line: 166, column: 6, scope: !1983, inlinedAt: !6551)
!6563 = !DILocation(line: 4834, column: 1, scope: !6362)
!6564 = !DISubprogram(name: "Perl_newSVsv", scope: !1566, file: !1566, line: 3129, type: !5032, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6565 = !DISubprogram(name: "Perl_av_create_and_push", scope: !1566, file: !1566, line: 191, type: !6566, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6566 = !DISubroutineType(types: !6567)
!6567 = !{null, !6568, !865}
!6568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6569)
!6569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!6570 = distinct !DISubprogram(name: "S_minus_v", scope: !1256, file: !1256, line: 3480, type: !1276, scopeLine: 3481, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6571)
!6571 = !{!6572, !6573, !6575, !6576}
!6572 = !DILocalVariable(name: "PIO_stdout", scope: !6570, file: !1256, line: 3482, type: !650)
!6573 = !DILocalVariable(name: "level_str", scope: !6574, file: !1256, line: 3484, type: !875)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !1256, line: 3483, column: 2)
!6575 = !DILocalVariable(name: "level_len", scope: !6574, file: !1256, line: 3485, type: !1570)
!6576 = !DILocalVariable(name: "level", scope: !6574, file: !1256, line: 3510, type: !530)
!6577 = !DILocation(line: 0, scope: !6574)
!6578 = !DILocation(line: 3510, column: 14, scope: !6574)
!6579 = !DILocation(line: 3512, column: 16, scope: !6574)
!6580 = !DILocation(line: 0, scope: !6570)
!6581 = !DILocation(line: 3513, column: 6, scope: !6574)
!6582 = !DILocation(line: 0, scope: !3784, inlinedAt: !6583)
!6583 = distinct !DILocation(line: 3519, column: 6, scope: !6574)
!6584 = !DILocation(line: 173, column: 14, scope: !3784, inlinedAt: !6583)
!6585 = !DILocation(line: 174, column: 9, scope: !3791, inlinedAt: !6583)
!6586 = !DILocation(line: 174, column: 9, scope: !3784, inlinedAt: !6583)
!6587 = !DILocation(line: 175, column: 20, scope: !3791, inlinedAt: !6583)
!6588 = !DILocation(line: 175, column: 15, scope: !3791, inlinedAt: !6583)
!6589 = !DILocation(line: 175, column: 2, scope: !3791, inlinedAt: !6583)
!6590 = !DILocation(line: 177, column: 2, scope: !3791, inlinedAt: !6583)
!6591 = !DILocation(line: 3530, column: 2, scope: !6570)
!6592 = !DILocation(line: 3571, column: 2, scope: !6570)
!6593 = !DILocation(line: 0, scope: !4746, inlinedAt: !6594)
!6594 = distinct !DILocation(line: 3578, column: 2, scope: !6570)
!6595 = !DILocation(line: 4962, column: 9, scope: !4753, inlinedAt: !6594)
!6596 = !DILocation(line: 4962, column: 23, scope: !4753, inlinedAt: !6594)
!6597 = !DILocation(line: 4962, column: 9, scope: !4746, inlinedAt: !6594)
!6598 = !DILocation(line: 4963, column: 2, scope: !4757, inlinedAt: !6594)
!6599 = !DILocation(line: 4965, column: 23, scope: !4759, inlinedAt: !6594)
!6600 = !DILocation(line: 4965, column: 9, scope: !4746, inlinedAt: !6594)
!6601 = !DILocation(line: 4966, column: 16, scope: !4762, inlinedAt: !6594)
!6602 = !DILocation(line: 4967, column: 2, scope: !4762, inlinedAt: !6594)
!6603 = !DILocation(line: 4968, column: 16, scope: !4762, inlinedAt: !6594)
!6604 = !DILocation(line: 4969, column: 5, scope: !4762, inlinedAt: !6594)
!6605 = !DILocation(line: 4972, column: 2, scope: !4767, inlinedAt: !6594)
!6606 = !DILocation(line: 0, scope: !4767, inlinedAt: !6594)
!6607 = !DILocation(line: 4981, column: 5, scope: !4746, inlinedAt: !6594)
!6608 = !DILocation(line: 4982, column: 1, scope: !4746, inlinedAt: !6594)
!6609 = distinct !DISubprogram(name: "Perl_my_unexec", scope: !1256, file: !1256, line: 3591, type: !1276, scopeLine: 3592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1309)
!6610 = !DILocation(line: 3617, column: 1, scope: !6609)
!6611 = distinct !DISubprogram(name: "Perl_doing_taint", scope: !1256, file: !1256, line: 3943, type: !6612, scopeLine: 3944, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6614)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!795, !477, !884, !884}
!6614 = !{!6615, !6616, !6617, !6618, !6619, !6620, !6621}
!6615 = !DILocalVariable(name: "argc", arg: 1, scope: !6611, file: !1256, line: 3943, type: !477)
!6616 = !DILocalVariable(name: "argv", arg: 2, scope: !6611, file: !1256, line: 3943, type: !884)
!6617 = !DILocalVariable(name: "envp", arg: 3, scope: !6611, file: !1256, line: 3943, type: !884)
!6618 = !DILocalVariable(name: "uid", scope: !6611, file: !1256, line: 3954, type: !1469)
!6619 = !DILocalVariable(name: "euid", scope: !6611, file: !1256, line: 3955, type: !1469)
!6620 = !DILocalVariable(name: "gid", scope: !6611, file: !1256, line: 3956, type: !1474)
!6621 = !DILocalVariable(name: "egid", scope: !6611, file: !1256, line: 3957, type: !1474)
!6622 = !DILocation(line: 0, scope: !6611)
!6623 = !DILocation(line: 3954, column: 18, scope: !6611)
!6624 = !DILocation(line: 3955, column: 18, scope: !6611)
!6625 = !DILocation(line: 3956, column: 18, scope: !6611)
!6626 = !DILocation(line: 3957, column: 18, scope: !6611)
!6627 = !DILocation(line: 3964, column: 9, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6611, file: !1256, line: 3964, column: 9)
!6629 = !DILocation(line: 3964, column: 13, scope: !6628)
!6630 = !DILocation(line: 3964, column: 22, scope: !6628)
!6631 = !DILocation(line: 3964, column: 29, scope: !6628)
!6632 = !DILocation(line: 3970, column: 15, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6611, file: !1256, line: 3970, column: 10)
!6634 = !DILocation(line: 3970, column: 19, scope: !6633)
!6635 = !DILocation(line: 3970, column: 22, scope: !6633)
!6636 = !DILocation(line: 3970, column: 33, scope: !6633)
!6637 = !DILocation(line: 3971, column: 10, scope: !6633)
!6638 = !DILocation(line: 3971, column: 13, scope: !6633)
!6639 = !DILocation(line: 3970, column: 10, scope: !6611)
!6640 = !DILocation(line: 3973, column: 5, scope: !6611)
!6641 = !DILocation(line: 3974, column: 1, scope: !6611)
!6642 = !DISubprogram(name: "getuid", scope: !27, file: !27, line: 4003, type: !6643, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6643 = !DISubroutineType(types: !6644)
!6644 = !{!1470}
!6645 = !DISubprogram(name: "geteuid", scope: !27, file: !27, line: 4004, type: !6643, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6646 = !DISubprogram(name: "getgid", scope: !27, file: !27, line: 4005, type: !6647, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!1475}
!6649 = !DISubprogram(name: "getegid", scope: !27, file: !27, line: 4006, type: !6647, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6650 = distinct !DISubprogram(name: "Perl_init_dbargs", scope: !1256, file: !1256, line: 4007, type: !1276, scopeLine: 4008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6651)
!6651 = !{!6652}
!6652 = !DILocalVariable(name: "args", scope: !6650, file: !1256, line: 4009, type: !6377)
!6653 = !DILocation(line: 4009, column: 34, scope: !6650)
!6654 = !DILocation(line: 4009, column: 32, scope: !6650)
!6655 = !DILocation(line: 0, scope: !6650)
!6656 = !DILocation(line: 4013, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6650, file: !1256, line: 4013, column: 9)
!6658 = !DILocation(line: 4013, column: 9, scope: !6650)
!6659 = !DILocation(line: 4017, column: 2, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6657, file: !1256, line: 4013, column: 23)
!6661 = !DILocation(line: 4018, column: 6, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6660, file: !1256, line: 4018, column: 6)
!6663 = !DILocation(line: 4018, column: 6, scope: !6660)
!6664 = !DILocation(line: 4019, column: 6, scope: !6662)
!6665 = !DILocation(line: 4021, column: 5, scope: !6650)
!6666 = !DILocation(line: 4022, column: 1, scope: !6650)
!6667 = !DISubprogram(name: "Perl_av_clear", scope: !1566, file: !1566, line: 186, type: !6668, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6668 = !DISubroutineType(types: !6669)
!6669 = !{null, !489}
!6670 = !DISubprogram(name: "Perl_mg_find", scope: !1566, file: !1566, line: 2648, type: !6671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!515, !905, !477}
!6673 = !DISubprogram(name: "Perl_sv_setiv", scope: !1566, file: !1566, line: 4587, type: !6674, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{null, !865, !1269}
!6676 = !DISubprogram(name: "Perl_sv_magicext", scope: !1566, file: !1566, line: 4431, type: !6677, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!515, !865, !865, !1264, !6679, !875, !899}
!6679 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6680)
!6680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6681, size: 64)
!6681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !523)
!6682 = !DISubprogram(name: "Perl_mg_set", scope: !1566, file: !1566, line: 2692, type: !5400, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6683 = !DISubprogram(name: "Perl_safesysmalloc", scope: !1566, file: !1566, line: 3751, type: !6684, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!535, !561}
!6686 = distinct !DISubprogram(name: "Perl_populate_isa", scope: !1256, file: !1256, line: 4136, type: !6687, scopeLine: 4137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6689)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{null, !876, !560, null}
!6689 = !{!6690, !6691, !6692, !6693, !6694, !6708, !6710}
!6690 = !DILocalVariable(name: "name", arg: 1, scope: !6686, file: !1256, line: 4136, type: !876)
!6691 = !DILocalVariable(name: "len", arg: 2, scope: !6686, file: !1256, line: 4136, type: !560)
!6692 = !DILocalVariable(name: "gv", scope: !6686, file: !1256, line: 4138, type: !4674)
!6693 = !DILocalVariable(name: "isa", scope: !6686, file: !1256, line: 4139, type: !6377)
!6694 = !DILocalVariable(name: "args", scope: !6686, file: !1256, line: 4140, type: !6695)
!6695 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !6696, line: 52, baseType: !6697)
!6696 = !DIFile(filename: "/usr/include/stdio.h", directory: "", checksumkind: CSK_MD5, checksum: "5b917eded35ce2507d1e294bf8cb74d7")
!6697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !6698, line: 32, baseType: !6699)
!6698 = !DIFile(filename: "llvm-project/build/lib/clang/15.0.0/include/stdarg.h", directory: "/home/rouzbeh/Graduate/LLVM", checksumkind: CSK_MD5, checksum: "4de3cbd931b589d291e5c39387aecf82")
!6699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6700, baseType: !6701)
!6700 = !DIFile(filename: "apps/500.perlbench_r/src/perl.c", directory: "/home/rouzbeh/Graduate/LLVM/spec2017cpu-cmake")
!6701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6702, size: 192, elements: !612)
!6702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", size: 192, elements: !6703)
!6703 = !{!6704, !6705, !6706, !6707}
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !6702, file: !6700, line: 4140, baseType: !7, size: 32)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !6702, file: !6700, line: 4140, baseType: !7, size: 32, offset: 32)
!6706 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !6702, file: !6700, line: 4140, baseType: !535, size: 64, offset: 64)
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !6702, file: !6700, line: 4140, baseType: !535, size: 64, offset: 128)
!6708 = !DILocalVariable(name: "parent", scope: !6709, file: !1256, line: 4151, type: !875)
!6709 = distinct !DILexicalBlock(scope: !6686, file: !1256, line: 4150, column: 8)
!6710 = !DILocalVariable(name: "parent_len", scope: !6709, file: !1256, line: 4152, type: !561)
!6711 = !DILocation(line: 0, scope: !6686)
!6712 = !DILocation(line: 4138, column: 20, scope: !6686)
!6713 = !DILocation(line: 4139, column: 21, scope: !6686)
!6714 = !DILocation(line: 4140, column: 5, scope: !6686)
!6715 = !DILocation(line: 4140, column: 13, scope: !6686)
!6716 = !DILocation(line: 4144, column: 8, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6686, file: !1256, line: 4144, column: 8)
!6718 = !DILocation(line: 4144, column: 21, scope: !6717)
!6719 = !DILocation(line: 4144, column: 8, scope: !6686)
!6720 = !DILocation(line: 4149, column: 5, scope: !6686)
!6721 = !DILocation(line: 4150, column: 5, scope: !6686)
!6722 = !DILocation(line: 4151, column: 29, scope: !6709)
!6723 = !DILocation(line: 0, scope: !6709)
!6724 = !DILocation(line: 4154, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6709, file: !1256, line: 4154, column: 6)
!6726 = !DILocation(line: 4154, column: 6, scope: !6709)
!6727 = !DILocation(line: 4156, column: 15, scope: !6709)
!6728 = !DILocation(line: 4162, column: 2, scope: !6709)
!6729 = !DILocation(line: 4163, column: 9, scope: !6709)
!6730 = !DILocation(line: 4165, column: 5, scope: !6686)
!6731 = !DILocation(line: 4166, column: 1, scope: !6686)
!6732 = !DISubprogram(name: "Perl_av_push", scope: !1566, file: !1566, line: 259, type: !6733, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6733 = !DISubroutineType(types: !6734)
!6734 = !{null, !489, !530}
!6735 = distinct !DISubprogram(name: "Perl_init_argv_symbols", scope: !1256, file: !1256, line: 4230, type: !6736, scopeLine: 4231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6738)
!6736 = !DISubroutineType(types: !6737)
!6737 = !{null, !477, !884}
!6738 = !{!6739, !6740, !6741, !6747, !6750}
!6739 = !DILocalVariable(name: "argc", arg: 1, scope: !6735, file: !1256, line: 4230, type: !477)
!6740 = !DILocalVariable(name: "argv", arg: 2, scope: !6735, file: !1256, line: 4230, type: !884)
!6741 = !DILocalVariable(name: "s", scope: !6742, file: !1256, line: 4237, type: !486)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !1256, line: 4236, column: 51)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !1256, line: 4236, column: 2)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !1256, line: 4236, column: 2)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !1256, line: 4235, column: 24)
!6746 = distinct !DILexicalBlock(scope: !6735, file: !1256, line: 4235, column: 9)
!6747 = !DILocalVariable(name: "start_name", scope: !6748, file: !1256, line: 4245, type: !875)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !1256, line: 4244, column: 38)
!6749 = distinct !DILexicalBlock(scope: !6742, file: !1256, line: 4244, column: 10)
!6750 = !DILocalVariable(name: "sv", scope: !6751, file: !1256, line: 4258, type: !865)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !1256, line: 4257, column: 34)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !1256, line: 4257, column: 2)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !1256, line: 4257, column: 2)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !1256, line: 4253, column: 73)
!6755 = distinct !DILexicalBlock(scope: !6735, file: !1256, line: 4253, column: 9)
!6756 = !DILocation(line: 0, scope: !6735)
!6757 = !DILocation(line: 4234, column: 9, scope: !6735)
!6758 = !DILocation(line: 4234, column: 16, scope: !6735)
!6759 = !DILocation(line: 4235, column: 9, scope: !6746)
!6760 = !DILocation(line: 4235, column: 9, scope: !6735)
!6761 = !DILocation(line: 4236, column: 22, scope: !6743)
!6762 = !DILocation(line: 4236, column: 21, scope: !6743)
!6763 = !DILocation(line: 4236, column: 28, scope: !6743)
!6764 = !DILocation(line: 4236, column: 2, scope: !6744)
!6765 = !DILocation(line: 4238, column: 11, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6742, file: !1256, line: 4238, column: 10)
!6767 = !DILocation(line: 4238, column: 10, scope: !6742)
!6768 = !DILocation(line: 4240, column: 32, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6742, file: !1256, line: 4240, column: 10)
!6770 = !DILocation(line: 4240, column: 10, scope: !6742)
!6771 = !DILocation(line: 4241, column: 7, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !1256, line: 4240, column: 44)
!6773 = !DILocation(line: 4241, column: 14, scope: !6772)
!6774 = !DILocation(line: 4242, column: 3, scope: !6772)
!6775 = !DILocation(line: 4244, column: 15, scope: !6749)
!6776 = !DILocation(line: 0, scope: !6742)
!6777 = !DILocation(line: 4244, column: 13, scope: !6749)
!6778 = !DILocation(line: 4244, column: 10, scope: !6742)
!6779 = !DILocation(line: 0, scope: !6748)
!6780 = !DILocation(line: 4246, column: 3, scope: !6748)
!6781 = !DILocation(line: 4248, column: 6, scope: !6748)
!6782 = !DILocation(line: 4250, column: 3, scope: !6749)
!6783 = !DILocation(line: 4236, column: 40, scope: !6743)
!6784 = !DILocation(line: 4236, column: 47, scope: !6743)
!6785 = !DILocation(line: 4236, column: 14, scope: !6743)
!6786 = !DILocation(line: 4236, column: 18, scope: !6743)
!6787 = !DILocation(line: 4253, column: 22, scope: !6755)
!6788 = !DILocation(line: 4253, column: 20, scope: !6755)
!6789 = !DILocation(line: 4253, column: 9, scope: !6735)
!6790 = !DILocation(line: 4254, column: 2, scope: !6754)
!6791 = !DILocation(line: 4255, column: 2, scope: !6754)
!6792 = !DILocation(line: 4256, column: 2, scope: !6754)
!6793 = !DILocation(line: 4257, column: 14, scope: !6752)
!6794 = !DILocation(line: 4257, column: 2, scope: !6753)
!6795 = !DILocation(line: 4258, column: 22, scope: !6751)
!6796 = !DILocation(line: 0, scope: !6751)
!6797 = !DILocation(line: 4259, column: 6, scope: !6751)
!6798 = !DILocation(line: 4260, column: 12, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6751, file: !1256, line: 4260, column: 10)
!6800 = !DILocation(line: 4260, column: 23, scope: !6799)
!6801 = !DILocation(line: 4260, column: 51, scope: !6799)
!6802 = !DILocation(line: 4262, column: 9, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !1256, line: 4261, column: 8)
!6804 = distinct !DILexicalBlock(scope: !6799, file: !1256, line: 4260, column: 69)
!6805 = !DILocation(line: 4264, column: 21, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6751, file: !1256, line: 4264, column: 10)
!6807 = !DILocation(line: 4264, column: 10, scope: !6751)
!6808 = !DILocation(line: 4265, column: 10, scope: !6806)
!6809 = !DILocation(line: 4265, column: 4, scope: !6806)
!6810 = !DILocation(line: 4257, column: 23, scope: !6752)
!6811 = !DILocation(line: 4257, column: 30, scope: !6752)
!6812 = distinct !{!6812, !6794, !6813, !2029, !2030}
!6813 = !DILocation(line: 4266, column: 2, scope: !6753)
!6814 = !DILocation(line: 4269, column: 9, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6735, file: !1256, line: 4269, column: 9)
!6816 = !DILocation(line: 4269, column: 20, scope: !6815)
!6817 = !DILocation(line: 4269, column: 25, scope: !6815)
!6818 = !DILocation(line: 4269, column: 35, scope: !6815)
!6819 = !DILocation(line: 4269, column: 38, scope: !6815)
!6820 = !DILocation(line: 4269, column: 62, scope: !6815)
!6821 = !DILocation(line: 4269, column: 9, scope: !6735)
!6822 = !DILocation(line: 4270, column: 9, scope: !6815)
!6823 = !DILocation(line: 4273, column: 1, scope: !6735)
!6824 = !DISubprogram(name: "Perl_sv_setpv", scope: !1566, file: !1566, line: 4607, type: !6825, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{null, !865, !875}
!6827 = !DISubprogram(name: "Perl_sv_utf8_decode", scope: !1566, file: !1566, line: 4767, type: !6828, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{!795, !865}
!6830 = !DISubprogram(name: "Perl_mg_size", scope: !1566, file: !1566, line: 2697, type: !6831, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6831 = !DISubroutineType(types: !6832)
!6832 = !{!609, !530}
!6833 = !DISubprogram(name: "Perl_av_shift", scope: !1566, file: !1566, line: 270, type: !6834, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!530, !489}
!6836 = !DILocation(line: 0, scope: !4746)
!6837 = !DILocation(line: 4962, column: 9, scope: !4753)
!6838 = !DILocation(line: 4962, column: 23, scope: !4753)
!6839 = !DILocation(line: 4962, column: 9, scope: !4746)
!6840 = !DILocation(line: 4963, column: 2, scope: !4757)
!6841 = !DILocation(line: 4965, column: 23, scope: !4759)
!6842 = !DILocation(line: 4965, column: 9, scope: !4746)
!6843 = !DILocation(line: 4966, column: 16, scope: !4762)
!6844 = !DILocation(line: 4967, column: 41, scope: !4762)
!6845 = !DILocation(line: 4967, column: 2, scope: !4762)
!6846 = !DILocation(line: 4968, column: 16, scope: !4762)
!6847 = !DILocation(line: 4969, column: 5, scope: !4762)
!6848 = !DILocation(line: 4970, column: 5, scope: !4746)
!6849 = !DILocation(line: 4972, column: 2, scope: !4767)
!6850 = !DILocation(line: 4973, column: 2, scope: !4767)
!6851 = !DILocation(line: 4975, column: 2, scope: !4767)
!6852 = !DILocation(line: 4976, column: 2, scope: !4767)
!6853 = !DILocation(line: 4978, column: 2, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !4767, file: !1256, line: 4978, column: 2)
!6855 = !DILocation(line: 4978, column: 2, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6854, file: !1256, line: 4978, column: 2)
!6857 = !DILocation(line: 0, scope: !4767)
!6858 = !DILocation(line: 4981, column: 5, scope: !4746)
!6859 = !DILocation(line: 4982, column: 1, scope: !4746)
!6860 = !DISubprogram(name: "Perl_warn", scope: !1566, file: !1566, line: 5183, type: !5705, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6861 = distinct !DISubprogram(name: "Perl_my_failure_exit", scope: !1256, file: !1256, line: 4985, type: !1276, scopeLine: 4986, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6862)
!6862 = !{!6863}
!6863 = !DILocalVariable(name: "exitstatus", scope: !6861, file: !1256, line: 5055, type: !477)
!6864 = !DILocation(line: 5056, column: 9, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !1256, line: 5056, column: 9)
!6866 = !DILocation(line: 5056, column: 15, scope: !6865)
!6867 = !DILocation(line: 5056, column: 9, scope: !6861)
!6868 = !DILocation(line: 5057, column: 2, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6865, file: !1256, line: 5057, column: 2)
!6870 = !DILocation(line: 5057, column: 2, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6869, file: !1256, line: 5057, column: 2)
!6872 = !DILocation(line: 5059, column: 15, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6865, file: !1256, line: 5058, column: 10)
!6874 = !DILocation(line: 5059, column: 27, scope: !6873)
!6875 = !DILocation(line: 0, scope: !6861)
!6876 = !DILocation(line: 5060, column: 17, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6873, file: !1256, line: 5060, column: 6)
!6878 = !DILocation(line: 5060, column: 6, scope: !6873)
!6879 = !DILocation(line: 5061, column: 6, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6877, file: !1256, line: 5061, column: 6)
!6881 = !DILocation(line: 5061, column: 6, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6880, file: !1256, line: 5061, column: 6)
!6883 = !DILocation(line: 0, scope: !6865)
!6884 = !DILocation(line: 5066, column: 9, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6861, file: !1256, line: 5066, column: 9)
!6886 = !DILocation(line: 5066, column: 23, scope: !6885)
!6887 = !DILocation(line: 5066, column: 9, scope: !6861)
!6888 = !DILocation(line: 5067, column: 2, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !1256, line: 5066, column: 42)
!6890 = !DILocation(line: 5069, column: 23, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6861, file: !1256, line: 5069, column: 9)
!6892 = !DILocation(line: 5069, column: 9, scope: !6861)
!6893 = !DILocation(line: 5070, column: 16, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6891, file: !1256, line: 5069, column: 41)
!6895 = !DILocation(line: 5071, column: 49, scope: !6894)
!6896 = !DILocation(line: 5071, column: 2, scope: !6894)
!6897 = !DILocation(line: 5072, column: 16, scope: !6894)
!6898 = !DILocation(line: 5073, column: 5, scope: !6894)
!6899 = !DILocation(line: 5074, column: 5, scope: !6861)
!6900 = !DILocation(line: 5075, column: 1, scope: !6861)
!6901 = distinct !DISubprogram(name: "Perl_xs_boot_epilog", scope: !1256, file: !1256, line: 5113, type: !6902, scopeLine: 5114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6904)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{null, !878}
!6904 = !{!6905, !6906}
!6905 = !DILocalVariable(name: "ax", arg: 1, scope: !6901, file: !1256, line: 5113, type: !878)
!6906 = !DILocalVariable(name: "tmpXSoff", scope: !6907, file: !1256, line: 5117, type: !1269)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !1256, line: 5117, column: 5)
!6908 = distinct !DILexicalBlock(scope: !6901, file: !1256, line: 5117, column: 5)
!6909 = !DILocation(line: 0, scope: !6901)
!6910 = !DILocation(line: 5115, column: 7, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !6901, file: !1256, line: 5115, column: 7)
!6912 = !DILocation(line: 5115, column: 7, scope: !6901)
!6913 = !DILocation(line: 5116, column: 2, scope: !6911)
!6914 = !DILocation(line: 5117, column: 5, scope: !6908)
!6915 = !DILocation(line: 0, scope: !6907)
!6916 = !DILocation(line: 5117, column: 5, scope: !6907)
!6917 = !DILocation(line: 5118, column: 1, scope: !6901)
!6918 = !DISubprogram(name: "Perl_sv_free2", scope: !1566, file: !1566, line: 4371, type: !6919, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{null, !865, !878}
!6921 = !DISubprogram(name: "Perl_sv_catpv", scope: !1566, file: !1566, line: 4193, type: !6922, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{null, !865, !876}
!6924 = !DISubprogram(name: "Perl_PerlIO_stdin", scope: !1566, file: !1566, line: 8277, type: !4694, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6925 = !DISubprogram(name: "Perl_rsignal_state", scope: !1566, file: !1566, line: 3732, type: !6926, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!472, !477}
!6928 = !DISubprogram(name: "Perl_ck_warner", scope: !1566, file: !1566, line: 700, type: !3452, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6929 = !DISubprogram(name: "Perl_rsignal", scope: !1566, file: !1566, line: 3725, type: !6930, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!472, !477, !472}
!6932 = !DISubprogram(name: "chdir", scope: !6933, file: !6933, line: 497, type: !6934, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6933 = !DIFile(filename: "/usr/include/unistd.h", directory: "", checksumkind: CSK_MD5, checksum: "29bea3f2d65ec3bb874f389bfdfa2266")
!6934 = !DISubroutineType(types: !6935)
!6935 = !{!477, !876}
!6936 = !DISubprogram(name: "Perl_pad_new", scope: !1566, file: !1566, line: 3358, type: !6937, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6937 = !DISubroutineType(types: !6938)
!6938 = !{!819, !477}
!6939 = !DISubprogram(name: "Perl_boot_core_PerlIO", scope: !1566, file: !1566, line: 322, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6940 = !DISubprogram(name: "Perl_boot_core_UNIVERSAL", scope: !1566, file: !1566, line: 323, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6941 = !DISubprogram(name: "Perl_boot_core_mro", scope: !1566, file: !1566, line: 324, type: !1276, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6942 = !DISubprogram(name: "Perl_newXS", scope: !1566, file: !1566, line: 3156, type: !6943, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6943 = !DISubroutineType(types: !6944)
!6944 = !{!737, !876, !6945, !876}
!6945 = !DIDerivedType(tag: DW_TAG_typedef, name: "XSUBADDR_t", file: !27, line: 5402, baseType: !806)
!6946 = !DILocation(line: 0, scope: !1255)
!6947 = !DILocation(line: 1681, column: 5, scope: !1255)
!6948 = !DILocation(line: 1802, column: 5, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !1256, line: 1802, column: 5)
!6950 = distinct !DILexicalBlock(scope: !1255, file: !1256, line: 1802, column: 5)
!6951 = !DILocation(line: 1802, column: 5, scope: !6950)
!6952 = !DILocation(line: 1802, column: 5, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6949, file: !1256, line: 1802, column: 5)
!6954 = !DILocation(line: 1804, column: 5, scope: !1255)
!6955 = !DILocation(line: 1805, column: 5, scope: !1255)
!6956 = !DILocation(line: 1818, column: 5, scope: !1255)
!6957 = !DILocation(line: 0, scope: !1268)
!6958 = !DILocation(line: 1826, column: 5, scope: !1268)
!6959 = !DILocation(line: 1827, column: 1, scope: !1255)
!6960 = !DISubprogram(name: "PerlIO_binmode", scope: !652, file: !652, line: 345, type: !6961, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{!477, !650, !477, !477, !876}
!6963 = !DISubprogram(name: "Perl_lex_start", scope: !1566, file: !1566, line: 2262, type: !6964, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6964 = !DISubroutineType(types: !6965)
!6965 = !{null, !530, !650, !487}
!6966 = !DISubprogram(name: "Perl_filter_add", scope: !1566, file: !1566, line: 1192, type: !6967, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6967 = !DISubroutineType(types: !6968)
!6968 = !{!530, !6969, !530}
!6969 = !DIDerivedType(tag: DW_TAG_typedef, name: "filter_t", file: !27, line: 3704, baseType: !6970)
!6970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6971, size: 64)
!6971 = !DISubroutineType(types: !6972)
!6972 = !{!609, !477, !530, !477}
!6973 = distinct !DISubprogram(name: "read_e_script", scope: !1256, file: !1256, line: 5093, type: !6971, scopeLine: 5094, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6974)
!6974 = !{!6975, !6976, !6977, !6978, !6979}
!6975 = !DILocalVariable(name: "idx", arg: 1, scope: !6973, file: !1256, line: 5093, type: !477)
!6976 = !DILocalVariable(name: "buf_sv", arg: 2, scope: !6973, file: !1256, line: 5093, type: !530)
!6977 = !DILocalVariable(name: "maxlen", arg: 3, scope: !6973, file: !1256, line: 5093, type: !477)
!6978 = !DILocalVariable(name: "p", scope: !6973, file: !1256, line: 5095, type: !875)
!6979 = !DILocalVariable(name: "nl", scope: !6973, file: !1256, line: 5096, type: !876)
!6980 = !DILocation(line: 0, scope: !6973)
!6981 = !DILocation(line: 5095, column: 29, scope: !6973)
!6982 = !DILocation(line: 5096, column: 22, scope: !6973)
!6983 = !DILocation(line: 5101, column: 10, scope: !6973)
!6984 = !DILocation(line: 5101, column: 19, scope: !6973)
!6985 = !DILocation(line: 5101, column: 24, scope: !6973)
!6986 = !DILocation(line: 5102, column: 14, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6973, file: !1256, line: 5102, column: 9)
!6988 = !DILocation(line: 5102, column: 9, scope: !6973)
!6989 = !DILocation(line: 5103, column: 2, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6987, file: !1256, line: 5102, column: 20)
!6991 = !DILocation(line: 5104, column: 2, scope: !6990)
!6992 = !DILocation(line: 5102, column: 11, scope: !6987)
!6993 = !DILocation(line: 5106, column: 5, scope: !6973)
!6994 = !DILocation(line: 5107, column: 5, scope: !6973)
!6995 = !DILocation(line: 5108, column: 5, scope: !6973)
!6996 = !DILocation(line: 5109, column: 1, scope: !6973)
!6997 = !DISubprogram(name: "Perl_yyparse", scope: !1566, file: !1566, line: 5260, type: !1600, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6998 = !DISubprogram(name: "Perl_save_sptr", scope: !1566, file: !1566, line: 3935, type: !6999, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!6999 = !DISubroutineType(types: !7000)
!7000 = !{null, !594}
!7001 = !DISubprogram(name: "Perl_save_I32", scope: !1566, file: !1566, line: 3764, type: !7002, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7002 = !DISubroutineType(types: !7003)
!7003 = !{null, !1154}
!7004 = !DISubprogram(name: "Perl_gv_check", scope: !1566, file: !1566, line: 1414, type: !7005, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{null, !500}
!7007 = !DISubprogram(name: "Perl_hv_name_set", scope: !1566, file: !1566, line: 1760, type: !7008, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !500, !876, !487, !487}
!7010 = !DISubprogram(name: "Perl_form", scope: !1566, file: !1566, line: 1261, type: !7011, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{!486, !876, null}
!7013 = distinct !DISubprogram(name: "S_incpush_use_sep", scope: !1256, file: !1256, line: 4837, type: !7014, scopeLine: 4838, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7016)
!7014 = !DISubroutineType(types: !7015)
!7015 = !{null, !876, !560, !487}
!7016 = !{!7017, !7018, !7019, !7020, !7021}
!7017 = !DILocalVariable(name: "p", arg: 1, scope: !7013, file: !1256, line: 4837, type: !876)
!7018 = !DILocalVariable(name: "len", arg: 2, scope: !7013, file: !1256, line: 4837, type: !560)
!7019 = !DILocalVariable(name: "flags", arg: 3, scope: !7013, file: !1256, line: 4837, type: !487)
!7020 = !DILocalVariable(name: "s", scope: !7013, file: !1256, line: 4839, type: !876)
!7021 = !DILocalVariable(name: "end", scope: !7013, file: !1256, line: 4840, type: !876)
!7022 = !DILocation(line: 0, scope: !7013)
!7023 = !DILocation(line: 4855, column: 8, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7013, file: !1256, line: 4853, column: 9)
!7025 = !DILocation(line: 4857, column: 13, scope: !7013)
!7026 = !DILocation(line: 4860, column: 30, scope: !7013)
!7027 = !DILocation(line: 4860, column: 5, scope: !7013)
!7028 = !DILocation(line: 4860, column: 57, scope: !7013)
!7029 = !DILocation(line: 4861, column: 8, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !1256, line: 4861, column: 6)
!7031 = distinct !DILexicalBlock(scope: !7013, file: !1256, line: 4860, column: 64)
!7032 = !DILocation(line: 4861, column: 6, scope: !7031)
!7033 = !DILocation(line: 4868, column: 6, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7030, file: !1256, line: 4867, column: 9)
!7035 = !DILocation(line: 0, scope: !6362, inlinedAt: !7036)
!7036 = distinct !DILocation(line: 4868, column: 6, scope: !7034)
!7037 = !DILocation(line: 4736, column: 21, scope: !6362, inlinedAt: !7036)
!7038 = !DILocation(line: 0, scope: !6396, inlinedAt: !7039)
!7039 = distinct !DILocation(line: 4744, column: 21, scope: !6379, inlinedAt: !7036)
!7040 = !DILocation(line: 4598, column: 14, scope: !6396, inlinedAt: !7039)
!7041 = !DILocation(line: 0, scope: !6379, inlinedAt: !7036)
!7042 = !DILocation(line: 4826, column: 6, scope: !6545, inlinedAt: !7036)
!7043 = !DILocation(line: 4870, column: 8, scope: !7031)
!7044 = distinct !{!7044, !7027, !7045, !2029, !2030}
!7045 = !DILocation(line: 4871, column: 5, scope: !7013)
!7046 = !DILocation(line: 4872, column: 11, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7013, file: !1256, line: 4872, column: 9)
!7048 = !DILocation(line: 4872, column: 9, scope: !7013)
!7049 = !DILocation(line: 0, scope: !6362, inlinedAt: !7050)
!7050 = distinct !DILocation(line: 4873, column: 2, scope: !7047)
!7051 = !DILocation(line: 4736, column: 21, scope: !6362, inlinedAt: !7050)
!7052 = !DILocation(line: 0, scope: !6396, inlinedAt: !7053)
!7053 = distinct !DILocation(line: 4744, column: 21, scope: !6379, inlinedAt: !7050)
!7054 = !DILocation(line: 4598, column: 14, scope: !6396, inlinedAt: !7053)
!7055 = !DILocation(line: 0, scope: !6379, inlinedAt: !7050)
!7056 = !DILocation(line: 4826, column: 6, scope: !6545, inlinedAt: !7050)
!7057 = !DILocation(line: 4873, column: 2, scope: !7047)
!7058 = !DILocation(line: 4875, column: 1, scope: !7013)
!7059 = !DISubprogram(name: "Perl_find_script", scope: !1566, file: !1566, line: 1225, type: !7060, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7060 = !DISubroutineType(types: !7061)
!7061 = !{!486, !876, !795, !7062, !609}
!7062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1280)
!7063 = !DISubprogram(name: "Perl_grok_atoUV", scope: !1566, file: !1566, line: 1338, type: !7064, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{!795, !876, !7066, !1153}
!7066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!7067 = !DISubprogram(name: "Perl_gv_fetchfile", scope: !1566, file: !1566, line: 1444, type: !7068, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7068 = !DISubroutineType(types: !7069)
!7069 = !{!670, !876}
!7070 = !DISubprogram(name: "PerlIO_fdopen", scope: !652, file: !652, line: 241, type: !7071, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7071 = !DISubroutineType(types: !7072)
!7072 = !{!650, !477, !876}
!7073 = !DISubprogram(name: "PerlIO_open", scope: !652, file: !652, line: 215, type: !7074, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!650, !876, !876}
!7076 = !DISubprogram(name: "Perl_PerlIO_fileno", scope: !1566, file: !1566, line: 8252, type: !3443, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7077 = !DISubprogram(name: "fcntl", scope: !7078, file: !7078, line: 148, type: !7079, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7078 = !DIFile(filename: "/usr/include/fcntl.h", directory: "", checksumkind: CSK_MD5, checksum: "270596b098606fab5166d0114edf8288")
!7079 = !DISubroutineType(types: !7080)
!7080 = !{!477, !477, !477, null}
!7081 = !DISubprogram(name: "Perl_sv_gets", scope: !1566, file: !1566, line: 4383, type: !7082, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7082 = !DISubroutineType(types: !7083)
!7083 = !{!486, !865, !7084, !609}
!7084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !650)
!7085 = !DISubprogram(name: "Perl_instr", scope: !1566, file: !1566, line: 1837, type: !7086, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7086 = !DISubroutineType(types: !7087)
!7087 = !{!486, !876, !876}
!7088 = !DISubprogram(name: "PerlIO_ungetc", scope: !652, file: !652, line: 238, type: !7089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7089 = !DISubroutineType(types: !7090)
!7090 = !{!477, !650, !477}
!7091 = !DISubprogram(name: "Perl_PerlIO_stdout", scope: !1566, file: !1566, line: 8280, type: !4694, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7092 = !DISubprogram(name: "Perl_setdefout", scope: !1566, file: !1566, line: 4041, type: !7093, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{null, !670}
!7095 = !DISubprogram(name: "Perl_filter_del", scope: !1566, file: !1566, line: 1193, type: !7096, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7096 = !DISubroutineType(types: !7097)
!7097 = !{null, !6969}
!7098 = !DISubprogram(name: "Perl_sv_chop", scope: !1566, file: !1566, line: 4256, type: !6825, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7099 = !DISubprogram(name: "PerlIO_puts", scope: !652, file: !652, line: 212, type: !7100, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7100 = !DISubroutineType(types: !7101)
!7101 = !{!477, !650, !876}
!7102 = !DISubprogram(name: "Perl_sv_magic", scope: !1566, file: !1566, line: 4426, type: !7103, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !865, !865, !1264, !875, !899}
!7105 = !DISubprogram(name: "Perl_av_unshift", scope: !1566, file: !1566, line: 296, type: !7106, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7106 = !DISubroutineType(types: !7107)
!7107 = !{null, !489, !824}
!7108 = !DISubprogram(name: "Perl_av_store", scope: !1566, file: !1566, line: 276, type: !7109, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7109 = !DISubroutineType(types: !7110)
!7110 = !{!594, !489, !824, !530}
!7111 = !DISubprogram(name: "Perl_av_fetch", scope: !1566, file: !1566, line: 226, type: !7112, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
!7112 = !DISubroutineType(types: !7113)
!7113 = !{!594, !489, !824, !609}
!7114 = !DISubprogram(name: "Perl_leave_scope", scope: !1566, file: !1566, line: 2245, type: !4727, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !1309)
