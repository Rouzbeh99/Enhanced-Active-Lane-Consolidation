; ModuleID = 'PreCompGraphManager.cpp'
source_filename = "PreCompGraphManager.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.algorithm::PreCompGraphManager" = type { ptr, ptr, %"class.std::vector", %"class.std::vector.0", i32, i32 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl" }
%"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl" = type { %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data" }
%"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl_data" = type { ptr, ptr, ptr }
%"struct.algorithm::ForestNode_" = type <{ i32, i32, i16, i16, i16, i32, [6 x i8], ptr, ptr, ptr }>
%"class.algorithm::DecGraph" = type <{ i8, [3 x i8], i32, i32, i32, i32, [4 x i8], ptr, %"struct.algorithm::DecEdge_", [4 x i8] }>
%"struct.algorithm::DecEdge_" = type { i32 }
%"struct.algorithm::DecNode_" = type { %"struct.algorithm::DecEdge_", %"struct.algorithm::DecEdge_", %union.anon, i32, i32 }
%union.anon = type { ptr }

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZN9algorithm19PreCompGraphManager12aigSubgraphsE = dso_local local_unnamed_addr constant [3562 x i16] [i16 8, i16 2, i16 10, i16 2, i16 8, i16 3, i16 10, i16 3, i16 9, i16 2, i16 12, i16 2, i16 14, i16 2, i16 12, i16 3, i16 14, i16 3, i16 13, i16 2, i16 12, i16 4, i16 14, i16 4, i16 12, i16 5, i16 14, i16 5, i16 13, i16 4, i16 16, i16 2, i16 18, i16 2, i16 16, i16 3, i16 18, i16 3, i16 17, i16 2, i16 16, i16 4, i16 18, i16 4, i16 16, i16 5, i16 18, i16 5, i16 17, i16 4, i16 16, i16 6, i16 18, i16 6, i16 16, i16 7, i16 18, i16 7, i16 17, i16 6, i16 22, i16 5, i16 20, i16 6, i16 22, i16 6, i16 20, i16 7, i16 22, i16 7, i16 21, i16 6, i16 20, i16 8, i16 22, i16 8, i16 20, i16 9, i16 22, i16 9, i16 21, i16 8, i16 24, i16 6, i16 26, i16 6, i16 24, i16 7, i16 26, i16 7, i16 25, i16 6, i16 24, i16 9, i16 26, i16 9, i16 25, i16 8, i16 30, i16 5, i16 28, i16 6, i16 30, i16 6, i16 28, i16 7, i16 30, i16 7, i16 29, i16 6, i16 28, i16 8, i16 30, i16 8, i16 28, i16 9, i16 30, i16 9, i16 29, i16 8, i16 32, i16 6, i16 34, i16 6, i16 32, i16 7, i16 34, i16 7, i16 33, i16 6, i16 32, i16 8, i16 34, i16 8, i16 32, i16 9, i16 34, i16 9, i16 33, i16 8, i16 36, i16 6, i16 38, i16 6, i16 36, i16 7, i16 38, i16 7, i16 37, i16 6, i16 38, i16 8, i16 36, i16 9, i16 38, i16 9, i16 37, i16 8, i16 40, i16 4, i16 42, i16 4, i16 40, i16 5, i16 42, i16 7, i16 40, i16 8, i16 42, i16 9, i16 41, i16 8, i16 42, i16 11, i16 41, i16 10, i16 42, i16 15, i16 41, i16 14, i16 42, i16 17, i16 42, i16 19, i16 44, i16 4, i16 46, i16 4, i16 44, i16 5, i16 44, i16 9, i16 46, i16 9, i16 45, i16 8, i16 45, i16 12, i16 46, i16 15, i16 46, i16 17, i16 46, i16 18, i16 48, i16 4, i16 50, i16 7, i16 50, i16 9, i16 49, i16 8, i16 50, i16 11, i16 50, i16 13, i16 50, i16 15, i16 49, i16 14, i16 50, i16 19, i16 52, i16 4, i16 54, i16 4, i16 52, i16 5, i16 54, i16 5, i16 53, i16 4, i16 54, i16 8, i16 52, i16 9, i16 54, i16 9, i16 53, i16 8, i16 54, i16 11, i16 54, i16 13, i16 54, i16 17, i16 53, i16 16, i16 54, i16 19, i16 56, i16 4, i16 57, i16 4, i16 56, i16 9, i16 58, i16 9, i16 57, i16 8, i16 56, i16 11, i16 58, i16 11, i16 58, i16 13, i16 58, i16 17, i16 58, i16 18, i16 56, i16 19, i16 58, i16 19, i16 60, i16 2, i16 62, i16 2, i16 60, i16 3, i16 62, i16 5, i16 62, i16 7, i16 60, i16 8, i16 62, i16 8, i16 60, i16 9, i16 62, i16 9, i16 61, i16 8, i16 62, i16 13, i16 62, i16 17, i16 62, i16 19, i16 62, i16 23, i16 62, i16 27, i16 62, i16 29, i16 64, i16 2, i16 66, i16 2, i16 66, i16 5, i16 65, i16 6, i16 66, i16 8, i16 65, i16 8, i16 66, i16 13, i16 66, i16 17, i16 66, i16 21, i16 66, i16 25, i16 66, i16 27, i16 66, i16 28, i16 65, i16 28, i16 68, i16 2, i16 70, i16 3, i16 69, i16 4, i16 70, i16 7, i16 69, i16 8, i16 70, i16 11, i16 70, i16 15, i16 70, i16 19, i16 69, i16 18, i16 70, i16 23, i16 70, i16 27, i16 70, i16 33, i16 72, i16 2, i16 74, i16 2, i16 72, i16 3, i16 74, i16 3, i16 73, i16 2, i16 72, i16 8, i16 74, i16 8, i16 72, i16 9, i16 74, i16 9, i16 73, i16 8, i16 74, i16 11, i16 74, i16 15, i16 74, i16 17, i16 74, i16 18, i16 74, i16 19, i16 74, i16 21, i16 74, i16 25, i16 74, i16 27, i16 74, i16 29, i16 76, i16 2, i16 76, i16 3, i16 77, i16 2, i16 76, i16 8, i16 78, i16 8, i16 76, i16 9, i16 78, i16 9, i16 77, i16 8, i16 76, i16 11, i16 78, i16 11, i16 76, i16 15, i16 78, i16 15, i16 78, i16 17, i16 76, i16 18, i16 76, i16 19, i16 78, i16 19, i16 78, i16 21, i16 76, i16 23, i16 78, i16 25, i16 76, i16 27, i16 78, i16 27, i16 76, i16 28, i16 76, i16 29, i16 78, i16 29, i16 80, i16 4, i16 82, i16 4, i16 80, i16 6, i16 82, i16 9, i16 82, i16 13, i16 82, i16 15, i16 82, i16 19, i16 82, i16 23, i16 82, i16 25, i16 82, i16 29, i16 82, i16 31, i16 82, i16 33, i16 82, i16 35, i16 82, i16 36, i16 82, i16 37, i16 81, i16 36, i16 82, i16 39, i16 84, i16 4, i16 86, i16 4, i16 84, i16 5, i16 86, i16 6, i16 84, i16 7, i16 86, i16 17, i16 86, i16 27, i16 86, i16 30, i16 84, i16 31, i16 86, i16 31, i16 86, i16 32, i16 84, i16 33, i16 85, i16 32, i16 86, i16 36, i16 84, i16 37, i16 86, i16 37, i16 85, i16 36, i16 84, i16 39, i16 86, i16 39, i16 85, i16 38, i16 90, i16 7, i16 90, i16 9, i16 90, i16 11, i16 90, i16 21, i16 90, i16 31, i16 89, i16 32, i16 88, i16 36, i16 90, i16 36, i16 90, i16 39, i16 89, i16 38, i16 92, i16 4, i16 94, i16 4, i16 92, i16 5, i16 94, i16 6, i16 92, i16 7, i16 93, i16 6, i16 94, i16 13, i16 94, i16 19, i16 94, i16 23, i16 92, i16 31, i16 93, i16 30, i16 94, i16 32, i16 94, i16 33, i16 94, i16 34, i16 94, i16 35, i16 92, i16 36, i16 94, i16 36, i16 92, i16 37, i16 94, i16 37, i16 93, i16 36, i16 94, i16 38, i16 94, i16 39, i16 98, i16 4, i16 97, i16 4, i16 98, i16 6, i16 97, i16 6, i16 96, i16 15, i16 96, i16 19, i16 98, i16 19, i16 96, i16 25, i16 98, i16 28, i16 96, i16 29, i16 98, i16 29, i16 98, i16 31, i16 96, i16 33, i16 96, i16 35, i16 98, i16 36, i16 96, i16 39, i16 97, i16 38, i16 100, i16 2, i16 102, i16 2, i16 100, i16 6, i16 102, i16 7, i16 102, i16 9, i16 102, i16 13, i16 102, i16 19, i16 102, i16 21, i16 102, i16 23, i16 102, i16 25, i16 102, i16 26, i16 101, i16 26, i16 102, i16 31, i16 102, i16 35, i16 102, i16 39, i16 102, i16 47, i16 102, i16 48, i16 106, i16 2, i16 104, i16 3, i16 104, i16 6, i16 106, i16 6, i16 106, i16 17, i16 104, i16 22, i16 104, i16 23, i16 106, i16 23, i16 106, i16 26, i16 106, i16 27, i16 106, i16 37, i16 106, i16 45, i16 110, i16 3, i16 110, i16 7, i16 110, i16 9, i16 110, i16 11, i16 110, i16 21, i16 110, i16 22, i16 110, i16 23, i16 108, i16 26, i16 110, i16 26, i16 110, i16 31, i16 110, i16 43, i16 110, i16 53, i16 112, i16 2, i16 112, i16 3, i16 114, i16 6, i16 112, i16 7, i16 113, i16 6, i16 114, i16 11, i16 114, i16 15, i16 114, i16 19, i16 112, i16 21, i16 113, i16 20, i16 114, i16 23, i16 114, i16 24, i16 112, i16 25, i16 114, i16 25, i16 112, i16 26, i16 112, i16 27, i16 114, i16 27, i16 113, i16 26, i16 114, i16 33, i16 114, i16 41, i16 118, i16 2, i16 118, i16 3, i16 117, i16 2, i16 118, i16 6, i16 116, i16 7, i16 118, i16 7, i16 117, i16 6, i16 118, i16 13, i16 118, i16 17, i16 118, i16 19, i16 117, i16 20, i16 118, i16 25, i16 118, i16 26, i16 118, i16 27, i16 117, i16 28, i16 116, i16 35, i16 117, i16 34, i16 116, i16 38, i16 118, i16 38, i16 116, i16 39, i16 118, i16 43, i16 118, i16 47, i16 120, i16 2, i16 120, i16 4, i16 122, i16 4, i16 122, i16 5, i16 121, i16 4, i16 122, i16 9, i16 122, i16 10, i16 122, i16 11, i16 122, i16 13, i16 122, i16 15, i16 122, i16 16, i16 122, i16 17, i16 122, i16 18, i16 122, i16 19, i16 122, i16 23, i16 122, i16 27, i16 122, i16 33, i16 122, i16 39, i16 122, i16 43, i16 122, i16 47, i16 122, i16 48, i16 121, i16 52, i16 122, i16 57, i16 122, i16 58, i16 126, i16 2, i16 124, i16 4, i16 126, i16 4, i16 126, i16 12, i16 124, i16 13, i16 126, i16 17, i16 126, i16 19, i16 126, i16 27, i16 126, i16 37, i16 126, i16 45, i16 126, i16 55, i16 130, i16 3, i16 130, i16 5, i16 130, i16 9, i16 130, i16 11, i16 128, i16 16, i16 130, i16 16, i16 130, i16 18, i16 130, i16 21, i16 130, i16 31, i16 130, i16 43, i16 130, i16 53, i16 130, i16 57, i16 130, i16 63, i16 132, i16 2, i16 134, i16 2, i16 132, i16 3, i16 134, i16 3, i16 133, i16 2, i16 134, i16 4, i16 132, i16 5, i16 133, i16 4, i16 134, i16 10, i16 132, i16 11, i16 133, i16 10, i16 134, i16 13, i16 134, i16 14, i16 134, i16 15, i16 132, i16 16, i16 132, i16 17, i16 134, i16 17, i16 133, i16 16, i16 132, i16 18, i16 132, i16 19, i16 134, i16 19, i16 133, i16 18, i16 134, i16 25, i16 134, i16 35, i16 134, i16 41, i16 134, i16 51, i16 134, i16 57, i16 138, i16 3, i16 137, i16 2, i16 136, i16 4, i16 138, i16 4, i16 136, i16 5, i16 137, i16 4, i16 138, i16 11, i16 138, i16 16, i16 136, i16 17, i16 138, i16 17, i16 137, i16 16, i16 136, i16 18, i16 138, i16 18, i16 137, i16 18, i16 138, i16 23, i16 138, i16 27, i16 137, i16 32, i16 138, i16 37, i16 136, i16 39, i16 138, i16 43, i16 138, i16 47, i16 138, i16 57, i16 136, i16 58, i16 141, i16 68, i16 146, i16 9, i16 146, i16 37, i16 146, i16 41, i16 146, i16 45, i16 146, i16 51, i16 146, i16 55, i16 146, i16 61, i16 146, i16 65, i16 149, i16 2, i16 149, i16 4, i16 149, i16 16, i16 149, i16 18, i16 150, i16 33, i16 150, i16 41, i16 149, i16 46, i16 150, i16 48, i16 150, i16 51, i16 150, i16 58, i16 150, i16 67, i16 154, i16 8, i16 154, i16 9, i16 153, i16 8, i16 154, i16 17, i16 154, i16 35, i16 154, i16 51, i16 154, i16 61, i16 154, i16 68, i16 154, i16 69, i16 153, i16 68, i16 157, i16 2, i16 158, i16 8, i16 156, i16 9, i16 158, i16 9, i16 157, i16 8, i16 158, i16 17, i16 157, i16 16, i16 158, i16 31, i16 158, i16 63, i16 160, i16 9, i16 160, i16 17, i16 162, i16 48, i16 162, i16 51, i16 166, i16 6, i16 166, i16 7, i16 166, i16 17, i16 166, i16 68, i16 166, i16 75, i16 170, i16 7, i16 170, i16 21, i16 174, i16 6, i16 174, i16 17, i16 174, i16 27, i16 174, i16 37, i16 174, i16 61, i16 174, i16 65, i16 174, i16 67, i16 174, i16 69, i16 178, i16 6, i16 176, i16 7, i16 177, i16 6, i16 178, i16 23, i16 177, i16 22, i16 176, i16 25, i16 178, i16 33, i16 178, i16 61, i16 181, i16 74, i16 186, i16 9, i16 186, i16 15, i16 188, i16 9, i16 190, i16 9, i16 190, i16 15, i16 189, i16 14, i16 190, i16 23, i16 194, i16 9, i16 194, i16 25, i16 194, i16 31, i16 194, i16 51, i16 198, i16 9, i16 197, i16 14, i16 198, i16 21, i16 198, i16 35, i16 196, i16 45, i16 198, i16 47, i16 197, i16 46, i16 198, i16 69, i16 206, i16 7, i16 206, i16 33, i16 206, i16 35, i16 206, i16 37, i16 206, i16 39, i16 206, i16 51, i16 206, i16 61, i16 210, i16 6, i16 208, i16 21, i16 208, i16 27, i16 210, i16 27, i16 209, i16 26, i16 208, i16 31, i16 210, i16 37, i16 209, i16 36, i16 210, i16 55, i16 210, i16 65, i16 210, i16 69, i16 217, i16 68, i16 225, i16 4, i16 226, i16 13, i16 226, i16 33, i16 224, i16 58, i16 230, i16 61, i16 230, i16 97, i16 230, i16 103, i16 233, i16 4, i16 234, i16 8, i16 234, i16 9, i16 234, i16 57, i16 233, i16 56, i16 234, i16 63, i16 236, i16 13, i16 238, i16 13, i16 238, i16 55, i16 242, i16 61, i16 242, i16 98, i16 245, i16 2, i16 250, i16 23, i16 250, i16 61, i16 254, i16 6, i16 253, i16 6, i16 252, i16 21, i16 254, i16 27, i16 252, i16 37, i16 254, i16 37, i16 253, i16 36, i16 254, i16 65, i16 254, i16 77, i16 253, i16 78, i16 257, i16 20, i16 262, i16 77, i16 266, i16 9, i16 266, i16 11, i16 265, i16 10, i16 266, i16 79, i16 266, i16 88, i16 270, i16 8, i16 268, i16 9, i16 270, i16 9, i16 269, i16 8, i16 270, i16 11, i16 270, i16 43, i16 269, i16 42, i16 270, i16 53, i16 270, i16 61, i16 270, i16 63, i16 270, i16 73, i16 270, i16 87, i16 269, i16 86, i16 269, i16 88, i16 273, i16 4, i16 273, i16 6, i16 272, i16 9, i16 274, i16 9, i16 273, i16 8, i16 274, i16 47, i16 272, i16 53, i16 272, i16 55, i16 274, i16 57, i16 274, i16 61, i16 274, i16 63, i16 274, i16 69, i16 273, i16 68, i16 274, i16 75, i16 274, i16 89, i16 274, i16 105, i16 274, i16 127, i16 278, i16 9, i16 277, i16 8, i16 276, i16 11, i16 278, i16 11, i16 278, i16 88, i16 282, i16 21, i16 282, i16 31, i16 282, i16 43, i16 282, i16 63, i16 282, i16 73, i16 282, i16 133, i16 286, i16 7, i16 286, i16 25, i16 286, i16 27, i16 286, i16 35, i16 286, i16 39, i16 286, i16 47, i16 286, i16 67, i16 286, i16 75, i16 286, i16 78, i16 286, i16 79, i16 286, i16 95, i16 286, i16 97, i16 286, i16 101, i16 286, i16 131, i16 290, i16 6, i16 288, i16 7, i16 290, i16 7, i16 289, i16 6, i16 290, i16 73, i16 289, i16 78, i16 290, i16 143, i16 293, i16 4, i16 292, i16 7, i16 293, i16 6, i16 292, i16 27, i16 294, i16 27, i16 294, i16 69, i16 294, i16 135, i16 296, i16 7, i16 297, i16 6, i16 298, i16 25, i16 298, i16 61, i16 298, i16 81, i16 298, i16 101, i16 298, i16 131, i16 301, i16 90, i16 306, i16 9, i16 306, i16 143, i16 308, i16 9, i16 309, i16 62, i16 314, i16 61, i16 314, i16 68, i16 313, i16 68, i16 318, i16 9, i16 317, i16 8, i16 316, i16 61, i16 316, i16 68, i16 316, i16 83, i16 318, i16 143, i16 318, i16 149, i16 322, i16 68, i16 322, i16 151, i16 322, i16 158, i16 324, i16 7, i16 328, i16 21, i16 328, i16 28, i16 328, i16 31, i16 328, i16 38, i16 329, i16 134, i16 333, i16 6, i16 334, i16 68, i16 333, i16 72, i16 334, i16 158, i16 338, i16 9, i16 337, i16 166, i16 341, i16 48, i16 349, i16 58, i16 354, i16 158, i16 356, i16 15, i16 356, i16 19, i16 361, i16 14, i16 372, i16 9, i16 377, i16 8, i16 384, i16 9, i16 385, i16 68, i16 390, i16 68, i16 389, i16 68, i16 394, i16 104, i16 405, i16 78, i16 422, i16 9, i16 421, i16 8, i16 433, i16 58, i16 452, i16 41, i16 452, i16 48, i16 458, i16 143, i16 458, i16 149, i16 460, i16 41, i16 460, i16 51, i16 462, i16 61, i16 470, i16 178, i16 472, i16 9, i16 473, i16 42, i16 473, i16 86, i16 473, i16 164, i16 477, i16 58, i16 482, i16 178, i16 486, i16 19, i16 486, i16 159, i16 486, i16 186, i16 486, i16 192, i16 486, i16 211, i16 486, i16 213, i16 486, i16 229, i16 488, i16 5, i16 498, i16 19, i16 498, i16 149, i16 498, i16 159, i16 498, i16 186, i16 498, i16 192, i16 498, i16 211, i16 514, i16 143, i16 514, i16 149, i16 514, i16 243, i16 514, i16 249, i16 522, i16 68, i16 521, i16 180, i16 526, i16 9, i16 525, i16 8, i16 524, i16 61, i16 524, i16 68, i16 524, i16 83, i16 526, i16 143, i16 526, i16 149, i16 524, i16 177, i16 526, i16 243, i16 526, i16 249, i16 528, i16 19, i16 529, i16 36, i16 528, i16 38, i16 537, i16 4, i16 542, i16 143, i16 542, i16 149, i16 545, i16 58, i16 560, i16 9, i16 566, i16 9, i16 564, i16 41, i16 564, i16 48, i16 564, i16 51, i16 564, i16 58, i16 564, i16 61, i16 564, i16 68, i16 565, i16 166, i16 570, i16 9, i16 573, i16 58, i16 581, i16 68, i16 585, i16 58, i16 590, i16 158, i16 590, i16 262, i16 593, i16 38, i16 600, i16 19, i16 601, i16 36, i16 600, i16 97, i16 601, i16 134, i16 600, i16 199, i16 600, i16 223, i16 601, i16 236, i16 600, i16 252, i16 605, i16 36, i16 605, i16 222, i16 608, i16 246, i16 616, i16 9, i16 617, i16 68, i16 616, i16 243, i16 616, i16 249, i16 621, i16 58, i16 624, i16 104, i16 629, i16 58, i16 634, i16 68, i16 633, i16 68, i16 638, i16 126, i16 641, i16 68, i16 645, i16 8, i16 653, i16 6, i16 653, i16 210, i16 661, i16 204, i16 662, i16 246, i16 661, i16 248, i16 665, i16 48, i16 670, i16 126, i16 669, i16 128, i16 678, i16 143, i16 678, i16 149, i16 682, i16 41, i16 682, i16 48, i16 693, i16 8, i16 697, i16 58, i16 701, i16 4, i16 701, i16 252, i16 706, i16 178, i16 705, i16 180, i16 708, i16 41, i16 712, i16 41, i16 712, i16 51, i16 714, i16 61, i16 718, i16 41, i16 718, i16 48, i16 722, i16 104, i16 721, i16 106, i16 725, i16 106, i16 729, i16 8, i16 734, i16 300, i16 738, i16 300, i16 740, i16 9, i16 741, i16 42, i16 741, i16 86, i16 741, i16 300, i16 746, i16 41, i16 746, i16 48, i16 745, i16 48, i16 748, i16 41, i16 748, i16 48, i16 750, i16 300, i16 753, i16 104, i16 753, i16 178, i16 753, i16 264, i16 753, i16 300, i16 758, i16 19, i16 758, i16 21, i16 758, i16 31, i16 758, i16 48, i16 758, i16 101, i16 758, i16 103, i16 758, i16 159, i16 758, i16 182, i16 758, i16 185, i16 758, i16 192, i16 758, i16 207, i16 758, i16 263, i16 758, i16 267, i16 758, i16 271, i16 758, i16 277, i16 758, i16 301, i16 758, i16 308, i16 758, i16 339, i16 758, i16 369, i16 758, i16 374, i16 760, i16 3, i16 762, i16 379, i16 764, i16 186, i16 764, i16 211, i16 770, i16 19, i16 770, i16 31, i16 770, i16 48, i16 770, i16 93, i16 770, i16 101, i16 770, i16 103, i16 770, i16 153, i16 770, i16 159, i16 770, i16 173, i16 770, i16 185, i16 770, i16 192, i16 770, i16 207, i16 769, i16 210, i16 769, i16 254, i16 770, i16 263, i16 770, i16 267, i16 770, i16 271, i16 770, i16 279, i16 770, i16 308, i16 770, i16 339, i16 770, i16 343, i16 770, i16 374, i16 774, i16 41, i16 776, i16 178, i16 777, i16 220, i16 781, i16 248, i16 786, i16 243, i16 792, i16 126, i16 797, i16 128, i16 801, i16 8, i16 801, i16 148, i16 806, i16 379, i16 806, i16 385, i16 809, i16 302, i16 810, i16 379, i16 810, i16 385, i16 814, i16 143, i16 814, i16 149, i16 814, i16 243, i16 814, i16 249, i16 818, i16 9, i16 817, i16 8, i16 816, i16 61, i16 816, i16 68, i16 816, i16 83, i16 818, i16 143, i16 818, i16 149, i16 816, i16 177, i16 818, i16 243, i16 818, i16 249, i16 816, i16 295, i16 818, i16 379, i16 818, i16 385, i16 828, i16 19, i16 828, i16 28, i16 829, i16 134, i16 829, i16 236, i16 829, i16 370, i16 830, i16 413, i16 837, i16 2, i16 836, i16 143, i16 836, i16 243, i16 845, i16 48, i16 850, i16 51, i16 852, i16 41, i16 852, i16 48, i16 858, i16 9, i16 858, i16 379, i16 858, i16 411, i16 858, i16 418, i16 862, i16 385, i16 864, i16 9, i16 870, i16 9, i16 868, i16 41, i16 868, i16 48, i16 868, i16 51, i16 868, i16 58, i16 868, i16 61, i16 868, i16 68, i16 873, i16 48, i16 880, i16 41, i16 880, i16 48, i16 886, i16 51, i16 890, i16 9, i16 890, i16 411, i16 890, i16 418, i16 892, i16 9, i16 898, i16 385, i16 902, i16 9, i16 900, i16 41, i16 900, i16 48, i16 900, i16 51, i16 900, i16 58, i16 900, i16 61, i16 900, i16 68, i16 906, i16 68, i16 906, i16 158, i16 906, i16 262, i16 906, i16 408, i16 909, i16 270, i16 909, i16 338, i16 909, i16 344, i16 914, i16 158, i16 914, i16 262, i16 914, i16 408, i16 917, i16 134, i16 917, i16 154, i16 917, i16 236, i16 917, i16 370, i16 920, i16 334, i16 920, i16 373, i16 920, i16 397, i16 924, i16 35, i16 924, i16 39, i16 924, i16 239, i16 924, i16 313, i16 924, i16 360, i16 928, i16 25, i16 928, i16 29, i16 928, i16 35, i16 928, i16 39, i16 929, i16 78, i16 932, i16 354, i16 932, i16 387, i16 936, i16 19, i16 936, i16 39, i16 936, i16 307, i16 936, i16 328, i16 936, i16 385, i16 940, i16 19, i16 940, i16 39, i16 944, i16 379, i16 944, i16 385, i16 948, i16 75, i16 948, i16 224, i16 948, i16 251, i16 952, i16 15, i16 952, i16 19, i16 952, i16 171, i16 952, i16 191, i16 952, i16 208, i16 957, i16 218, i16 957, i16 300, i16 968, i16 15, i16 968, i16 19, i16 968, i16 25, i16 968, i16 29, i16 973, i16 134, i16 973, i16 236, i16 973, i16 370, i16 978, i16 224, i16 978, i16 239, i16 978, i16 274, i16 978, i16 313, i16 978, i16 360, i16 982, i16 379, i16 982, i16 385, i16 986, i16 307, i16 986, i16 328, i16 994, i16 35, i16 994, i16 39, i16 998, i16 39, i16 998, i16 385, i16 1006, i16 379, i16 1006, i16 385, i16 1022, i16 61, i16 1025, i16 298, i16 1025, i16 414, i16 1029, i16 416, i16 1034, i16 13, i16 1034, i16 287, i16 1034, i16 367, i16 1037, i16 298, i16 1042, i16 379, i16 1050, i16 51, i16 1050, i16 61, i16 1050, i16 385, i16 1057, i16 134, i16 1057, i16 154, i16 1057, i16 236, i16 1057, i16 370, i16 1070, i16 517, i16 1082, i16 517, i16 1086, i16 379, i16 1090, i16 501, i16 1100, i16 7, i16 1106, i16 51, i16 1106, i16 462, i16 1106, i16 464, i16 1106, i16 497, i16 1106, i16 507, i16 1106, i16 549, i16 1108, i16 5, i16 1114, i16 51, i16 1114, i16 385, i16 1114, i16 462, i16 1114, i16 464, i16 1114, i16 497, i16 1129, i16 478, i16 1134, i16 385, i16 1146, i16 462, i16 1146, i16 497, i16 1157, i16 300, i16 1161, i16 300, i16 1168, i16 472, i16 1174, i16 51, i16 1174, i16 61, i16 1176, i16 143, i16 1176, i16 243, i16 1182, i16 68, i16 1182, i16 545, i16 1185, i16 6, i16 1186, i16 68, i16 1190, i16 545, i16 1193, i16 4, i16 1196, i16 39, i16 1201, i16 154, i16 1206, i16 151, i16 1208, i16 39, i16 1222, i16 537, i16 1226, i16 379, i16 1228, i16 75, i16 1232, i16 171, i16 1238, i16 379, i16 1240, i16 15, i16 1240, i16 25, i16 1240, i16 51, i16 1240, i16 61, i16 1246, i16 61, i16 1246, i16 259, i16 1246, i16 395, i16 1246, i16 561, i16 1250, i16 68, i16 1250, i16 158, i16 1250, i16 262, i16 1250, i16 408, i16 1253, i16 420, i16 1253, i16 438, i16 1258, i16 158, i16 1258, i16 262, i16 1258, i16 408, i16 1261, i16 46, i16 1261, i16 56, i16 1261, i16 162, i16 1265, i16 134, i16 1265, i16 154, i16 1265, i16 236, i16 1265, i16 370, i16 1273, i16 78, i16 1272, i16 553, i16 1272, i16 557, i16 1280, i16 574, i16 1284, i16 535, i16 1296, i16 243, i16 1300, i16 67, i16 1300, i16 77, i16 1300, i16 195, i16 1300, i16 317, i16 1300, i16 533, i16 1300, i16 562, i16 1301, i16 608, i16 1305, i16 42, i16 1304, i16 48, i16 1304, i16 103, i16 1304, i16 201, i16 1304, i16 491, i16 1304, i16 495, i16 1308, i16 313, i16 1308, i16 360, i16 1312, i16 39, i16 1318, i16 334, i16 1318, i16 373, i16 1318, i16 397, i16 1325, i16 512, i16 1330, i16 33, i16 1330, i16 191, i16 1330, i16 208, i16 1330, i16 569, i16 1330, i16 614, i16 1341, i16 36, i16 1341, i16 218, i16 1354, i16 15, i16 1354, i16 171, i16 1354, i16 570, i16 1358, i16 67, i16 1358, i16 77, i16 1358, i16 195, i16 1358, i16 317, i16 1358, i16 533, i16 1358, i16 562, i16 1358, i16 669, i16 1362, i16 334, i16 1362, i16 397, i16 1366, i16 243, i16 1366, i16 484, i16 1370, i16 665, i16 1373, i16 134, i16 1373, i16 154, i16 1373, i16 236, i16 1373, i16 370, i16 1382, i16 476, i16 1382, i16 677, i16 1389, i16 522, i16 1402, i16 61, i16 1402, i16 468, i16 1402, i16 499, i16 1401, i16 606, i16 1406, i16 313, i16 1406, i16 360, i16 1409, i16 6, i16 1414, i16 379, i16 1414, i16 385, i16 1414, i16 652, i16 1416, i16 7, i16 1422, i16 51, i16 1422, i16 143, i16 1422, i16 464, i16 1422, i16 636, i16 1424, i16 3, i16 1430, i16 51, i16 1430, i16 143, i16 1430, i16 149, i16 1430, i16 464, i16 1430, i16 636, i16 1442, i16 623, i16 1445, i16 644, i16 1450, i16 379, i16 1452, i16 517, i16 1458, i16 143, i16 1462, i16 379, i16 1464, i16 474, i16 1473, i16 630, i16 1478, i16 584, i16 1480, i16 583, i16 1480, i16 638, i16 1484, i16 61, i16 1484, i16 468, i16 1484, i16 499, i16 1488, i16 334, i16 1488, i16 397, i16 1498, i16 249, i16 1501, i16 6, i16 1502, i16 68, i16 1509, i16 46, i16 1510, i16 753, i16 1514, i16 468, i16 1514, i16 499, i16 1514, i16 557, i16 1517, i16 2, i16 1526, i16 39, i16 1530, i16 151, i16 1532, i16 61, i16 1538, i16 61, i16 1542, i16 243, i16 1546, i16 39, i16 1550, i16 61, i16 1550, i16 259, i16 1550, i16 395, i16 1550, i16 561, i16 1550, i16 721, i16 1553, i16 508, i16 1553, i16 564, i16 1562, i16 647, i16 1565, i16 532, i16 1569, i16 468, i16 1578, i16 39, i16 1578, i16 557, i16 1582, i16 158, i16 1582, i16 262, i16 1582, i16 408, i16 1586, i16 158, i16 1586, i16 262, i16 1586, i16 408, i16 1593, i16 66, i16 1593, i16 178, i16 1593, i16 264, i16 1597, i16 504, i16 1601, i16 134, i16 1601, i16 154, i16 1601, i16 236, i16 1601, i16 370, i16 1605, i16 68, i16 1609, i16 66, i16 1608, i16 135, i16 1608, i16 237, i16 1608, i16 371, i16 1609, i16 416, i16 1608, i16 577, i16 1608, i16 623, i16 1608, i16 735, i16 1608, i16 775, i16 1612, i16 570, i16 1612, i16 691, i16 1617, i16 98, i16 1616, i16 535, i16 1617, i16 684, i16 1616, i16 726, i16 1621, i16 66, i16 1629, i16 66, i16 1636, i16 689, i16 1636, i16 718, i16 1641, i16 568, i16 1645, i16 42, i16 1644, i16 57, i16 1645, i16 502, i16 1644, i16 531, i16 1644, i16 558, i16 1645, i16 674, i16 1644, i16 737, i16 1649, i16 42, i16 1648, i16 48, i16 1648, i16 103, i16 1648, i16 201, i16 1648, i16 491, i16 1648, i16 495, i16 1648, i16 707, i16 1653, i16 32, i16 1656, i16 307, i16 1656, i16 328, i16 1660, i16 39, i16 1665, i16 570, i16 1668, i16 33, i16 1668, i16 191, i16 1668, i16 208, i16 1673, i16 508, i16 1678, i16 354, i16 1678, i16 387, i16 1681, i16 512, i16 1686, i16 35, i16 1686, i16 224, i16 1686, i16 251, i16 1686, i16 616, i16 1690, i16 642, i16 1693, i16 126, i16 1698, i16 75, i16 1698, i16 574, i16 1698, i16 732, i16 1702, i16 151, i16 1706, i16 689, i16 1706, i16 718, i16 1710, i16 57, i16 1710, i16 531, i16 1710, i16 558, i16 1710, i16 737, i16 1714, i16 354, i16 1714, i16 387, i16 1718, i16 35, i16 1718, i16 224, i16 1718, i16 251, i16 1722, i16 143, i16 1722, i16 484, i16 1726, i16 843, i16 1729, i16 134, i16 1729, i16 154, i16 1729, i16 236, i16 1729, i16 370, i16 1734, i16 474, i16 1734, i16 640, i16 1734, i16 849, i16 1742, i16 143, i16 1746, i16 483, i16 1746, i16 647, i16 1746, i16 851, i16 1750, i16 634, i16 1750, i16 667, i16 1754, i16 51, i16 1754, i16 462, i16 1754, i16 497, i16 1758, i16 307, i16 1758, i16 328, i16 1762, i16 33, i16 1762, i16 191, i16 1762, i16 208, i16 1765, i16 570, i16 1769, i16 4, i16 1774, i16 652, i16 1774, i16 824, i16 1778, i16 808, i16 1778, i16 816, i16 1780, i16 5, i16 1785, i16 480, i16 1790, i16 808, i16 1790, i16 816, i16 1794, i16 61, i16 1794, i16 243, i16 1794, i16 816, i16 1796, i16 3, i16 1802, i16 61, i16 1802, i16 243, i16 1802, i16 468, i16 1802, i16 499, i16 1802, i16 816, i16 1809, i16 810, i16 1809, i16 814, i16 1814, i16 61, i16 1816, i16 517, i16 1816, i16 642, i16 1822, i16 243, i16 1824, i16 476, i16 1824, i16 677, i16 1830, i16 804, i16 1834, i16 650, i16 1834, i16 679, i16 1833, i16 796, i16 1833, i16 810, i16 1838, i16 61, i16 1838, i16 249, i16 1838, i16 557, i16 1838, i16 584, i16 1838, i16 740, i16 1840, i16 61, i16 1840, i16 583, i16 1840, i16 739, i16 1840, i16 804, i16 1842, i16 804, i16 1849, i16 814, i16 1854, i16 61, i16 1856, i16 61, i16 1860, i16 634, i16 1860, i16 667, i16 1864, i16 51, i16 1864, i16 462, i16 1864, i16 497, i16 1868, i16 354, i16 1868, i16 387, i16 1872, i16 35, i16 1872, i16 224, i16 1872, i16 251, i16 1877, i16 582, i16 1882, i16 149, i16 1882, i16 919, i16 1885, i16 4, i16 1898, i16 947, i16 1901, i16 2, i16 1906, i16 763, i16 1906, i16 769, i16 1906, i16 789, i16 1906, i16 919, i16 1910, i16 143, i16 1918, i16 39, i16 1930, i16 161, i16 1938, i16 157, i16 1938, i16 195, i16 1938, i16 763, i16 1938, i16 769, i16 1938, i16 789, i16 1938, i16 957, i16 1942, i16 39, i16 1942, i16 591, i16 1950, i16 157, i16 1958, i16 157, i16 1958, i16 763, i16 1958, i16 769, i16 1958, i16 789, i16 1958, i16 957, i16 1962, i16 39, i16 1962, i16 591, i16 1966, i16 157, i16 1977, i16 78, i16 1976, i16 135, i16 1976, i16 237, i16 1976, i16 371, i16 1976, i16 407, i16 1977, i16 538, i16 1977, i16 696, i16 1977, i16 868, i16 1982, i16 41, i16 1982, i16 48, i16 1984, i16 379, i16 1990, i16 379, i16 1992, i16 243, i16 1998, i16 243, i16 2000, i16 143, i16 2006, i16 143, i16 2009, i16 488, i16 2013, i16 658, i16 2018, i16 83, i16 2022, i16 143, i16 2022, i16 243, i16 2022, i16 379, i16 2024, i16 41, i16 2024, i16 48, i16 2028, i16 33, i16 2028, i16 685, i16 2034, i16 385, i16 2034, i16 789, i16 2036, i16 33, i16 2040, i16 527, i16 2045, i16 46, i16 2048, i16 143, i16 2053, i16 6, i16 2057, i16 962, i16 2061, i16 132, i16 2066, i16 9, i16 2065, i16 8, i16 2066, i16 243, i16 2066, i16 249, i16 2066, i16 379, i16 2066, i16 385, i16 2068, i16 51, i16 2072, i16 35, i16 2076, i16 645, i16 2086, i16 957, i16 2092, i16 143, i16 2092, i16 379, i16 2098, i16 67, i16 2098, i16 283, i16 2098, i16 435, i16 2098, i16 451, i16 2101, i16 810, i16 2104, i16 133, i16 2105, i16 810, i16 2110, i16 73, i16 2109, i16 132, i16 2110, i16 763, i16 2110, i16 769, i16 2110, i16 789, i16 2110, i16 919, i16 2114, i16 9, i16 2113, i16 8, i16 2116, i16 9, i16 2118, i16 143, i16 2122, i16 51, i16 2126, i16 645, i16 2129, i16 154, i16 2134, i16 161, i16 2137, i16 796, i16 2141, i16 178, i16 2145, i16 18, i16 2145, i16 716, i16 2149, i16 88, i16 2149, i16 126, i16 2153, i16 74, i16 2161, i16 16, i16 2166, i16 61, i16 2169, i16 812, i16 2174, i16 137, i16 2178, i16 553, i16 2178, i16 557, i16 2178, i16 711, i16 2178, i16 715, i16 2182, i16 33, i16 2182, i16 685, i16 2181, i16 854, i16 2186, i16 23, i16 2186, i16 527, i16 2185, i16 852, i16 2189, i16 156, i16 2194, i16 137, i16 2197, i16 582, i16 2202, i16 957, i16 2206, i16 143, i16 2206, i16 761, i16 2206, i16 787, i16 2209, i16 810, i16 2214, i16 83, i16 2214, i16 149, i16 2214, i16 919, i16 2216, i16 379, i16 2221, i16 794, i16 2226, i16 379, i16 2228, i16 243, i16 2229, i16 672, i16 2232, i16 137, i16 2241, i16 36, i16 2244, i16 243, i16 2249, i16 126, i16 2253, i16 124, i16 2253, i16 546, i16 2253, i16 660, i16 2257, i16 58, i16 2262, i16 9, i16 2265, i16 58, i16 2268, i16 31, i16 2272, i16 143, i16 2272, i16 379, i16 2276, i16 9, i16 2280, i16 493, i16 2285, i16 796, i16 2290, i16 61, i16 2294, i16 143, i16 2294, i16 379, i16 2298, i16 9, i16 2302, i16 61, i16 2306, i16 489, i16 2308, i16 489, i16 2308, i16 897, i16 2314, i16 945, i16 2317, i16 794, i16 2320, i16 665, i16 2324, i16 843, i16 2329, i16 8, i16 2332, i16 51, i16 2332, i16 61, i16 2336, i16 39, i16 2340, i16 39, i16 2340, i16 507, i16 2346, i16 462, i16 2346, i16 497, i16 2349, i16 796, i16 2352, i16 31, i16 2358, i16 197, i16 2360, i16 197, i16 2360, i16 897, i16 2364, i16 27, i16 2370, i16 381, i16 2378, i16 39, i16 2382, i16 39, i16 2382, i16 507, i16 2386, i16 945, i16 2394, i16 41, i16 2394, i16 48, i16 2397, i16 48, i16 2401, i16 48, i16 2406, i16 761, i16 2406, i16 787, i16 2408, i16 747, i16 2413, i16 8, i16 2416, i16 379, i16 2420, i16 51, i16 2425, i16 336, i16 2429, i16 154, i16 2434, i16 659, i16 2436, i16 659, i16 2436, i16 889, i16 2442, i16 747, i16 2446, i16 9, i16 2450, i16 61, i16 2454, i16 61, i16 2457, i16 98, i16 2462, i16 61, i16 2464, i16 39, i16 2469, i16 324, i16 2472, i16 693, i16 2478, i16 143, i16 2478, i16 157, i16 2482, i16 77, i16 2482, i16 83, i16 2482, i16 195, i16 2482, i16 317, i16 2482, i16 453, i16 2482, i16 625, i16 2484, i16 37, i16 2490, i16 51, i16 2490, i16 121, i16 2492, i16 21, i16 2498, i16 319, i16 2500, i16 319, i16 2500, i16 889, i16 2506, i16 693, i16 2509, i16 6, i16 2522, i16 9, i16 2521, i16 8, i16 2524, i16 11, i16 2524, i16 79, i16 2525, i16 134, i16 2528, i16 9, i16 2534, i16 161, i16 2536, i16 9, i16 2541, i16 134, i16 2546, i16 31, i16 2546, i16 47, i16 2546, i16 73, i16 2546, i16 111, i16 2546, i16 133, i16 2546, i16 145, i16 2546, i16 169, i16 2546, i16 211, i16 2546, i16 215, i16 2546, i16 285, i16 2546, i16 289, i16 2546, i16 565, i16 2546, i16 915, i16 2550, i16 804, i16 2552, i16 73, i16 2552, i16 169, i16 2552, i16 285, i16 2558, i16 31, i16 2558, i16 41, i16 2558, i16 51, i16 2558, i16 61, i16 2558, i16 133, i16 2558, i16 143, i16 2558, i16 211, i16 2560, i16 61, i16 2566, i16 301, i16 2574, i16 179, i16 2576, i16 11, i16 2576, i16 903, i16 2582, i16 89, i16 2584, i16 9, i16 2590, i16 67, i16 2596, i16 133, i16 2602, i16 9, i16 2605, i16 8, i16 2610, i16 650, i16 2610, i16 679, i16 2609, i16 796, i16 2613, i16 814, i16 2617, i16 6, i16 2618, i16 261, i16 2618, i16 591, i16 2620, i16 665, i16 2626, i16 493, i16 2630, i16 665, i16 2632, i16 493, i16 2636, i16 89, i16 2642, i16 11, i16 2642, i16 903, i16 2646, i16 11, i16 2654, i16 9, i16 2656, i16 61, i16 2662, i16 261, i16 2666, i16 405, i16 2668, i16 11, i16 2678, i16 83, i16 2680, i16 9, i16 2682, i16 143, i16 2690, i16 665, i16 2694, i16 493, i16 2698, i16 39, i16 2702, i16 75, i16 2706, i16 61, i16 2709, i16 802, i16 2713, i16 56, i16 2713, i16 144, i16 2716, i16 97, i16 2716, i16 199, i16 2716, i16 301, i16 2716, i16 367, i16 2716, i16 381, i16 2716, i16 713, i16 2716, i16 899, i16 2721, i16 16, i16 2724, i16 179, i16 2728, i16 47, i16 2732, i16 39, i16 2736, i16 75, i16 2740, i16 67, i16 2745, i16 144, i16 2749, i16 16, i16 2756, i16 25, i16 2764, i16 245, i16 2764, i16 555, i16 2764, i16 891, i16 2770, i16 143, i16 2770, i16 497, i16 2774, i16 804, i16 2777, i16 816, i16 2782, i16 143, i16 2782, i16 497, i16 2784, i16 379, i16 2788, i16 143, i16 2793, i16 78, i16 2798, i16 39, i16 2802, i16 650, i16 2802, i16 679, i16 2801, i16 796, i16 2806, i16 39, i16 2809, i16 796, i16 2814, i16 233, i16 2814, i16 699, i16 2818, i16 11, i16 2822, i16 245, i16 2822, i16 555, i16 2822, i16 891, i16 2826, i16 61, i16 0, i16 0], align 16
@.str = private unnamed_addr constant [39 x i8] c"node->uTruth == this->table[i]->uTruth\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"PreCompGraphManager.cpp\00", align 1
@__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager26processDecompositionGraphsEv = private unnamed_addr constant [66 x i8] c"void algorithm::PreCompGraphManager::processDecompositionGraphs()\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"map[node->uTruth] < 222\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"node->uTruth == (decGraph->deriveTruth() & 0xFFFF)\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"!isForestNodeComplement(node)\00", align 1
@__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E = private unnamed_addr constant [90 x i8] c"algorithm::DecGraph *algorithm::PreCompGraphManager::processNode(algorithm::ForestNode *)\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"0 <= iLeaf && iLeaf < nLeaves\00", align 1
@__PRETTY_FUNCTION__._ZN9algorithm8DecGraphC2Eiii = private unnamed_addr constant [45 x i8] c"algorithm::DecGraph::DecGraph(int, int, int)\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"this->isVar()\00", align 1
@__PRETTY_FUNCTION__._ZN9algorithm8DecGraph6getVarEv = private unnamed_addr constant [50 x i8] c"algorithm::DecNode *algorithm::DecGraph::getVar()\00", align 1
@__PRETTY_FUNCTION__._ZN9algorithm8DecGraph8varToIntEv = private unnamed_addr constant [36 x i8] c"int algorithm::DecGraph::varToInt()\00", align 1
@__const._ZN9algorithm8DecGraph11deriveTruthEv.uTruths = private unnamed_addr constant [5 x i32] [i32 -1431655766, i32 -858993460, i32 -252645136, i32 -16711936, i32 -65536], align 16
@.str.7 = private unnamed_addr constant [19 x i8] c"this->nLeaves >= 0\00", align 1
@__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv = private unnamed_addr constant [48 x i8] c"unsigned int algorithm::DecGraph::deriveTruth()\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"this->nLeaves <= this->nSize\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"this->nLeaves <= 5\00", align 1
@.str.10 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_PreCompGraphManager.cpp, ptr null }]

@_ZN9algorithm19PreCompGraphManagerC1ERNS_10NPNManagerE = dso_local unnamed_addr alias void (ptr, ptr), ptr @_ZN9algorithm19PreCompGraphManagerC2ERNS_10NPNManagerE
@_ZN9algorithm19PreCompGraphManagerD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN9algorithm19PreCompGraphManagerD2Ev
@_ZN9algorithm8DecGraphC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN9algorithm8DecGraphC2Ev
@_ZN9algorithm8DecGraphC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN9algorithm8DecGraphC2Ei
@_ZN9algorithm8DecGraphC1Eiii = dso_local unnamed_addr alias void (ptr, i32, i32, i32), ptr @_ZN9algorithm8DecGraphC2Eiii
@_ZN9algorithm8DecGraphD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN9algorithm8DecGraphD2Ev

declare void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(ptr noundef nonnull align 1 dereferenceable(1)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #2

; Function Attrs: uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManagerC2ERNS_10NPNManagerE(ptr nocapture noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 8 dereferenceable(64) %npnManager) unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store ptr %npnManager, ptr %this, align 8, !tbaa !5
  %table = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  %call = tail call noundef i32 @_ZN9algorithm10NPNManager9getNFuncsEv(ptr noundef nonnull align 8 dereferenceable(64) %npnManager)
  %conv = sext i32 %call to i64
  %cmp.i.i = icmp slt i32 %call, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.10) #27
  unreachable

_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i: ; preds = %entry
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %table, i8 0, i64 24, i1 false) #28
  %cmp.not.i.i.i.i = icmp eq i32 %call, 0
  br i1 %cmp.not.i.i.i.i, label %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EEC2EmRKS3_.exit.thread.i, label %for.body.i.i.preheader.i.i.i.i.i

_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EEC2EmRKS3_.exit.thread.i: ; preds = %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %table, i8 0, i64 16, i1 false)
  br label %invoke.cont

for.body.i.i.preheader.i.i.i.i.i:                 ; preds = %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 3
  %call2.i.i.i.i3.i.i22 = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul.i.i.i.i.i.i) #29
  store ptr %call2.i.i.i.i3.i.i22, ptr %table, align 8, !tbaa !9
  %add.ptr.i.i.i = getelementptr inbounds ptr, ptr %call2.i.i.i.i3.i.i22, i64 %conv
  tail call void @llvm.memset.p0.i64(ptr nonnull align 8 %call2.i.i.i.i3.i.i22, i8 0, i64 %mul.i.i.i.i.i.i, i1 false), !tbaa !5
  %uglygep.i.i.i.i.i = getelementptr i8, ptr %call2.i.i.i.i3.i.i22, i64 %mul.i.i.i.i.i.i
  br label %invoke.cont

invoke.cont:                                      ; preds = %for.body.i.i.preheader.i.i.i.i.i, %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EEC2EmRKS3_.exit.thread.i
  %add.ptr.i.i.sink.i = phi ptr [ null, %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EEC2EmRKS3_.exit.thread.i ], [ %add.ptr.i.i.i, %for.body.i.i.preheader.i.i.i.i.i ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i = phi ptr [ null, %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EEC2EmRKS3_.exit.thread.i ], [ %uglygep.i.i.i.i.i, %for.body.i.i.preheader.i.i.i.i.i ]
  %_M_finish.i.i9.i = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %table, i64 0, i32 1
  %0 = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %table, i64 0, i32 2
  store ptr %add.ptr.i.i.sink.i, ptr %0, align 8
  store ptr %__first.addr.0.lcssa.i.i.i.i.i.i.i, ptr %_M_finish.i.i9.i, align 8, !tbaa !11
  %classes = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %classes, i8 0, i64 24, i1 false) #28
  %call2.i.i.i.i3.i.i28 = invoke noalias noundef nonnull ptr @_Znwm(i64 noundef 5328) #29
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont
  store ptr %call2.i.i.i.i3.i.i28, ptr %classes, align 8, !tbaa !12
  %add.ptr.i.i.i23 = getelementptr inbounds %"class.std::vector", ptr %call2.i.i.i.i3.i.i28, i64 222
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(5328) %call2.i.i.i.i3.i.i28, i8 0, i64 5328, i1 false)
  %uglygep.i.i.i.i.i24 = getelementptr i8, ptr %call2.i.i.i.i3.i.i28, i64 5328
  %_M_finish.i.i9.i26 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl_data", ptr %classes, i64 0, i32 1
  %1 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl_data", ptr %classes, i64 0, i32 2
  store ptr %add.ptr.i.i.i23, ptr %1, align 8
  store ptr %uglygep.i.i.i.i.i24, ptr %_M_finish.i.i9.i26, align 8, !tbaa !14
  %nTravIds = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  store i32 0, ptr %nTravIds, align 4, !tbaa !15
  %forestSize = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 4
  %call6 = tail call noalias dereferenceable_or_null(86400) ptr @malloc(i64 noundef 86400) #30
  %forest = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 1
  store ptr %call6, ptr %forest, align 8, !tbaa !20
  %2 = getelementptr inbounds i8, ptr %call6, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %2, i8 0, i64 16, i1 false)
  store i32 0, ptr %call6, align 8, !tbaa !21
  %TravId.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 0, i32 1
  store i32 0, ptr %TravId.i, align 4, !tbaa !24
  %uTruth3.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 0, i32 5
  store i32 1073741824, ptr %uTruth3.i, align 2
  %p0.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 0, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %p0.i, i8 0, i64 24, i1 false) #28
  %arrayidx.i32 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 1
  store i32 1, ptr %arrayidx.i32, align 8, !tbaa !21
  %TravId.i34 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 1, i32 1
  store i32 0, ptr %TravId.i34, align 4, !tbaa !24
  %uTruth3.i35 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 1, i32 5
  store i32 1073785514, ptr %uTruth3.i35, align 2
  %p0.i36 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 1, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %p0.i36, i8 0, i64 24, i1 false) #28
  %arrayidx.i40 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 2
  store i32 2, ptr %arrayidx.i40, align 8, !tbaa !21
  %TravId.i42 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 2, i32 1
  store i32 0, ptr %TravId.i42, align 4, !tbaa !24
  %uTruth3.i43 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 2, i32 5
  store i32 1073794252, ptr %uTruth3.i43, align 2
  %p0.i44 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 2, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %p0.i44, i8 0, i64 24, i1 false) #28
  %arrayidx.i48 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 3
  store i32 3, ptr %arrayidx.i48, align 8, !tbaa !21
  %TravId.i50 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 3, i32 1
  store i32 0, ptr %TravId.i50, align 4, !tbaa !24
  %uTruth3.i51 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 3, i32 5
  store i32 1073803504, ptr %uTruth3.i51, align 2
  %p0.i52 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 3, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %p0.i52, i8 0, i64 24, i1 false) #28
  %arrayidx.i56 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 4
  store i32 5, ptr %forestSize, align 8, !tbaa !25
  store i32 4, ptr %arrayidx.i56, align 8, !tbaa !21
  %TravId.i58 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 4, i32 1
  store i32 0, ptr %TravId.i58, align 4, !tbaa !24
  %uTruth3.i59 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 4, i32 5
  store i32 1073807104, ptr %uTruth3.i59, align 2
  %p0.i60 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %call6, i64 4, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %p0.i60, i8 0, i64 24, i1 false) #28
  ret void

lpad4:                                            ; preds = %invoke.cont
  %3 = landingpad { ptr, i32 }
          cleanup
  %4 = load ptr, ptr %table, align 8, !tbaa !9
  %tobool.not.i.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i.i, label %eh.resume, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad4
  tail call void @_ZdlPv(ptr noundef nonnull %4) #28
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i.i, %lpad4
  resume { ptr, i32 } %3
}

declare noundef i32 @_ZN9algorithm10NPNManager9getNFuncsEv(ptr noundef nonnull align 8 dereferenceable(64)) local_unnamed_addr #0

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #4

declare i32 @__gxx_personality_v0(...)

; Function Attrs: argmemonly mustprogress nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #4

; Function Attrs: inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn writeonly
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm19PreCompGraphManager12addForestVarEj(ptr nocapture noundef nonnull align 8 dereferenceable(72) %this, i32 noundef %uTruth) local_unnamed_addr #7 align 2 {
entry:
  %forest = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %forest, align 8, !tbaa !20
  %forestSize = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 4
  %1 = load i32, ptr %forestSize, align 8, !tbaa !25
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %0, i64 %idxprom
  %inc = add nsw i32 %1, 1
  store i32 %inc, ptr %forestSize, align 8, !tbaa !25
  store i32 %1, ptr %arrayidx, align 8, !tbaa !21
  %TravId = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %0, i64 %idxprom, i32 1
  store i32 0, ptr %TravId, align 4, !tbaa !24
  %uTruth3 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %0, i64 %idxprom, i32 5
  %bf.value = and i32 %uTruth, 65535
  %bf.set12 = or i32 %bf.value, 1073741824
  store i32 %bf.set12, ptr %uTruth3, align 2
  %p0 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %0, i64 %idxprom, i32 7
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %p0, i8 0, i64 24, i1 false)
  ret ptr %arrayidx
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManagerD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(72) %this) unnamed_addr #8 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %classes = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 3
  %0 = load ptr, ptr %classes, align 8, !tbaa !5
  %_M_finish.i.i = getelementptr inbounds %"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl_data", ptr %classes, i64 0, i32 1
  %1 = load ptr, ptr %_M_finish.i.i, align 8, !tbaa !5
  %cmp.i.i = icmp eq ptr %0, %1
  br i1 %cmp.i.i, label %if.end, label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %entry, %for.cond.cleanup9
  %2 = phi ptr [ %6, %for.cond.cleanup9 ], [ %0, %entry ]
  %3 = phi ptr [ %7, %for.cond.cleanup9 ], [ %1, %entry ]
  %i.047 = phi i64 [ %inc15, %for.cond.cleanup9 ], [ 0, %entry ]
  %add.ptr.i34 = getelementptr inbounds %"class.std::vector", ptr %2, i64 %i.047
  %_M_finish.i2335 = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %add.ptr.i34, i64 0, i32 1
  %4 = load ptr, ptr %_M_finish.i2335, align 8, !tbaa !11
  %5 = load ptr, ptr %add.ptr.i34, align 8, !tbaa !9
  %cmp840.not = icmp eq ptr %4, %5
  br i1 %cmp840.not, label %for.cond.cleanup9, label %for.body10

for.cond.cleanup9.loopexit:                       ; preds = %for.inc
  %.pre49 = load ptr, ptr %_M_finish.i.i, align 8, !tbaa !14
  br label %for.cond.cleanup9

for.cond.cleanup9:                                ; preds = %for.cond.cleanup9.loopexit, %for.cond4.preheader
  %6 = phi ptr [ %14, %for.cond.cleanup9.loopexit ], [ %2, %for.cond4.preheader ]
  %7 = phi ptr [ %.pre49, %for.cond.cleanup9.loopexit ], [ %3, %for.cond4.preheader ]
  %inc15 = add nuw i64 %i.047, 1
  %sub.ptr.lhs.cast.i = ptrtoint ptr %7 to i64
  %sub.ptr.rhs.cast.i = ptrtoint ptr %6 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 24
  %cmp = icmp ult i64 %inc15, %sub.ptr.div.i
  br i1 %cmp, label %for.cond4.preheader, label %if.end, !llvm.loop !26

for.body10:                                       ; preds = %for.cond4.preheader, %for.inc
  %8 = phi ptr [ %14, %for.inc ], [ %2, %for.cond4.preheader ]
  %9 = phi ptr [ %15, %for.inc ], [ %2, %for.cond4.preheader ]
  %10 = phi ptr [ %17, %for.inc ], [ %5, %for.cond4.preheader ]
  %j.041 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond4.preheader ]
  %add.ptr.i29 = getelementptr inbounds ptr, ptr %10, i64 %j.041
  %11 = load ptr, ptr %add.ptr.i29, align 8, !tbaa !5
  %pNext = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %11, i64 0, i32 9
  %12 = load ptr, ptr %pNext, align 8, !tbaa !28
  %isnull = icmp eq ptr %12, null
  br i1 %isnull, label %for.inc, label %delete.notnull

delete.notnull:                                   ; preds = %for.body10
  %pNodes.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %12, i64 0, i32 7
  %13 = load ptr, ptr %pNodes.i, align 8, !tbaa !29
  tail call void @free(ptr noundef %13) #28
  tail call void @_ZdlPv(ptr noundef nonnull %12) #31
  %.pre = load ptr, ptr %classes, align 8, !tbaa !12
  br label %for.inc

for.inc:                                          ; preds = %for.body10, %delete.notnull
  %14 = phi ptr [ %8, %for.body10 ], [ %.pre, %delete.notnull ]
  %15 = phi ptr [ %9, %for.body10 ], [ %.pre, %delete.notnull ]
  %inc = add nuw i64 %j.041, 1
  %add.ptr.i = getelementptr inbounds %"class.std::vector", ptr %15, i64 %i.047
  %_M_finish.i23 = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %add.ptr.i, i64 0, i32 1
  %16 = load ptr, ptr %_M_finish.i23, align 8, !tbaa !11
  %17 = load ptr, ptr %add.ptr.i, align 8, !tbaa !9
  %sub.ptr.lhs.cast.i24 = ptrtoint ptr %16 to i64
  %sub.ptr.rhs.cast.i25 = ptrtoint ptr %17 to i64
  %sub.ptr.sub.i26 = sub i64 %sub.ptr.lhs.cast.i24, %sub.ptr.rhs.cast.i25
  %sub.ptr.div.i27 = ashr exact i64 %sub.ptr.sub.i26, 3
  %cmp8 = icmp ult i64 %inc, %sub.ptr.div.i27
  br i1 %cmp8, label %for.body10, label %for.cond.cleanup9.loopexit, !llvm.loop !33

if.end:                                           ; preds = %for.cond.cleanup9, %entry
  %forest = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 1
  %18 = load ptr, ptr %forest, align 8, !tbaa !20
  tail call void @free(ptr noundef %18) #28
  %19 = load ptr, ptr %classes, align 8, !tbaa !12
  %20 = load ptr, ptr %_M_finish.i.i, align 8, !tbaa !14
  %cmp.not3.i.i.i.i = icmp eq ptr %19, %20
  br i1 %cmp.not3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %if.end, %_ZSt8_DestroyISt6vectorIPN9algorithm11ForestNode_ESaIS3_EEEvPT_.exit.i.i.i.i
  %__first.addr.04.i.i.i.i = phi ptr [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyISt6vectorIPN9algorithm11ForestNode_ESaIS3_EEEvPT_.exit.i.i.i.i ], [ %19, %if.end ]
  %21 = load ptr, ptr %__first.addr.04.i.i.i.i, align 8, !tbaa !9
  %tobool.not.i.i.i.i.i.i.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i.i.i.i.i.i.i, label %_ZSt8_DestroyISt6vectorIPN9algorithm11ForestNode_ESaIS3_EEEvPT_.exit.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i
  tail call void @_ZdlPv(ptr noundef nonnull %21) #28
  br label %_ZSt8_DestroyISt6vectorIPN9algorithm11ForestNode_ESaIS3_EEEvPT_.exit.i.i.i.i

_ZSt8_DestroyISt6vectorIPN9algorithm11ForestNode_ESaIS3_EEEvPT_.exit.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i.i, %for.body.i.i.i.i
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::vector", ptr %__first.addr.04.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq ptr %incdec.ptr.i.i.i.i, %20
  br i1 %cmp.not.i.i.i.i, label %invoke.contthread-pre-split.i, label %for.body.i.i.i.i, !llvm.loop !34

invoke.contthread-pre-split.i:                    ; preds = %_ZSt8_DestroyISt6vectorIPN9algorithm11ForestNode_ESaIS3_EEEvPT_.exit.i.i.i.i
  %.pr.i = load ptr, ptr %classes, align 8, !tbaa !12
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.contthread-pre-split.i, %if.end
  %22 = phi ptr [ %.pr.i, %invoke.contthread-pre-split.i ], [ %19, %if.end ]
  %tobool.not.i.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIS_IPN9algorithm11ForestNode_ESaIS2_EESaIS4_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont.i
  tail call void @_ZdlPv(ptr noundef nonnull %22) #28
  br label %_ZNSt6vectorIS_IPN9algorithm11ForestNode_ESaIS2_EESaIS4_EED2Ev.exit

_ZNSt6vectorIS_IPN9algorithm11ForestNode_ESaIS2_EESaIS4_EED2Ev.exit: ; preds = %invoke.cont.i, %if.then.i.i.i
  %table = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  %23 = load ptr, ptr %table, align 8, !tbaa !9
  %tobool.not.i.i.i31 = icmp eq ptr %23, null
  br i1 %tobool.not.i.i.i31, label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EED2Ev.exit, label %if.then.i.i.i33

if.then.i.i.i33:                                  ; preds = %_ZNSt6vectorIS_IPN9algorithm11ForestNode_ESaIS2_EESaIS4_EED2Ev.exit
  tail call void @_ZdlPv(ptr noundef nonnull %23) #28
  br label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EED2Ev.exit

_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EED2Ev.exit: ; preds = %_ZNSt6vectorIS_IPN9algorithm11ForestNode_ESaIS2_EESaIS4_EED2Ev.exit, %if.then.i.i.i33
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #9

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn
declare void @free(ptr nocapture noundef) local_unnamed_addr #10

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManager25loadPreCompGraphFromArrayEv(ptr noundef nonnull align 8 dereferenceable(72) %this) local_unnamed_addr #11 align 2 {
entry:
  %volume.i = alloca i32, align 4
  %forest = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 1
  %nTravIds.i.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  %forestSize.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 4
  %table.i.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  br label %if.end

if.end:                                           ; preds = %entry, %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit ]
  %0 = phi i16 [ 2, %entry ], [ %24, %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit ]
  %1 = phi i16 [ 8, %entry ], [ %23, %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit ]
  %conv6 = zext i16 %0 to i32
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 1
  %shr = lshr i32 %conv, 1
  %2 = load ptr, ptr %forest, align 8, !tbaa !20
  %shr8 = lshr i32 %conv, 2
  %idxprom9 = zext i32 %shr8 to i64
  %arrayidx10 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %2, i64 %idxprom9
  %shr12 = lshr i32 %conv6, 1
  %idxprom13 = zext i32 %shr12 to i64
  %arrayidx14 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %2, i64 %idxprom13
  %Level15 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %2, i64 %idxprom9, i32 5
  %bf.load = load i32, ptr %Level15, align 2
  %bf.lshr = lshr i32 %bf.load, 24
  %bf.clear = and i32 %bf.lshr, 63
  %Level17 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %2, i64 %idxprom13, i32 5
  %bf.load18 = load i32, ptr %Level17, align 2
  %bf.lshr19 = lshr i32 %bf.load18, 24
  %bf.clear20 = and i32 %bf.lshr19, 63
  %3 = call i32 @llvm.umax.i32(i32 %bf.clear, i32 %bf.clear20)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %volume.i) #28
  store i32 0, ptr %volume.i, align 4, !tbaa !35
  %4 = load i32, ptr %nTravIds.i.i, align 4, !tbaa !15
  %inc.i.i = add nsw i32 %4, 1
  store i32 %inc.i.i, ptr %nTravIds.i.i, align 4, !tbaa !15
  call void @_ZN9algorithm19PreCompGraphManager12getVolumeRecEPNS_11ForestNode_EPi(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %arrayidx10, ptr noundef nonnull %volume.i) #28
  call void @_ZN9algorithm19PreCompGraphManager12getVolumeRecEPNS_11ForestNode_EPi(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %arrayidx14, ptr noundef nonnull %volume.i) #28
  %5 = load i32, ptr %volume.i, align 4, !tbaa !35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %volume.i) #28
  %and24 = and i32 %shr, 1
  %6 = ptrtoint ptr %arrayidx10 to i64
  %conv.i49 = zext i32 %and24 to i64
  %xor.i = xor i64 %6, %conv.i49
  %7 = inttoptr i64 %xor.i to ptr
  %and26 = and i32 %conv6, 1
  %8 = ptrtoint ptr %arrayidx14 to i64
  %conv.i4550 = zext i32 %and26 to i64
  %xor.i46 = xor i64 %8, %conv.i4550
  %9 = inttoptr i64 %xor.i46 to ptr
  %add23 = add nuw nsw i32 %and, 1
  %add28 = add i32 %add23, %5
  %tobool.not.i = icmp eq i32 %and, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %uTruth2.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %7, i64 0, i32 5
  %bf.load.i = load i32, ptr %uTruth2.i, align 2
  %uTruth3.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %9, i64 0, i32 5
  %bf.load4.i = load i32, ptr %uTruth3.i, align 2
  %bf.clear85.i = xor i32 %bf.load4.i, %bf.load.i
  br label %if.end.i

if.else.i:                                        ; preds = %if.end
  %and.i87.i = and i64 %6, -2
  %10 = inttoptr i64 %and.i87.i to ptr
  %uTruth11.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %10, i64 0, i32 5
  %bf.load12.i = load i32, ptr %uTruth11.i, align 2
  %bf.clear13.i = and i32 %bf.load12.i, 65535
  %11 = trunc i64 %xor.i to i32
  %12 = and i32 %11, 1
  %neg.i = sub nsw i32 0, %12
  %spec.select.i = xor i32 %bf.clear13.i, %neg.i
  %and.i91.i = and i64 %8, -2
  %13 = inttoptr i64 %and.i91.i to ptr
  %uTruth23.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %13, i64 0, i32 5
  %bf.load24.i = load i32, ptr %uTruth23.i, align 2
  %bf.clear25.i = and i32 %bf.load24.i, 65535
  %14 = trunc i64 %xor.i46 to i32
  %15 = and i32 %14, 1
  %neg20.i = sub nsw i32 0, %15
  %spec.select92.i = xor i32 %bf.clear25.i, %neg20.i
  %and.i = and i32 %spec.select92.i, %spec.select.i
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %uTruth.0.in.i = phi i32 [ %bf.clear85.i, %if.then.i ], [ %and.i, %if.else.i ]
  %uTruth.0.i = and i32 %uTruth.0.in.i, 65535
  %16 = load ptr, ptr %forest, align 8, !tbaa !20
  %17 = load i32, ptr %forestSize.i, align 8, !tbaa !25
  %idxprom.i = sext i32 %17 to i64
  %arrayidx.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %16, i64 %idxprom.i
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %forestSize.i, align 8, !tbaa !25
  store i32 %17, ptr %arrayidx.i, align 8, !tbaa !21
  %TravId.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %16, i64 %idxprom.i, i32 1
  store i32 0, ptr %TravId.i, align 4, !tbaa !24
  %uTruth30.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %16, i64 %idxprom.i, i32 5
  %add21 = shl nuw nsw i32 %3, 24
  %bf.value35.i = add nuw nsw i32 %add21, 16777216
  %bf.shl.i = and i32 %bf.value35.i, 1056964608
  %bf.value40.i = shl i32 %add28, 16
  %bf.shl41.i = and i32 %bf.value40.i, 16711680
  %bf.shl50.i = shl nuw i32 %and, 31
  %bf.set43.i = or i32 %bf.shl.i, %bf.shl50.i
  %bf.set37.i = or i32 %bf.shl41.i, %bf.set43.i
  %bf.set52.i = or i32 %uTruth.0.i, %bf.set37.i
  store i32 %bf.set52.i, ptr %uTruth30.i, align 2
  %p053.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %16, i64 %idxprom.i, i32 7
  store ptr %7, ptr %p053.i, align 8, !tbaa !36
  %p154.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %16, i64 %idxprom.i, i32 8
  store ptr %9, ptr %p154.i, align 8, !tbaa !37
  %pNext.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %16, i64 %idxprom.i, i32 9
  store ptr null, ptr %pNext.i, align 8, !tbaa !28
  %18 = load ptr, ptr %this, align 8, !tbaa !38
  %call55.i = call noundef ptr @_ZN9algorithm10NPNManager9getCanonsEv(ptr noundef nonnull align 8 dereferenceable(64) %18)
  %idxprom56.i = zext i32 %uTruth.0.i to i64
  %arrayidx57.i = getelementptr inbounds i16, ptr %call55.i, i64 %idxprom56.i
  %19 = load i16, ptr %arrayidx57.i, align 2, !tbaa !39
  %20 = trunc i32 %uTruth.0.in.i to i16
  %cmp.not.i = icmp eq i16 %19, %20
  br i1 %cmp.not.i, label %if.end59.i, label %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit

if.end59.i:                                       ; preds = %if.end.i
  %21 = load ptr, ptr %table.i.i, align 8, !tbaa !9
  %add.ptr.i.i.i = getelementptr inbounds ptr, ptr %21, i64 %idxprom56.i
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.cond.i.i, %if.end59.i
  %position.0.i.i = phi ptr [ %add.ptr.i.i.i, %if.end59.i ], [ %pNext.i.i, %for.cond.i.i ]
  %temp.0.i.i = load ptr, ptr %position.0.i.i, align 8, !tbaa !5
  %tobool.not.i.i = icmp eq ptr %temp.0.i.i, null
  %pNext.i.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %temp.0.i.i, i64 0, i32 9
  br i1 %tobool.not.i.i, label %_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E.exit.i, label %for.cond.i.i, !llvm.loop !40

_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E.exit.i: ; preds = %for.cond.i.i
  store ptr %arrayidx.i, ptr %position.0.i.i, align 8, !tbaa !5
  br label %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit

_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit: ; preds = %if.end.i, %_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E.exit.i
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %22 = trunc i64 %indvars.iv.next to i32
  %mul = shl nuw nsw i32 %22, 1
  %idxprom = zext i32 %mul to i64
  %arrayidx = getelementptr inbounds [3562 x i16], ptr @_ZN9algorithm19PreCompGraphManager12aigSubgraphsE, i64 0, i64 %idxprom
  %23 = load i16, ptr %arrayidx, align 4, !tbaa !39
  %add3 = or i32 %mul, 1
  %idxprom4 = zext i32 %add3 to i64
  %arrayidx5 = getelementptr inbounds [3562 x i16], ptr @_ZN9algorithm19PreCompGraphManager12aigSubgraphsE, i64 0, i64 %idxprom4
  %24 = load i16, ptr %arrayidx5, align 2, !tbaa !39
  %cmp = icmp eq i16 %23, 0
  %cmp7 = icmp eq i16 %24, 0
  %or.cond = select i1 %cmp, i1 %cmp7, i1 false
  br i1 %or.cond, label %for.end, label %if.end, !llvm.loop !41

for.end:                                          ; preds = %_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii.exit
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind uwtable
define dso_local noundef i32 @_ZN9algorithm19PreCompGraphManager19getForestNodeVolumeEPNS_11ForestNode_ES2_(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr nocapture noundef %p0, ptr nocapture noundef %p1) local_unnamed_addr #12 align 2 {
entry:
  %volume = alloca i32, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %volume) #28
  store i32 0, ptr %volume, align 4, !tbaa !35
  %nTravIds.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  %0 = load i32, ptr %nTravIds.i, align 4, !tbaa !15
  %inc.i = add nsw i32 %0, 1
  store i32 %inc.i, ptr %nTravIds.i, align 4, !tbaa !15
  call void @_ZN9algorithm19PreCompGraphManager12getVolumeRecEPNS_11ForestNode_EPi(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %p0, ptr noundef nonnull %volume)
  call void @_ZN9algorithm19PreCompGraphManager12getVolumeRecEPNS_11ForestNode_EPi(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %p1, ptr noundef nonnull %volume)
  %1 = load i32, ptr %volume, align 4, !tbaa !35
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %volume) #28
  ret i32 %1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm19PreCompGraphManager24forestNodeComplementCondEPNS_11ForestNode_Ei(ptr nocapture nonnull readnone align 8 %this, ptr noundef %node, i32 noundef %c) local_unnamed_addr #13 align 2 {
entry:
  %0 = ptrtoint ptr %node to i64
  %conv = sext i32 %c to i64
  %xor = xor i64 %conv, %0
  %1 = inttoptr i64 %xor to ptr
  ret ptr %1
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @_ZN9algorithm19PreCompGraphManager13addForestNodeEPNS_11ForestNode_ES2_iii(ptr nocapture noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %p0, ptr noundef %p1, i32 noundef %fExor, i32 noundef %Level, i32 noundef %Volume) local_unnamed_addr #11 align 2 {
entry:
  %tobool.not = icmp eq i32 %fExor, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %uTruth2 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %p0, i64 0, i32 5
  %bf.load = load i32, ptr %uTruth2, align 2
  %uTruth3 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %p1, i64 0, i32 5
  %bf.load4 = load i32, ptr %uTruth3, align 2
  %bf.clear85 = xor i32 %bf.load4, %bf.load
  br label %if.end

if.else:                                          ; preds = %entry
  %0 = ptrtoint ptr %p0 to i64
  %and.i87 = and i64 %0, -2
  %1 = inttoptr i64 %and.i87 to ptr
  %uTruth11 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %1, i64 0, i32 5
  %bf.load12 = load i32, ptr %uTruth11, align 2
  %bf.clear13 = and i32 %bf.load12, 65535
  %2 = trunc i64 %0 to i32
  %3 = and i32 %2, 1
  %neg = sub nsw i32 0, %3
  %spec.select = xor i32 %bf.clear13, %neg
  %4 = ptrtoint ptr %p1 to i64
  %and.i91 = and i64 %4, -2
  %5 = inttoptr i64 %and.i91 to ptr
  %uTruth23 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %5, i64 0, i32 5
  %bf.load24 = load i32, ptr %uTruth23, align 2
  %bf.clear25 = and i32 %bf.load24, 65535
  %6 = trunc i64 %4 to i32
  %7 = and i32 %6, 1
  %neg20 = sub nsw i32 0, %7
  %spec.select92 = xor i32 %bf.clear25, %neg20
  %and = and i32 %spec.select92, %spec.select
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %uTruth.0.in = phi i32 [ %bf.clear85, %if.then ], [ %and, %if.else ]
  %uTruth.0 = and i32 %uTruth.0.in, 65535
  %forest = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 1
  %8 = load ptr, ptr %forest, align 8, !tbaa !20
  %forestSize = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 4
  %9 = load i32, ptr %forestSize, align 8, !tbaa !25
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 %idxprom
  %inc = add nsw i32 %9, 1
  store i32 %inc, ptr %forestSize, align 8, !tbaa !25
  store i32 %9, ptr %arrayidx, align 8, !tbaa !21
  %TravId = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 %idxprom, i32 1
  store i32 0, ptr %TravId, align 4, !tbaa !24
  %uTruth30 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 %idxprom, i32 5
  %bf.value35 = shl i32 %Level, 24
  %bf.shl = and i32 %bf.value35, 1056964608
  %bf.value40 = shl i32 %Volume, 16
  %bf.shl41 = and i32 %bf.value40, 16711680
  %bf.shl50 = shl i32 %fExor, 31
  %bf.set43 = or i32 %bf.shl, %bf.shl50
  %bf.set37 = or i32 %bf.set43, %bf.shl41
  %bf.set52 = or i32 %bf.set37, %uTruth.0
  store i32 %bf.set52, ptr %uTruth30, align 2
  %p053 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 %idxprom, i32 7
  store ptr %p0, ptr %p053, align 8, !tbaa !36
  %p154 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 %idxprom, i32 8
  store ptr %p1, ptr %p154, align 8, !tbaa !37
  %pNext = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 %idxprom, i32 9
  store ptr null, ptr %pNext, align 8, !tbaa !28
  %10 = load ptr, ptr %this, align 8, !tbaa !38
  %call55 = tail call noundef ptr @_ZN9algorithm10NPNManager9getCanonsEv(ptr noundef nonnull align 8 dereferenceable(64) %10)
  %idxprom56 = zext i32 %uTruth.0 to i64
  %arrayidx57 = getelementptr inbounds i16, ptr %call55, i64 %idxprom56
  %11 = load i16, ptr %arrayidx57, align 2, !tbaa !39
  %12 = trunc i32 %uTruth.0.in to i16
  %cmp.not = icmp eq i16 %11, %12
  br i1 %cmp.not, label %if.end59, label %cleanup

if.end59:                                         ; preds = %if.end
  %table.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  %13 = load ptr, ptr %table.i, align 8, !tbaa !9
  %add.ptr.i.i = getelementptr inbounds ptr, ptr %13, i64 %idxprom56
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.cond.i, %if.end59
  %position.0.i = phi ptr [ %add.ptr.i.i, %if.end59 ], [ %pNext.i, %for.cond.i ]
  %temp.0.i = load ptr, ptr %position.0.i, align 8, !tbaa !5
  %tobool.not.i = icmp eq ptr %temp.0.i, null
  %pNext.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %temp.0.i, i64 0, i32 9
  br i1 %tobool.not.i, label %_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E.exit, label %for.cond.i, !llvm.loop !40

_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E.exit: ; preds = %for.cond.i
  store ptr %arrayidx, ptr %position.0.i, align 8, !tbaa !5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E.exit
  ret ptr %arrayidx
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef zeroext i1 @_ZN9algorithm19PreCompGraphManager22isForestNodeComplementEPNS_11ForestNode_E(ptr nocapture nonnull readnone align 8 %this, ptr noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %0 = ptrtoint ptr %node to i64
  %and = and i64 %0, 1
  %tobool = icmp ne i64 %and, 0
  ret i1 %tobool
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm19PreCompGraphManager17forestNodeRegularEPNS_11ForestNode_E(ptr nocapture nonnull readnone align 8 %this, ptr noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %0 = ptrtoint ptr %node to i64
  %and = and i64 %0, -2
  %1 = inttoptr i64 %and to ptr
  ret ptr %1
}

declare noundef ptr @_ZN9algorithm10NPNManager9getCanonsEv(ptr noundef nonnull align 8 dereferenceable(64)) local_unnamed_addr #0

; Function Attrs: mustprogress nofree norecurse nosync nounwind uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManager20addForestNodeToTableEjPNS_11ForestNode_E(ptr nocapture noundef nonnull readonly align 8 dereferenceable(72) %this, i32 noundef %uTruth, ptr noundef %node) local_unnamed_addr #14 align 2 {
entry:
  %table = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  %conv = zext i32 %uTruth to i64
  %0 = load ptr, ptr %table, align 8, !tbaa !9
  %add.ptr.i = getelementptr inbounds ptr, ptr %0, i64 %conv
  br label %for.cond

for.cond:                                         ; preds = %for.cond, %entry
  %position.0 = phi ptr [ %add.ptr.i, %entry ], [ %pNext, %for.cond ]
  %temp.0 = load ptr, ptr %position.0, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %temp.0, null
  %pNext = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %temp.0, i64 0, i32 9
  br i1 %tobool.not, label %for.end, label %for.cond, !llvm.loop !40

for.end:                                          ; preds = %for.cond
  store ptr %node, ptr %position.0, align 8, !tbaa !5
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManager9incTravIdEv(ptr nocapture noundef nonnull align 8 dereferenceable(72) %this) local_unnamed_addr #15 align 2 {
entry:
  %nTravIds = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  %0 = load i32, ptr %nTravIds, align 4, !tbaa !15
  %inc = add nsw i32 %0, 1
  store i32 %inc, ptr %nTravIds, align 4, !tbaa !15
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManager12getVolumeRecEPNS_11ForestNode_EPi(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr nocapture noundef %node, ptr noundef %volume) local_unnamed_addr #12 align 2 {
entry:
  %fUsed20 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node, i64 0, i32 5
  %bf.load21 = load i32, ptr %fUsed20, align 2
  %0 = and i32 %bf.load21, 1073741824
  %tobool.not22 = icmp eq i32 %0, 0
  br i1 %tobool.not22, label %lor.lhs.false.lr.ph, label %return

lor.lhs.false.lr.ph:                              ; preds = %entry
  %nTravIds = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %lor.lhs.false.lr.ph, %if.end9
  %fUsed24 = phi ptr [ %fUsed20, %lor.lhs.false.lr.ph ], [ %fUsed, %if.end9 ]
  %node.tr23 = phi ptr [ %node, %lor.lhs.false.lr.ph ], [ %9, %if.end9 ]
  %TravId = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node.tr23, i64 0, i32 1
  %1 = load i32, ptr %TravId, align 4, !tbaa !24
  %2 = load i32, ptr %nTravIds, align 4, !tbaa !15
  %cmp = icmp eq i32 %1, %2
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  store i32 %2, ptr %TravId, align 4, !tbaa !24
  %3 = load i32, ptr %volume, align 4, !tbaa !35
  %inc = add nsw i32 %3, 1
  store i32 %inc, ptr %volume, align 4, !tbaa !35
  %bf.load4 = load i32, ptr %fUsed24, align 2
  %tobool6.not = icmp sgt i32 %bf.load4, -1
  br i1 %tobool6.not, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end
  %inc8 = add nsw i32 %3, 2
  store i32 %inc8, ptr %volume, align 4, !tbaa !35
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %p0 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node.tr23, i64 0, i32 7
  %4 = load ptr, ptr %p0, align 8, !tbaa !36
  %5 = ptrtoint ptr %4 to i64
  %and.i = and i64 %5, -2
  %6 = inttoptr i64 %and.i to ptr
  tail call void @_ZN9algorithm19PreCompGraphManager12getVolumeRecEPNS_11ForestNode_EPi(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %6, ptr noundef nonnull %volume)
  %p1 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node.tr23, i64 0, i32 8
  %7 = load ptr, ptr %p1, align 8, !tbaa !37
  %8 = ptrtoint ptr %7 to i64
  %and.i19 = and i64 %8, -2
  %9 = inttoptr i64 %and.i19 to ptr
  %fUsed = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %9, i64 0, i32 5
  %bf.load = load i32, ptr %fUsed, align 2
  %10 = and i32 %bf.load, 1073741824
  %tobool.not = icmp eq i32 %10, 0
  br i1 %tobool.not, label %lor.lhs.false, label %return

return:                                           ; preds = %lor.lhs.false, %if.end9, %entry
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm19PreCompGraphManager20forestNodeComplementEPNS_11ForestNode_E(ptr nocapture noundef nonnull readnone align 8 dereferenceable(72) %this, ptr noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %0 = ptrtoint ptr %node to i64
  %xor = xor i64 %0, 1
  %1 = inttoptr i64 %xor to ptr
  ret ptr %1
}

; Function Attrs: uwtable
define dso_local void @_ZN9algorithm19PreCompGraphManager26processDecompositionGraphsEv(ptr noundef nonnull align 8 dereferenceable(72) %this) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load ptr, ptr %this, align 8, !tbaa !38
  %call = tail call noundef ptr @_ZN9algorithm10NPNManager6getMapEv(ptr noundef nonnull align 8 dereferenceable(64) %0)
  %1 = load ptr, ptr %this, align 8, !tbaa !38
  %call3 = tail call noundef ptr @_ZN9algorithm10NPNManager9getMapInvEv(ptr noundef nonnull align 8 dereferenceable(64) %1)
  %2 = load ptr, ptr %this, align 8, !tbaa !38
  %call5 = tail call noundef ptr @_ZN9algorithm10NPNManager9getCanonsEv(ptr noundef nonnull align 8 dereferenceable(64) %2)
  %3 = load ptr, ptr %this, align 8, !tbaa !38
  %call7124 = tail call noundef i32 @_ZN9algorithm10NPNManager9getNFuncsEv(ptr noundef nonnull align 8 dereferenceable(64) %3)
  %cmp125 = icmp sgt i32 %call7124, 0
  br i1 %cmp125, label %for.body.lr.ph, label %for.cond52.preheader

for.body.lr.ph:                                   ; preds = %entry
  %table = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  %classes = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 3
  br label %for.body

for.cond52.preheader:                             ; preds = %for.inc49, %entry
  %classes53 = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 3
  %_M_finish.i99 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<algorithm::ForestNode_ *>, std::allocator<std::vector<algorithm::ForestNode_ *>>>::_Vector_impl_data", ptr %classes53, i64 0, i32 1
  %4 = load ptr, ptr %_M_finish.i99, align 8, !tbaa !14
  %5 = load ptr, ptr %classes53, align 8, !tbaa !12
  %6 = icmp eq ptr %4, %5
  br i1 %6, label %for.cond.cleanup56, label %for.cond58.preheader.lr.ph

for.cond58.preheader.lr.ph:                       ; preds = %for.cond52.preheader
  %nTravIds.i.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  br label %for.cond58.preheader

for.body:                                         ; preds = %for.body.lr.ph, %for.inc49
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc49 ]
  %7 = load ptr, ptr %table, align 8, !tbaa !9
  %add.ptr.i = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv
  %8 = load ptr, ptr %add.ptr.i, align 8, !tbaa !5
  %cmp9 = icmp eq ptr %8, null
  br i1 %cmp9, label %for.inc49, label %cond.end.lr.ph

cond.end.lr.ph:                                   ; preds = %for.body
  %uTruth157 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %8, i64 0, i32 5
  %bf.load158 = load i32, ptr %uTruth157, align 2
  br label %cond.end

cond.false:                                       ; preds = %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge
  tail call void @__assert_fail(ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i32 noundef 638, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager26processDecompositionGraphsEv) #32
  unreachable

cond.end:                                         ; preds = %cond.end.lr.ph, %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge
  %bf.load164 = phi i32 [ %bf.load158, %cond.end.lr.ph ], [ %bf.load, %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge ]
  %uTruth163 = phi ptr [ %uTruth157, %cond.end.lr.ph ], [ %uTruth, %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge ]
  %storemerge122162 = phi ptr [ %8, %cond.end.lr.ph ], [ %storemerge.pr, %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge ]
  %bf.clear24 = and i32 %bf.load164, 65535
  %idxprom = zext i32 %bf.clear24 to i64
  %arrayidx = getelementptr inbounds i8, ptr %call, i64 %idxprom
  %9 = load i8, ptr %arrayidx, align 1, !tbaa !42
  %cmp26 = icmp ult i8 %9, -34
  br i1 %cmp26, label %cond.end29, label %cond.false28

cond.false28:                                     ; preds = %cond.end
  tail call void @__assert_fail(ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 639, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager26processDecompositionGraphsEv) #32
  unreachable

cond.end29:                                       ; preds = %cond.end
  %conv35 = zext i8 %9 to i64
  %10 = load ptr, ptr %classes, align 8, !tbaa !12
  %add.ptr.i98 = getelementptr inbounds %"class.std::vector", ptr %10, i64 %conv35
  %_M_finish.i = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %add.ptr.i98, i64 0, i32 1
  %11 = load ptr, ptr %_M_finish.i, align 8, !tbaa !11
  %_M_end_of_storage.i = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %add.ptr.i98, i64 0, i32 2
  %12 = load ptr, ptr %_M_end_of_storage.i, align 8, !tbaa !43
  %cmp.not.i = icmp eq ptr %11, %12
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %cond.end29
  store ptr %storemerge122162, ptr %11, align 8, !tbaa !5
  %13 = load ptr, ptr %_M_finish.i, align 8, !tbaa !11
  %incdec.ptr.i = getelementptr inbounds ptr, ptr %13, i64 1
  store ptr %incdec.ptr.i, ptr %_M_finish.i, align 8, !tbaa !11
  br label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit

if.else.i:                                        ; preds = %cond.end29
  %14 = load ptr, ptr %add.ptr.i98, align 8, !tbaa !9
  %sub.ptr.lhs.cast.i.i.i.i = ptrtoint ptr %11 to i64
  %sub.ptr.rhs.cast.i.i.i.i = ptrtoint ptr %14 to i64
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.lhs.cast.i.i.i.i, %sub.ptr.rhs.cast.i.i.i.i
  %cmp.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i, 9223372036854775800
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNKSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE12_M_check_lenEmPKc.exit.i.i

if.then.i.i.i:                                    ; preds = %if.else.i
  tail call void @_ZSt20__throw_length_errorPKc(ptr noundef nonnull @.str.11) #27
  unreachable

_ZNKSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE12_M_check_lenEmPKc.exit.i.i: ; preds = %if.else.i
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 3
  %15 = tail call i64 @llvm.umax.i64(i64 %sub.ptr.div.i.i.i.i, i64 1)
  %add.i.i.i = add i64 %15, %sub.ptr.div.i.i.i.i
  %cmp7.i.i.i = icmp ult i64 %add.i.i.i, %sub.ptr.div.i.i.i.i
  %cmp9.i.i.i = icmp ugt i64 %add.i.i.i, 1152921504606846975
  %or.cond.i.i.i = or i1 %cmp7.i.i.i, %cmp9.i.i.i
  %spec.select.i.i.i = select i1 %or.cond.i.i.i, i64 1152921504606846975, i64 %add.i.i.i
  %cmp.not.i.i.i = icmp eq i64 %spec.select.i.i.i, 0
  br i1 %cmp.not.i.i.i, label %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EE11_M_allocateEm.exit.i.i, label %_ZNSt16allocator_traitsISaIPN9algorithm11ForestNode_EEE8allocateERS3_m.exit.i.i.i

_ZNSt16allocator_traitsISaIPN9algorithm11ForestNode_EEE8allocateERS3_m.exit.i.i.i: ; preds = %_ZNKSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE12_M_check_lenEmPKc.exit.i.i
  %mul.i.i.i.i.i = shl nuw nsw i64 %spec.select.i.i.i, 3
  %call2.i.i.i.i.i = tail call noalias noundef nonnull ptr @_Znwm(i64 noundef %mul.i.i.i.i.i) #29
  br label %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EE11_M_allocateEm.exit.i.i

_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EE11_M_allocateEm.exit.i.i: ; preds = %_ZNSt16allocator_traitsISaIPN9algorithm11ForestNode_EEE8allocateERS3_m.exit.i.i.i, %_ZNKSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE12_M_check_lenEmPKc.exit.i.i
  %cond.i.i.i = phi ptr [ %call2.i.i.i.i.i, %_ZNSt16allocator_traitsISaIPN9algorithm11ForestNode_EEE8allocateERS3_m.exit.i.i.i ], [ null, %_ZNKSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE12_M_check_lenEmPKc.exit.i.i ]
  %add.ptr.i.i = getelementptr inbounds ptr, ptr %cond.i.i.i, i64 %sub.ptr.div.i.i.i.i
  store ptr %storemerge122162, ptr %add.ptr.i.i, align 8, !tbaa !5
  %cmp.i.i.i.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i, label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit38.i.i

if.then.i.i.i.i.i.i:                              ; preds = %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EE11_M_allocateEm.exit.i.i
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 8 %cond.i.i.i, ptr align 8 %14, i64 %sub.ptr.sub.i.i.i.i, i1 false) #28
  br label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit38.i.i

_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit38.i.i: ; preds = %if.then.i.i.i.i.i.i, %_ZNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EE11_M_allocateEm.exit.i.i
  %incdec.ptr.i.i = getelementptr inbounds ptr, ptr %add.ptr.i.i, i64 1
  %tobool.not.i.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i, label %if.then.i39.i.i

if.then.i39.i.i:                                  ; preds = %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit38.i.i
  tail call void @_ZdlPv(ptr noundef nonnull %14) #28
  br label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i

_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i: ; preds = %if.then.i39.i.i, %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE11_S_relocateEPS2_S5_S5_RS3_.exit38.i.i
  store ptr %cond.i.i.i, ptr %add.ptr.i98, align 8, !tbaa !9
  store ptr %incdec.ptr.i.i, ptr %_M_finish.i, align 8, !tbaa !11
  %add.ptr19.i.i = getelementptr inbounds ptr, ptr %cond.i.i.i, i64 %spec.select.i.i.i
  store ptr %add.ptr19.i.i, ptr %_M_end_of_storage.i, align 8, !tbaa !43
  br label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit

_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit: ; preds = %if.then.i, %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_.exit.i
  %bf.load38 = load i32, ptr %uTruth163, align 2
  %bf.clear39 = and i32 %bf.load38, 65535
  %idxprom40 = zext i32 %bf.clear39 to i64
  %arrayidx41 = getelementptr inbounds i16, ptr %call5, i64 %idxprom40
  %16 = load i16, ptr %arrayidx41, align 2, !tbaa !39
  %arrayidx46 = getelementptr inbounds i8, ptr %call, i64 %idxprom40
  %17 = load i8, ptr %arrayidx46, align 1, !tbaa !42
  %idxprom47 = zext i8 %17 to i64
  %arrayidx48 = getelementptr inbounds i16, ptr %call3, i64 %idxprom47
  store i16 %16, ptr %arrayidx48, align 2, !tbaa !39
  %pNext = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %storemerge122162, i64 0, i32 9
  %storemerge.pr = load ptr, ptr %pNext, align 8, !tbaa !5
  %tobool.not = icmp eq ptr %storemerge.pr, null
  br i1 %tobool.not, label %for.inc49, label %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge, !llvm.loop !44

_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit.for.body14_crit_edge: ; preds = %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit
  %.pre = load ptr, ptr %table, align 8, !tbaa !9
  %add.ptr.i97.phi.trans.insert = getelementptr inbounds ptr, ptr %.pre, i64 %indvars.iv
  %.pre143 = load ptr, ptr %add.ptr.i97.phi.trans.insert, align 8, !tbaa !5
  %uTruth = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %storemerge.pr, i64 0, i32 5
  %bf.load = load i32, ptr %uTruth, align 2
  %uTruth18 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %.pre143, i64 0, i32 5
  %bf.load19 = load i32, ptr %uTruth18, align 2
  %18 = xor i32 %bf.load19, %bf.load
  %19 = and i32 %18, 65535
  %cmp21 = icmp eq i32 %19, 0
  br i1 %cmp21, label %cond.end, label %cond.false

for.inc49:                                        ; preds = %_ZNSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE9push_backERKS2_.exit, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = load ptr, ptr %this, align 8, !tbaa !38
  %call7 = tail call noundef i32 @_ZN9algorithm10NPNManager9getNFuncsEv(ptr noundef nonnull align 8 dereferenceable(64) %20)
  %21 = sext i32 %call7 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %21
  br i1 %cmp, label %for.body, label %for.cond52.preheader, !llvm.loop !45

for.cond58.preheader:                             ; preds = %for.cond58.preheader.lr.ph, %for.cond.cleanup63
  %22 = phi ptr [ %5, %for.cond58.preheader.lr.ph ], [ %29, %for.cond.cleanup63 ]
  %23 = phi ptr [ %4, %for.cond58.preheader.lr.ph ], [ %30, %for.cond.cleanup63 ]
  %i51.0140 = phi i64 [ 0, %for.cond58.preheader.lr.ph ], [ %inc82, %for.cond.cleanup63 ]
  %add.ptr.i100127 = getelementptr inbounds %"class.std::vector", ptr %22, i64 %i51.0140
  %_M_finish.i101128 = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %add.ptr.i100127, i64 0, i32 1
  %24 = load ptr, ptr %_M_finish.i101128, align 8, !tbaa !11
  %25 = load ptr, ptr %add.ptr.i100127, align 8, !tbaa !9
  %cmp62133.not = icmp eq ptr %24, %25
  br i1 %cmp62133.not, label %for.cond.cleanup63, label %for.body64

for.cond.cleanup56:                               ; preds = %for.cond.cleanup63, %for.cond52.preheader
  ret void

for.cond58:                                       ; preds = %_ZN9algorithm8DecGraph11deriveTruthEv.exit
  %inc79 = add nuw i64 %j.0134, 1
  %26 = load ptr, ptr %classes53, align 8, !tbaa !12
  %add.ptr.i100 = getelementptr inbounds %"class.std::vector", ptr %26, i64 %i51.0140
  %_M_finish.i101 = getelementptr inbounds %"struct.std::_Vector_base<algorithm::ForestNode_ *, std::allocator<algorithm::ForestNode_ *>>::_Vector_impl_data", ptr %add.ptr.i100, i64 0, i32 1
  %27 = load ptr, ptr %_M_finish.i101, align 8, !tbaa !11
  %28 = load ptr, ptr %add.ptr.i100, align 8, !tbaa !9
  %sub.ptr.lhs.cast.i102 = ptrtoint ptr %27 to i64
  %sub.ptr.rhs.cast.i103 = ptrtoint ptr %28 to i64
  %sub.ptr.sub.i104 = sub i64 %sub.ptr.lhs.cast.i102, %sub.ptr.rhs.cast.i103
  %sub.ptr.div.i105 = ashr exact i64 %sub.ptr.sub.i104, 3
  %cmp62 = icmp ult i64 %inc79, %sub.ptr.div.i105
  br i1 %cmp62, label %for.body64, label %for.cond.cleanup63.loopexit, !llvm.loop !46

for.cond.cleanup63.loopexit:                      ; preds = %for.cond58
  %.pre145 = load ptr, ptr %_M_finish.i99, align 8, !tbaa !14
  br label %for.cond.cleanup63

for.cond.cleanup63:                               ; preds = %for.cond.cleanup63.loopexit, %for.cond58.preheader
  %29 = phi ptr [ %26, %for.cond.cleanup63.loopexit ], [ %22, %for.cond58.preheader ]
  %30 = phi ptr [ %.pre145, %for.cond.cleanup63.loopexit ], [ %23, %for.cond58.preheader ]
  %inc82 = add nuw i64 %i51.0140, 1
  %sub.ptr.lhs.cast.i = ptrtoint ptr %30 to i64
  %sub.ptr.rhs.cast.i = ptrtoint ptr %29 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 24
  %cmp55 = icmp ult i64 %inc82, %sub.ptr.div.i
  br i1 %cmp55, label %for.cond58.preheader, label %for.cond.cleanup56, !llvm.loop !47

for.body64:                                       ; preds = %for.cond58.preheader, %for.cond58
  %31 = phi ptr [ %28, %for.cond58 ], [ %25, %for.cond58.preheader ]
  %j.0134 = phi i64 [ %inc79, %for.cond58 ], [ 0, %for.cond58.preheader ]
  %add.ptr.i107 = getelementptr inbounds ptr, ptr %31, i64 %j.0134
  %32 = load ptr, ptr %add.ptr.i107, align 8, !tbaa !5
  %33 = ptrtoint ptr %32 to i64
  %and.i.i = and i64 %33, 1
  %tobool.i.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i.not.i, label %cond.end.i, label %cond.false.i

cond.false.i:                                     ; preds = %for.body64
  tail call void @__assert_fail(ptr noundef nonnull @.str.4, ptr noundef nonnull @.str.1, i32 noundef 663, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E) #32
  unreachable

cond.end.i:                                       ; preds = %for.body64
  %uTruth.i = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %32, i64 0, i32 5
  %bf.load.i = load i32, ptr %uTruth.i, align 2
  %trunc.i = trunc i32 %bf.load.i to i16
  switch i16 %trunc.i, label %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit [
    i16 0, label %if.then.i108
    i16 255, label %if.then7.i
  ]

if.then.i108:                                     ; preds = %cond.end.i
  %call2.i = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #33
  store i8 1, ptr %call2.i, align 8, !tbaa !48
  %nLeaves.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call2.i, i64 0, i32 2
  %pNodes.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call2.i, i64 0, i32 7
  store ptr null, ptr %pNodes.i.i, align 8, !tbaa !29
  %eRoot2.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call2.i, i64 0, i32 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %nLeaves.i.i, i8 0, i64 16, i1 false) #28
  store i32 1, ptr %eRoot2.i.i, align 8
  br label %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit.thread

if.then7.i:                                       ; preds = %cond.end.i
  %call8.i = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #33
  store i8 0, ptr %call8.i, align 8, !tbaa !48
  %nLeaves3.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call8.i, i64 0, i32 2
  %call.i.i = tail call noalias dereferenceable_or_null(480) ptr @malloc(i64 noundef 480) #30
  %pNodes.i27.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call8.i, i64 0, i32 7
  store ptr %call.i.i, ptr %pNodes.i27.i, align 8, !tbaa !29
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %call.i.i, i8 0, i64 96, i1 false) #28
  %eRoot9.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call8.i, i64 0, i32 8
  store i32 7, ptr %eRoot9.i.i, align 8
  %id.i.1.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i.i, i64 1, i32 3
  store i32 1, ptr %id.i.1.i, align 8, !tbaa !49
  %id.i.2.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i.i, i64 2, i32 3
  store i32 2, ptr %id.i.2.i, align 8, !tbaa !49
  %id.i.3.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i.i, i64 3, i32 3
  store i32 3, ptr %id.i.3.i, align 8, !tbaa !49
  store <4 x i32> <i32 4, i32 4, i32 20, i32 4>, ptr %nLeaves3.i.i, align 4, !tbaa !35
  br label %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit.thread

_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit.thread: ; preds = %if.then.i108, %if.then7.i
  %.ph = phi i32 [ 4, %if.then7.i ], [ 0, %if.then.i108 ]
  %retval.0.i.ph = phi ptr [ %call8.i, %if.then7.i ], [ %call2.i, %if.then.i108 ]
  %pNext69147 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %32, i64 0, i32 9
  store ptr %retval.0.i.ph, ptr %pNext69147, align 8, !tbaa !28
  br label %cond.end.i110

_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit: ; preds = %cond.end.i
  %call12.i = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #33
  store i8 0, ptr %call12.i, align 8, !tbaa !48
  %nLeaves2.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call12.i, i64 0, i32 2
  %call.i32.i = tail call noalias dereferenceable_or_null(480) ptr @malloc(i64 noundef 480) #30
  %pNodes.i33.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call12.i, i64 0, i32 7
  store ptr %call.i32.i, ptr %pNodes.i33.i, align 8, !tbaa !29
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %call.i32.i, i8 0, i64 96, i1 false) #28
  %eRoot8.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call12.i, i64 0, i32 8
  store i32 0, ptr %eRoot8.i.i, align 8
  %id.i37.1.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i32.i, i64 1, i32 3
  store i32 1, ptr %id.i37.1.i, align 8, !tbaa !49
  %id.i37.2.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i32.i, i64 2, i32 3
  store i32 2, ptr %id.i37.2.i, align 8, !tbaa !49
  %id.i37.3.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i32.i, i64 3, i32 3
  store i32 3, ptr %id.i37.3.i, align 8, !tbaa !49
  store <4 x i32> <i32 4, i32 4, i32 20, i32 4>, ptr %nLeaves2.i.i, align 4, !tbaa !35
  %34 = load i32, ptr %nTravIds.i.i, align 4, !tbaa !15
  %inc.i41.i = add nsw i32 %34, 1
  store i32 %inc.i41.i, ptr %nTravIds.i.i, align 4, !tbaa !15
  %call15.i = tail call i32 @_ZN9algorithm19PreCompGraphManager14processNodeRecEPNS_11ForestNode_EPNS_8DecGraphE(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull %32, ptr noundef nonnull %call12.i)
  store i32 %call15.i, ptr %eRoot8.i.i, align 8, !tbaa.struct !51
  %.pre144 = load i32, ptr %nLeaves2.i.i, align 4, !tbaa !52
  %pNext69 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %32, i64 0, i32 9
  store ptr %call12.i, ptr %pNext69, align 8, !tbaa !28
  %cmp.i = icmp sgt i32 %.pre144, -1
  br i1 %cmp.i, label %cond.end.i110, label %cond.false.i109

cond.false.i109:                                  ; preds = %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit
  tail call void @__assert_fail(ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.1, i32 noundef 905, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv) #32
  unreachable

cond.end.i110:                                    ; preds = %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit.thread, %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit
  %retval.0.i151 = phi ptr [ %retval.0.i.ph, %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit.thread ], [ %call12.i, %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit ]
  %35 = phi i32 [ %.ph, %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit.thread ], [ %.pre144, %_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E.exit ]
  %bf.load71153 = load i32, ptr %uTruth.i, align 2
  %nLeaves.i154 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %retval.0.i151, i64 0, i32 2
  %nSize.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %retval.0.i151, i64 0, i32 3
  %36 = load i32, ptr %nSize.i, align 8, !tbaa !53
  %cmp3.not.i = icmp sgt i32 %35, %36
  br i1 %cmp3.not.i, label %cond.false5.i, label %cond.end6.i

cond.false5.i:                                    ; preds = %cond.end.i110
  tail call void @__assert_fail(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.1, i32 noundef 906, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv) #32
  unreachable

cond.end6.i:                                      ; preds = %cond.end.i110
  %cmp8.i = icmp ult i32 %35, 6
  br i1 %cmp8.i, label %cond.end11.i, label %cond.false10.i

cond.false10.i:                                   ; preds = %cond.end6.i
  tail call void @__assert_fail(ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.1, i32 noundef 907, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv) #32
  unreachable

cond.end11.i:                                     ; preds = %cond.end6.i
  %37 = load i8, ptr %retval.0.i151, align 8, !tbaa !48, !range !54
  %tobool.i.not.i111 = icmp eq i8 %37, 0
  %eRoot.i100.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %retval.0.i151, i64 0, i32 8
  %bf.load.i101.i = load i32, ptr %eRoot.i100.i, align 8
  br i1 %tobool.i.not.i111, label %if.end.i, label %if.then.i112

if.then.i112:                                     ; preds = %cond.end11.i
  %bf.clear.i.i = and i32 %bf.load.i101.i, 1
  %sext.i = add nsw i32 %bf.clear.i.i, -1
  br label %_ZN9algorithm8DecGraph11deriveTruthEv.exit

if.end.i:                                         ; preds = %cond.end11.i
  %bf.lshr.i.i = lshr i32 %bf.load.i101.i, 1
  %bf.clear.i102.i = and i32 %bf.lshr.i.i, 1073741823
  %cmp.i.i = icmp ult i32 %bf.clear.i102.i, %35
  br i1 %cmp.i.i, label %if.then14.i, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i
  %cmp27133.not.i = icmp eq i32 %35, 0
  br i1 %cmp27133.not.i, label %for.cond33.preheader.i, label %land.rhs.lr.ph.i

land.rhs.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %pNodes.i.i113 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %retval.0.i151, i64 0, i32 7
  br label %land.rhs.i

if.then14.i:                                      ; preds = %if.end.i
  %idxprom21126.i = zext i32 %bf.clear.i102.i to i64
  %arrayidx22.i = getelementptr inbounds [5 x i32], ptr @__const._ZN9algorithm8DecGraph11deriveTruthEv.uTruths, i64 0, i64 %idxprom21126.i
  %38 = load i32, ptr %arrayidx22.i, align 4, !tbaa !35
  %39 = and i32 %bf.load.i101.i, 1
  %sext145.i = sub nsw i32 0, %39
  %spec.select144.i = xor i32 %38, %sext145.i
  br label %_ZN9algorithm8DecGraph11deriveTruthEv.exit

for.cond33.preheader.loopexit.i:                  ; preds = %land.rhs.i
  %.pre.i = load i32, ptr %nSize.i, align 8, !tbaa !53
  br label %for.cond33.preheader.i

for.cond33.preheader.i:                           ; preds = %for.cond33.preheader.loopexit.i, %for.cond.preheader.i
  %40 = phi i32 [ %36, %for.cond.preheader.i ], [ %.pre.i, %for.cond33.preheader.loopexit.i ]
  %.lcssa.i = phi i32 [ 0, %for.cond.preheader.i ], [ %46, %for.cond33.preheader.loopexit.i ]
  %cmp35135.i = icmp slt i32 %.lcssa.i, %40
  br i1 %cmp35135.i, label %land.rhs36.lr.ph.i, label %for.cond.cleanup39.critedge.i

land.rhs36.lr.ph.i:                               ; preds = %for.cond33.preheader.i
  %pNodes.i114.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %retval.0.i151, i64 0, i32 7
  %41 = sext i32 %.lcssa.i to i64
  br label %land.rhs36.i

land.rhs.i:                                       ; preds = %land.rhs.i, %land.rhs.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %land.rhs.lr.ph.i ], [ %indvars.iv.next.i, %land.rhs.i ]
  %42 = load ptr, ptr %pNodes.i.i113, align 8, !tbaa !29
  %arrayidx30.i = getelementptr inbounds [5 x i32], ptr @__const._ZN9algorithm8DecGraph11deriveTruthEv.uTruths, i64 0, i64 %indvars.iv.i
  %43 = load i32, ptr %arrayidx30.i, align 4, !tbaa !35
  %conv.i = zext i32 %43 to i64
  %44 = inttoptr i64 %conv.i to ptr
  %45 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %42, i64 %indvars.iv.i, i32 2
  store ptr %44, ptr %45, align 8, !tbaa !42
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %46 = load i32, ptr %nLeaves.i154, align 4, !tbaa !52
  %47 = sext i32 %46 to i64
  %cmp27.i = icmp slt i64 %indvars.iv.next.i, %47
  br i1 %cmp27.i, label %land.rhs.i, label %for.cond33.preheader.loopexit.i, !llvm.loop !55

land.rhs36.i:                                     ; preds = %land.rhs36.i, %land.rhs36.lr.ph.i
  %indvars.iv140.i = phi i64 [ %41, %land.rhs36.lr.ph.i ], [ %indvars.iv.next141.i, %land.rhs36.i ]
  %48 = load ptr, ptr %pNodes.i114.i, align 8, !tbaa !29
  %add.ptr.i116.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %48, i64 %indvars.iv140.i
  %bf.load.i114 = load i32, ptr %add.ptr.i116.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i114, 1
  %bf.clear.i = and i32 %bf.lshr.i, 1073741823
  %idx.ext.i118128.i = zext i32 %bf.clear.i to i64
  %49 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %48, i64 %idx.ext.i118128.i, i32 2
  %50 = load ptr, ptr %49, align 8, !tbaa !42
  %51 = ptrtoint ptr %50 to i64
  %conv42.i = trunc i64 %51 to i32
  %eEdge1.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %48, i64 %indvars.iv140.i, i32 1
  %bf.load43.i = load i32, ptr %eEdge1.i, align 4
  %bf.lshr44.i = lshr i32 %bf.load43.i, 1
  %bf.clear45.i = and i32 %bf.lshr44.i, 1073741823
  %idx.ext.i121129.i = zext i32 %bf.clear45.i to i64
  %52 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %48, i64 %idx.ext.i121129.i, i32 2
  %53 = load ptr, ptr %52, align 8, !tbaa !42
  %54 = ptrtoint ptr %53 to i64
  %conv47.i = trunc i64 %54 to i32
  %55 = and i32 %bf.load.i114, 1
  %sext131.i = sub nsw i32 0, %55
  %spec.select.i = xor i32 %conv42.i, %sext131.i
  %56 = and i32 %bf.load43.i, 1
  %sext132.i = sub nsw i32 0, %56
  %spec.select99.i = xor i32 %conv47.i, %sext132.i
  %and.i = and i32 %spec.select99.i, %spec.select.i
  %conv66.i = zext i32 %and.i to i64
  %57 = inttoptr i64 %conv66.i to ptr
  %58 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %48, i64 %indvars.iv140.i, i32 2
  store ptr %57, ptr %58, align 8, !tbaa !42
  %indvars.iv.next141.i = add nsw i64 %indvars.iv140.i, 1
  %59 = load i32, ptr %nSize.i, align 8, !tbaa !53
  %60 = sext i32 %59 to i64
  %cmp35.i = icmp slt i64 %indvars.iv.next141.i, %60
  br i1 %cmp35.i, label %land.rhs36.i, label %for.cond.cleanup39.critedge.i, !llvm.loop !56

for.cond.cleanup39.critedge.i:                    ; preds = %land.rhs36.i, %for.cond33.preheader.i
  %uTruth.0.lcssa.i = phi i32 [ 0, %for.cond33.preheader.i ], [ %and.i, %land.rhs36.i ]
  %bf.load.i124.i = load i32, ptr %eRoot.i100.i, align 8
  %61 = and i32 %bf.load.i124.i, 1
  %sext130.i = sub nsw i32 0, %61
  %spec.select98.i = xor i32 %uTruth.0.lcssa.i, %sext130.i
  br label %_ZN9algorithm8DecGraph11deriveTruthEv.exit

_ZN9algorithm8DecGraph11deriveTruthEv.exit:       ; preds = %if.then.i112, %if.then14.i, %for.cond.cleanup39.critedge.i
  %retval.0.i115 = phi i32 [ %sext.i, %if.then.i112 ], [ %spec.select98.i, %for.cond.cleanup39.critedge.i ], [ %spec.select144.i, %if.then14.i ]
  %62 = xor i32 %retval.0.i115, %bf.load71153
  %63 = and i32 %62, 65535
  %cmp74 = icmp eq i32 %63, 0
  br i1 %cmp74, label %for.cond58, label %cond.false76

cond.false76:                                     ; preds = %_ZN9algorithm8DecGraph11deriveTruthEv.exit
  tail call void @__assert_fail(ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.1, i32 noundef 654, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager26processDecompositionGraphsEv) #32
  unreachable
}

declare noundef ptr @_ZN9algorithm10NPNManager6getMapEv(ptr noundef nonnull align 8 dereferenceable(64)) local_unnamed_addr #0

declare noundef ptr @_ZN9algorithm10NPNManager9getMapInvEv(ptr noundef nonnull align 8 dereferenceable(64)) local_unnamed_addr #0

; Function Attrs: noreturn nounwind
declare void @__assert_fail(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #16

; Function Attrs: uwtable
define dso_local noundef nonnull ptr @_ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %node) local_unnamed_addr #3 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = ptrtoint ptr %node to i64
  %and.i = and i64 %0, 1
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(ptr noundef nonnull @.str.4, ptr noundef nonnull @.str.1, i32 noundef 663, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm19PreCompGraphManager11processNodeEPNS_11ForestNode_E) #32
  unreachable

cond.end:                                         ; preds = %entry
  %uTruth = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node, i64 0, i32 5
  %bf.load = load i32, ptr %uTruth, align 2
  %trunc = trunc i32 %bf.load to i16
  switch i16 %trunc, label %if.end11 [
    i16 0, label %if.then
    i16 255, label %if.then7
  ]

if.then:                                          ; preds = %cond.end
  %call2 = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #33
  store i8 1, ptr %call2, align 8, !tbaa !48
  %nLeaves.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call2, i64 0, i32 2
  %pNodes.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call2, i64 0, i32 7
  store ptr null, ptr %pNodes.i, align 8, !tbaa !29
  %eRoot2.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call2, i64 0, i32 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %nLeaves.i, i8 0, i64 16, i1 false) #28
  store i32 1, ptr %eRoot2.i, align 8
  br label %cleanup

if.then7:                                         ; preds = %cond.end
  %call8 = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #33
  store i8 0, ptr %call8, align 8, !tbaa !48
  %nLeaves3.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call8, i64 0, i32 2
  %call.i = tail call noalias dereferenceable_or_null(480) ptr @malloc(i64 noundef 480) #30
  %pNodes.i27 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call8, i64 0, i32 7
  store ptr %call.i, ptr %pNodes.i27, align 8, !tbaa !29
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %call.i, i8 0, i64 96, i1 false) #28
  %eRoot9.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call8, i64 0, i32 8
  store i32 7, ptr %eRoot9.i, align 8
  %id.i.1 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i, i64 1, i32 3
  store i32 1, ptr %id.i.1, align 8, !tbaa !49
  %id.i.2 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i, i64 2, i32 3
  store i32 2, ptr %id.i.2, align 8, !tbaa !49
  %id.i.3 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i, i64 3, i32 3
  store i32 3, ptr %id.i.3, align 8, !tbaa !49
  store <4 x i32> <i32 4, i32 4, i32 20, i32 4>, ptr %nLeaves3.i, align 4, !tbaa !35
  br label %cleanup

if.end11:                                         ; preds = %cond.end
  %call12 = tail call noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #33
  store i8 0, ptr %call12, align 8, !tbaa !48
  %nLeaves2.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call12, i64 0, i32 2
  %call.i32 = tail call noalias dereferenceable_or_null(480) ptr @malloc(i64 noundef 480) #30
  %pNodes.i33 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call12, i64 0, i32 7
  store ptr %call.i32, ptr %pNodes.i33, align 8, !tbaa !29
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(96) %call.i32, i8 0, i64 96, i1 false) #28
  %eRoot8.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %call12, i64 0, i32 8
  store i32 0, ptr %eRoot8.i, align 8
  %id.i37.1 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i32, i64 1, i32 3
  store i32 1, ptr %id.i37.1, align 8, !tbaa !49
  %id.i37.2 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i32, i64 2, i32 3
  store i32 2, ptr %id.i37.2, align 8, !tbaa !49
  %id.i37.3 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call.i32, i64 3, i32 3
  store i32 3, ptr %id.i37.3, align 8, !tbaa !49
  store <4 x i32> <i32 4, i32 4, i32 20, i32 4>, ptr %nLeaves2.i, align 4, !tbaa !35
  %nTravIds.i = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  %1 = load i32, ptr %nTravIds.i, align 4, !tbaa !15
  %inc.i41 = add nsw i32 %1, 1
  store i32 %inc.i41, ptr %nTravIds.i, align 4, !tbaa !15
  %call15 = tail call i32 @_ZN9algorithm19PreCompGraphManager14processNodeRecEPNS_11ForestNode_EPNS_8DecGraphE(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull %node, ptr noundef nonnull %call12)
  store i32 %call15, ptr %eRoot8.i, align 8, !tbaa.struct !51
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.then7, %if.then
  %retval.0 = phi ptr [ %call2, %if.then ], [ %call8, %if.then7 ], [ %call12, %if.end11 ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph11deriveTruthEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #17 align 2 {
entry:
  %nLeaves = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  %0 = load i32, ptr %nLeaves, align 4, !tbaa !52
  %cmp = icmp sgt i32 %0, -1
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.1, i32 noundef 905, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv) #32
  unreachable

cond.end:                                         ; preds = %entry
  %nSize = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %1 = load i32, ptr %nSize, align 8, !tbaa !53
  %cmp3.not = icmp sgt i32 %0, %1
  br i1 %cmp3.not, label %cond.false5, label %cond.end6

cond.false5:                                      ; preds = %cond.end
  tail call void @__assert_fail(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.1, i32 noundef 906, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv) #32
  unreachable

cond.end6:                                        ; preds = %cond.end
  %cmp8 = icmp ult i32 %0, 6
  br i1 %cmp8, label %cond.end11, label %cond.false10

cond.false10:                                     ; preds = %cond.end6
  tail call void @__assert_fail(ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.1, i32 noundef 907, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph11deriveTruthEv) #32
  unreachable

cond.end11:                                       ; preds = %cond.end6
  %2 = load i8, ptr %this, align 8, !tbaa !48, !range !54
  %tobool.i.not = icmp eq i8 %2, 0
  %eRoot.i100 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load.i101 = load i32, ptr %eRoot.i100, align 8
  br i1 %tobool.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end11
  %bf.clear.i = and i32 %bf.load.i101, 1
  %sext = add nsw i32 %bf.clear.i, -1
  br label %cleanup

if.end:                                           ; preds = %cond.end11
  %bf.lshr.i = lshr i32 %bf.load.i101, 1
  %bf.clear.i102 = and i32 %bf.lshr.i, 1073741823
  %cmp.i = icmp ult i32 %bf.clear.i102, %0
  br i1 %cmp.i, label %if.then14, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %cmp27133.not = icmp eq i32 %0, 0
  br i1 %cmp27133.not, label %for.cond33.preheader, label %land.rhs.lr.ph

land.rhs.lr.ph:                                   ; preds = %for.cond.preheader
  %pNodes.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  br label %land.rhs

if.then14:                                        ; preds = %if.end
  %idxprom21126 = zext i32 %bf.clear.i102 to i64
  %arrayidx22 = getelementptr inbounds [5 x i32], ptr @__const._ZN9algorithm8DecGraph11deriveTruthEv.uTruths, i64 0, i64 %idxprom21126
  %3 = load i32, ptr %arrayidx22, align 4, !tbaa !35
  %4 = and i32 %bf.load.i101, 1
  %sext145 = sub nsw i32 0, %4
  %spec.select144 = xor i32 %3, %sext145
  br label %cleanup

for.cond33.preheader.loopexit:                    ; preds = %land.rhs
  %.pre = load i32, ptr %nSize, align 8, !tbaa !53
  br label %for.cond33.preheader

for.cond33.preheader:                             ; preds = %for.cond33.preheader.loopexit, %for.cond.preheader
  %5 = phi i32 [ %1, %for.cond.preheader ], [ %.pre, %for.cond33.preheader.loopexit ]
  %.lcssa = phi i32 [ 0, %for.cond.preheader ], [ %11, %for.cond33.preheader.loopexit ]
  %cmp35135 = icmp slt i32 %.lcssa, %5
  br i1 %cmp35135, label %land.rhs36.lr.ph, label %for.cond.cleanup39.critedge

land.rhs36.lr.ph:                                 ; preds = %for.cond33.preheader
  %pNodes.i114 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %6 = sext i32 %.lcssa to i64
  br label %land.rhs36

land.rhs:                                         ; preds = %land.rhs.lr.ph, %land.rhs
  %indvars.iv = phi i64 [ 0, %land.rhs.lr.ph ], [ %indvars.iv.next, %land.rhs ]
  %7 = load ptr, ptr %pNodes.i, align 8, !tbaa !29
  %arrayidx30 = getelementptr inbounds [5 x i32], ptr @__const._ZN9algorithm8DecGraph11deriveTruthEv.uTruths, i64 0, i64 %indvars.iv
  %8 = load i32, ptr %arrayidx30, align 4, !tbaa !35
  %conv = zext i32 %8 to i64
  %9 = inttoptr i64 %conv to ptr
  %10 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %7, i64 %indvars.iv, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !42
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %11 = load i32, ptr %nLeaves, align 4, !tbaa !52
  %12 = sext i32 %11 to i64
  %cmp27 = icmp slt i64 %indvars.iv.next, %12
  br i1 %cmp27, label %land.rhs, label %for.cond33.preheader.loopexit, !llvm.loop !55

land.rhs36:                                       ; preds = %land.rhs36.lr.ph, %land.rhs36
  %indvars.iv140 = phi i64 [ %6, %land.rhs36.lr.ph ], [ %indvars.iv.next141, %land.rhs36 ]
  %13 = load ptr, ptr %pNodes.i114, align 8, !tbaa !29
  %add.ptr.i116 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %13, i64 %indvars.iv140
  %bf.load = load i32, ptr %add.ptr.i116, align 8
  %bf.lshr = lshr i32 %bf.load, 1
  %bf.clear = and i32 %bf.lshr, 1073741823
  %idx.ext.i118128 = zext i32 %bf.clear to i64
  %14 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %13, i64 %idx.ext.i118128, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !42
  %16 = ptrtoint ptr %15 to i64
  %conv42 = trunc i64 %16 to i32
  %eEdge1 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %13, i64 %indvars.iv140, i32 1
  %bf.load43 = load i32, ptr %eEdge1, align 4
  %bf.lshr44 = lshr i32 %bf.load43, 1
  %bf.clear45 = and i32 %bf.lshr44, 1073741823
  %idx.ext.i121129 = zext i32 %bf.clear45 to i64
  %17 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %13, i64 %idx.ext.i121129, i32 2
  %18 = load ptr, ptr %17, align 8, !tbaa !42
  %19 = ptrtoint ptr %18 to i64
  %conv47 = trunc i64 %19 to i32
  %20 = and i32 %bf.load, 1
  %sext131 = sub nsw i32 0, %20
  %spec.select = xor i32 %conv42, %sext131
  %21 = and i32 %bf.load43, 1
  %sext132 = sub nsw i32 0, %21
  %spec.select99 = xor i32 %conv47, %sext132
  %and = and i32 %spec.select99, %spec.select
  %conv66 = zext i32 %and to i64
  %22 = inttoptr i64 %conv66 to ptr
  %23 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %13, i64 %indvars.iv140, i32 2
  store ptr %22, ptr %23, align 8, !tbaa !42
  %indvars.iv.next141 = add nsw i64 %indvars.iv140, 1
  %24 = load i32, ptr %nSize, align 8, !tbaa !53
  %25 = sext i32 %24 to i64
  %cmp35 = icmp slt i64 %indvars.iv.next141, %25
  br i1 %cmp35, label %land.rhs36, label %for.cond.cleanup39.critedge, !llvm.loop !56

for.cond.cleanup39.critedge:                      ; preds = %land.rhs36, %for.cond33.preheader
  %uTruth.0.lcssa = phi i32 [ 0, %for.cond33.preheader ], [ %and, %land.rhs36 ]
  %bf.load.i124 = load i32, ptr %eRoot.i100, align 8
  %26 = and i32 %bf.load.i124, 1
  %sext130 = sub nsw i32 0, %26
  %spec.select98 = xor i32 %uTruth.0.lcssa, %sext130
  br label %cleanup

cleanup:                                          ; preds = %if.then14, %for.cond.cleanup39.critedge, %if.then
  %retval.0 = phi i32 [ %sext, %if.then ], [ %spec.select98, %for.cond.cleanup39.critedge ], [ %spec.select144, %if.then14 ]
  ret i32 %retval.0
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nounwind uwtable
define dso_local i32 @_ZN9algorithm19PreCompGraphManager14processNodeRecEPNS_11ForestNode_EPNS_8DecGraphE(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr nocapture noundef %node, ptr noundef %decGraph) local_unnamed_addr #17 align 2 {
entry:
  %fUsed = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node, i64 0, i32 5
  %bf.load = load i32, ptr %fUsed, align 2
  %0 = and i32 %bf.load, 1073741824
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32, ptr %node, align 8, !tbaa !21
  %sub = shl i32 %1, 1
  %bf.value3.i = add i32 %sub, 2147483646
  %bf.shl.i = and i32 %bf.value3.i, 2147483646
  br label %cleanup

if.end:                                           ; preds = %entry
  %TravId = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node, i64 0, i32 1
  %2 = load i32, ptr %TravId, align 4, !tbaa !24
  %nTravIds = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 5
  %3 = load i32, ptr %nTravIds, align 4, !tbaa !15
  %cmp = icmp eq i32 %2, %3
  br i1 %cmp, label %if.then2, label %if.end8

if.then2:                                         ; preds = %if.end
  %bf.lshr4 = lshr i32 %bf.load, 16
  %bf.clear5 = and i32 %bf.lshr4, 255
  br label %cleanup

if.end8:                                          ; preds = %if.end
  store i32 %3, ptr %TravId, align 4, !tbaa !24
  %p0 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node, i64 0, i32 7
  %4 = load ptr, ptr %p0, align 8, !tbaa !36
  %5 = ptrtoint ptr %4 to i64
  %and.i = and i64 %5, -2
  %6 = inttoptr i64 %and.i to ptr
  %call12 = tail call i32 @_ZN9algorithm19PreCompGraphManager14processNodeRecEPNS_11ForestNode_EPNS_8DecGraphE(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %6, ptr noundef %decGraph)
  %7 = load ptr, ptr %p0, align 8, !tbaa !36
  %8 = ptrtoint ptr %7 to i64
  %9 = trunc i64 %8 to i32
  %10 = and i32 %9, 1
  %spec.select = xor i32 %10, %call12
  %p1 = getelementptr inbounds %"struct.algorithm::ForestNode_", ptr %node, i64 0, i32 8
  %11 = load ptr, ptr %p1, align 8, !tbaa !37
  %12 = ptrtoint ptr %11 to i64
  %and.i93 = and i64 %12, -2
  %13 = inttoptr i64 %and.i93 to ptr
  %call25 = tail call i32 @_ZN9algorithm19PreCompGraphManager14processNodeRecEPNS_11ForestNode_EPNS_8DecGraphE(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %13, ptr noundef %decGraph)
  %14 = load ptr, ptr %p1, align 8, !tbaa !37
  %15 = ptrtoint ptr %14 to i64
  %16 = trunc i64 %15 to i32
  %17 = and i32 %16, 1
  %spec.select91 = xor i32 %17, %call25
  %bf.load40 = load i32, ptr %fUsed, align 2
  %tobool42.not = icmp sgt i32 %bf.load40, -1
  br i1 %tobool42.not, label %if.else, label %if.then43

if.then43:                                        ; preds = %if.end8
  %call48 = tail call i32 @_ZN9algorithm8DecGraph10addXorNodeENS_8DecEdge_ES1_i(ptr noundef nonnull align 8 dereferenceable(36) %decGraph, i32 %spec.select, i32 %spec.select91, i32 noundef 0)
  br label %if.end57

if.else:                                          ; preds = %if.end8
  %nSize.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %decGraph, i64 0, i32 3
  %18 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  %nCap.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %decGraph, i64 0, i32 4
  %19 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %cmp.i.i = icmp eq i32 %18, %19
  %pNodes.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %decGraph, i64 0, i32 7
  %20 = load ptr, ptr %pNodes.i.i, align 8, !tbaa !29
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit

if.then.i.i:                                      ; preds = %if.else
  %mul.i.i = shl nsw i32 %18, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %call.i.i = tail call ptr @realloc(ptr noundef %20, i64 noundef %conv.i.i) #34
  store ptr %call.i.i, ptr %pNodes.i.i, align 8, !tbaa !29
  %21 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %mul5.i.i = shl nsw i32 %21, 1
  store i32 %mul5.i.i, ptr %nCap.i.i, align 4, !tbaa !57
  %.pre10.i.i = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit

_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit: ; preds = %if.else, %if.then.i.i
  %22 = phi i32 [ %.pre10.i.i, %if.then.i.i ], [ %18, %if.else ]
  %23 = phi ptr [ %call.i.i, %if.then.i.i ], [ %20, %if.else ]
  %inc.i.i = add nsw i32 %22, 1
  store i32 %inc.i.i, ptr %nSize.i.i, align 8, !tbaa !53
  %idx.ext.i.i = sext i32 %22 to i64
  %add.ptr.i.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %23, i64 %idx.ext.i.i
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i, i8 0, i64 24, i1 false) #28
  %idCounter.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %decGraph, i64 0, i32 5
  %24 = load i32, ptr %idCounter.i, align 8, !tbaa !58
  %inc.i = add nsw i32 %24, 1
  store i32 %inc.i, ptr %idCounter.i, align 8, !tbaa !58
  %id.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %23, i64 %idx.ext.i.i, i32 3
  store i32 %24, ptr %id.i, align 8, !tbaa !49
  store i32 %spec.select, ptr %add.ptr.i.i, align 8, !tbaa.struct !51
  %eEdge14.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %23, i64 %idx.ext.i.i, i32 1
  store i32 %spec.select91, ptr %eEdge14.i, align 4, !tbaa.struct !51
  %fCompl0.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %23, i64 %idx.ext.i.i, i32 4
  %bf.load5.i = load i32, ptr %fCompl0.i, align 4
  %bf.clear.i = shl i32 %spec.select, 15
  %bf.shl.i96 = and i32 %bf.clear.i, 32768
  %bf.clear6.i = and i32 %bf.load5.i, -98305
  %bf.clear8.i = shl i32 %spec.select91, 16
  %bf.shl11.i = and i32 %bf.clear8.i, 65536
  %bf.set.i = or i32 %bf.shl11.i, %bf.shl.i96
  %bf.set13.i = or i32 %bf.set.i, %bf.clear6.i
  store i32 %bf.set13.i, ptr %fCompl0.i, align 4
  %25 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  %sub.i = shl i32 %25, 1
  %bf.value3.i.i = add i32 %sub.i, 2147483646
  %bf.shl.i.i = and i32 %bf.value3.i.i, 2147483646
  br label %if.end57

if.end57:                                         ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit, %if.then43
  %eNode.sroa.0.0 = phi i32 [ %call48, %if.then43 ], [ %bf.shl.i.i, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit ]
  %bf.load62 = load i32, ptr %fUsed, align 2
  %bf.value63 = shl i32 %eNode.sroa.0.0, 16
  %bf.shl = and i32 %bf.value63, 16711680
  %bf.clear64 = and i32 %bf.load62, -16711681
  %bf.set65 = or i32 %bf.clear64, %bf.shl
  store i32 %bf.set65, ptr %fUsed, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.end57, %if.then2, %if.then
  %retval.sroa.0.0 = phi i32 [ %bf.shl.i, %if.then ], [ %bf.clear5, %if.then2 ], [ %eNode.sroa.0.0, %if.end57 ]
  ret i32 %retval.sroa.0.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable
define dso_local void @_ZN9algorithm8DecGraph11setRootEdgeENS_8DecEdge_E(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(36) %this, i32 %eRoot.coerce) local_unnamed_addr #19 align 2 {
entry:
  %eRoot2 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  store i32 %eRoot.coerce, ptr %eRoot2, align 8, !tbaa.struct !51
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local i32 @_ZN9algorithm8DecGraph10createEdgeEjj(ptr nocapture nonnull readnone align 8 %this, i32 noundef %Node, i32 noundef %fCompl) local_unnamed_addr #13 align 2 {
entry:
  %bf.value = and i32 %fCompl, 1
  %bf.value3 = shl i32 %Node, 1
  %bf.shl = and i32 %bf.value3, 2147483646
  %bf.set5 = or i32 %bf.value, %bf.shl
  ret i32 %bf.set5
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local i32 @_ZN9algorithm8DecGraph9intToEdgeEj(ptr nocapture nonnull readnone align 8 %this, i32 noundef %Edge) local_unnamed_addr #13 align 2 {
entry:
  %bf.set5.i = and i32 %Edge, 2147483647
  ret i32 %bf.set5.i
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local i32 @_ZN9algorithm8DecGraph10addXorNodeENS_8DecEdge_ES1_i(ptr noundef nonnull align 8 dereferenceable(36) %this, i32 %eEdge0.coerce, i32 %eEdge1.coerce, i32 noundef %Type) local_unnamed_addr #20 align 2 {
entry:
  %cmp = icmp eq i32 %Type, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %bf.set = xor i32 %eEdge0.coerce, 1
  %nSize.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %0 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  %nCap.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  %1 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %cmp.i.i = icmp eq i32 %0, %1
  %pNodes.i.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %2 = load ptr, ptr %pNodes.i.i, align 8, !tbaa !29
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit

if.then.i.i:                                      ; preds = %if.then
  %mul.i.i = shl nsw i32 %0, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %call.i.i = tail call ptr @realloc(ptr noundef %2, i64 noundef %conv.i.i) #34
  store ptr %call.i.i, ptr %pNodes.i.i, align 8, !tbaa !29
  %3 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %mul5.i.i = shl nsw i32 %3, 1
  store i32 %mul5.i.i, ptr %nCap.i.i, align 4, !tbaa !57
  %.pre10.i.i = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit

_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit: ; preds = %if.then, %if.then.i.i
  %4 = phi i32 [ %.pre10.i.i, %if.then.i.i ], [ %0, %if.then ]
  %5 = phi ptr [ %call.i.i, %if.then.i.i ], [ %2, %if.then ]
  %inc.i.i = add nsw i32 %4, 1
  store i32 %inc.i.i, ptr %nSize.i.i, align 8, !tbaa !53
  %idx.ext.i.i = sext i32 %4 to i64
  %add.ptr.i.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i.i
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i, i8 0, i64 24, i1 false) #28
  %idCounter.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 5
  %6 = load i32, ptr %idCounter.i, align 8, !tbaa !58
  %inc.i = add nsw i32 %6, 1
  store i32 %inc.i, ptr %idCounter.i, align 8, !tbaa !58
  %id.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i.i, i32 3
  store i32 %6, ptr %id.i, align 8, !tbaa !49
  store i32 %bf.set, ptr %add.ptr.i.i, align 8, !tbaa.struct !51
  %eEdge14.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i.i, i32 1
  store i32 %eEdge1.coerce, ptr %eEdge14.i, align 4, !tbaa.struct !51
  %fCompl0.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i.i, i32 4
  %bf.load5.i = load i32, ptr %fCompl0.i, align 4
  %bf.clear.i = shl i32 %bf.set, 15
  %bf.shl.i = and i32 %bf.clear.i, 32768
  %bf.clear6.i = and i32 %bf.load5.i, -98305
  %bf.clear8.i = shl i32 %eEdge1.coerce, 16
  %bf.shl11.i = and i32 %bf.clear8.i, 65536
  %bf.set.i = or i32 %bf.shl11.i, %bf.shl.i
  %bf.set13.i = or i32 %bf.set.i, %bf.clear6.i
  store i32 %bf.set13.i, ptr %fCompl0.i, align 4
  %7 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  %sub.i = shl i32 %7, 1
  %bf.value3.i.i = add i32 %sub.i, 2147483646
  %bf.shl.i.i = and i32 %bf.value3.i.i, 2147483646
  %bf.set22 = xor i32 %eEdge1.coerce, 1
  %8 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %cmp.i.i102 = icmp eq i32 %7, %8
  %9 = load ptr, ptr %pNodes.i.i, align 8, !tbaa !29
  br i1 %cmp.i.i102, label %if.then.i.i109, label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129

if.then.i.i109:                                   ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit
  %conv.i.i105 = sext i32 %sub.i to i64
  %call.i.i106 = tail call ptr @realloc(ptr noundef %9, i64 noundef %conv.i.i105) #34
  store ptr %call.i.i106, ptr %pNodes.i.i, align 8, !tbaa !29
  %10 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %mul5.i.i107 = shl nsw i32 %10, 1
  store i32 %mul5.i.i107, ptr %nCap.i.i, align 4, !tbaa !57
  %.pre10.i.i108 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129

_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129: ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit, %if.then.i.i109
  %11 = phi i32 [ %.pre10.i.i108, %if.then.i.i109 ], [ %7, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit ]
  %12 = phi ptr [ %call.i.i106, %if.then.i.i109 ], [ %9, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit ]
  %inc.i.i110 = add nsw i32 %11, 1
  store i32 %inc.i.i110, ptr %nSize.i.i, align 8, !tbaa !53
  %idx.ext.i.i111 = sext i32 %11 to i64
  %add.ptr.i.i112 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %12, i64 %idx.ext.i.i111
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i112, i8 0, i64 24, i1 false) #28
  %13 = load i32, ptr %idCounter.i, align 8, !tbaa !58
  %inc.i114 = add nsw i32 %13, 1
  store i32 %inc.i114, ptr %idCounter.i, align 8, !tbaa !58
  %id.i115 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %12, i64 %idx.ext.i.i111, i32 3
  store i32 %13, ptr %id.i115, align 8, !tbaa !49
  store i32 %eEdge0.coerce, ptr %add.ptr.i.i112, align 8, !tbaa.struct !51
  %eEdge14.i116 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %12, i64 %idx.ext.i.i111, i32 1
  store i32 %bf.set22, ptr %eEdge14.i116, align 4, !tbaa.struct !51
  %fCompl0.i117 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %12, i64 %idx.ext.i.i111, i32 4
  %bf.load5.i118 = load i32, ptr %fCompl0.i117, align 4
  %bf.clear.i119 = shl i32 %eEdge0.coerce, 15
  %bf.shl.i120 = and i32 %bf.clear.i119, 32768
  %bf.clear6.i121 = and i32 %bf.load5.i118, -98305
  %bf.clear8.i122 = shl i32 %bf.set22, 16
  %bf.shl11.i123 = and i32 %bf.clear8.i122, 65536
  %bf.set.i124 = or i32 %bf.shl11.i123, %bf.shl.i120
  %bf.set13.i125 = or i32 %bf.set.i124, %bf.clear6.i121
  store i32 %bf.set13.i125, ptr %fCompl0.i117, align 4
  %14 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  %sub.i126 = shl i32 %14, 1
  %bf.value3.i.i127 = add i32 %sub.i126, 2147483646
  %bf.shl.i.i128 = and i32 %bf.value3.i.i127, 2147483646
  %15 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %cmp.i.i132 = icmp eq i32 %14, %15
  %16 = load ptr, ptr %pNodes.i.i, align 8, !tbaa !29
  br i1 %cmp.i.i132, label %if.then.i.i139, label %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit

if.then.i.i139:                                   ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129
  %conv.i.i135 = sext i32 %sub.i126 to i64
  %call.i.i136 = tail call ptr @realloc(ptr noundef %16, i64 noundef %conv.i.i135) #34
  store ptr %call.i.i136, ptr %pNodes.i.i, align 8, !tbaa !29
  %17 = load i32, ptr %nCap.i.i, align 4, !tbaa !57
  %mul5.i.i137 = shl nsw i32 %17, 1
  store i32 %mul5.i.i137, ptr %nCap.i.i, align 4, !tbaa !57
  %.pre10.i.i138 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit

_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit: ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129, %if.then.i.i139
  %18 = phi i32 [ %.pre10.i.i138, %if.then.i.i139 ], [ %14, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129 ]
  %19 = phi ptr [ %call.i.i136, %if.then.i.i139 ], [ %16, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit129 ]
  %inc.i.i140 = add nsw i32 %18, 1
  store i32 %inc.i.i140, ptr %nSize.i.i, align 8, !tbaa !53
  %idx.ext.i.i141 = sext i32 %18 to i64
  %add.ptr.i.i142 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %19, i64 %idx.ext.i.i141
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i142, i8 0, i64 24, i1 false) #28
  %20 = load i32, ptr %idCounter.i, align 8, !tbaa !58
  %inc.i144 = add nsw i32 %20, 1
  store i32 %inc.i144, ptr %idCounter.i, align 8, !tbaa !58
  %id.i145 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %19, i64 %idx.ext.i.i141, i32 3
  store i32 %20, ptr %id.i145, align 8, !tbaa !49
  %eEdge14.i146 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %19, i64 %idx.ext.i.i141, i32 1
  %fCompl0.i147 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %19, i64 %idx.ext.i.i141, i32 4
  %bf.load5.i148 = load i32, ptr %fCompl0.i147, align 4
  %bf.clear6.i151 = and i32 %bf.load5.i148, -114689
  %bf.set16.i = or i32 %bf.clear6.i151, 16384
  store i32 %bf.set16.i, ptr %fCompl0.i147, align 4
  %bf.set24.i255 = or i32 %bf.shl.i.i, 1
  store i32 %bf.set24.i255, ptr %add.ptr.i.i142, align 8
  %bf.set35.i256 = or i32 %bf.shl.i.i128, 1
  store i32 %bf.set35.i256, ptr %eEdge14.i146, align 4
  %21 = load i32, ptr %nSize.i.i, align 8, !tbaa !53
  %sub.i156 = shl i32 %21, 1
  %bf.value3.i.i157 = add i32 %sub.i156, 2147483646
  %bf.shl.i.i158 = and i32 %bf.value3.i.i157, 2147483646
  %bf.set5.i.i = or i32 %bf.shl.i.i158, 1
  br label %if.end

if.else:                                          ; preds = %entry
  %nSize.i.i159 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %22 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  %nCap.i.i160 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  %23 = load i32, ptr %nCap.i.i160, align 4, !tbaa !57
  %cmp.i.i161 = icmp eq i32 %22, %23
  %pNodes.i.i162 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %24 = load ptr, ptr %pNodes.i.i162, align 8, !tbaa !29
  br i1 %cmp.i.i161, label %if.then.i.i168, label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188

if.then.i.i168:                                   ; preds = %if.else
  %mul.i.i163 = shl nsw i32 %22, 1
  %conv.i.i164 = sext i32 %mul.i.i163 to i64
  %call.i.i165 = tail call ptr @realloc(ptr noundef %24, i64 noundef %conv.i.i164) #34
  store ptr %call.i.i165, ptr %pNodes.i.i162, align 8, !tbaa !29
  %25 = load i32, ptr %nCap.i.i160, align 4, !tbaa !57
  %mul5.i.i166 = shl nsw i32 %25, 1
  store i32 %mul5.i.i166, ptr %nCap.i.i160, align 4, !tbaa !57
  %.pre10.i.i167 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188

_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188: ; preds = %if.else, %if.then.i.i168
  %26 = phi i32 [ %.pre10.i.i167, %if.then.i.i168 ], [ %22, %if.else ]
  %27 = phi ptr [ %call.i.i165, %if.then.i.i168 ], [ %24, %if.else ]
  %inc.i.i169 = add nsw i32 %26, 1
  store i32 %inc.i.i169, ptr %nSize.i.i159, align 8, !tbaa !53
  %idx.ext.i.i170 = sext i32 %26 to i64
  %add.ptr.i.i171 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %27, i64 %idx.ext.i.i170
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i171, i8 0, i64 24, i1 false) #28
  %idCounter.i172 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 5
  %28 = load i32, ptr %idCounter.i172, align 8, !tbaa !58
  %inc.i173 = add nsw i32 %28, 1
  store i32 %inc.i173, ptr %idCounter.i172, align 8, !tbaa !58
  %id.i174 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %27, i64 %idx.ext.i.i170, i32 3
  store i32 %28, ptr %id.i174, align 8, !tbaa !49
  store i32 %eEdge0.coerce, ptr %add.ptr.i.i171, align 8, !tbaa.struct !51
  %eEdge14.i175 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %27, i64 %idx.ext.i.i170, i32 1
  store i32 %eEdge1.coerce, ptr %eEdge14.i175, align 4, !tbaa.struct !51
  %fCompl0.i176 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %27, i64 %idx.ext.i.i170, i32 4
  %bf.load5.i177 = load i32, ptr %fCompl0.i176, align 4
  %bf.clear.i178 = shl i32 %eEdge0.coerce, 15
  %bf.shl.i179 = and i32 %bf.clear.i178, 32768
  %bf.clear6.i180 = and i32 %bf.load5.i177, -98305
  %bf.clear8.i181 = shl i32 %eEdge1.coerce, 16
  %bf.shl11.i182 = and i32 %bf.clear8.i181, 65536
  %bf.set.i183 = or i32 %bf.shl11.i182, %bf.shl.i179
  %bf.set13.i184 = or i32 %bf.set.i183, %bf.clear6.i180
  store i32 %bf.set13.i184, ptr %fCompl0.i176, align 4
  %29 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  %sub.i185 = shl i32 %29, 1
  %bf.value3.i.i186 = add i32 %sub.i185, 2147483646
  %bf.shl.i.i187 = and i32 %bf.value3.i.i186, 2147483646
  %bf.set50 = xor i32 %eEdge0.coerce, 1
  %bf.set57 = xor i32 %eEdge1.coerce, 1
  %30 = load i32, ptr %nCap.i.i160, align 4, !tbaa !57
  %cmp.i.i191 = icmp eq i32 %29, %30
  %31 = load ptr, ptr %pNodes.i.i162, align 8, !tbaa !29
  br i1 %cmp.i.i191, label %if.then.i.i198, label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218

if.then.i.i198:                                   ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188
  %conv.i.i194 = sext i32 %sub.i185 to i64
  %call.i.i195 = tail call ptr @realloc(ptr noundef %31, i64 noundef %conv.i.i194) #34
  store ptr %call.i.i195, ptr %pNodes.i.i162, align 8, !tbaa !29
  %32 = load i32, ptr %nCap.i.i160, align 4, !tbaa !57
  %mul5.i.i196 = shl nsw i32 %32, 1
  store i32 %mul5.i.i196, ptr %nCap.i.i160, align 4, !tbaa !57
  %.pre10.i.i197 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218

_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218: ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188, %if.then.i.i198
  %33 = phi i32 [ %.pre10.i.i197, %if.then.i.i198 ], [ %29, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188 ]
  %34 = phi ptr [ %call.i.i195, %if.then.i.i198 ], [ %31, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit188 ]
  %inc.i.i199 = add nsw i32 %33, 1
  store i32 %inc.i.i199, ptr %nSize.i.i159, align 8, !tbaa !53
  %idx.ext.i.i200 = sext i32 %33 to i64
  %add.ptr.i.i201 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %34, i64 %idx.ext.i.i200
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i201, i8 0, i64 24, i1 false) #28
  %35 = load i32, ptr %idCounter.i172, align 8, !tbaa !58
  %inc.i203 = add nsw i32 %35, 1
  store i32 %inc.i203, ptr %idCounter.i172, align 8, !tbaa !58
  %id.i204 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %34, i64 %idx.ext.i.i200, i32 3
  store i32 %35, ptr %id.i204, align 8, !tbaa !49
  store i32 %bf.set50, ptr %add.ptr.i.i201, align 8, !tbaa.struct !51
  %eEdge14.i205 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %34, i64 %idx.ext.i.i200, i32 1
  store i32 %bf.set57, ptr %eEdge14.i205, align 4, !tbaa.struct !51
  %fCompl0.i206 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %34, i64 %idx.ext.i.i200, i32 4
  %bf.load5.i207 = load i32, ptr %fCompl0.i206, align 4
  %bf.clear.i208 = shl i32 %bf.set50, 15
  %bf.shl.i209 = and i32 %bf.clear.i208, 32768
  %bf.clear6.i210 = and i32 %bf.load5.i207, -98305
  %bf.clear8.i211 = shl i32 %bf.set57, 16
  %bf.shl11.i212 = and i32 %bf.clear8.i211, 65536
  %bf.set.i213 = or i32 %bf.shl11.i212, %bf.shl.i209
  %bf.set13.i214 = or i32 %bf.set.i213, %bf.clear6.i210
  store i32 %bf.set13.i214, ptr %fCompl0.i206, align 4
  %36 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  %sub.i215 = shl i32 %36, 1
  %bf.value3.i.i216 = add i32 %sub.i215, 2147483646
  %bf.shl.i.i217 = and i32 %bf.value3.i.i216, 2147483646
  %37 = load i32, ptr %nCap.i.i160, align 4, !tbaa !57
  %cmp.i.i221 = icmp eq i32 %36, %37
  %38 = load ptr, ptr %pNodes.i.i162, align 8, !tbaa !29
  br i1 %cmp.i.i221, label %if.then.i.i228, label %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit252

if.then.i.i228:                                   ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218
  %conv.i.i224 = sext i32 %sub.i215 to i64
  %call.i.i225 = tail call ptr @realloc(ptr noundef %38, i64 noundef %conv.i.i224) #34
  store ptr %call.i.i225, ptr %pNodes.i.i162, align 8, !tbaa !29
  %39 = load i32, ptr %nCap.i.i160, align 4, !tbaa !57
  %mul5.i.i226 = shl nsw i32 %39, 1
  store i32 %mul5.i.i226, ptr %nCap.i.i160, align 4, !tbaa !57
  %.pre10.i.i227 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit252

_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit252: ; preds = %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218, %if.then.i.i228
  %40 = phi i32 [ %.pre10.i.i227, %if.then.i.i228 ], [ %36, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218 ]
  %41 = phi ptr [ %call.i.i225, %if.then.i.i228 ], [ %38, %_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_.exit218 ]
  %inc.i.i229 = add nsw i32 %40, 1
  store i32 %inc.i.i229, ptr %nSize.i.i159, align 8, !tbaa !53
  %idx.ext.i.i230 = sext i32 %40 to i64
  %add.ptr.i.i231 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %41, i64 %idx.ext.i.i230
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i.i231, i8 0, i64 24, i1 false) #28
  %42 = load i32, ptr %idCounter.i172, align 8, !tbaa !58
  %inc.i233 = add nsw i32 %42, 1
  store i32 %inc.i233, ptr %idCounter.i172, align 8, !tbaa !58
  %id.i234 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %41, i64 %idx.ext.i.i230, i32 3
  store i32 %42, ptr %id.i234, align 8, !tbaa !49
  %eEdge14.i235 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %41, i64 %idx.ext.i.i230, i32 1
  %fCompl0.i236 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %41, i64 %idx.ext.i.i230, i32 4
  %bf.load5.i237 = load i32, ptr %fCompl0.i236, align 4
  %bf.clear6.i240 = and i32 %bf.load5.i237, -114689
  %bf.set16.i245 = or i32 %bf.clear6.i240, 16384
  store i32 %bf.set16.i245, ptr %fCompl0.i236, align 4
  %bf.set24.i246253 = or i32 %bf.shl.i.i187, 1
  store i32 %bf.set24.i246253, ptr %add.ptr.i.i231, align 8
  %bf.set35.i247254 = or i32 %bf.shl.i.i217, 1
  store i32 %bf.set35.i247254, ptr %eEdge14.i235, align 4
  %43 = load i32, ptr %nSize.i.i159, align 8, !tbaa !53
  %sub.i248 = shl i32 %43, 1
  %bf.value3.i.i249 = add i32 %sub.i248, 2147483646
  %bf.shl.i.i250 = and i32 %bf.value3.i.i249, 2147483646
  br label %if.end

if.end:                                           ; preds = %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit252, %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit
  %retval.sroa.0.0 = phi i32 [ %bf.set5.i.i, %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit ], [ %bf.shl.i.i250, %_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_.exit252 ]
  ret i32 %retval.sroa.0.0
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local i32 @_ZN9algorithm8DecGraph10addAndNodeENS_8DecEdge_ES1_(ptr nocapture noundef nonnull align 8 dereferenceable(36) %this, i32 %eEdge0.coerce, i32 %eEdge1.coerce) local_unnamed_addr #20 align 2 {
entry:
  %nSize.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %0 = load i32, ptr %nSize.i, align 8, !tbaa !53
  %nCap.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  %1 = load i32, ptr %nCap.i, align 4, !tbaa !57
  %cmp.i = icmp eq i32 %0, %1
  %pNodes.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %2 = load ptr, ptr %pNodes.i, align 8, !tbaa !29
  br i1 %cmp.i, label %if.then.i, label %_ZN9algorithm8DecGraph10appendNodeEv.exit

if.then.i:                                        ; preds = %entry
  %mul.i = shl nsw i32 %0, 1
  %conv.i = sext i32 %mul.i to i64
  %call.i = tail call ptr @realloc(ptr noundef %2, i64 noundef %conv.i) #34
  store ptr %call.i, ptr %pNodes.i, align 8, !tbaa !29
  %3 = load i32, ptr %nCap.i, align 4, !tbaa !57
  %mul5.i = shl nsw i32 %3, 1
  store i32 %mul5.i, ptr %nCap.i, align 4, !tbaa !57
  %.pre10.i = load i32, ptr %nSize.i, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10appendNodeEv.exit

_ZN9algorithm8DecGraph10appendNodeEv.exit:        ; preds = %entry, %if.then.i
  %4 = phi i32 [ %.pre10.i, %if.then.i ], [ %0, %entry ]
  %5 = phi ptr [ %call.i, %if.then.i ], [ %2, %entry ]
  %inc.i = add nsw i32 %4, 1
  store i32 %inc.i, ptr %nSize.i, align 8, !tbaa !53
  %idx.ext.i = sext i32 %4 to i64
  %add.ptr.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i, i8 0, i64 24, i1 false) #28
  %idCounter = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 5
  %6 = load i32, ptr %idCounter, align 8, !tbaa !58
  %inc = add nsw i32 %6, 1
  store i32 %inc, ptr %idCounter, align 8, !tbaa !58
  %id = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i, i32 3
  store i32 %6, ptr %id, align 8, !tbaa !49
  store i32 %eEdge0.coerce, ptr %add.ptr.i, align 8, !tbaa.struct !51
  %eEdge14 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i, i32 1
  store i32 %eEdge1.coerce, ptr %eEdge14, align 4, !tbaa.struct !51
  %fCompl0 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i, i32 4
  %bf.load5 = load i32, ptr %fCompl0, align 4
  %bf.clear = shl i32 %eEdge0.coerce, 15
  %bf.shl = and i32 %bf.clear, 32768
  %bf.clear6 = and i32 %bf.load5, -98305
  %bf.clear8 = shl i32 %eEdge1.coerce, 16
  %bf.shl11 = and i32 %bf.clear8, 65536
  %bf.set = or i32 %bf.shl11, %bf.shl
  %bf.set13 = or i32 %bf.set, %bf.clear6
  store i32 %bf.set13, ptr %fCompl0, align 4
  %7 = load i32, ptr %nSize.i, align 8, !tbaa !53
  %sub = shl i32 %7, 1
  %bf.value3.i = add i32 %sub, 2147483646
  %bf.shl.i = and i32 %bf.value3.i, 2147483646
  ret i32 %bf.shl.i
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph9edgeToIntENS_8DecEdge_E(ptr nocapture nonnull readnone align 8 %this, i32 %eEdge.coerce) local_unnamed_addr #13 align 2 {
entry:
  %or = and i32 %eEdge.coerce, 2147483647
  ret i32 %or
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm19PreCompGraphManager9getForestEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(72) %this) local_unnamed_addr #21 align 2 {
entry:
  %forest = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %forest, align 8, !tbaa !20
  ret ptr %0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZN9algorithm19PreCompGraphManager8getTableEv(ptr noundef nonnull readnone align 8 dereferenceable(72) %this) local_unnamed_addr #13 align 2 {
entry:
  %table = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 2
  ret ptr %table
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable
define dso_local noundef nonnull align 8 dereferenceable(24) ptr @_ZN9algorithm19PreCompGraphManager10getClassesEv(ptr noundef nonnull readnone align 8 dereferenceable(72) %this) local_unnamed_addr #13 align 2 {
entry:
  %classes = getelementptr inbounds %"class.algorithm::PreCompGraphManager", ptr %this, i64 0, i32 3
  ret ptr %classes
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind willreturn uwtable
define dso_local void @_ZN9algorithm8DecGraphC2Ev(ptr nocapture noundef nonnull align 8 dereferenceable(36) %this) unnamed_addr #15 align 2 {
entry:
  store i8 1, ptr %this, align 8, !tbaa !48
  %nLeaves = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  store ptr null, ptr %pNodes, align 8, !tbaa !29
  %eRoot2 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %nLeaves, i8 0, i64 16, i1 false)
  %bf.load = load i32, ptr %eRoot2, align 8
  %bf.set = and i32 %bf.load, -2147483648
  %bf.clear5 = or i32 %bf.set, 1
  store i32 %bf.clear5, ptr %eRoot2, align 8
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZN9algorithm8DecGraphC2Ei(ptr nocapture noundef nonnull align 8 dereferenceable(36) %this, i32 noundef %nLeaves) unnamed_addr #22 align 2 {
entry:
  store i8 0, ptr %this, align 8, !tbaa !48
  %nLeaves2 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  store i32 %nLeaves, ptr %nLeaves2, align 4, !tbaa !52
  %nSize = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  store i32 %nLeaves, ptr %nSize, align 8, !tbaa !53
  %nCap = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  store i32 20, ptr %nCap, align 4, !tbaa !57
  %idCounter = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 5
  store i32 0, ptr %idCounter, align 8, !tbaa !58
  %call = tail call noalias dereferenceable_or_null(480) ptr @malloc(i64 noundef 480) #30
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  store ptr %call, ptr %pNodes, align 8, !tbaa !29
  %conv6 = sext i32 %nLeaves to i64
  %mul7 = mul nsw i64 %conv6, 24
  tail call void @llvm.memset.p0.i64(ptr align 8 %call, i8 0, i64 %mul7, i1 false)
  %eRoot8 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load = load i32, ptr %eRoot8, align 8
  %bf.clear11 = and i32 %bf.load, -2147483648
  store i32 %bf.clear11, ptr %eRoot8, align 8
  %cmp20 = icmp sgt i32 %nLeaves, 0
  br i1 %cmp20, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %nLeaves to i64
  %0 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %1 = icmp ult i64 %0, 3
  br i1 %1, label %for.cond.for.cond.cleanup_crit_edge.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond.for.cond.cleanup_crit_edge.unr-lcssa:    ; preds = %for.body, %for.body.preheader
  %inc.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %inc.3, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.3, %for.body ]
  %.unr = phi i32 [ 0, %for.body.preheader ], [ %inc.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.for.cond.cleanup_crit_edge.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ]
  %2 = phi i32 [ %inc.epil, %for.body.epil ], [ %.unr, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ]
  %inc.epil = add nuw nsw i32 %2, 1
  %id.epil = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.epil, i32 3
  store i32 %2, ptr %id.epil, align 8, !tbaa !49
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body.epil, !llvm.loop !59

for.cond.for.cond.cleanup_crit_edge:              ; preds = %for.body.epil, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa
  %inc.lcssa = phi i32 [ %inc.lcssa.ph, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ], [ %inc.epil, %for.body.epil ]
  store i32 %inc.lcssa, ptr %idCounter, align 8, !tbaa !58
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.for.cond.cleanup_crit_edge, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.3, %for.body ]
  %3 = phi i32 [ 0, %for.body.preheader.new ], [ %inc.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.3, %for.body ]
  %inc = or i32 %3, 1
  %id = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv, i32 3
  store i32 %3, ptr %id, align 8, !tbaa !49
  %indvars.iv.next = or i64 %indvars.iv, 1
  %inc.1 = or i32 %3, 2
  %id.1 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.next, i32 3
  store i32 %inc, ptr %id.1, align 8, !tbaa !49
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %inc.2 = or i32 %3, 3
  %id.2 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.next.1, i32 3
  store i32 %inc.1, ptr %id.2, align 8, !tbaa !49
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %inc.3 = add nuw nsw i32 %3, 4
  %id.3 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.next.2, i32 3
  store i32 %inc.2, ptr %id.3, align 8, !tbaa !49
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond.for.cond.cleanup_crit_edge.unr-lcssa, label %for.body, !llvm.loop !61
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN9algorithm8DecGraphC2Eiii(ptr nocapture noundef nonnull align 8 dereferenceable(36) %this, i32 noundef %iLeaf, i32 noundef %nLeaves, i32 noundef %fCompl) unnamed_addr #8 align 2 {
entry:
  %cmp = icmp sgt i32 %iLeaf, -1
  %cmp2 = icmp slt i32 %iLeaf, %nLeaves
  %or.cond = and i1 %cmp, %cmp2
  br i1 %or.cond, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(ptr noundef nonnull @.str.5, ptr noundef nonnull @.str.1, i32 noundef 766, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraphC2Eiii) #32
  unreachable

cond.end:                                         ; preds = %entry
  store i8 0, ptr %this, align 8, !tbaa !48
  %nLeaves3 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  store i32 %nLeaves, ptr %nLeaves3, align 4, !tbaa !52
  %nSize = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  store i32 %nLeaves, ptr %nSize, align 8, !tbaa !53
  %nCap = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  store i32 20, ptr %nCap, align 4, !tbaa !57
  %idCounter = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 5
  store i32 0, ptr %idCounter, align 8, !tbaa !58
  %call = tail call noalias dereferenceable_or_null(480) ptr @malloc(i64 noundef 480) #30
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  store ptr %call, ptr %pNodes, align 8, !tbaa !29
  %conv7 = sext i32 %nLeaves to i64
  %mul8 = mul nsw i64 %conv7, 24
  tail call void @llvm.memset.p0.i64(ptr align 8 %call, i8 0, i64 %mul8, i1 false)
  %eRoot9 = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load = load i32, ptr %eRoot9, align 8
  %bf.value = and i32 %fCompl, 1
  %bf.clear = and i32 %bf.load, -2147483648
  %bf.value12 = shl nuw i32 %iLeaf, 1
  %bf.shl = and i32 %bf.value12, 2147483646
  %bf.set = or i32 %bf.value, %bf.shl
  %bf.set14 = or i32 %bf.set, %bf.clear
  store i32 %bf.set14, ptr %eRoot9, align 8
  %cmp1626 = icmp sgt i32 %nLeaves, 0
  br i1 %cmp1626, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %cond.end
  %wide.trip.count = zext i32 %nLeaves to i64
  %0 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %1 = icmp ult i64 %0, 3
  br i1 %1, label %for.cond.for.cond.cleanup_crit_edge.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond.for.cond.cleanup_crit_edge.unr-lcssa:    ; preds = %for.body, %for.body.preheader
  %inc.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %inc.3, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.3, %for.body ]
  %.unr = phi i32 [ 0, %for.body.preheader ], [ %inc.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.for.cond.cleanup_crit_edge.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ]
  %2 = phi i32 [ %inc.epil, %for.body.epil ], [ %.unr, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ]
  %inc.epil = add nuw nsw i32 %2, 1
  %id.epil = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.epil, i32 3
  store i32 %2, ptr %id.epil, align 8, !tbaa !49
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body.epil, !llvm.loop !62

for.cond.for.cond.cleanup_crit_edge:              ; preds = %for.body.epil, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa
  %inc.lcssa = phi i32 [ %inc.lcssa.ph, %for.cond.for.cond.cleanup_crit_edge.unr-lcssa ], [ %inc.epil, %for.body.epil ]
  store i32 %inc.lcssa, ptr %idCounter, align 8, !tbaa !58
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.for.cond.cleanup_crit_edge, %cond.end
  ret void

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.3, %for.body ]
  %3 = phi i32 [ 0, %for.body.preheader.new ], [ %inc.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.3, %for.body ]
  %inc = or i32 %3, 1
  %id = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv, i32 3
  store i32 %3, ptr %id, align 8, !tbaa !49
  %indvars.iv.next = or i64 %indvars.iv, 1
  %inc.1 = or i32 %3, 2
  %id.1 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.next, i32 3
  store i32 %inc, ptr %id.1, align 8, !tbaa !49
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %inc.2 = or i32 %3, 3
  %id.2 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.next.1, i32 3
  store i32 %inc.1, ptr %id.2, align 8, !tbaa !49
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %inc.3 = add nuw nsw i32 %3, 4
  %id.3 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %call, i64 %indvars.iv.next.2, i32 3
  store i32 %inc.2, ptr %id.3, align 8, !tbaa !49
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond.for.cond.cleanup_crit_edge.unr-lcssa, label %for.body, !llvm.loop !63
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @_ZN9algorithm8DecGraphD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) unnamed_addr #20 align 2 {
entry:
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %0 = load ptr, ptr %pNodes, align 8, !tbaa !29
  tail call void @free(ptr noundef %0) #28
  ret void
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm8DecGraph10appendNodeEv(ptr nocapture noundef nonnull align 8 dereferenceable(36) %this) local_unnamed_addr #20 align 2 {
entry:
  %nSize = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %0 = load i32, ptr %nSize, align 8, !tbaa !53
  %nCap = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  %1 = load i32, ptr %nCap, align 4, !tbaa !57
  %cmp = icmp eq i32 %0, %1
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %2 = load ptr, ptr %pNodes, align 8, !tbaa !29
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %mul = shl nsw i32 %0, 1
  %conv = sext i32 %mul to i64
  %call = tail call ptr @realloc(ptr noundef %2, i64 noundef %conv) #34
  store ptr %call, ptr %pNodes, align 8, !tbaa !29
  %3 = load i32, ptr %nCap, align 4, !tbaa !57
  %mul5 = shl nsw i32 %3, 1
  store i32 %mul5, ptr %nCap, align 4, !tbaa !57
  %.pre10 = load i32, ptr %nSize, align 8, !tbaa !53
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  %4 = phi i32 [ %.pre10, %if.then ], [ %0, %entry ]
  %5 = phi ptr [ %call, %if.then ], [ %2, %entry ]
  %inc = add nsw i32 %4, 1
  store i32 %inc, ptr %nSize, align 8, !tbaa !53
  %idx.ext = sext i32 %4 to i64
  %add.ptr = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr, i8 0, i64 24, i1 false)
  ret ptr %add.ptr
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local i32 @_ZN9algorithm8DecGraph9addOrNodeENS_8DecEdge_ES1_(ptr nocapture noundef nonnull align 8 dereferenceable(36) %this, i32 %eEdge0.coerce, i32 %eEdge1.coerce) local_unnamed_addr #20 align 2 {
entry:
  %nSize.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %0 = load i32, ptr %nSize.i, align 8, !tbaa !53
  %nCap.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 4
  %1 = load i32, ptr %nCap.i, align 4, !tbaa !57
  %cmp.i = icmp eq i32 %0, %1
  %pNodes.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %2 = load ptr, ptr %pNodes.i, align 8, !tbaa !29
  br i1 %cmp.i, label %if.then.i, label %_ZN9algorithm8DecGraph10appendNodeEv.exit

if.then.i:                                        ; preds = %entry
  %mul.i = shl nsw i32 %0, 1
  %conv.i = sext i32 %mul.i to i64
  %call.i = tail call ptr @realloc(ptr noundef %2, i64 noundef %conv.i) #34
  store ptr %call.i, ptr %pNodes.i, align 8, !tbaa !29
  %3 = load i32, ptr %nCap.i, align 4, !tbaa !57
  %mul5.i = shl nsw i32 %3, 1
  store i32 %mul5.i, ptr %nCap.i, align 4, !tbaa !57
  %.pre10.i = load i32, ptr %nSize.i, align 8, !tbaa !53
  br label %_ZN9algorithm8DecGraph10appendNodeEv.exit

_ZN9algorithm8DecGraph10appendNodeEv.exit:        ; preds = %entry, %if.then.i
  %4 = phi i32 [ %.pre10.i, %if.then.i ], [ %0, %entry ]
  %5 = phi ptr [ %call.i, %if.then.i ], [ %2, %entry ]
  %inc.i = add nsw i32 %4, 1
  store i32 %inc.i, ptr %nSize.i, align 8, !tbaa !53
  %idx.ext.i = sext i32 %4 to i64
  %add.ptr.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %add.ptr.i, i8 0, i64 24, i1 false) #28
  %idCounter = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 5
  %6 = load i32, ptr %idCounter, align 8, !tbaa !58
  %inc = add nsw i32 %6, 1
  store i32 %inc, ptr %idCounter, align 8, !tbaa !58
  %id = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i, i32 3
  store i32 %6, ptr %id, align 8, !tbaa !49
  %eEdge14 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i, i32 1
  %fCompl0 = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %5, i64 %idx.ext.i, i32 4
  %bf.load5 = load i32, ptr %fCompl0, align 4
  %bf.clear = shl i32 %eEdge0.coerce, 15
  %bf.shl = and i32 %bf.clear, 32768
  %bf.clear6 = and i32 %bf.load5, -114689
  %bf.clear8 = shl i32 %eEdge1.coerce, 16
  %bf.shl11 = and i32 %bf.clear8, 65536
  %bf.set = or i32 %bf.shl, %bf.shl11
  %bf.set13 = or i32 %bf.set, %bf.clear6
  %bf.set16 = or i32 %bf.set13, 16384
  store i32 %bf.set16, ptr %fCompl0, align 4
  %bf.set24 = xor i32 %eEdge0.coerce, 1
  store i32 %bf.set24, ptr %add.ptr.i, align 8
  %bf.set35 = xor i32 %eEdge1.coerce, 1
  store i32 %bf.set35, ptr %eEdge14, align 4
  %7 = load i32, ptr %nSize.i, align 8, !tbaa !53
  %sub = shl i32 %7, 1
  %bf.value3.i = add i32 %sub, 2147483646
  %bf.shl.i = and i32 %bf.value3.i, 2147483646
  %bf.set5.i = or i32 %bf.shl.i, 1
  ret i32 %bf.set5.i
}

; Function Attrs: inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allocsize(1)
declare noalias noundef ptr @realloc(ptr nocapture noundef, i64 noundef) local_unnamed_addr #23

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm8DecGraph8getNodesEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %0 = load ptr, ptr %pNodes, align 8, !tbaa !29
  ret ptr %0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef ptr @_ZN9algorithm8DecGraph7getNodeEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this, i32 noundef %i) local_unnamed_addr #21 align 2 {
entry:
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %0 = load ptr, ptr %pNodes, align 8, !tbaa !29
  %idx.ext = sext i32 %i to i64
  %add.ptr = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %0, i64 %idx.ext
  ret ptr %add.ptr
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef ptr @_ZN9algorithm8DecGraph6getVarEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #17 align 2 {
entry:
  %eRoot.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load.i = load i32, ptr %eRoot.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 1
  %bf.clear.i = and i32 %bf.lshr.i, 1073741823
  %nLeaves.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  %0 = load i32, ptr %nLeaves.i, align 4, !tbaa !52
  %cmp.i = icmp ult i32 %bf.clear.i, %0
  br i1 %cmp.i, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.1, i32 noundef 863, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph6getVarEv) #32
  unreachable

cond.end:                                         ; preds = %entry
  %pNodes.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %1 = load ptr, ptr %pNodes.i, align 8, !tbaa !29
  %idx.ext.i3 = zext i32 %bf.clear.i to i64
  %add.ptr.i = getelementptr inbounds %"struct.algorithm::DecNode_", ptr %1, i64 %idx.ext.i3
  ret ptr %add.ptr.i
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef zeroext i1 @_ZN9algorithm8DecGraph5isVarEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %eRoot = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load = load i32, ptr %eRoot, align 8
  %bf.lshr = lshr i32 %bf.load, 1
  %bf.clear = and i32 %bf.lshr, 1073741823
  %nLeaves = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  %0 = load i32, ptr %nLeaves, align 4, !tbaa !52
  %cmp = icmp ult i32 %bf.clear, %0
  ret i1 %cmp
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local i32 @_ZN9algorithm8DecGraph11getRootEdgeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %eRoot = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %retval.sroa.0.0.copyload = load i32, ptr %eRoot, align 8, !tbaa.struct !51
  ret i32 %retval.sroa.0.0.copyload
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph11getLeaveNumEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %nLeaves = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  %0 = load i32, ptr %nLeaves, align 4, !tbaa !52
  ret i32 %0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph10getNodeNumEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %nSize = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 3
  %0 = load i32, ptr %nSize, align 8, !tbaa !53
  ret i32 %0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef zeroext i1 @_ZN9algorithm8DecGraph7isConstEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %0 = load i8, ptr %this, align 8, !tbaa !48, !range !54
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph12isComplementEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #21 align 2 {
entry:
  %eRoot = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load = load i32, ptr %eRoot, align 8
  %bf.clear = and i32 %bf.load, 1
  ret i32 %bf.clear
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph9nodeToIntEPNS_8DecNode_E(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this, ptr noundef %node) local_unnamed_addr #21 align 2 {
entry:
  %pNodes = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 7
  %0 = load ptr, ptr %pNodes, align 8, !tbaa !29
  %sub.ptr.lhs.cast = ptrtoint ptr %node to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24
  %conv = trunc i64 %sub.ptr.div to i32
  ret i32 %conv
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_ZN9algorithm8DecGraph8varToIntEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(36) %this) local_unnamed_addr #17 align 2 {
entry:
  %eRoot.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 8
  %bf.load.i = load i32, ptr %eRoot.i, align 8
  %bf.lshr.i = lshr i32 %bf.load.i, 1
  %bf.clear.i = and i32 %bf.lshr.i, 1073741823
  %nLeaves.i = getelementptr inbounds %"class.algorithm::DecGraph", ptr %this, i64 0, i32 2
  %0 = load i32, ptr %nLeaves.i, align 4, !tbaa !52
  %cmp.i = icmp ult i32 %bf.clear.i, %0
  br i1 %cmp.i, label %_ZN9algorithm8DecGraph6getVarEv.exit, label %cond.false

cond.false:                                       ; preds = %entry
  tail call void @__assert_fail(ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.1, i32 noundef 884, ptr noundef nonnull @__PRETTY_FUNCTION__._ZN9algorithm8DecGraph8varToIntEv) #32
  unreachable

_ZN9algorithm8DecGraph6getVarEv.exit:             ; preds = %entry
  ret i32 %bf.clear.i
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(ptr noundef) local_unnamed_addr #24

; Function Attrs: argmemonly mustprogress nofree nounwind willreturn
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #25

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_PreCompGraphManager.cpp() #3 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(ptr noundef nonnull align 1 dereferenceable(1) @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(ptr nonnull @_ZNSt8ios_base4InitD1Ev, ptr nonnull @_ZStL8__ioinit, ptr nonnull @__dso_handle) #28
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #26

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umax.i64(i64, i64) #26

attributes #0 = { "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { nofree nounwind }
attributes #3 = { uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { argmemonly mustprogress nocallback nofree nosync nounwind willreturn }
attributes #5 = { inaccessiblememonly mustprogress nofree nounwind willreturn allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { argmemonly mustprogress nofree nounwind willreturn writeonly }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nobuiltin nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { mustprogress uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { argmemonly mustprogress nofree nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind readnone willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { noreturn nounwind "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nobuiltin allocsize(0) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { argmemonly mustprogress nofree norecurse nosync nounwind willreturn writeonly uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nounwind willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { argmemonly mustprogress nofree norecurse nosync nounwind readonly willreturn uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree nounwind uwtable "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { inaccessiblemem_or_argmemonly mustprogress nounwind willreturn allocsize(1) "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { noreturn "frame-pointer"="none" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { argmemonly mustprogress nofree nounwind willreturn }
attributes #26 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #27 = { noreturn }
attributes #28 = { nounwind }
attributes #29 = { allocsize(0) }
attributes #30 = { nounwind allocsize(0) }
attributes #31 = { builtin nounwind }
attributes #32 = { noreturn nounwind }
attributes #33 = { builtin allocsize(0) }
attributes #34 = { nounwind allocsize(1) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 15.0.0 (https://www.github.com/llvm/llvm-project.git 61baf2ffa7071944c00a0642fdb9ff77d9cff0da)"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!10, !6, i64 0}
!10 = !{!"_ZTSNSt12_Vector_baseIPN9algorithm11ForestNode_ESaIS2_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!11 = !{!10, !6, i64 8}
!12 = !{!13, !6, i64 0}
!13 = !{!"_ZTSNSt12_Vector_baseISt6vectorIPN9algorithm11ForestNode_ESaIS3_EESaIS5_EE17_Vector_impl_dataE", !6, i64 0, !6, i64 8, !6, i64 16}
!14 = !{!13, !6, i64 8}
!15 = !{!16, !19, i64 68}
!16 = !{!"_ZTSN9algorithm19PreCompGraphManagerE", !6, i64 0, !6, i64 8, !17, i64 16, !18, i64 40, !19, i64 64, !19, i64 68}
!17 = !{!"_ZTSSt6vectorIPN9algorithm11ForestNode_ESaIS2_EE"}
!18 = !{!"_ZTSSt6vectorIS_IPN9algorithm11ForestNode_ESaIS2_EESaIS4_EE"}
!19 = !{!"int", !7, i64 0}
!20 = !{!16, !6, i64 8}
!21 = !{!22, !19, i64 0}
!22 = !{!"_ZTSN9algorithm11ForestNode_E", !19, i64 0, !19, i64 4, !23, i64 8, !23, i64 10, !23, i64 12, !19, i64 14, !19, i64 16, !19, i64 17, !19, i64 17, !19, i64 17, !6, i64 24, !6, i64 32, !6, i64 40}
!23 = !{!"short", !7, i64 0}
!24 = !{!22, !19, i64 4}
!25 = !{!16, !19, i64 64}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.mustprogress"}
!28 = !{!22, !6, i64 40}
!29 = !{!30, !6, i64 24}
!30 = !{!"_ZTSN9algorithm8DecGraphE", !31, i64 0, !19, i64 4, !19, i64 8, !19, i64 12, !19, i64 16, !6, i64 24, !32, i64 32}
!31 = !{!"bool", !7, i64 0}
!32 = !{!"_ZTSN9algorithm8DecEdge_E", !19, i64 0, !19, i64 0}
!33 = distinct !{!33, !27}
!34 = distinct !{!34, !27}
!35 = !{!19, !19, i64 0}
!36 = !{!22, !6, i64 24}
!37 = !{!22, !6, i64 32}
!38 = !{!16, !6, i64 0}
!39 = !{!23, !23, i64 0}
!40 = distinct !{!40, !27}
!41 = distinct !{!41, !27}
!42 = !{!7, !7, i64 0}
!43 = !{!10, !6, i64 16}
!44 = distinct !{!44, !27}
!45 = distinct !{!45, !27}
!46 = distinct !{!46, !27}
!47 = distinct !{!47, !27}
!48 = !{!30, !31, i64 0}
!49 = !{!50, !19, i64 16}
!50 = !{!"_ZTSN9algorithm8DecNode_E", !32, i64 0, !32, i64 4, !7, i64 8, !19, i64 16, !19, i64 20, !19, i64 21, !19, i64 21, !19, i64 22, !19, i64 22, !19, i64 22, !19, i64 23}
!51 = !{i64 0, i64 4, !35, i64 0, i64 4, !35}
!52 = !{!30, !19, i64 4}
!53 = !{!30, !19, i64 8}
!54 = !{i8 0, i8 2}
!55 = distinct !{!55, !27}
!56 = distinct !{!56, !27}
!57 = !{!30, !19, i64 12}
!58 = !{!30, !19, i64 16}
!59 = distinct !{!59, !60}
!60 = !{!"llvm.loop.unroll.disable"}
!61 = distinct !{!61, !27}
!62 = distinct !{!62, !60}
!63 = distinct !{!63, !27}
