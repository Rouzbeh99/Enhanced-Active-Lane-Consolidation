% Add a period to the end of an abbreviation unless there's one
% already, then \xspace.
\makeatletter
\DeclareRobustCommand\onedot{\futurelet\@let@token\@onedot}
\def\@onedot{\ifx\@let@token.\else.\null\fi\xspace}

\def\eg{\emph{e.g}\onedot} 
\def\Eg{\emph{E.g}\onedot}
\def\ie{\emph{i.e}\onedot} 
\def\Ie{\emph{I.e}\onedot}
\def\etc{\emph{etc}\onedot} 
\def\etal{\emph{et al}\onedot}
\makeatother

\newcommand{\rsec}[1]{Section~\ref{sec:#1}}
\newcommand{\rssec}[1]{Subsection~\ref{ssec:#1}}
\newcommand{\rtab}[1]{Table~\ref{tab:#1}}
\newcommand{\rfig}[1]{Figure~\ref{fig:#1}}
\newcommand{\rlst}[1]{Listing~\ref{lst:#1}}
\newcommand{\rline}[1]{Line \ref{lst:#1}}
\newcommand{\rlines}[2]{Lines \ref{lst:#1}-\ref{lst:#2}}
\newcommand{\ralg}[1]{Algorithm~\ref{alg:#1}}
\newcommand{\rdef}[1]{Definition~\ref{def:#1}}
\newcommand{\req}[1]{Equation~\ref{eq:#1}}

\newcommand{\code}[1]{\texttt{#1}}


\def\unrollALC{Unroll-ALC\xspace}
\def\iterALC{Iteractive-ALC\xspace}
\def\ALC{\code{ALC}\xspace}
\def\ALCdp{\code{ALC+DP}\xspace}
\def\scalar{\code{Scalar}\xspace}
\def\ifconversion{\code{if}-conversion\xspace}
\def\ifconverted{\code{if}-converted\xspace}
\def\ifconv{\code{if-conv}\xspace}
\def\vM{\code{vM}\xspace}
\def\vR{\code{vR}\xspace}

\def\cpath{CFDP\xspace}
\def\cpaths{CFDPs\xspace}

\def\ifElseBench{\code{if-then-else}\xspace}
\def\ifThenBench{\code{if-then}\xspace}