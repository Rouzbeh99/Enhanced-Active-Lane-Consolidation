; ModuleID = 'molutil.ll'
source_filename = "molutil.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.molecule_t = type { [4 x [3 x double]], i32, %struct.strand_t*, i32, i32, i32, %struct.parm* }
%struct.strand_t = type { i8*, i32, i32, %struct.molecule_t*, %struct.strand_t*, i32, i32, %struct.residue_t** }
%struct.residue_t = type { %struct.residue_t*, i32, i32, i32, i8*, i8*, i32, i32, i32, %struct.strand_t*, %struct.extbond_t*, i32, [2 x i32]*, i32, %struct.chiral_t*, i32, i32*, %struct.atom_t* }
%struct.extbond_t = type { %struct.extbond_t*, i32, i32, i32 }
%struct.chiral_t = type { [4 x i32], double }
%struct.atom_t = type { i8*, i8*, i32, i32, [8 x i32], %struct.residue_t*, double, double, double, double, i8*, i32, double, double, i32, i32, i8*, [3 x double], double }
%struct.parm = type { [81 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, double*, [3 x double], double, double, double, double, double, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, double* }

@.str = private unnamed_addr constant [34 x i8] c"Unable to allocate space for %s.\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"new molecule\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [37 x i8] c"addstrand: strand %s already in mol\0A\00", align 1
@e_msg = internal global [256 x i8] zeroinitializer, align 16, !dbg !0
@.str.3 = private unnamed_addr constant [14 x i8] c"new strand %s\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"name for new strand %s\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"Strand %s not in molecule.\0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"residue array in strand %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"#%2d not in strand %s\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"Residue %s.\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"%s not in residue %s\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Atom %s.\0A\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"#%2d not in strand %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"bond between %s %d:%s and %s %d:%s\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"first\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"end1/end2 in ligate() must be be 5'/3' or 3'/5 not %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"merged residue array\00", align 1
@.str.18 = private unnamed_addr constant [46 x i8] c"anglep: p1, p2 are coincident, returning 0.0\0A\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c"anglep: p2, p3 are coincident, returning 0.0\0A\00", align 1
@getresname.rname = internal global i8* null, align 8, !dbg !247
@.str.20 = private unnamed_addr constant [22 x i8] c"copied external bonds\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"dna\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"rna\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"aa\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"setreskind: ERROR: unknown rkind %s\0A\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"nstrands\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"nresidues\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"natoms\00", align 1
@.str.28 = private unnamed_addr constant [26 x i8] c"NAB_mri: unknown key: %s\0A\00", align 1
@NAB_rri.rv_err = internal global i32 0, align 4, !dbg !253
@.str.29 = private unnamed_addr constant [7 x i8] c"resnum\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c"tresnum\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"strandnum\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"NAB_rri: unknown key: %s\0A\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"resname\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"resid\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"strandname\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"NAB_rrc: unknown key: %s\0A\00", align 1
@NAB_ari.rv_err = internal global i32 0, align 4, !dbg !258
@.str.37 = private unnamed_addr constant [8 x i8] c"atomnum\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"tatomnum\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"int1\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"NAB_ari: unknown key: %s\0A\00", align 1
@NAB_arf.f = internal global double 0.000000e+00, align 8, !dbg !263
@.str.41 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.42 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"z\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"charge\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"radius\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"float1\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"float2\00", align 1
@.str.48 = private unnamed_addr constant [26 x i8] c"NAB_arf: unknown key: %s\0A\00", align 1
@.str.49 = private unnamed_addr constant [9 x i8] c"atomname\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"fullname\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"%d:%d:%s\00", align 1
@.str.52 = private unnamed_addr constant [26 x i8] c"NAB_arc: unknown key: %s\0A\00", align 1
@newtransform.mp = internal global [4 x [4 x double]] zeroinitializer, align 16, !dbg !268
@updtransform.mr = internal global [4 x [4 x double]] zeroinitializer, align 16, !dbg !273
@trans4p.mat = internal global [4 x [4 x double]] zeroinitializer, align 16, !dbg !280
@rot4p.mat5 = internal global [4 x [4 x double]] zeroinitializer, align 16, !dbg !285
@.str.53 = private unnamed_addr constant [41 x i8] c"triangle sides too close to collinear !\0A\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"O5'\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"O5*\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"O1P\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"OAP\00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"O2P\00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"OBP\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"HB\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"HE\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"O3'\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"O3*\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"C3'\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"C3*\00", align 1
@.str.67 = private unnamed_addr constant [29 x i8] c"Can't create new atom array\0A\00", align 1
@.str.68 = private unnamed_addr constant [35 x i8] c"Can't create new atom index array\0A\00", align 1
@.str.69 = private unnamed_addr constant [31 x i8] c"add_atom: can't allocate anp.\0A\00", align 1
@nabout = external dso_local global %struct._IO_FILE*, align 8
@.str.70 = private unnamed_addr constant [12 x i8] c"malloc %ld\0A\00", align 1
@.str.71 = private unnamed_addr constant [12 x i8] c"malloc err:\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.molecule_t* @newmolecule() #0 !dbg !295 {
  %1 = alloca %struct.molecule_t*, align 8
  %2 = alloca %struct.molecule_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %2, metadata !298, metadata !DIExpression()), !dbg !299
  %3 = call noalias i8* @malloc(i64 136) #8, !dbg !300
  %4 = bitcast i8* %3 to %struct.molecule_t*, !dbg !302
  store %struct.molecule_t* %4, %struct.molecule_t** %2, align 8, !dbg !303
  %5 = icmp eq %struct.molecule_t* %4, null, !dbg !304
  br i1 %5, label %6, label %8, !dbg !305

6:                                                ; preds = %0
  %7 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !306
  store %struct.molecule_t* null, %struct.molecule_t** %1, align 8, !dbg !308
  br label %68, !dbg !308

8:                                                ; preds = %0
  %9 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !309
  %10 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %9, i32 0, i32 0, !dbg !310
  %11 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %10, i64 0, i64 0, !dbg !309
  %12 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !309
  store double 0.000000e+00, double* %12, align 8, !dbg !311
  %13 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !312
  %14 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %13, i32 0, i32 0, !dbg !313
  %15 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %14, i64 0, i64 0, !dbg !312
  %16 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 1, !dbg !312
  store double 0.000000e+00, double* %16, align 8, !dbg !314
  %17 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !315
  %18 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %17, i32 0, i32 0, !dbg !316
  %19 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %18, i64 0, i64 0, !dbg !315
  %20 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 2, !dbg !315
  store double 0.000000e+00, double* %20, align 8, !dbg !317
  %21 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !318
  %22 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %21, i32 0, i32 0, !dbg !319
  %23 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %22, i64 0, i64 1, !dbg !318
  %24 = getelementptr inbounds [3 x double], [3 x double]* %23, i64 0, i64 0, !dbg !318
  store double 1.000000e+00, double* %24, align 8, !dbg !320
  %25 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !321
  %26 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %25, i32 0, i32 0, !dbg !322
  %27 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %26, i64 0, i64 1, !dbg !321
  %28 = getelementptr inbounds [3 x double], [3 x double]* %27, i64 0, i64 1, !dbg !321
  store double 0.000000e+00, double* %28, align 8, !dbg !323
  %29 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !324
  %30 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %29, i32 0, i32 0, !dbg !325
  %31 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %30, i64 0, i64 1, !dbg !324
  %32 = getelementptr inbounds [3 x double], [3 x double]* %31, i64 0, i64 2, !dbg !324
  store double 0.000000e+00, double* %32, align 8, !dbg !326
  %33 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !327
  %34 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %33, i32 0, i32 0, !dbg !328
  %35 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %34, i64 0, i64 2, !dbg !327
  %36 = getelementptr inbounds [3 x double], [3 x double]* %35, i64 0, i64 0, !dbg !327
  store double 0.000000e+00, double* %36, align 8, !dbg !329
  %37 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !330
  %38 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %37, i32 0, i32 0, !dbg !331
  %39 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %38, i64 0, i64 2, !dbg !330
  %40 = getelementptr inbounds [3 x double], [3 x double]* %39, i64 0, i64 1, !dbg !330
  store double 1.000000e+00, double* %40, align 8, !dbg !332
  %41 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !333
  %42 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %41, i32 0, i32 0, !dbg !334
  %43 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %42, i64 0, i64 2, !dbg !333
  %44 = getelementptr inbounds [3 x double], [3 x double]* %43, i64 0, i64 2, !dbg !333
  store double 0.000000e+00, double* %44, align 8, !dbg !335
  %45 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !336
  %46 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %45, i32 0, i32 0, !dbg !337
  %47 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %46, i64 0, i64 3, !dbg !336
  %48 = getelementptr inbounds [3 x double], [3 x double]* %47, i64 0, i64 0, !dbg !336
  store double 0.000000e+00, double* %48, align 8, !dbg !338
  %49 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !339
  %50 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %49, i32 0, i32 0, !dbg !340
  %51 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %50, i64 0, i64 3, !dbg !339
  %52 = getelementptr inbounds [3 x double], [3 x double]* %51, i64 0, i64 1, !dbg !339
  store double 0.000000e+00, double* %52, align 8, !dbg !341
  %53 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !342
  %54 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %53, i32 0, i32 0, !dbg !343
  %55 = getelementptr inbounds [4 x [3 x double]], [4 x [3 x double]]* %54, i64 0, i64 3, !dbg !342
  %56 = getelementptr inbounds [3 x double], [3 x double]* %55, i64 0, i64 2, !dbg !342
  store double 1.000000e+00, double* %56, align 8, !dbg !344
  %57 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !345
  %58 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %57, i32 0, i32 1, !dbg !346
  store i32 0, i32* %58, align 8, !dbg !347
  %59 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !348
  %60 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %59, i32 0, i32 2, !dbg !349
  store %struct.strand_t* null, %struct.strand_t** %60, align 8, !dbg !350
  %61 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !351
  %62 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %61, i32 0, i32 3, !dbg !352
  store i32 0, i32* %62, align 8, !dbg !353
  %63 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !354
  %64 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %63, i32 0, i32 5, !dbg !355
  store i32 0, i32* %64, align 8, !dbg !356
  %65 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !357
  %66 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %65, i32 0, i32 6, !dbg !358
  store %struct.parm* null, %struct.parm** %66, align 8, !dbg !359
  %67 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !360
  store %struct.molecule_t* %67, %struct.molecule_t** %1, align 8, !dbg !361
  br label %68, !dbg !361

68:                                               ; preds = %8, %6
  %69 = load %struct.molecule_t*, %struct.molecule_t** %1, align 8, !dbg !362
  ret %struct.molecule_t* %69, !dbg !362
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

declare dso_local i32 @rt_errormsg_s(i32, i8*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @freeresidue(%struct.residue_t* %0) #0 !dbg !363 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.residue_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.atom_t*, align 8
  %6 = alloca %struct.extbond_t*, align 8
  %7 = alloca %struct.extbond_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %3, metadata !366, metadata !DIExpression()), !dbg !367
  call void @llvm.dbg.declare(metadata i32* %4, metadata !368, metadata !DIExpression()), !dbg !369
  call void @llvm.dbg.declare(metadata %struct.atom_t** %5, metadata !370, metadata !DIExpression()), !dbg !371
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %6, metadata !372, metadata !DIExpression()), !dbg !373
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %7, metadata !374, metadata !DIExpression()), !dbg !375
  %8 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !376
  %9 = icmp ne %struct.residue_t* %8, null, !dbg !376
  br i1 %9, label %11, label %10, !dbg !378

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !379
  br label %139, !dbg !379

11:                                               ; preds = %1
  %12 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !380
  %13 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %12, i32 0, i32 4, !dbg !382
  %14 = load i8*, i8** %13, align 8, !dbg !382
  %15 = icmp ne i8* %14, null, !dbg !380
  br i1 %15, label %16, label %20, !dbg !383

16:                                               ; preds = %11
  %17 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !384
  %18 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %17, i32 0, i32 4, !dbg !385
  %19 = load i8*, i8** %18, align 8, !dbg !385
  call void @free(i8* %19) #8, !dbg !386
  br label %20, !dbg !386

20:                                               ; preds = %16, %11
  %21 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !387
  %22 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %21, i32 0, i32 5, !dbg !389
  %23 = load i8*, i8** %22, align 8, !dbg !389
  %24 = icmp ne i8* %23, null, !dbg !387
  br i1 %24, label %25, label %29, !dbg !390

25:                                               ; preds = %20
  %26 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !391
  %27 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %26, i32 0, i32 5, !dbg !392
  %28 = load i8*, i8** %27, align 8, !dbg !392
  call void @free(i8* %28) #8, !dbg !393
  br label %29, !dbg !393

29:                                               ; preds = %25, %20
  %30 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !394
  %31 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %30, i32 0, i32 10, !dbg !396
  %32 = load %struct.extbond_t*, %struct.extbond_t** %31, align 8, !dbg !396
  store %struct.extbond_t* %32, %struct.extbond_t** %6, align 8, !dbg !397
  br label %33, !dbg !398

33:                                               ; preds = %42, %29
  %34 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !399
  %35 = icmp ne %struct.extbond_t* %34, null, !dbg !401
  br i1 %35, label %36, label %44, !dbg !401

36:                                               ; preds = %33
  %37 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !402
  %38 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %37, i32 0, i32 0, !dbg !404
  %39 = load %struct.extbond_t*, %struct.extbond_t** %38, align 8, !dbg !404
  store %struct.extbond_t* %39, %struct.extbond_t** %7, align 8, !dbg !405
  %40 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !406
  %41 = bitcast %struct.extbond_t* %40 to i8*, !dbg !407
  call void @free(i8* %41) #8, !dbg !408
  br label %42, !dbg !409

42:                                               ; preds = %36
  %43 = load %struct.extbond_t*, %struct.extbond_t** %7, align 8, !dbg !410
  store %struct.extbond_t* %43, %struct.extbond_t** %6, align 8, !dbg !411
  br label %33, !dbg !412, !llvm.loop !413

44:                                               ; preds = %33
  %45 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !415
  %46 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %45, i32 0, i32 12, !dbg !417
  %47 = load [2 x i32]*, [2 x i32]** %46, align 8, !dbg !417
  %48 = icmp ne [2 x i32]* %47, null, !dbg !415
  br i1 %48, label %49, label %54, !dbg !418

49:                                               ; preds = %44
  %50 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !419
  %51 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %50, i32 0, i32 12, !dbg !420
  %52 = load [2 x i32]*, [2 x i32]** %51, align 8, !dbg !420
  %53 = bitcast [2 x i32]* %52 to i8*, !dbg !421
  call void @free(i8* %53) #8, !dbg !422
  br label %54, !dbg !422

54:                                               ; preds = %49, %44
  %55 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !423
  %56 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %55, i32 0, i32 14, !dbg !425
  %57 = load %struct.chiral_t*, %struct.chiral_t** %56, align 8, !dbg !425
  %58 = icmp ne %struct.chiral_t* %57, null, !dbg !423
  br i1 %58, label %59, label %64, !dbg !426

59:                                               ; preds = %54
  %60 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !427
  %61 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %60, i32 0, i32 14, !dbg !428
  %62 = load %struct.chiral_t*, %struct.chiral_t** %61, align 8, !dbg !428
  %63 = bitcast %struct.chiral_t* %62 to i8*, !dbg !429
  call void @free(i8* %63) #8, !dbg !430
  br label %64, !dbg !430

64:                                               ; preds = %59, %54
  %65 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !431
  %66 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %65, i32 0, i32 16, !dbg !433
  %67 = load i32*, i32** %66, align 8, !dbg !433
  %68 = icmp ne i32* %67, null, !dbg !431
  br i1 %68, label %69, label %74, !dbg !434

69:                                               ; preds = %64
  %70 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !435
  %71 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %70, i32 0, i32 16, !dbg !436
  %72 = load i32*, i32** %71, align 8, !dbg !436
  %73 = bitcast i32* %72 to i8*, !dbg !437
  call void @free(i8* %73) #8, !dbg !438
  br label %74, !dbg !438

74:                                               ; preds = %69, %64
  %75 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !439
  %76 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %75, i32 0, i32 17, !dbg !441
  %77 = load %struct.atom_t*, %struct.atom_t** %76, align 8, !dbg !441
  store %struct.atom_t* %77, %struct.atom_t** %5, align 8, !dbg !442
  store i32 0, i32* %4, align 4, !dbg !443
  br label %78, !dbg !444

78:                                               ; preds = %121, %74
  %79 = load i32, i32* %4, align 4, !dbg !445
  %80 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !447
  %81 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %80, i32 0, i32 15, !dbg !448
  %82 = load i32, i32* %81, align 8, !dbg !448
  %83 = icmp slt i32 %79, %82, !dbg !449
  br i1 %83, label %84, label %126, !dbg !450

84:                                               ; preds = %78
  %85 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !451
  %86 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %85, i32 0, i32 0, !dbg !454
  %87 = load i8*, i8** %86, align 8, !dbg !454
  %88 = icmp ne i8* %87, null, !dbg !451
  br i1 %88, label %89, label %93, !dbg !455

89:                                               ; preds = %84
  %90 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !456
  %91 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %90, i32 0, i32 0, !dbg !457
  %92 = load i8*, i8** %91, align 8, !dbg !457
  call void @free(i8* %92) #8, !dbg !458
  br label %93, !dbg !458

93:                                               ; preds = %89, %84
  %94 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !459
  %95 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %94, i32 0, i32 1, !dbg !461
  %96 = load i8*, i8** %95, align 8, !dbg !461
  %97 = icmp ne i8* %96, null, !dbg !459
  br i1 %97, label %98, label %102, !dbg !462

98:                                               ; preds = %93
  %99 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !463
  %100 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %99, i32 0, i32 1, !dbg !464
  %101 = load i8*, i8** %100, align 8, !dbg !464
  call void @free(i8* %101) #8, !dbg !465
  br label %102, !dbg !465

102:                                              ; preds = %98, %93
  %103 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !466
  %104 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %103, i32 0, i32 10, !dbg !468
  %105 = load i8*, i8** %104, align 8, !dbg !468
  %106 = icmp ne i8* %105, null, !dbg !466
  br i1 %106, label %107, label %111, !dbg !469

107:                                              ; preds = %102
  %108 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !470
  %109 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %108, i32 0, i32 10, !dbg !471
  %110 = load i8*, i8** %109, align 8, !dbg !471
  call void @free(i8* %110) #8, !dbg !472
  br label %111, !dbg !472

111:                                              ; preds = %107, %102
  %112 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !473
  %113 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %112, i32 0, i32 16, !dbg !475
  %114 = load i8*, i8** %113, align 8, !dbg !475
  %115 = icmp ne i8* %114, null, !dbg !473
  br i1 %115, label %116, label %120, !dbg !476

116:                                              ; preds = %111
  %117 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !477
  %118 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %117, i32 0, i32 16, !dbg !478
  %119 = load i8*, i8** %118, align 8, !dbg !478
  call void @free(i8* %119) #8, !dbg !479
  br label %120, !dbg !479

120:                                              ; preds = %116, %111
  br label %121, !dbg !480

121:                                              ; preds = %120
  %122 = load i32, i32* %4, align 4, !dbg !481
  %123 = add nsw i32 %122, 1, !dbg !481
  store i32 %123, i32* %4, align 4, !dbg !481
  %124 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !482
  %125 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %124, i32 1, !dbg !482
  store %struct.atom_t* %125, %struct.atom_t** %5, align 8, !dbg !482
  br label %78, !dbg !483, !llvm.loop !484

126:                                              ; preds = %78
  %127 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !486
  %128 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %127, i32 0, i32 17, !dbg !488
  %129 = load %struct.atom_t*, %struct.atom_t** %128, align 8, !dbg !488
  %130 = icmp ne %struct.atom_t* %129, null, !dbg !486
  br i1 %130, label %131, label %136, !dbg !489

131:                                              ; preds = %126
  %132 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !490
  %133 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %132, i32 0, i32 17, !dbg !491
  %134 = load %struct.atom_t*, %struct.atom_t** %133, align 8, !dbg !491
  %135 = bitcast %struct.atom_t* %134 to i8*, !dbg !492
  call void @free(i8* %135) #8, !dbg !493
  br label %136, !dbg !493

136:                                              ; preds = %131, %126
  %137 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !494
  %138 = bitcast %struct.residue_t* %137 to i8*, !dbg !495
  call void @free(i8* %138) #8, !dbg !496
  store i32 0, i32* %2, align 4, !dbg !497
  br label %139, !dbg !497

139:                                              ; preds = %136, %10
  %140 = load i32, i32* %2, align 4, !dbg !498
  ret i32 %140, !dbg !498
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @freemolecule(%struct.molecule_t* %0) #0 !dbg !499 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.molecule_t*, align 8
  %4 = alloca %struct.strand_t*, align 8
  %5 = alloca %struct.strand_t*, align 8
  %6 = alloca %struct.parm*, align 8
  %7 = alloca i32, align 4
  store %struct.molecule_t* %0, %struct.molecule_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %3, metadata !502, metadata !DIExpression()), !dbg !503
  call void @llvm.dbg.declare(metadata %struct.strand_t** %4, metadata !504, metadata !DIExpression()), !dbg !505
  call void @llvm.dbg.declare(metadata %struct.strand_t** %5, metadata !506, metadata !DIExpression()), !dbg !507
  call void @llvm.dbg.declare(metadata %struct.parm** %6, metadata !508, metadata !DIExpression()), !dbg !509
  call void @llvm.dbg.declare(metadata i32* %7, metadata !510, metadata !DIExpression()), !dbg !511
  %8 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !512
  %9 = icmp ne %struct.molecule_t* %8, null, !dbg !512
  br i1 %9, label %11, label %10, !dbg !514

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !515
  br label %114, !dbg !515

11:                                               ; preds = %1
  %12 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !516
  %13 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %12, i32 0, i32 2, !dbg !518
  %14 = load %struct.strand_t*, %struct.strand_t** %13, align 8, !dbg !518
  store %struct.strand_t* %14, %struct.strand_t** %4, align 8, !dbg !519
  br label %15, !dbg !520

15:                                               ; preds = %60, %11
  %16 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !521
  %17 = icmp ne %struct.strand_t* %16, null, !dbg !523
  br i1 %17, label %18, label %62, !dbg !523

18:                                               ; preds = %15
  %19 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !524
  %20 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %19, i32 0, i32 4, !dbg !526
  %21 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !526
  store %struct.strand_t* %21, %struct.strand_t** %5, align 8, !dbg !527
  %22 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !528
  %23 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %22, i32 0, i32 0, !dbg !530
  %24 = load i8*, i8** %23, align 8, !dbg !530
  %25 = icmp ne i8* %24, null, !dbg !528
  br i1 %25, label %26, label %30, !dbg !531

26:                                               ; preds = %18
  %27 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !532
  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i32 0, i32 0, !dbg !533
  %29 = load i8*, i8** %28, align 8, !dbg !533
  call void @free(i8* %29) #8, !dbg !534
  br label %30, !dbg !534

30:                                               ; preds = %26, %18
  store i32 0, i32* %7, align 4, !dbg !535
  br label %31, !dbg !537

31:                                               ; preds = %46, %30
  %32 = load i32, i32* %7, align 4, !dbg !538
  %33 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !540
  %34 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %33, i32 0, i32 5, !dbg !541
  %35 = load i32, i32* %34, align 8, !dbg !541
  %36 = icmp slt i32 %32, %35, !dbg !542
  br i1 %36, label %37, label %49, !dbg !543

37:                                               ; preds = %31
  %38 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !544
  %39 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %38, i32 0, i32 7, !dbg !545
  %40 = load %struct.residue_t**, %struct.residue_t*** %39, align 8, !dbg !545
  %41 = load i32, i32* %7, align 4, !dbg !546
  %42 = sext i32 %41 to i64, !dbg !544
  %43 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %40, i64 %42, !dbg !544
  %44 = load %struct.residue_t*, %struct.residue_t** %43, align 8, !dbg !544
  %45 = call i32 @freeresidue(%struct.residue_t* %44), !dbg !547
  br label %46, !dbg !547

46:                                               ; preds = %37
  %47 = load i32, i32* %7, align 4, !dbg !548
  %48 = add nsw i32 %47, 1, !dbg !548
  store i32 %48, i32* %7, align 4, !dbg !548
  br label %31, !dbg !549, !llvm.loop !550

49:                                               ; preds = %31
  %50 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !552
  %51 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %50, i32 0, i32 7, !dbg !554
  %52 = load %struct.residue_t**, %struct.residue_t*** %51, align 8, !dbg !554
  %53 = icmp ne %struct.residue_t** %52, null, !dbg !552
  br i1 %53, label %54, label %59, !dbg !555

54:                                               ; preds = %49
  %55 = load %struct.strand_t*, %struct.strand_t** %4, align 8, !dbg !556
  %56 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %55, i32 0, i32 7, !dbg !557
  %57 = load %struct.residue_t**, %struct.residue_t*** %56, align 8, !dbg !557
  %58 = bitcast %struct.residue_t** %57 to i8*, !dbg !558
  call void @free(i8* %58) #8, !dbg !559
  br label %59, !dbg !559

59:                                               ; preds = %54, %49
  br label %60, !dbg !560

60:                                               ; preds = %59
  %61 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !561
  store %struct.strand_t* %61, %struct.strand_t** %4, align 8, !dbg !562
  br label %15, !dbg !563, !llvm.loop !564

62:                                               ; preds = %15
  %63 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !566
  %64 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %63, i32 0, i32 6, !dbg !568
  %65 = load %struct.parm*, %struct.parm** %64, align 8, !dbg !568
  %66 = icmp ne %struct.parm* %65, null, !dbg !566
  br i1 %66, label %67, label %111, !dbg !569

67:                                               ; preds = %62
  %68 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !570
  %69 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %68, i32 0, i32 6, !dbg !572
  %70 = load %struct.parm*, %struct.parm** %69, align 8, !dbg !572
  store %struct.parm* %70, %struct.parm** %6, align 8, !dbg !573
  %71 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !574
  %72 = getelementptr inbounds %struct.parm, %struct.parm* %71, i32 0, i32 33, !dbg !576
  %73 = load i8*, i8** %72, align 8, !dbg !576
  %74 = icmp ne i8* %73, null, !dbg !574
  br i1 %74, label %75, label %79, !dbg !577

75:                                               ; preds = %67
  %76 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !578
  %77 = getelementptr inbounds %struct.parm, %struct.parm* %76, i32 0, i32 33, !dbg !579
  %78 = load i8*, i8** %77, align 8, !dbg !579
  call void @free(i8* %78) #8, !dbg !580
  br label %79, !dbg !580

79:                                               ; preds = %75, %67
  %80 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !581
  %81 = getelementptr inbounds %struct.parm, %struct.parm* %80, i32 0, i32 34, !dbg !583
  %82 = load i8*, i8** %81, align 8, !dbg !583
  %83 = icmp ne i8* %82, null, !dbg !581
  br i1 %83, label %84, label %88, !dbg !584

84:                                               ; preds = %79
  %85 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !585
  %86 = getelementptr inbounds %struct.parm, %struct.parm* %85, i32 0, i32 34, !dbg !586
  %87 = load i8*, i8** %86, align 8, !dbg !586
  call void @free(i8* %87) #8, !dbg !587
  br label %88, !dbg !587

88:                                               ; preds = %84, %79
  %89 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !588
  %90 = getelementptr inbounds %struct.parm, %struct.parm* %89, i32 0, i32 35, !dbg !590
  %91 = load i8*, i8** %90, align 8, !dbg !590
  %92 = icmp ne i8* %91, null, !dbg !588
  br i1 %92, label %93, label %97, !dbg !591

93:                                               ; preds = %88
  %94 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !592
  %95 = getelementptr inbounds %struct.parm, %struct.parm* %94, i32 0, i32 35, !dbg !593
  %96 = load i8*, i8** %95, align 8, !dbg !593
  call void @free(i8* %96) #8, !dbg !594
  br label %97, !dbg !594

97:                                               ; preds = %93, %88
  %98 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !595
  %99 = getelementptr inbounds %struct.parm, %struct.parm* %98, i32 0, i32 36, !dbg !597
  %100 = load i8*, i8** %99, align 8, !dbg !597
  %101 = icmp ne i8* %100, null, !dbg !595
  br i1 %101, label %102, label %106, !dbg !598

102:                                              ; preds = %97
  %103 = load %struct.parm*, %struct.parm** %6, align 8, !dbg !599
  %104 = getelementptr inbounds %struct.parm, %struct.parm* %103, i32 0, i32 36, !dbg !600
  %105 = load i8*, i8** %104, align 8, !dbg !600
  call void @free(i8* %105) #8, !dbg !601
  br label %106, !dbg !601

106:                                              ; preds = %102, %97
  %107 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !602
  %108 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %107, i32 0, i32 6, !dbg !603
  %109 = load %struct.parm*, %struct.parm** %108, align 8, !dbg !603
  %110 = bitcast %struct.parm* %109 to i8*, !dbg !604
  call void @free(i8* %110) #8, !dbg !605
  br label %111, !dbg !606

111:                                              ; preds = %106, %62
  %112 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !607
  %113 = bitcast %struct.molecule_t* %112 to i8*, !dbg !608
  call void @free(i8* %113) #8, !dbg !609
  store i32 0, i32* %2, align 4, !dbg !610
  br label %114, !dbg !610

114:                                              ; preds = %111, %10
  %115 = load i32, i32* %2, align 4, !dbg !611
  ret i32 %115, !dbg !611
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @addstrand(%struct.molecule_t* %0, i8* %1) #0 !dbg !612 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.strand_t*, align 8
  %7 = alloca %struct.strand_t*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !615, metadata !DIExpression()), !dbg !616
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !617, metadata !DIExpression()), !dbg !618
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !619, metadata !DIExpression()), !dbg !620
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !621, metadata !DIExpression()), !dbg !622
  call void @llvm.dbg.declare(metadata i32* %8, metadata !623, metadata !DIExpression()), !dbg !624
  call void @llvm.dbg.declare(metadata i8** %9, metadata !625, metadata !DIExpression()), !dbg !626
  %10 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !627
  %11 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %10, i32 0, i32 2, !dbg !629
  %12 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !dbg !629
  store %struct.strand_t* %12, %struct.strand_t** %6, align 8, !dbg !630
  br label %13, !dbg !631

13:                                               ; preds = %28, %2
  %14 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !632
  %15 = icmp ne %struct.strand_t* %14, null, !dbg !634
  br i1 %15, label %16, label %32, !dbg !634

16:                                               ; preds = %13
  %17 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !635
  %18 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %17, i32 0, i32 0, !dbg !638
  %19 = load i8*, i8** %18, align 8, !dbg !638
  %20 = load i8*, i8** %5, align 8, !dbg !639
  %21 = call i32 @strcmp(i8* %19, i8* %20) #9, !dbg !640
  %22 = icmp ne i32 %21, 0, !dbg !640
  br i1 %22, label %27, label %23, !dbg !641

23:                                               ; preds = %16
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !642
  %25 = load i8*, i8** %5, align 8, !dbg !644
  %26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %24, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8* %25), !dbg !645
  store i32 1, i32* %3, align 4, !dbg !646
  br label %112, !dbg !646

27:                                               ; preds = %16
  br label %28, !dbg !647

28:                                               ; preds = %27
  %29 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !648
  %30 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %29, i32 0, i32 4, !dbg !649
  %31 = load %struct.strand_t*, %struct.strand_t** %30, align 8, !dbg !649
  store %struct.strand_t* %31, %struct.strand_t** %6, align 8, !dbg !650
  br label %13, !dbg !651, !llvm.loop !652

32:                                               ; preds = %13
  %33 = call noalias i8* @malloc(i64 48) #8, !dbg !654
  %34 = bitcast i8* %33 to %struct.strand_t*, !dbg !656
  store %struct.strand_t* %34, %struct.strand_t** %6, align 8, !dbg !657
  %35 = icmp eq %struct.strand_t* %34, null, !dbg !658
  br i1 %35, label %36, label %40, !dbg !659

36:                                               ; preds = %32
  %37 = load i8*, i8** %5, align 8, !dbg !660
  %38 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* %37) #8, !dbg !662
  %39 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !663
  store i32 1, i32* %3, align 4, !dbg !664
  br label %112, !dbg !664

40:                                               ; preds = %32
  %41 = load i8*, i8** %5, align 8, !dbg !665
  %42 = call i64 @strlen(i8* %41) #9, !dbg !666
  %43 = add i64 %42, 1, !dbg !667
  %44 = trunc i64 %43 to i32, !dbg !666
  store i32 %44, i32* %8, align 4, !dbg !668
  %45 = load i32, i32* %8, align 4, !dbg !669
  %46 = sext i32 %45 to i64, !dbg !669
  %47 = mul i64 %46, 1, !dbg !671
  %48 = call noalias i8* @malloc(i64 %47) #8, !dbg !672
  store i8* %48, i8** %9, align 8, !dbg !673
  %49 = icmp eq i8* %48, null, !dbg !674
  br i1 %49, label %50, label %54, !dbg !675

50:                                               ; preds = %40
  %51 = load i8*, i8** %5, align 8, !dbg !676
  %52 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %51) #8, !dbg !678
  %53 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !679
  store i32 1, i32* %3, align 4, !dbg !680
  br label %112, !dbg !680

54:                                               ; preds = %40
  %55 = load i8*, i8** %9, align 8, !dbg !681
  %56 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !682
  %57 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %56, i32 0, i32 0, !dbg !683
  store i8* %55, i8** %57, align 8, !dbg !684
  br label %58

58:                                               ; preds = %54
  %59 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !685
  %60 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %59, i32 0, i32 0, !dbg !686
  %61 = load i8*, i8** %60, align 8, !dbg !686
  %62 = load i8*, i8** %5, align 8, !dbg !687
  %63 = call i8* @strcpy(i8* %61, i8* %62) #8, !dbg !688
  %64 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !689
  %65 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %64, i32 0, i32 1, !dbg !690
  store i32 0, i32* %65, align 8, !dbg !691
  %66 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !692
  %67 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %66, i32 0, i32 2, !dbg !693
  store i32 0, i32* %67, align 4, !dbg !694
  %68 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !695
  %69 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !696
  %70 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %69, i32 0, i32 3, !dbg !697
  store %struct.molecule_t* %68, %struct.molecule_t** %70, align 8, !dbg !698
  %71 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !699
  %72 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %71, i32 0, i32 4, !dbg !700
  store %struct.strand_t* null, %struct.strand_t** %72, align 8, !dbg !701
  %73 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !702
  %74 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %73, i32 0, i32 5, !dbg !703
  store i32 0, i32* %74, align 8, !dbg !704
  %75 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !705
  %76 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %75, i32 0, i32 6, !dbg !706
  store i32 0, i32* %76, align 4, !dbg !707
  %77 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !708
  %78 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %77, i32 0, i32 7, !dbg !709
  store %struct.residue_t** null, %struct.residue_t*** %78, align 8, !dbg !710
  %79 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !711
  %80 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %79, i32 0, i32 1, !dbg !713
  %81 = load i32, i32* %80, align 8, !dbg !713
  %82 = icmp eq i32 %81, 0, !dbg !714
  br i1 %82, label %83, label %87, !dbg !715

83:                                               ; preds = %58
  %84 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !716
  %85 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !717
  %86 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %85, i32 0, i32 2, !dbg !718
  store %struct.strand_t* %84, %struct.strand_t** %86, align 8, !dbg !719
  br label %105, !dbg !717

87:                                               ; preds = %58
  %88 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !720
  %89 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %88, i32 0, i32 2, !dbg !722
  %90 = load %struct.strand_t*, %struct.strand_t** %89, align 8, !dbg !722
  store %struct.strand_t* %90, %struct.strand_t** %7, align 8, !dbg !723
  br label %91, !dbg !724

91:                                               ; preds = %97, %87
  %92 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !725
  %93 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %92, i32 0, i32 4, !dbg !728
  %94 = load %struct.strand_t*, %struct.strand_t** %93, align 8, !dbg !728
  %95 = icmp ne %struct.strand_t* %94, null, !dbg !729
  br i1 %95, label %96, label %101, !dbg !729

96:                                               ; preds = %91
  br label %97, !dbg !729

97:                                               ; preds = %96
  %98 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !730
  %99 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %98, i32 0, i32 4, !dbg !731
  %100 = load %struct.strand_t*, %struct.strand_t** %99, align 8, !dbg !731
  store %struct.strand_t* %100, %struct.strand_t** %7, align 8, !dbg !732
  br label %91, !dbg !733, !llvm.loop !734

101:                                              ; preds = %91
  %102 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !736
  %103 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !737
  %104 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %103, i32 0, i32 4, !dbg !738
  store %struct.strand_t* %102, %struct.strand_t** %104, align 8, !dbg !739
  br label %105

105:                                              ; preds = %101, %83
  %106 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !740
  %107 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %106, i32 0, i32 1, !dbg !741
  %108 = load i32, i32* %107, align 8, !dbg !742
  %109 = add nsw i32 %108, 1, !dbg !742
  store i32 %109, i32* %107, align 8, !dbg !742
  %110 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !743
  %111 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %110, i32 0, i32 5, !dbg !744
  store i32 0, i32* %111, align 8, !dbg !745
  store i32 0, i32* %3, align 4, !dbg !746
  br label %112, !dbg !746

112:                                              ; preds = %105, %50, %36, %23
  %113 = load i32, i32* %3, align 4, !dbg !747
  ret i32 %113, !dbg !747
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @addresidue(%struct.molecule_t* %0, i8* %1, %struct.residue_t* %2) #0 !dbg !748 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.molecule_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.residue_t*, align 8
  %8 = alloca %struct.strand_t*, align 8
  %9 = alloca %struct.strand_t*, align 8
  %10 = alloca %struct.residue_t**, align 8
  %11 = alloca %struct.residue_t*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %struct.molecule_t* %0, %struct.molecule_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %5, metadata !751, metadata !DIExpression()), !dbg !752
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !753, metadata !DIExpression()), !dbg !754
  store %struct.residue_t* %2, %struct.residue_t** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %7, metadata !755, metadata !DIExpression()), !dbg !756
  call void @llvm.dbg.declare(metadata %struct.strand_t** %8, metadata !757, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.declare(metadata %struct.strand_t** %9, metadata !759, metadata !DIExpression()), !dbg !760
  call void @llvm.dbg.declare(metadata %struct.residue_t*** %10, metadata !761, metadata !DIExpression()), !dbg !762
  call void @llvm.dbg.declare(metadata %struct.residue_t** %11, metadata !763, metadata !DIExpression()), !dbg !764
  call void @llvm.dbg.declare(metadata i32* %12, metadata !765, metadata !DIExpression()), !dbg !766
  call void @llvm.dbg.declare(metadata i32* %13, metadata !767, metadata !DIExpression()), !dbg !768
  store %struct.strand_t* null, %struct.strand_t** %9, align 8, !dbg !769
  %14 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !771
  %15 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %14, i32 0, i32 2, !dbg !772
  %16 = load %struct.strand_t*, %struct.strand_t** %15, align 8, !dbg !772
  store %struct.strand_t* %16, %struct.strand_t** %8, align 8, !dbg !773
  br label %17, !dbg !774

17:                                               ; preds = %30, %3
  %18 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !775
  %19 = icmp ne %struct.strand_t* %18, null, !dbg !777
  br i1 %19, label %20, label %34, !dbg !777

20:                                               ; preds = %17
  %21 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !778
  %22 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i32 0, i32 0, !dbg !781
  %23 = load i8*, i8** %22, align 8, !dbg !781
  %24 = load i8*, i8** %6, align 8, !dbg !782
  %25 = call i32 @strcmp(i8* %23, i8* %24) #9, !dbg !783
  %26 = icmp eq i32 %25, 0, !dbg !784
  br i1 %26, label %27, label %29, !dbg !785

27:                                               ; preds = %20
  %28 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !786
  store %struct.strand_t* %28, %struct.strand_t** %9, align 8, !dbg !788
  br label %34, !dbg !789

29:                                               ; preds = %20
  br label %30, !dbg !790

30:                                               ; preds = %29
  %31 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !791
  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %31, i32 0, i32 4, !dbg !792
  %33 = load %struct.strand_t*, %struct.strand_t** %32, align 8, !dbg !792
  store %struct.strand_t* %33, %struct.strand_t** %8, align 8, !dbg !793
  br label %17, !dbg !794, !llvm.loop !795

34:                                               ; preds = %27, %17
  %35 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !797
  %36 = icmp eq %struct.strand_t* %35, null, !dbg !799
  br i1 %36, label %37, label %40, !dbg !800

37:                                               ; preds = %34
  %38 = load i8*, i8** %6, align 8, !dbg !801
  %39 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %38), !dbg !803
  store i32 1, i32* %4, align 4, !dbg !804
  br label %124, !dbg !804

40:                                               ; preds = %34
  %41 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !805
  %42 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %41, i32 0, i32 5, !dbg !807
  %43 = load i32, i32* %42, align 8, !dbg !807
  %44 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !808
  %45 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %44, i32 0, i32 6, !dbg !809
  %46 = load i32, i32* %45, align 4, !dbg !809
  %47 = icmp eq i32 %43, %46, !dbg !810
  br i1 %47, label %48, label %104, !dbg !811

48:                                               ; preds = %40
  %49 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !812
  %50 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %49, i32 0, i32 6, !dbg !814
  %51 = load i32, i32* %50, align 4, !dbg !814
  %52 = add nsw i32 %51, 10, !dbg !815
  store i32 %52, i32* %13, align 4, !dbg !816
  %53 = load i32, i32* %13, align 4, !dbg !817
  %54 = sext i32 %53 to i64, !dbg !817
  %55 = mul i64 %54, 8, !dbg !819
  %56 = call noalias i8* @malloc(i64 %55) #8, !dbg !820
  %57 = bitcast i8* %56 to %struct.residue_t**, !dbg !821
  store %struct.residue_t** %57, %struct.residue_t*** %10, align 8, !dbg !822
  %58 = icmp eq %struct.residue_t** %57, null, !dbg !823
  br i1 %58, label %59, label %65, !dbg !824

59:                                               ; preds = %48
  %60 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !825
  %61 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %60, i32 0, i32 0, !dbg !827
  %62 = load i8*, i8** %61, align 8, !dbg !827
  %63 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i8* %62) #8, !dbg !828
  %64 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !829
  store i32 0, i32* %4, align 4, !dbg !830
  br label %124, !dbg !830

65:                                               ; preds = %48
  store i32 0, i32* %12, align 4, !dbg !831
  br label %66, !dbg !833

66:                                               ; preds = %84, %65
  %67 = load i32, i32* %12, align 4, !dbg !834
  %68 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !836
  %69 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %68, i32 0, i32 5, !dbg !837
  %70 = load i32, i32* %69, align 8, !dbg !837
  %71 = icmp slt i32 %67, %70, !dbg !838
  br i1 %71, label %72, label %87, !dbg !839

72:                                               ; preds = %66
  %73 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !840
  %74 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %73, i32 0, i32 7, !dbg !841
  %75 = load %struct.residue_t**, %struct.residue_t*** %74, align 8, !dbg !841
  %76 = load i32, i32* %12, align 4, !dbg !842
  %77 = sext i32 %76 to i64, !dbg !840
  %78 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %75, i64 %77, !dbg !840
  %79 = load %struct.residue_t*, %struct.residue_t** %78, align 8, !dbg !840
  %80 = load %struct.residue_t**, %struct.residue_t*** %10, align 8, !dbg !843
  %81 = load i32, i32* %12, align 4, !dbg !844
  %82 = sext i32 %81 to i64, !dbg !843
  %83 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %80, i64 %82, !dbg !843
  store %struct.residue_t* %79, %struct.residue_t** %83, align 8, !dbg !845
  br label %84, !dbg !843

84:                                               ; preds = %72
  %85 = load i32, i32* %12, align 4, !dbg !846
  %86 = add nsw i32 %85, 1, !dbg !846
  store i32 %86, i32* %12, align 4, !dbg !846
  br label %66, !dbg !847, !llvm.loop !848

87:                                               ; preds = %66
  %88 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !850
  %89 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %88, i32 0, i32 6, !dbg !852
  %90 = load i32, i32* %89, align 4, !dbg !852
  %91 = icmp sgt i32 %90, 0, !dbg !853
  br i1 %91, label %92, label %97, !dbg !854

92:                                               ; preds = %87
  %93 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !855
  %94 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %93, i32 0, i32 7, !dbg !856
  %95 = load %struct.residue_t**, %struct.residue_t*** %94, align 8, !dbg !856
  %96 = bitcast %struct.residue_t** %95 to i8*, !dbg !855
  call void @free(i8* %96) #8, !dbg !857
  br label %97, !dbg !857

97:                                               ; preds = %92, %87
  %98 = load i32, i32* %13, align 4, !dbg !858
  %99 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !859
  %100 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %99, i32 0, i32 6, !dbg !860
  store i32 %98, i32* %100, align 4, !dbg !861
  %101 = load %struct.residue_t**, %struct.residue_t*** %10, align 8, !dbg !862
  %102 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !863
  %103 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %102, i32 0, i32 7, !dbg !864
  store %struct.residue_t** %101, %struct.residue_t*** %103, align 8, !dbg !865
  br label %104, !dbg !866

104:                                              ; preds = %97, %40
  %105 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !867
  %106 = call %struct.residue_t* @copyresidue(%struct.residue_t* %105), !dbg !868
  store %struct.residue_t* %106, %struct.residue_t** %11, align 8, !dbg !869
  %107 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !870
  %108 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %107, i32 0, i32 7, !dbg !871
  %109 = load %struct.residue_t**, %struct.residue_t*** %108, align 8, !dbg !871
  %110 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !872
  %111 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %110, i32 0, i32 5, !dbg !873
  %112 = load i32, i32* %111, align 8, !dbg !873
  %113 = sext i32 %112 to i64, !dbg !870
  %114 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %109, i64 %113, !dbg !870
  store %struct.residue_t* %106, %struct.residue_t** %114, align 8, !dbg !874
  %115 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !875
  %116 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !876
  %117 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %116, i32 0, i32 9, !dbg !877
  store %struct.strand_t* %115, %struct.strand_t** %117, align 8, !dbg !878
  %118 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !879
  %119 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %118, i32 0, i32 5, !dbg !880
  %120 = load i32, i32* %119, align 8, !dbg !881
  %121 = add nsw i32 %120, 1, !dbg !881
  store i32 %121, i32* %119, align 8, !dbg !881
  %122 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !882
  %123 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %122, i32 0, i32 5, !dbg !883
  store i32 0, i32* %123, align 8, !dbg !884
  store i32 0, i32* %4, align 4, !dbg !885
  br label %124, !dbg !885

124:                                              ; preds = %104, %59, %37
  %125 = load i32, i32* %4, align 4, !dbg !886
  ret i32 %125, !dbg !886
}

declare dso_local %struct.residue_t* @copyresidue(%struct.residue_t*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @connectres(%struct.molecule_t* %0, i8* %1, i32 %2, i8* %3, i32 %4, i8* %5) #0 !dbg !887 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.molecule_t*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca %struct.strand_t*, align 8
  %15 = alloca %struct.extbond_t*, align 8
  %16 = alloca %struct.extbond_t*, align 8
  %17 = alloca %struct.residue_t*, align 8
  %18 = alloca %struct.residue_t*, align 8
  %19 = alloca %struct.atom_t*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %struct.molecule_t* %0, %struct.molecule_t** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %8, metadata !890, metadata !DIExpression()), !dbg !891
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !892, metadata !DIExpression()), !dbg !893
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !894, metadata !DIExpression()), !dbg !895
  store i8* %3, i8** %11, align 8
  call void @llvm.dbg.declare(metadata i8** %11, metadata !896, metadata !DIExpression()), !dbg !897
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !898, metadata !DIExpression()), !dbg !899
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !900, metadata !DIExpression()), !dbg !901
  call void @llvm.dbg.declare(metadata %struct.strand_t** %14, metadata !902, metadata !DIExpression()), !dbg !903
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %15, metadata !904, metadata !DIExpression()), !dbg !905
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %16, metadata !906, metadata !DIExpression()), !dbg !907
  call void @llvm.dbg.declare(metadata %struct.residue_t** %17, metadata !908, metadata !DIExpression()), !dbg !909
  call void @llvm.dbg.declare(metadata %struct.residue_t** %18, metadata !910, metadata !DIExpression()), !dbg !911
  call void @llvm.dbg.declare(metadata %struct.atom_t** %19, metadata !912, metadata !DIExpression()), !dbg !913
  call void @llvm.dbg.declare(metadata i32* %20, metadata !914, metadata !DIExpression()), !dbg !915
  call void @llvm.dbg.declare(metadata i32* %21, metadata !916, metadata !DIExpression()), !dbg !917
  call void @llvm.dbg.declare(metadata i32* %22, metadata !918, metadata !DIExpression()), !dbg !919
  %23 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !920
  %24 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %23, i32 0, i32 2, !dbg !922
  %25 = load %struct.strand_t*, %struct.strand_t** %24, align 8, !dbg !922
  store %struct.strand_t* %25, %struct.strand_t** %14, align 8, !dbg !923
  br label %26, !dbg !924

26:                                               ; preds = %38, %6
  %27 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !925
  %28 = icmp ne %struct.strand_t* %27, null, !dbg !927
  br i1 %28, label %29, label %42, !dbg !927

29:                                               ; preds = %26
  %30 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !928
  %31 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %30, i32 0, i32 0, !dbg !931
  %32 = load i8*, i8** %31, align 8, !dbg !931
  %33 = load i8*, i8** %9, align 8, !dbg !932
  %34 = call i32 @strcmp(i8* %32, i8* %33) #9, !dbg !933
  %35 = icmp eq i32 %34, 0, !dbg !934
  br i1 %35, label %36, label %37, !dbg !935

36:                                               ; preds = %29
  br label %42, !dbg !936

37:                                               ; preds = %29
  br label %38, !dbg !937

38:                                               ; preds = %37
  %39 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !938
  %40 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %39, i32 0, i32 4, !dbg !939
  %41 = load %struct.strand_t*, %struct.strand_t** %40, align 8, !dbg !939
  store %struct.strand_t* %41, %struct.strand_t** %14, align 8, !dbg !940
  br label %26, !dbg !941, !llvm.loop !942

42:                                               ; preds = %36, %26
  %43 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !944
  %44 = icmp eq %struct.strand_t* %43, null, !dbg !946
  br i1 %44, label %45, label %48, !dbg !947

45:                                               ; preds = %42
  %46 = load i8*, i8** %9, align 8, !dbg !948
  %47 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %46), !dbg !950
  store i32 1, i32* %7, align 4, !dbg !951
  br label %241, !dbg !951

48:                                               ; preds = %42
  %49 = load i32, i32* %10, align 4, !dbg !952
  %50 = icmp slt i32 %49, 1, !dbg !954
  br i1 %50, label %57, label %51, !dbg !955

51:                                               ; preds = %48
  %52 = load i32, i32* %10, align 4, !dbg !956
  %53 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !957
  %54 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %53, i32 0, i32 5, !dbg !958
  %55 = load i32, i32* %54, align 8, !dbg !958
  %56 = icmp sgt i32 %52, %55, !dbg !959
  br i1 %56, label %57, label %62, !dbg !960

57:                                               ; preds = %51, %48
  %58 = load i32, i32* %10, align 4, !dbg !961
  %59 = load i8*, i8** %9, align 8, !dbg !963
  %60 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %58, i8* %59) #8, !dbg !964
  %61 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !965
  store i32 1, i32* %7, align 4, !dbg !966
  br label %241, !dbg !966

62:                                               ; preds = %51
  %63 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !967
  %64 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %63, i32 0, i32 7, !dbg !968
  %65 = load %struct.residue_t**, %struct.residue_t*** %64, align 8, !dbg !968
  %66 = load i32, i32* %10, align 4, !dbg !969
  %67 = sub nsw i32 %66, 1, !dbg !970
  %68 = sext i32 %67 to i64, !dbg !967
  %69 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %65, i64 %68, !dbg !967
  %70 = load %struct.residue_t*, %struct.residue_t** %69, align 8, !dbg !967
  store %struct.residue_t* %70, %struct.residue_t** %17, align 8, !dbg !971
  br label %71

71:                                               ; preds = %62
  store i32 -1, i32* %21, align 4, !dbg !972
  store i32 0, i32* %20, align 4, !dbg !974
  br label %72, !dbg !975

72:                                               ; preds = %94, %71
  %73 = load i32, i32* %20, align 4, !dbg !976
  %74 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !978
  %75 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %74, i32 0, i32 15, !dbg !979
  %76 = load i32, i32* %75, align 8, !dbg !979
  %77 = icmp slt i32 %73, %76, !dbg !980
  br i1 %77, label %78, label %97, !dbg !981

78:                                               ; preds = %72
  %79 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !982
  %80 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %79, i32 0, i32 17, !dbg !984
  %81 = load %struct.atom_t*, %struct.atom_t** %80, align 8, !dbg !984
  %82 = load i32, i32* %20, align 4, !dbg !985
  %83 = sext i32 %82 to i64, !dbg !982
  %84 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %81, i64 %83, !dbg !982
  store %struct.atom_t* %84, %struct.atom_t** %19, align 8, !dbg !986
  %85 = load %struct.atom_t*, %struct.atom_t** %19, align 8, !dbg !987
  %86 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %85, i32 0, i32 0, !dbg !989
  %87 = load i8*, i8** %86, align 8, !dbg !989
  %88 = load i8*, i8** %11, align 8, !dbg !990
  %89 = call i32 @strcmp(i8* %87, i8* %88) #9, !dbg !991
  %90 = icmp eq i32 %89, 0, !dbg !992
  br i1 %90, label %91, label %93, !dbg !993

91:                                               ; preds = %78
  %92 = load i32, i32* %20, align 4, !dbg !994
  store i32 %92, i32* %21, align 4, !dbg !996
  br label %97, !dbg !997

93:                                               ; preds = %78
  br label %94, !dbg !998

94:                                               ; preds = %93
  %95 = load i32, i32* %20, align 4, !dbg !999
  %96 = add nsw i32 %95, 1, !dbg !999
  store i32 %96, i32* %20, align 4, !dbg !999
  br label %72, !dbg !1000, !llvm.loop !1001

97:                                               ; preds = %91, %72
  %98 = load i32, i32* %21, align 4, !dbg !1003
  %99 = icmp eq i32 %98, -1, !dbg !1005
  br i1 %99, label %100, label %107, !dbg !1006

100:                                              ; preds = %97
  %101 = load i8*, i8** %11, align 8, !dbg !1007
  %102 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !1009
  %103 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %102, i32 0, i32 4, !dbg !1010
  %104 = load i8*, i8** %103, align 8, !dbg !1010
  %105 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* %101, i8* %104) #8, !dbg !1011
  %106 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !1012
  store i32 1, i32* %7, align 4, !dbg !1013
  br label %241, !dbg !1013

107:                                              ; preds = %97
  %108 = load i32, i32* %12, align 4, !dbg !1014
  %109 = icmp slt i32 %108, 1, !dbg !1016
  br i1 %109, label %116, label %110, !dbg !1017

110:                                              ; preds = %107
  %111 = load i32, i32* %12, align 4, !dbg !1018
  %112 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !1019
  %113 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %112, i32 0, i32 5, !dbg !1020
  %114 = load i32, i32* %113, align 8, !dbg !1020
  %115 = icmp sgt i32 %111, %114, !dbg !1021
  br i1 %115, label %116, label %121, !dbg !1022

116:                                              ; preds = %110, %107
  %117 = load i32, i32* %12, align 4, !dbg !1023
  %118 = load i8*, i8** %9, align 8, !dbg !1025
  %119 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i32 %117, i8* %118) #8, !dbg !1026
  %120 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !1027
  store i32 1, i32* %7, align 4, !dbg !1028
  br label %241, !dbg !1028

121:                                              ; preds = %110
  %122 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !1029
  %123 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %122, i32 0, i32 7, !dbg !1030
  %124 = load %struct.residue_t**, %struct.residue_t*** %123, align 8, !dbg !1030
  %125 = load i32, i32* %12, align 4, !dbg !1031
  %126 = sub nsw i32 %125, 1, !dbg !1032
  %127 = sext i32 %126 to i64, !dbg !1029
  %128 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %124, i64 %127, !dbg !1029
  %129 = load %struct.residue_t*, %struct.residue_t** %128, align 8, !dbg !1029
  store %struct.residue_t* %129, %struct.residue_t** %18, align 8, !dbg !1033
  br label %130

130:                                              ; preds = %121
  store i32 -1, i32* %22, align 4, !dbg !1034
  store i32 0, i32* %20, align 4, !dbg !1036
  br label %131, !dbg !1037

131:                                              ; preds = %153, %130
  %132 = load i32, i32* %20, align 4, !dbg !1038
  %133 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1040
  %134 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %133, i32 0, i32 15, !dbg !1041
  %135 = load i32, i32* %134, align 8, !dbg !1041
  %136 = icmp slt i32 %132, %135, !dbg !1042
  br i1 %136, label %137, label %156, !dbg !1043

137:                                              ; preds = %131
  %138 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1044
  %139 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %138, i32 0, i32 17, !dbg !1046
  %140 = load %struct.atom_t*, %struct.atom_t** %139, align 8, !dbg !1046
  %141 = load i32, i32* %20, align 4, !dbg !1047
  %142 = sext i32 %141 to i64, !dbg !1044
  %143 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %140, i64 %142, !dbg !1044
  store %struct.atom_t* %143, %struct.atom_t** %19, align 8, !dbg !1048
  %144 = load %struct.atom_t*, %struct.atom_t** %19, align 8, !dbg !1049
  %145 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %144, i32 0, i32 0, !dbg !1051
  %146 = load i8*, i8** %145, align 8, !dbg !1051
  %147 = load i8*, i8** %13, align 8, !dbg !1052
  %148 = call i32 @strcmp(i8* %146, i8* %147) #9, !dbg !1053
  %149 = icmp eq i32 %148, 0, !dbg !1054
  br i1 %149, label %150, label %152, !dbg !1055

150:                                              ; preds = %137
  %151 = load i32, i32* %20, align 4, !dbg !1056
  store i32 %151, i32* %22, align 4, !dbg !1058
  br label %156, !dbg !1059

152:                                              ; preds = %137
  br label %153, !dbg !1060

153:                                              ; preds = %152
  %154 = load i32, i32* %20, align 4, !dbg !1061
  %155 = add nsw i32 %154, 1, !dbg !1061
  store i32 %155, i32* %20, align 4, !dbg !1061
  br label %131, !dbg !1062, !llvm.loop !1063

156:                                              ; preds = %150, %131
  %157 = load i32, i32* %22, align 4, !dbg !1065
  %158 = icmp eq i32 %157, -1, !dbg !1067
  br i1 %158, label %159, label %166, !dbg !1068

159:                                              ; preds = %156
  %160 = load i8*, i8** %13, align 8, !dbg !1069
  %161 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1071
  %162 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %161, i32 0, i32 4, !dbg !1072
  %163 = load i8*, i8** %162, align 8, !dbg !1072
  %164 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* %160, i8* %163) #8, !dbg !1073
  %165 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !1074
  store i32 1, i32* %7, align 4, !dbg !1075
  br label %241, !dbg !1075

166:                                              ; preds = %156
  %167 = call noalias i8* @malloc(i64 24) #8, !dbg !1076
  %168 = bitcast i8* %167 to %struct.extbond_t*, !dbg !1078
  store %struct.extbond_t* %168, %struct.extbond_t** %15, align 8, !dbg !1079
  %169 = icmp eq %struct.extbond_t* %168, null, !dbg !1080
  br i1 %169, label %170, label %183, !dbg !1081

170:                                              ; preds = %166
  %171 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !1082
  %172 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %171, i32 0, i32 4, !dbg !1084
  %173 = load i8*, i8** %172, align 8, !dbg !1084
  %174 = load i32, i32* %10, align 4, !dbg !1085
  %175 = load i8*, i8** %11, align 8, !dbg !1086
  %176 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1087
  %177 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %176, i32 0, i32 4, !dbg !1088
  %178 = load i8*, i8** %177, align 8, !dbg !1088
  %179 = load i32, i32* %12, align 4, !dbg !1089
  %180 = load i8*, i8** %13, align 8, !dbg !1090
  %181 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i8* %173, i32 %174, i8* %175, i8* %178, i32 %179, i8* %180) #8, !dbg !1091
  %182 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !1092
  store i32 1, i32* %7, align 4, !dbg !1093
  br label %241, !dbg !1093

183:                                              ; preds = %166
  %184 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !1094
  %185 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %184, i32 0, i32 10, !dbg !1096
  %186 = load %struct.extbond_t*, %struct.extbond_t** %185, align 8, !dbg !1096
  %187 = load %struct.extbond_t*, %struct.extbond_t** %15, align 8, !dbg !1097
  %188 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %187, i32 0, i32 0, !dbg !1098
  store %struct.extbond_t* %186, %struct.extbond_t** %188, align 8, !dbg !1099
  %189 = load %struct.extbond_t*, %struct.extbond_t** %15, align 8, !dbg !1100
  %190 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !1101
  %191 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %190, i32 0, i32 10, !dbg !1102
  store %struct.extbond_t* %189, %struct.extbond_t** %191, align 8, !dbg !1103
  %192 = load i32, i32* %21, align 4, !dbg !1104
  %193 = add nsw i32 %192, 1, !dbg !1105
  %194 = load %struct.extbond_t*, %struct.extbond_t** %15, align 8, !dbg !1106
  %195 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %194, i32 0, i32 1, !dbg !1107
  store i32 %193, i32* %195, align 8, !dbg !1108
  %196 = load i32, i32* %12, align 4, !dbg !1109
  %197 = load %struct.extbond_t*, %struct.extbond_t** %15, align 8, !dbg !1110
  %198 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %197, i32 0, i32 2, !dbg !1111
  store i32 %196, i32* %198, align 4, !dbg !1112
  %199 = load i32, i32* %22, align 4, !dbg !1113
  %200 = add nsw i32 %199, 1, !dbg !1114
  %201 = load %struct.extbond_t*, %struct.extbond_t** %15, align 8, !dbg !1115
  %202 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %201, i32 0, i32 3, !dbg !1116
  store i32 %200, i32* %202, align 8, !dbg !1117
  br label %203

203:                                              ; preds = %183
  %204 = call noalias i8* @malloc(i64 24) #8, !dbg !1118
  %205 = bitcast i8* %204 to %struct.extbond_t*, !dbg !1120
  store %struct.extbond_t* %205, %struct.extbond_t** %16, align 8, !dbg !1121
  %206 = icmp eq %struct.extbond_t* %205, null, !dbg !1122
  br i1 %206, label %207, label %220, !dbg !1123

207:                                              ; preds = %203
  %208 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1124
  %209 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %208, i32 0, i32 4, !dbg !1126
  %210 = load i8*, i8** %209, align 8, !dbg !1126
  %211 = load i32, i32* %12, align 4, !dbg !1127
  %212 = load i8*, i8** %13, align 8, !dbg !1128
  %213 = load %struct.residue_t*, %struct.residue_t** %17, align 8, !dbg !1129
  %214 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %213, i32 0, i32 4, !dbg !1130
  %215 = load i8*, i8** %214, align 8, !dbg !1130
  %216 = load i32, i32* %10, align 4, !dbg !1131
  %217 = load i8*, i8** %11, align 8, !dbg !1132
  %218 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i8* %210, i32 %211, i8* %212, i8* %215, i32 %216, i8* %217) #8, !dbg !1133
  %219 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !1134
  store i32 1, i32* %7, align 4, !dbg !1135
  br label %241, !dbg !1135

220:                                              ; preds = %203
  %221 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1136
  %222 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %221, i32 0, i32 10, !dbg !1138
  %223 = load %struct.extbond_t*, %struct.extbond_t** %222, align 8, !dbg !1138
  %224 = load %struct.extbond_t*, %struct.extbond_t** %16, align 8, !dbg !1139
  %225 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %224, i32 0, i32 0, !dbg !1140
  store %struct.extbond_t* %223, %struct.extbond_t** %225, align 8, !dbg !1141
  %226 = load %struct.extbond_t*, %struct.extbond_t** %16, align 8, !dbg !1142
  %227 = load %struct.residue_t*, %struct.residue_t** %18, align 8, !dbg !1143
  %228 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %227, i32 0, i32 10, !dbg !1144
  store %struct.extbond_t* %226, %struct.extbond_t** %228, align 8, !dbg !1145
  %229 = load i32, i32* %22, align 4, !dbg !1146
  %230 = add nsw i32 %229, 1, !dbg !1147
  %231 = load %struct.extbond_t*, %struct.extbond_t** %16, align 8, !dbg !1148
  %232 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %231, i32 0, i32 1, !dbg !1149
  store i32 %230, i32* %232, align 8, !dbg !1150
  %233 = load i32, i32* %10, align 4, !dbg !1151
  %234 = load %struct.extbond_t*, %struct.extbond_t** %16, align 8, !dbg !1152
  %235 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %234, i32 0, i32 2, !dbg !1153
  store i32 %233, i32* %235, align 4, !dbg !1154
  %236 = load i32, i32* %21, align 4, !dbg !1155
  %237 = add nsw i32 %236, 1, !dbg !1156
  %238 = load %struct.extbond_t*, %struct.extbond_t** %16, align 8, !dbg !1157
  %239 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %238, i32 0, i32 3, !dbg !1158
  store i32 %237, i32* %239, align 8, !dbg !1159
  br label %240

240:                                              ; preds = %220
  store i32 0, i32* %7, align 4, !dbg !1160
  br label %241, !dbg !1160

241:                                              ; preds = %240, %207, %170, %159, %116, %100, %57, %45
  %242 = load i32, i32* %7, align 4, !dbg !1161
  ret i32 %242, !dbg !1161
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mergestr(%struct.molecule_t* %0, i8* %1, i8* %2, %struct.molecule_t* %3, i8* %4, i8* %5) #0 !dbg !1162 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.molecule_t*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.molecule_t*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.strand_t*, align 8
  %21 = alloca %struct.strand_t*, align 8
  %22 = alloca %struct.strand_t*, align 8
  %23 = alloca %struct.residue_t**, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %8, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %8, metadata !1165, metadata !DIExpression()), !dbg !1166
  store i8* %1, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !1167, metadata !DIExpression()), !dbg !1168
  store i8* %2, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1169, metadata !DIExpression()), !dbg !1170
  store %struct.molecule_t* %3, %struct.molecule_t** %11, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %11, metadata !1171, metadata !DIExpression()), !dbg !1172
  store i8* %4, i8** %12, align 8
  call void @llvm.dbg.declare(metadata i8** %12, metadata !1173, metadata !DIExpression()), !dbg !1174
  store i8* %5, i8** %13, align 8
  call void @llvm.dbg.declare(metadata i8** %13, metadata !1175, metadata !DIExpression()), !dbg !1176
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1177, metadata !DIExpression()), !dbg !1178
  call void @llvm.dbg.declare(metadata i32* %15, metadata !1179, metadata !DIExpression()), !dbg !1180
  call void @llvm.dbg.declare(metadata i32* %16, metadata !1181, metadata !DIExpression()), !dbg !1182
  call void @llvm.dbg.declare(metadata i32* %17, metadata !1183, metadata !DIExpression()), !dbg !1184
  call void @llvm.dbg.declare(metadata i32* %18, metadata !1185, metadata !DIExpression()), !dbg !1186
  call void @llvm.dbg.declare(metadata i32* %19, metadata !1187, metadata !DIExpression()), !dbg !1188
  call void @llvm.dbg.declare(metadata %struct.strand_t** %20, metadata !1189, metadata !DIExpression()), !dbg !1190
  call void @llvm.dbg.declare(metadata %struct.strand_t** %21, metadata !1191, metadata !DIExpression()), !dbg !1192
  call void @llvm.dbg.declare(metadata %struct.strand_t** %22, metadata !1193, metadata !DIExpression()), !dbg !1194
  call void @llvm.dbg.declare(metadata %struct.residue_t*** %23, metadata !1195, metadata !DIExpression()), !dbg !1196
  %24 = load i8*, i8** %10, align 8, !dbg !1197
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !1199
  %26 = icmp eq i32 %25, 0, !dbg !1200
  br i1 %26, label %27, label %32, !dbg !1201

27:                                               ; preds = %6
  %28 = load i8*, i8** %13, align 8, !dbg !1202
  %29 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !1203
  %30 = icmp eq i32 %29, 0, !dbg !1204
  br i1 %30, label %31, label %32, !dbg !1205

31:                                               ; preds = %27
  store i32 1, i32* %14, align 4, !dbg !1206
  br label %47, !dbg !1207

32:                                               ; preds = %27, %6
  %33 = load i8*, i8** %10, align 8, !dbg !1208
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !1210
  %35 = icmp eq i32 %34, 0, !dbg !1211
  br i1 %35, label %36, label %41, !dbg !1212

36:                                               ; preds = %32
  %37 = load i8*, i8** %13, align 8, !dbg !1213
  %38 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #9, !dbg !1214
  %39 = icmp eq i32 %38, 0, !dbg !1215
  br i1 %39, label %40, label %41, !dbg !1216

40:                                               ; preds = %36
  store i32 0, i32* %14, align 4, !dbg !1217
  br label %46, !dbg !1218

41:                                               ; preds = %36, %32
  %42 = load i8*, i8** %10, align 8, !dbg !1219
  %43 = load i8*, i8** %13, align 8, !dbg !1221
  %44 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8* %42, i8* %43) #8, !dbg !1222
  %45 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !1223
  store i32 1, i32* %7, align 4, !dbg !1224
  br label %413, !dbg !1224

46:                                               ; preds = %40
  br label %47

47:                                               ; preds = %46, %31
  store %struct.strand_t* null, %struct.strand_t** %21, align 8, !dbg !1225
  %48 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !1227
  %49 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %48, i32 0, i32 2, !dbg !1228
  %50 = load %struct.strand_t*, %struct.strand_t** %49, align 8, !dbg !1228
  store %struct.strand_t* %50, %struct.strand_t** %20, align 8, !dbg !1229
  br label %51, !dbg !1230

51:                                               ; preds = %64, %47
  %52 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1231
  %53 = icmp ne %struct.strand_t* %52, null, !dbg !1233
  br i1 %53, label %54, label %68, !dbg !1233

54:                                               ; preds = %51
  %55 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1234
  %56 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %55, i32 0, i32 0, !dbg !1237
  %57 = load i8*, i8** %56, align 8, !dbg !1237
  %58 = load i8*, i8** %9, align 8, !dbg !1238
  %59 = call i32 @strcmp(i8* %57, i8* %58) #9, !dbg !1239
  %60 = icmp eq i32 %59, 0, !dbg !1240
  br i1 %60, label %61, label %63, !dbg !1241

61:                                               ; preds = %54
  %62 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1242
  store %struct.strand_t* %62, %struct.strand_t** %21, align 8, !dbg !1244
  br label %68, !dbg !1245

63:                                               ; preds = %54
  br label %64, !dbg !1246

64:                                               ; preds = %63
  %65 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1247
  %66 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %65, i32 0, i32 4, !dbg !1248
  %67 = load %struct.strand_t*, %struct.strand_t** %66, align 8, !dbg !1248
  store %struct.strand_t* %67, %struct.strand_t** %20, align 8, !dbg !1249
  br label %51, !dbg !1250, !llvm.loop !1251

68:                                               ; preds = %61, %51
  %69 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1253
  %70 = icmp eq %struct.strand_t* %69, null, !dbg !1255
  br i1 %70, label %71, label %74, !dbg !1256

71:                                               ; preds = %68
  %72 = load i8*, i8** %9, align 8, !dbg !1257
  %73 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %72), !dbg !1259
  store i32 1, i32* %7, align 4, !dbg !1260
  br label %413, !dbg !1260

74:                                               ; preds = %68
  store %struct.strand_t* null, %struct.strand_t** %22, align 8, !dbg !1261
  %75 = load %struct.molecule_t*, %struct.molecule_t** %11, align 8, !dbg !1263
  %76 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %75, i32 0, i32 2, !dbg !1264
  %77 = load %struct.strand_t*, %struct.strand_t** %76, align 8, !dbg !1264
  store %struct.strand_t* %77, %struct.strand_t** %20, align 8, !dbg !1265
  br label %78, !dbg !1266

78:                                               ; preds = %91, %74
  %79 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1267
  %80 = icmp ne %struct.strand_t* %79, null, !dbg !1269
  br i1 %80, label %81, label %95, !dbg !1269

81:                                               ; preds = %78
  %82 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1270
  %83 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %82, i32 0, i32 0, !dbg !1273
  %84 = load i8*, i8** %83, align 8, !dbg !1273
  %85 = load i8*, i8** %12, align 8, !dbg !1274
  %86 = call i32 @strcmp(i8* %84, i8* %85) #9, !dbg !1275
  %87 = icmp eq i32 %86, 0, !dbg !1276
  br i1 %87, label %88, label %90, !dbg !1277

88:                                               ; preds = %81
  %89 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1278
  store %struct.strand_t* %89, %struct.strand_t** %22, align 8, !dbg !1280
  br label %95, !dbg !1281

90:                                               ; preds = %81
  br label %91, !dbg !1282

91:                                               ; preds = %90
  %92 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !1283
  %93 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %92, i32 0, i32 4, !dbg !1284
  %94 = load %struct.strand_t*, %struct.strand_t** %93, align 8, !dbg !1284
  store %struct.strand_t* %94, %struct.strand_t** %20, align 8, !dbg !1285
  br label %78, !dbg !1286, !llvm.loop !1287

95:                                               ; preds = %88, %78
  %96 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1289
  %97 = icmp eq %struct.strand_t* %96, null, !dbg !1291
  br i1 %97, label %98, label %101, !dbg !1292

98:                                               ; preds = %95
  %99 = load i8*, i8** %12, align 8, !dbg !1293
  %100 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %99), !dbg !1295
  store i32 1, i32* %7, align 4, !dbg !1296
  br label %413, !dbg !1296

101:                                              ; preds = %95
  %102 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1297
  %103 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %102, i32 0, i32 5, !dbg !1298
  %104 = load i32, i32* %103, align 8, !dbg !1298
  %105 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1299
  %106 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %105, i32 0, i32 5, !dbg !1300
  %107 = load i32, i32* %106, align 8, !dbg !1300
  %108 = add nsw i32 %104, %107, !dbg !1301
  store i32 %108, i32* %15, align 4, !dbg !1302
  %109 = load i32, i32* %15, align 4, !dbg !1303
  %110 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1305
  %111 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %110, i32 0, i32 6, !dbg !1306
  %112 = load i32, i32* %111, align 4, !dbg !1306
  %113 = icmp sgt i32 %109, %112, !dbg !1307
  br i1 %113, label %114, label %164, !dbg !1308

114:                                              ; preds = %101
  %115 = load i32, i32* %15, align 4, !dbg !1309
  %116 = add nsw i32 %115, 10, !dbg !1311
  store i32 %116, i32* %16, align 4, !dbg !1312
  %117 = load i32, i32* %16, align 4, !dbg !1313
  %118 = sext i32 %117 to i64, !dbg !1313
  %119 = mul i64 %118, 8, !dbg !1315
  %120 = call noalias i8* @malloc(i64 %119) #8, !dbg !1316
  %121 = bitcast i8* %120 to %struct.residue_t**, !dbg !1317
  store %struct.residue_t** %121, %struct.residue_t*** %23, align 8, !dbg !1318
  %122 = icmp eq %struct.residue_t** %121, null, !dbg !1319
  br i1 %122, label %123, label %125, !dbg !1320

123:                                              ; preds = %114
  %124 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0)), !dbg !1321
  store i32 1, i32* %7, align 4, !dbg !1323
  br label %413, !dbg !1323

125:                                              ; preds = %114
  store i32 0, i32* %17, align 4, !dbg !1324
  br label %126, !dbg !1326

126:                                              ; preds = %144, %125
  %127 = load i32, i32* %17, align 4, !dbg !1327
  %128 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1329
  %129 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %128, i32 0, i32 5, !dbg !1330
  %130 = load i32, i32* %129, align 8, !dbg !1330
  %131 = icmp slt i32 %127, %130, !dbg !1331
  br i1 %131, label %132, label %147, !dbg !1332

132:                                              ; preds = %126
  %133 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1333
  %134 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %133, i32 0, i32 7, !dbg !1334
  %135 = load %struct.residue_t**, %struct.residue_t*** %134, align 8, !dbg !1334
  %136 = load i32, i32* %17, align 4, !dbg !1335
  %137 = sext i32 %136 to i64, !dbg !1333
  %138 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %135, i64 %137, !dbg !1333
  %139 = load %struct.residue_t*, %struct.residue_t** %138, align 8, !dbg !1333
  %140 = load %struct.residue_t**, %struct.residue_t*** %23, align 8, !dbg !1336
  %141 = load i32, i32* %17, align 4, !dbg !1337
  %142 = sext i32 %141 to i64, !dbg !1336
  %143 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %140, i64 %142, !dbg !1336
  store %struct.residue_t* %139, %struct.residue_t** %143, align 8, !dbg !1338
  br label %144, !dbg !1336

144:                                              ; preds = %132
  %145 = load i32, i32* %17, align 4, !dbg !1339
  %146 = add nsw i32 %145, 1, !dbg !1339
  store i32 %146, i32* %17, align 4, !dbg !1339
  br label %126, !dbg !1340, !llvm.loop !1341

147:                                              ; preds = %126
  %148 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1343
  %149 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %148, i32 0, i32 6, !dbg !1345
  %150 = load i32, i32* %149, align 4, !dbg !1345
  %151 = icmp sgt i32 %150, 0, !dbg !1346
  br i1 %151, label %152, label %157, !dbg !1347

152:                                              ; preds = %147
  %153 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1348
  %154 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %153, i32 0, i32 7, !dbg !1349
  %155 = load %struct.residue_t**, %struct.residue_t*** %154, align 8, !dbg !1349
  %156 = bitcast %struct.residue_t** %155 to i8*, !dbg !1348
  call void @free(i8* %156) #8, !dbg !1350
  br label %157, !dbg !1350

157:                                              ; preds = %152, %147
  %158 = load %struct.residue_t**, %struct.residue_t*** %23, align 8, !dbg !1351
  %159 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1352
  %160 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %159, i32 0, i32 7, !dbg !1353
  store %struct.residue_t** %158, %struct.residue_t*** %160, align 8, !dbg !1354
  %161 = load i32, i32* %16, align 4, !dbg !1355
  %162 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1356
  %163 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %162, i32 0, i32 6, !dbg !1357
  store i32 %161, i32* %163, align 4, !dbg !1358
  br label %164, !dbg !1359

164:                                              ; preds = %157, %101
  %165 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !1360
  %166 = load %struct.molecule_t*, %struct.molecule_t** %11, align 8, !dbg !1361
  %167 = icmp ne %struct.molecule_t* %165, %166, !dbg !1362
  %168 = zext i1 %167 to i32, !dbg !1362
  store i32 %168, i32* %19, align 4, !dbg !1363
  %169 = load i32, i32* %14, align 4, !dbg !1364
  %170 = icmp ne i32 %169, 0, !dbg !1364
  br i1 %170, label %171, label %276, !dbg !1366

171:                                              ; preds = %164
  %172 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1367
  %173 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %172, i32 0, i32 5, !dbg !1369
  %174 = load i32, i32* %173, align 8, !dbg !1369
  store i32 %174, i32* %17, align 4, !dbg !1370
  %175 = load i32, i32* %19, align 4, !dbg !1371
  %176 = icmp ne i32 %175, 0, !dbg !1371
  br i1 %176, label %177, label %216, !dbg !1373

177:                                              ; preds = %171
  store i32 0, i32* %18, align 4, !dbg !1374
  br label %178, !dbg !1377

178:                                              ; preds = %212, %177
  %179 = load i32, i32* %18, align 4, !dbg !1378
  %180 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1380
  %181 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %180, i32 0, i32 5, !dbg !1381
  %182 = load i32, i32* %181, align 8, !dbg !1381
  %183 = icmp slt i32 %179, %182, !dbg !1382
  br i1 %183, label %184, label %215, !dbg !1383

184:                                              ; preds = %178
  %185 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1384
  %186 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %185, i32 0, i32 7, !dbg !1386
  %187 = load %struct.residue_t**, %struct.residue_t*** %186, align 8, !dbg !1386
  %188 = load i32, i32* %18, align 4, !dbg !1387
  %189 = sext i32 %188 to i64, !dbg !1384
  %190 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %187, i64 %189, !dbg !1384
  %191 = load %struct.residue_t*, %struct.residue_t** %190, align 8, !dbg !1384
  %192 = call %struct.residue_t* @copyresidue(%struct.residue_t* %191), !dbg !1388
  %193 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1389
  %194 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %193, i32 0, i32 7, !dbg !1390
  %195 = load %struct.residue_t**, %struct.residue_t*** %194, align 8, !dbg !1390
  %196 = load i32, i32* %17, align 4, !dbg !1391
  %197 = load i32, i32* %18, align 4, !dbg !1392
  %198 = add nsw i32 %196, %197, !dbg !1393
  %199 = sext i32 %198 to i64, !dbg !1389
  %200 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %195, i64 %199, !dbg !1389
  store %struct.residue_t* %192, %struct.residue_t** %200, align 8, !dbg !1394
  %201 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1395
  %202 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1396
  %203 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %202, i32 0, i32 7, !dbg !1397
  %204 = load %struct.residue_t**, %struct.residue_t*** %203, align 8, !dbg !1397
  %205 = load i32, i32* %17, align 4, !dbg !1398
  %206 = load i32, i32* %18, align 4, !dbg !1399
  %207 = add nsw i32 %205, %206, !dbg !1400
  %208 = sext i32 %207 to i64, !dbg !1396
  %209 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %204, i64 %208, !dbg !1396
  %210 = load %struct.residue_t*, %struct.residue_t** %209, align 8, !dbg !1396
  %211 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %210, i32 0, i32 9, !dbg !1401
  store %struct.strand_t* %201, %struct.strand_t** %211, align 8, !dbg !1402
  br label %212, !dbg !1403

212:                                              ; preds = %184
  %213 = load i32, i32* %18, align 4, !dbg !1404
  %214 = add nsw i32 %213, 1, !dbg !1404
  store i32 %214, i32* %18, align 4, !dbg !1404
  br label %178, !dbg !1405, !llvm.loop !1406

215:                                              ; preds = %178
  br label %254, !dbg !1408

216:                                              ; preds = %171
  store i32 0, i32* %18, align 4, !dbg !1409
  br label %217, !dbg !1412

217:                                              ; preds = %250, %216
  %218 = load i32, i32* %18, align 4, !dbg !1413
  %219 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1415
  %220 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %219, i32 0, i32 5, !dbg !1416
  %221 = load i32, i32* %220, align 8, !dbg !1416
  %222 = icmp slt i32 %218, %221, !dbg !1417
  br i1 %222, label %223, label %253, !dbg !1418

223:                                              ; preds = %217
  %224 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1419
  %225 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %224, i32 0, i32 7, !dbg !1421
  %226 = load %struct.residue_t**, %struct.residue_t*** %225, align 8, !dbg !1421
  %227 = load i32, i32* %18, align 4, !dbg !1422
  %228 = sext i32 %227 to i64, !dbg !1419
  %229 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %226, i64 %228, !dbg !1419
  %230 = load %struct.residue_t*, %struct.residue_t** %229, align 8, !dbg !1419
  %231 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1423
  %232 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %231, i32 0, i32 7, !dbg !1424
  %233 = load %struct.residue_t**, %struct.residue_t*** %232, align 8, !dbg !1424
  %234 = load i32, i32* %17, align 4, !dbg !1425
  %235 = load i32, i32* %18, align 4, !dbg !1426
  %236 = add nsw i32 %234, %235, !dbg !1427
  %237 = sext i32 %236 to i64, !dbg !1423
  %238 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %233, i64 %237, !dbg !1423
  store %struct.residue_t* %230, %struct.residue_t** %238, align 8, !dbg !1428
  %239 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1429
  %240 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1430
  %241 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %240, i32 0, i32 7, !dbg !1431
  %242 = load %struct.residue_t**, %struct.residue_t*** %241, align 8, !dbg !1431
  %243 = load i32, i32* %17, align 4, !dbg !1432
  %244 = load i32, i32* %18, align 4, !dbg !1433
  %245 = add nsw i32 %243, %244, !dbg !1434
  %246 = sext i32 %245 to i64, !dbg !1430
  %247 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %242, i64 %246, !dbg !1430
  %248 = load %struct.residue_t*, %struct.residue_t** %247, align 8, !dbg !1430
  %249 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %248, i32 0, i32 9, !dbg !1435
  store %struct.strand_t* %239, %struct.strand_t** %249, align 8, !dbg !1436
  br label %250, !dbg !1437

250:                                              ; preds = %223
  %251 = load i32, i32* %18, align 4, !dbg !1438
  %252 = add nsw i32 %251, 1, !dbg !1438
  store i32 %252, i32* %18, align 4, !dbg !1438
  br label %217, !dbg !1439, !llvm.loop !1440

253:                                              ; preds = %217
  br label %254

254:                                              ; preds = %253, %215
  store i32 0, i32* %18, align 4, !dbg !1442
  br label %255, !dbg !1444

255:                                              ; preds = %272, %254
  %256 = load i32, i32* %18, align 4, !dbg !1445
  %257 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1447
  %258 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %257, i32 0, i32 5, !dbg !1448
  %259 = load i32, i32* %258, align 8, !dbg !1448
  %260 = icmp slt i32 %256, %259, !dbg !1449
  br i1 %260, label %261, label %275, !dbg !1450

261:                                              ; preds = %255
  %262 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1451
  %263 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %262, i32 0, i32 7, !dbg !1452
  %264 = load %struct.residue_t**, %struct.residue_t*** %263, align 8, !dbg !1452
  %265 = load i32, i32* %17, align 4, !dbg !1453
  %266 = load i32, i32* %18, align 4, !dbg !1454
  %267 = add nsw i32 %265, %266, !dbg !1455
  %268 = sext i32 %267 to i64, !dbg !1451
  %269 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %264, i64 %268, !dbg !1451
  %270 = load %struct.residue_t*, %struct.residue_t** %269, align 8, !dbg !1451
  %271 = load i32, i32* %17, align 4, !dbg !1456
  call void @fixextbonds(%struct.residue_t* %270, i32 %271), !dbg !1457
  br label %272, !dbg !1457

272:                                              ; preds = %261
  %273 = load i32, i32* %18, align 4, !dbg !1458
  %274 = add nsw i32 %273, 1, !dbg !1458
  store i32 %274, i32* %18, align 4, !dbg !1458
  br label %255, !dbg !1459, !llvm.loop !1460

275:                                              ; preds = %255
  br label %400, !dbg !1462

276:                                              ; preds = %164
  %277 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1463
  %278 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %277, i32 0, i32 5, !dbg !1465
  %279 = load i32, i32* %278, align 8, !dbg !1465
  store i32 %279, i32* %18, align 4, !dbg !1466
  %280 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1467
  %281 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %280, i32 0, i32 5, !dbg !1469
  %282 = load i32, i32* %281, align 8, !dbg !1469
  %283 = sub nsw i32 %282, 1, !dbg !1470
  store i32 %283, i32* %17, align 4, !dbg !1471
  br label %284, !dbg !1472

284:                                              ; preds = %303, %276
  %285 = load i32, i32* %17, align 4, !dbg !1473
  %286 = icmp sge i32 %285, 0, !dbg !1475
  br i1 %286, label %287, label %306, !dbg !1476

287:                                              ; preds = %284
  %288 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1477
  %289 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %288, i32 0, i32 7, !dbg !1478
  %290 = load %struct.residue_t**, %struct.residue_t*** %289, align 8, !dbg !1478
  %291 = load i32, i32* %17, align 4, !dbg !1479
  %292 = sext i32 %291 to i64, !dbg !1477
  %293 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %290, i64 %292, !dbg !1477
  %294 = load %struct.residue_t*, %struct.residue_t** %293, align 8, !dbg !1477
  %295 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1480
  %296 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %295, i32 0, i32 7, !dbg !1481
  %297 = load %struct.residue_t**, %struct.residue_t*** %296, align 8, !dbg !1481
  %298 = load i32, i32* %18, align 4, !dbg !1482
  %299 = load i32, i32* %17, align 4, !dbg !1483
  %300 = add nsw i32 %298, %299, !dbg !1484
  %301 = sext i32 %300 to i64, !dbg !1480
  %302 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %297, i64 %301, !dbg !1480
  store %struct.residue_t* %294, %struct.residue_t** %302, align 8, !dbg !1485
  br label %303, !dbg !1480

303:                                              ; preds = %287
  %304 = load i32, i32* %17, align 4, !dbg !1486
  %305 = add nsw i32 %304, -1, !dbg !1486
  store i32 %305, i32* %17, align 4, !dbg !1486
  br label %284, !dbg !1487, !llvm.loop !1488

306:                                              ; preds = %284
  %307 = load i32, i32* %19, align 4, !dbg !1490
  %308 = icmp ne i32 %307, 0, !dbg !1490
  br i1 %308, label %309, label %344, !dbg !1492

309:                                              ; preds = %306
  store i32 0, i32* %18, align 4, !dbg !1493
  br label %310, !dbg !1496

310:                                              ; preds = %340, %309
  %311 = load i32, i32* %18, align 4, !dbg !1497
  %312 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1499
  %313 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %312, i32 0, i32 5, !dbg !1500
  %314 = load i32, i32* %313, align 8, !dbg !1500
  %315 = icmp slt i32 %311, %314, !dbg !1501
  br i1 %315, label %316, label %343, !dbg !1502

316:                                              ; preds = %310
  %317 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1503
  %318 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %317, i32 0, i32 7, !dbg !1505
  %319 = load %struct.residue_t**, %struct.residue_t*** %318, align 8, !dbg !1505
  %320 = load i32, i32* %18, align 4, !dbg !1506
  %321 = sext i32 %320 to i64, !dbg !1503
  %322 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %319, i64 %321, !dbg !1503
  %323 = load %struct.residue_t*, %struct.residue_t** %322, align 8, !dbg !1503
  %324 = call %struct.residue_t* @copyresidue(%struct.residue_t* %323), !dbg !1507
  %325 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1508
  %326 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %325, i32 0, i32 7, !dbg !1509
  %327 = load %struct.residue_t**, %struct.residue_t*** %326, align 8, !dbg !1509
  %328 = load i32, i32* %18, align 4, !dbg !1510
  %329 = sext i32 %328 to i64, !dbg !1508
  %330 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %327, i64 %329, !dbg !1508
  store %struct.residue_t* %324, %struct.residue_t** %330, align 8, !dbg !1511
  %331 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1512
  %332 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1513
  %333 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %332, i32 0, i32 7, !dbg !1514
  %334 = load %struct.residue_t**, %struct.residue_t*** %333, align 8, !dbg !1514
  %335 = load i32, i32* %18, align 4, !dbg !1515
  %336 = sext i32 %335 to i64, !dbg !1513
  %337 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %334, i64 %336, !dbg !1513
  %338 = load %struct.residue_t*, %struct.residue_t** %337, align 8, !dbg !1513
  %339 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %338, i32 0, i32 9, !dbg !1516
  store %struct.strand_t* %331, %struct.strand_t** %339, align 8, !dbg !1517
  br label %340, !dbg !1518

340:                                              ; preds = %316
  %341 = load i32, i32* %18, align 4, !dbg !1519
  %342 = add nsw i32 %341, 1, !dbg !1519
  store i32 %342, i32* %18, align 4, !dbg !1519
  br label %310, !dbg !1520, !llvm.loop !1521

343:                                              ; preds = %310
  br label %378, !dbg !1523

344:                                              ; preds = %306
  store i32 0, i32* %18, align 4, !dbg !1524
  br label %345, !dbg !1527

345:                                              ; preds = %374, %344
  %346 = load i32, i32* %18, align 4, !dbg !1528
  %347 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1530
  %348 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %347, i32 0, i32 5, !dbg !1531
  %349 = load i32, i32* %348, align 8, !dbg !1531
  %350 = icmp slt i32 %346, %349, !dbg !1532
  br i1 %350, label %351, label %377, !dbg !1533

351:                                              ; preds = %345
  %352 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !1534
  %353 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %352, i32 0, i32 7, !dbg !1536
  %354 = load %struct.residue_t**, %struct.residue_t*** %353, align 8, !dbg !1536
  %355 = load i32, i32* %18, align 4, !dbg !1537
  %356 = sext i32 %355 to i64, !dbg !1534
  %357 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %354, i64 %356, !dbg !1534
  %358 = load %struct.residue_t*, %struct.residue_t** %357, align 8, !dbg !1534
  %359 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1538
  %360 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %359, i32 0, i32 7, !dbg !1539
  %361 = load %struct.residue_t**, %struct.residue_t*** %360, align 8, !dbg !1539
  %362 = load i32, i32* %18, align 4, !dbg !1540
  %363 = sext i32 %362 to i64, !dbg !1538
  %364 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %361, i64 %363, !dbg !1538
  store %struct.residue_t* %358, %struct.residue_t** %364, align 8, !dbg !1541
  %365 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1542
  %366 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1543
  %367 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %366, i32 0, i32 7, !dbg !1544
  %368 = load %struct.residue_t**, %struct.residue_t*** %367, align 8, !dbg !1544
  %369 = load i32, i32* %18, align 4, !dbg !1545
  %370 = sext i32 %369 to i64, !dbg !1543
  %371 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %368, i64 %370, !dbg !1543
  %372 = load %struct.residue_t*, %struct.residue_t** %371, align 8, !dbg !1543
  %373 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %372, i32 0, i32 9, !dbg !1546
  store %struct.strand_t* %365, %struct.strand_t** %373, align 8, !dbg !1547
  br label %374, !dbg !1548

374:                                              ; preds = %351
  %375 = load i32, i32* %18, align 4, !dbg !1549
  %376 = add nsw i32 %375, 1, !dbg !1549
  store i32 %376, i32* %18, align 4, !dbg !1549
  br label %345, !dbg !1550, !llvm.loop !1551

377:                                              ; preds = %345
  br label %378

378:                                              ; preds = %377, %343
  store i32 0, i32* %17, align 4, !dbg !1553
  br label %379, !dbg !1555

379:                                              ; preds = %396, %378
  %380 = load i32, i32* %17, align 4, !dbg !1556
  %381 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1558
  %382 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %381, i32 0, i32 5, !dbg !1559
  %383 = load i32, i32* %382, align 8, !dbg !1559
  %384 = icmp slt i32 %380, %383, !dbg !1560
  br i1 %384, label %385, label %399, !dbg !1561

385:                                              ; preds = %379
  %386 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1562
  %387 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %386, i32 0, i32 7, !dbg !1564
  %388 = load %struct.residue_t**, %struct.residue_t*** %387, align 8, !dbg !1564
  %389 = load i32, i32* %18, align 4, !dbg !1565
  %390 = load i32, i32* %17, align 4, !dbg !1566
  %391 = add nsw i32 %389, %390, !dbg !1567
  %392 = sext i32 %391 to i64, !dbg !1562
  %393 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %388, i64 %392, !dbg !1562
  %394 = load %struct.residue_t*, %struct.residue_t** %393, align 8, !dbg !1562
  %395 = load i32, i32* %18, align 4, !dbg !1568
  call void @fixextbonds(%struct.residue_t* %394, i32 %395), !dbg !1569
  br label %396, !dbg !1570

396:                                              ; preds = %385
  %397 = load i32, i32* %17, align 4, !dbg !1571
  %398 = add nsw i32 %397, 1, !dbg !1571
  store i32 %398, i32* %17, align 4, !dbg !1571
  br label %379, !dbg !1572, !llvm.loop !1573

399:                                              ; preds = %379
  br label %400

400:                                              ; preds = %399, %275
  %401 = load i32, i32* %15, align 4, !dbg !1575
  %402 = load %struct.strand_t*, %struct.strand_t** %21, align 8, !dbg !1576
  %403 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %402, i32 0, i32 5, !dbg !1577
  store i32 %401, i32* %403, align 8, !dbg !1578
  %404 = load i32, i32* %19, align 4, !dbg !1579
  %405 = icmp ne i32 %404, 0, !dbg !1579
  br i1 %405, label %409, label %406, !dbg !1581

406:                                              ; preds = %400
  %407 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !1582
  %408 = load i8*, i8** %12, align 8, !dbg !1583
  call void @freestrand(%struct.molecule_t* %407, i8* %408), !dbg !1584
  br label %409, !dbg !1584

409:                                              ; preds = %406, %400
  %410 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !1585
  %411 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %410, i32 0, i32 5, !dbg !1586
  store i32 0, i32* %411, align 8, !dbg !1587
  %412 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !1588
  call void @upd_molnumbers(%struct.molecule_t* %412), !dbg !1589
  store i32 0, i32* %7, align 4, !dbg !1590
  br label %413, !dbg !1590

413:                                              ; preds = %409, %123, %98, %71, %41
  %414 = load i32, i32* %7, align 4, !dbg !1591
  ret i32 %414, !dbg !1591
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fixextbonds(%struct.residue_t* %0, i32 %1) #0 !dbg !1592 {
  %3 = alloca %struct.residue_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.extbond_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %3, metadata !1595, metadata !DIExpression()), !dbg !1596
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1597, metadata !DIExpression()), !dbg !1598
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %5, metadata !1599, metadata !DIExpression()), !dbg !1600
  %6 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !1601
  %7 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %6, i32 0, i32 10, !dbg !1603
  %8 = load %struct.extbond_t*, %struct.extbond_t** %7, align 8, !dbg !1603
  store %struct.extbond_t* %8, %struct.extbond_t** %5, align 8, !dbg !1604
  br label %9, !dbg !1605

9:                                                ; preds = %18, %2
  %10 = load %struct.extbond_t*, %struct.extbond_t** %5, align 8, !dbg !1606
  %11 = icmp ne %struct.extbond_t* %10, null, !dbg !1608
  br i1 %11, label %12, label %22, !dbg !1608

12:                                               ; preds = %9
  %13 = load i32, i32* %4, align 4, !dbg !1609
  %14 = load %struct.extbond_t*, %struct.extbond_t** %5, align 8, !dbg !1610
  %15 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %14, i32 0, i32 2, !dbg !1611
  %16 = load i32, i32* %15, align 4, !dbg !1612
  %17 = add nsw i32 %16, %13, !dbg !1612
  store i32 %17, i32* %15, align 4, !dbg !1612
  br label %18, !dbg !1610

18:                                               ; preds = %12
  %19 = load %struct.extbond_t*, %struct.extbond_t** %5, align 8, !dbg !1613
  %20 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %19, i32 0, i32 0, !dbg !1614
  %21 = load %struct.extbond_t*, %struct.extbond_t** %20, align 8, !dbg !1614
  store %struct.extbond_t* %21, %struct.extbond_t** %5, align 8, !dbg !1615
  br label %9, !dbg !1616, !llvm.loop !1617

22:                                               ; preds = %9
  ret void, !dbg !1619
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @freestrand(%struct.molecule_t* %0, i8* %1) #0 !dbg !1620 {
  %3 = alloca %struct.molecule_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.strand_t*, align 8
  %6 = alloca %struct.strand_t*, align 8
  %7 = alloca %struct.strand_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %3, metadata !1623, metadata !DIExpression()), !dbg !1624
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1625, metadata !DIExpression()), !dbg !1626
  call void @llvm.dbg.declare(metadata %struct.strand_t** %5, metadata !1627, metadata !DIExpression()), !dbg !1628
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !1629, metadata !DIExpression()), !dbg !1630
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !1631, metadata !DIExpression()), !dbg !1632
  store %struct.strand_t* null, %struct.strand_t** %7, align 8, !dbg !1633
  store %struct.strand_t* null, %struct.strand_t** %6, align 8, !dbg !1635
  %8 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1636
  %9 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %8, i32 0, i32 2, !dbg !1637
  %10 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !1637
  store %struct.strand_t* %10, %struct.strand_t** %5, align 8, !dbg !1638
  br label %11, !dbg !1639

11:                                               ; preds = %25, %2
  %12 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1640
  %13 = icmp ne %struct.strand_t* %12, null, !dbg !1642
  br i1 %13, label %14, label %29, !dbg !1642

14:                                               ; preds = %11
  %15 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1643
  %16 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %15, i32 0, i32 0, !dbg !1646
  %17 = load i8*, i8** %16, align 8, !dbg !1646
  %18 = load i8*, i8** %4, align 8, !dbg !1647
  %19 = call i32 @strcmp(i8* %17, i8* %18) #9, !dbg !1648
  %20 = icmp eq i32 %19, 0, !dbg !1649
  br i1 %20, label %21, label %23, !dbg !1650

21:                                               ; preds = %14
  %22 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1651
  store %struct.strand_t* %22, %struct.strand_t** %7, align 8, !dbg !1653
  br label %29, !dbg !1654

23:                                               ; preds = %14
  %24 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1655
  store %struct.strand_t* %24, %struct.strand_t** %6, align 8, !dbg !1656
  br label %25, !dbg !1657

25:                                               ; preds = %23
  %26 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1658
  %27 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %26, i32 0, i32 4, !dbg !1659
  %28 = load %struct.strand_t*, %struct.strand_t** %27, align 8, !dbg !1659
  store %struct.strand_t* %28, %struct.strand_t** %5, align 8, !dbg !1660
  br label %11, !dbg !1661, !llvm.loop !1662

29:                                               ; preds = %21, %11
  %30 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1664
  %31 = icmp eq %struct.strand_t* %30, null, !dbg !1666
  br i1 %31, label %32, label %35, !dbg !1667

32:                                               ; preds = %29
  %33 = load i8*, i8** %4, align 8, !dbg !1668
  %34 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i8* %33), !dbg !1670
  br label %55, !dbg !1671

35:                                               ; preds = %29
  %36 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !1672
  %37 = icmp eq %struct.strand_t* %36, null, !dbg !1674
  br i1 %37, label %38, label %44, !dbg !1675

38:                                               ; preds = %35
  %39 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1676
  %40 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %39, i32 0, i32 4, !dbg !1677
  %41 = load %struct.strand_t*, %struct.strand_t** %40, align 8, !dbg !1677
  %42 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1678
  %43 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %42, i32 0, i32 2, !dbg !1679
  store %struct.strand_t* %41, %struct.strand_t** %43, align 8, !dbg !1680
  br label %50, !dbg !1678

44:                                               ; preds = %35
  %45 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1681
  %46 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %45, i32 0, i32 4, !dbg !1682
  %47 = load %struct.strand_t*, %struct.strand_t** %46, align 8, !dbg !1682
  %48 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !1683
  %49 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %48, i32 0, i32 4, !dbg !1684
  store %struct.strand_t* %47, %struct.strand_t** %49, align 8, !dbg !1685
  br label %50

50:                                               ; preds = %44, %38
  %51 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1686
  %52 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %51, i32 0, i32 1, !dbg !1687
  %53 = load i32, i32* %52, align 8, !dbg !1688
  %54 = add nsw i32 %53, -1, !dbg !1688
  store i32 %54, i32* %52, align 8, !dbg !1688
  br label %55, !dbg !1689

55:                                               ; preds = %50, %32
  ret void, !dbg !1689
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @upd_molnumbers(%struct.molecule_t* %0) #0 !dbg !1690 {
  %2 = alloca %struct.molecule_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.strand_t*, align 8
  %10 = alloca %struct.residue_t*, align 8
  %11 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %2, metadata !1693, metadata !DIExpression()), !dbg !1694
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1695, metadata !DIExpression()), !dbg !1696
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1697, metadata !DIExpression()), !dbg !1698
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1699, metadata !DIExpression()), !dbg !1700
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1701, metadata !DIExpression()), !dbg !1702
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1703, metadata !DIExpression()), !dbg !1704
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1705, metadata !DIExpression()), !dbg !1706
  call void @llvm.dbg.declare(metadata %struct.strand_t** %9, metadata !1707, metadata !DIExpression()), !dbg !1708
  call void @llvm.dbg.declare(metadata %struct.residue_t** %10, metadata !1709, metadata !DIExpression()), !dbg !1710
  call void @llvm.dbg.declare(metadata %struct.atom_t** %11, metadata !1711, metadata !DIExpression()), !dbg !1712
  store i32 0, i32* %3, align 4, !dbg !1713
  store i32 0, i32* %8, align 4, !dbg !1715
  store i32 0, i32* %7, align 4, !dbg !1716
  %12 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !1717
  %13 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %12, i32 0, i32 2, !dbg !1718
  %14 = load %struct.strand_t*, %struct.strand_t** %13, align 8, !dbg !1718
  store %struct.strand_t* %14, %struct.strand_t** %9, align 8, !dbg !1719
  br label %15, !dbg !1720

15:                                               ; preds = %80, %1
  %16 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !1721
  %17 = icmp ne %struct.strand_t* %16, null, !dbg !1723
  br i1 %17, label %18, label %86, !dbg !1723

18:                                               ; preds = %15
  %19 = load i32, i32* %3, align 4, !dbg !1724
  %20 = add nsw i32 %19, 1, !dbg !1726
  %21 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !1727
  %22 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i32 0, i32 1, !dbg !1728
  store i32 %20, i32* %22, align 8, !dbg !1729
  store i32 0, i32* %4, align 4, !dbg !1730
  store i32 0, i32* %5, align 4, !dbg !1732
  br label %23, !dbg !1733

23:                                               ; preds = %74, %18
  %24 = load i32, i32* %4, align 4, !dbg !1734
  %25 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !1736
  %26 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %25, i32 0, i32 5, !dbg !1737
  %27 = load i32, i32* %26, align 8, !dbg !1737
  %28 = icmp slt i32 %24, %27, !dbg !1738
  br i1 %28, label %29, label %79, !dbg !1739

29:                                               ; preds = %23
  %30 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !1740
  %31 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %30, i32 0, i32 7, !dbg !1742
  %32 = load %struct.residue_t**, %struct.residue_t*** %31, align 8, !dbg !1742
  %33 = load i32, i32* %4, align 4, !dbg !1743
  %34 = sext i32 %33 to i64, !dbg !1740
  %35 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %32, i64 %34, !dbg !1740
  %36 = load %struct.residue_t*, %struct.residue_t** %35, align 8, !dbg !1740
  store %struct.residue_t* %36, %struct.residue_t** %10, align 8, !dbg !1744
  %37 = load i32, i32* %8, align 4, !dbg !1745
  %38 = add nsw i32 %37, 1, !dbg !1746
  %39 = load %struct.residue_t*, %struct.residue_t** %10, align 8, !dbg !1747
  %40 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %39, i32 0, i32 2, !dbg !1748
  store i32 %38, i32* %40, align 4, !dbg !1749
  %41 = load i32, i32* %4, align 4, !dbg !1750
  %42 = add nsw i32 %41, 1, !dbg !1751
  %43 = load %struct.residue_t*, %struct.residue_t** %10, align 8, !dbg !1752
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i32 0, i32 3, !dbg !1753
  store i32 %42, i32* %44, align 8, !dbg !1754
  store i32 0, i32* %6, align 4, !dbg !1755
  br label %45, !dbg !1757

45:                                               ; preds = %66, %29
  %46 = load i32, i32* %6, align 4, !dbg !1758
  %47 = load %struct.residue_t*, %struct.residue_t** %10, align 8, !dbg !1760
  %48 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %47, i32 0, i32 15, !dbg !1761
  %49 = load i32, i32* %48, align 8, !dbg !1761
  %50 = icmp slt i32 %46, %49, !dbg !1762
  br i1 %50, label %51, label %73, !dbg !1763

51:                                               ; preds = %45
  %52 = load %struct.residue_t*, %struct.residue_t** %10, align 8, !dbg !1764
  %53 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %52, i32 0, i32 17, !dbg !1766
  %54 = load %struct.atom_t*, %struct.atom_t** %53, align 8, !dbg !1766
  %55 = load i32, i32* %6, align 4, !dbg !1767
  %56 = sext i32 %55 to i64, !dbg !1764
  %57 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %54, i64 %56, !dbg !1764
  store %struct.atom_t* %57, %struct.atom_t** %11, align 8, !dbg !1768
  %58 = load i32, i32* %5, align 4, !dbg !1769
  %59 = add nsw i32 %58, 1, !dbg !1770
  %60 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !1771
  %61 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %60, i32 0, i32 15, !dbg !1772
  store i32 %59, i32* %61, align 4, !dbg !1773
  %62 = load i32, i32* %7, align 4, !dbg !1774
  %63 = add nsw i32 %62, 1, !dbg !1775
  %64 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !1776
  %65 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %64, i32 0, i32 14, !dbg !1777
  store i32 %63, i32* %65, align 8, !dbg !1778
  br label %66, !dbg !1779

66:                                               ; preds = %51
  %67 = load i32, i32* %6, align 4, !dbg !1780
  %68 = add nsw i32 %67, 1, !dbg !1780
  store i32 %68, i32* %6, align 4, !dbg !1780
  %69 = load i32, i32* %7, align 4, !dbg !1781
  %70 = add nsw i32 %69, 1, !dbg !1781
  store i32 %70, i32* %7, align 4, !dbg !1781
  %71 = load i32, i32* %5, align 4, !dbg !1782
  %72 = add nsw i32 %71, 1, !dbg !1782
  store i32 %72, i32* %5, align 4, !dbg !1782
  br label %45, !dbg !1783, !llvm.loop !1784

73:                                               ; preds = %45
  br label %74, !dbg !1786

74:                                               ; preds = %73
  %75 = load i32, i32* %8, align 4, !dbg !1787
  %76 = add nsw i32 %75, 1, !dbg !1787
  store i32 %76, i32* %8, align 4, !dbg !1787
  %77 = load i32, i32* %4, align 4, !dbg !1788
  %78 = add nsw i32 %77, 1, !dbg !1788
  store i32 %78, i32* %4, align 4, !dbg !1788
  br label %23, !dbg !1789, !llvm.loop !1790

79:                                               ; preds = %23
  br label %80, !dbg !1792

80:                                               ; preds = %79
  %81 = load i32, i32* %3, align 4, !dbg !1793
  %82 = add nsw i32 %81, 1, !dbg !1793
  store i32 %82, i32* %3, align 4, !dbg !1793
  %83 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !1794
  %84 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %83, i32 0, i32 4, !dbg !1795
  %85 = load %struct.strand_t*, %struct.strand_t** %84, align 8, !dbg !1795
  store %struct.strand_t* %85, %struct.strand_t** %9, align 8, !dbg !1796
  br label %15, !dbg !1797, !llvm.loop !1798

86:                                               ; preds = %15
  %87 = load i32, i32* %3, align 4, !dbg !1800
  %88 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !1801
  %89 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %88, i32 0, i32 1, !dbg !1802
  store i32 %87, i32* %89, align 8, !dbg !1803
  %90 = load i32, i32* %8, align 4, !dbg !1804
  %91 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !1805
  %92 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %91, i32 0, i32 3, !dbg !1806
  store i32 %90, i32* %92, align 8, !dbg !1807
  %93 = load i32, i32* %7, align 4, !dbg !1808
  %94 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !1809
  %95 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %94, i32 0, i32 4, !dbg !1810
  store i32 %93, i32* %95, align 4, !dbg !1811
  %96 = load %struct.molecule_t*, %struct.molecule_t** %2, align 8, !dbg !1812
  %97 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %96, i32 0, i32 5, !dbg !1813
  store i32 1, i32* %97, align 8, !dbg !1814
  ret void, !dbg !1815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @countmolstrands(%struct.molecule_t* %0, i8* %1) #0 !dbg !1816 {
  %3 = alloca %struct.molecule_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.strand_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %3, metadata !1817, metadata !DIExpression()), !dbg !1818
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1819, metadata !DIExpression()), !dbg !1820
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1821, metadata !DIExpression()), !dbg !1822
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !1823, metadata !DIExpression()), !dbg !1824
  %7 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1825
  %8 = load i8*, i8** %4, align 8, !dbg !1826
  %9 = call i32 @select_atoms(%struct.molecule_t* %7, i8* %8), !dbg !1827
  store i32 0, i32* %5, align 4, !dbg !1828
  %10 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1830
  %11 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %10, i32 0, i32 2, !dbg !1831
  %12 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !dbg !1831
  store %struct.strand_t* %12, %struct.strand_t** %6, align 8, !dbg !1832
  br label %13, !dbg !1833

13:                                               ; preds = %26, %2
  %14 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !1834
  %15 = icmp ne %struct.strand_t* %14, null, !dbg !1836
  br i1 %15, label %16, label %30, !dbg !1836

16:                                               ; preds = %13
  %17 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !1837
  %18 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %17, i32 0, i32 2, !dbg !1840
  %19 = load i32, i32* %18, align 4, !dbg !1840
  %20 = and i32 %19, 1, !dbg !1841
  %21 = icmp ne i32 %20, 0, !dbg !1841
  br i1 %21, label %22, label %25, !dbg !1842

22:                                               ; preds = %16
  %23 = load i32, i32* %5, align 4, !dbg !1843
  %24 = add nsw i32 %23, 1, !dbg !1843
  store i32 %24, i32* %5, align 4, !dbg !1843
  br label %25, !dbg !1844

25:                                               ; preds = %22, %16
  br label %26, !dbg !1845

26:                                               ; preds = %25
  %27 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !1846
  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i32 0, i32 4, !dbg !1847
  %29 = load %struct.strand_t*, %struct.strand_t** %28, align 8, !dbg !1847
  store %struct.strand_t* %29, %struct.strand_t** %6, align 8, !dbg !1848
  br label %13, !dbg !1849, !llvm.loop !1850

30:                                               ; preds = %13
  %31 = load i32, i32* %5, align 4, !dbg !1852
  ret i32 %31, !dbg !1853
}

declare dso_local i32 @select_atoms(%struct.molecule_t*, i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @countstrandresidues(%struct.molecule_t* %0, i32 %1) #0 !dbg !1854 {
  %3 = alloca %struct.molecule_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.strand_t*, align 8
  %6 = alloca i32, align 4
  store %struct.molecule_t* %0, %struct.molecule_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %3, metadata !1857, metadata !DIExpression()), !dbg !1858
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1859, metadata !DIExpression()), !dbg !1860
  call void @llvm.dbg.declare(metadata %struct.strand_t** %5, metadata !1861, metadata !DIExpression()), !dbg !1862
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1863, metadata !DIExpression()), !dbg !1864
  store i32 1, i32* %6, align 4, !dbg !1865
  %7 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1867
  %8 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %7, i32 0, i32 2, !dbg !1868
  %9 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !1868
  store %struct.strand_t* %9, %struct.strand_t** %5, align 8, !dbg !1869
  br label %10, !dbg !1870

10:                                               ; preds = %22, %2
  %11 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1871
  %12 = icmp ne %struct.strand_t* %11, null, !dbg !1873
  br i1 %12, label %13, label %17, !dbg !1874

13:                                               ; preds = %10
  %14 = load i32, i32* %6, align 4, !dbg !1875
  %15 = load i32, i32* %4, align 4, !dbg !1876
  %16 = icmp slt i32 %14, %15, !dbg !1877
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i1 [ false, %10 ], [ %16, %13 ], !dbg !1878
  br i1 %18, label %19, label %26, !dbg !1879

19:                                               ; preds = %17
  %20 = load i32, i32* %6, align 4, !dbg !1880
  %21 = add nsw i32 %20, 1, !dbg !1880
  store i32 %21, i32* %6, align 4, !dbg !1880
  br label %22, !dbg !1882

22:                                               ; preds = %19
  %23 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1883
  %24 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %23, i32 0, i32 4, !dbg !1884
  %25 = load %struct.strand_t*, %struct.strand_t** %24, align 8, !dbg !1884
  store %struct.strand_t* %25, %struct.strand_t** %5, align 8, !dbg !1885
  br label %10, !dbg !1886, !llvm.loop !1887

26:                                               ; preds = %17
  %27 = load %struct.strand_t*, %struct.strand_t** %5, align 8, !dbg !1889
  %28 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %27, i32 0, i32 5, !dbg !1890
  %29 = load i32, i32* %28, align 8, !dbg !1890
  ret i32 %29, !dbg !1891
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @countmolres(%struct.molecule_t* %0, i8* %1) #0 !dbg !1892 {
  %3 = alloca %struct.molecule_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.strand_t*, align 8
  %8 = alloca %struct.residue_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %3, metadata !1893, metadata !DIExpression()), !dbg !1894
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1895, metadata !DIExpression()), !dbg !1896
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1897, metadata !DIExpression()), !dbg !1898
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1899, metadata !DIExpression()), !dbg !1900
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !1901, metadata !DIExpression()), !dbg !1902
  call void @llvm.dbg.declare(metadata %struct.residue_t** %8, metadata !1903, metadata !DIExpression()), !dbg !1904
  %9 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1905
  %10 = load i8*, i8** %4, align 8, !dbg !1906
  %11 = call i32 @select_atoms(%struct.molecule_t* %9, i8* %10), !dbg !1907
  store i32 0, i32* %6, align 4, !dbg !1908
  %12 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1910
  %13 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %12, i32 0, i32 2, !dbg !1911
  %14 = load %struct.strand_t*, %struct.strand_t** %13, align 8, !dbg !1911
  store %struct.strand_t* %14, %struct.strand_t** %7, align 8, !dbg !1912
  br label %15, !dbg !1913

15:                                               ; preds = %46, %2
  %16 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1914
  %17 = icmp ne %struct.strand_t* %16, null, !dbg !1916
  br i1 %17, label %18, label %50, !dbg !1916

18:                                               ; preds = %15
  store i32 0, i32* %5, align 4, !dbg !1917
  br label %19, !dbg !1920

19:                                               ; preds = %42, %18
  %20 = load i32, i32* %5, align 4, !dbg !1921
  %21 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1923
  %22 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %21, i32 0, i32 5, !dbg !1924
  %23 = load i32, i32* %22, align 8, !dbg !1924
  %24 = icmp slt i32 %20, %23, !dbg !1925
  br i1 %24, label %25, label %45, !dbg !1926

25:                                               ; preds = %19
  %26 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1927
  %27 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %26, i32 0, i32 7, !dbg !1929
  %28 = load %struct.residue_t**, %struct.residue_t*** %27, align 8, !dbg !1929
  %29 = load i32, i32* %5, align 4, !dbg !1930
  %30 = sext i32 %29 to i64, !dbg !1927
  %31 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %28, i64 %30, !dbg !1927
  %32 = load %struct.residue_t*, %struct.residue_t** %31, align 8, !dbg !1927
  store %struct.residue_t* %32, %struct.residue_t** %8, align 8, !dbg !1931
  %33 = load %struct.residue_t*, %struct.residue_t** %8, align 8, !dbg !1932
  %34 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %33, i32 0, i32 6, !dbg !1934
  %35 = load i32, i32* %34, align 8, !dbg !1934
  %36 = and i32 %35, 1, !dbg !1935
  %37 = icmp ne i32 %36, 0, !dbg !1935
  br i1 %37, label %38, label %41, !dbg !1936

38:                                               ; preds = %25
  %39 = load i32, i32* %6, align 4, !dbg !1937
  %40 = add nsw i32 %39, 1, !dbg !1937
  store i32 %40, i32* %6, align 4, !dbg !1937
  br label %41, !dbg !1938

41:                                               ; preds = %38, %25
  br label %42, !dbg !1939

42:                                               ; preds = %41
  %43 = load i32, i32* %5, align 4, !dbg !1940
  %44 = add nsw i32 %43, 1, !dbg !1940
  store i32 %44, i32* %5, align 4, !dbg !1940
  br label %19, !dbg !1941, !llvm.loop !1942

45:                                               ; preds = %19
  br label %46, !dbg !1944

46:                                               ; preds = %45
  %47 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !1945
  %48 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %47, i32 0, i32 4, !dbg !1946
  %49 = load %struct.strand_t*, %struct.strand_t** %48, align 8, !dbg !1946
  store %struct.strand_t* %49, %struct.strand_t** %7, align 8, !dbg !1947
  br label %15, !dbg !1948, !llvm.loop !1949

50:                                               ; preds = %15
  %51 = load i32, i32* %6, align 4, !dbg !1951
  ret i32 %51, !dbg !1952
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @countmolatoms(%struct.molecule_t* %0, i8* %1) #0 !dbg !1953 {
  %3 = alloca %struct.molecule_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.strand_t*, align 8
  %9 = alloca %struct.residue_t*, align 8
  %10 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %3, metadata !1954, metadata !DIExpression()), !dbg !1955
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !1956, metadata !DIExpression()), !dbg !1957
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1958, metadata !DIExpression()), !dbg !1959
  call void @llvm.dbg.declare(metadata i32* %6, metadata !1960, metadata !DIExpression()), !dbg !1961
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1962, metadata !DIExpression()), !dbg !1963
  call void @llvm.dbg.declare(metadata %struct.strand_t** %8, metadata !1964, metadata !DIExpression()), !dbg !1965
  call void @llvm.dbg.declare(metadata %struct.residue_t** %9, metadata !1966, metadata !DIExpression()), !dbg !1967
  call void @llvm.dbg.declare(metadata %struct.atom_t** %10, metadata !1968, metadata !DIExpression()), !dbg !1969
  %11 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1970
  %12 = load i8*, i8** %4, align 8, !dbg !1971
  %13 = call i32 @select_atoms(%struct.molecule_t* %11, i8* %12), !dbg !1972
  store i32 0, i32* %7, align 4, !dbg !1973
  %14 = load %struct.molecule_t*, %struct.molecule_t** %3, align 8, !dbg !1975
  %15 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %14, i32 0, i32 2, !dbg !1976
  %16 = load %struct.strand_t*, %struct.strand_t** %15, align 8, !dbg !1976
  store %struct.strand_t* %16, %struct.strand_t** %8, align 8, !dbg !1977
  br label %17, !dbg !1978

17:                                               ; preds = %65, %2
  %18 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !1979
  %19 = icmp ne %struct.strand_t* %18, null, !dbg !1981
  br i1 %19, label %20, label %69, !dbg !1981

20:                                               ; preds = %17
  store i32 0, i32* %5, align 4, !dbg !1982
  br label %21, !dbg !1985

21:                                               ; preds = %61, %20
  %22 = load i32, i32* %5, align 4, !dbg !1986
  %23 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !1988
  %24 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %23, i32 0, i32 5, !dbg !1989
  %25 = load i32, i32* %24, align 8, !dbg !1989
  %26 = icmp slt i32 %22, %25, !dbg !1990
  br i1 %26, label %27, label %64, !dbg !1991

27:                                               ; preds = %21
  %28 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !1992
  %29 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %28, i32 0, i32 7, !dbg !1994
  %30 = load %struct.residue_t**, %struct.residue_t*** %29, align 8, !dbg !1994
  %31 = load i32, i32* %5, align 4, !dbg !1995
  %32 = sext i32 %31 to i64, !dbg !1992
  %33 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %30, i64 %32, !dbg !1992
  %34 = load %struct.residue_t*, %struct.residue_t** %33, align 8, !dbg !1992
  store %struct.residue_t* %34, %struct.residue_t** %9, align 8, !dbg !1996
  store i32 0, i32* %6, align 4, !dbg !1997
  br label %35, !dbg !1999

35:                                               ; preds = %57, %27
  %36 = load i32, i32* %6, align 4, !dbg !2000
  %37 = load %struct.residue_t*, %struct.residue_t** %9, align 8, !dbg !2002
  %38 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %37, i32 0, i32 15, !dbg !2003
  %39 = load i32, i32* %38, align 8, !dbg !2003
  %40 = icmp slt i32 %36, %39, !dbg !2004
  br i1 %40, label %41, label %60, !dbg !2005

41:                                               ; preds = %35
  %42 = load %struct.residue_t*, %struct.residue_t** %9, align 8, !dbg !2006
  %43 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %42, i32 0, i32 17, !dbg !2008
  %44 = load %struct.atom_t*, %struct.atom_t** %43, align 8, !dbg !2008
  %45 = load i32, i32* %6, align 4, !dbg !2009
  %46 = sext i32 %45 to i64, !dbg !2006
  %47 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %46, !dbg !2006
  store %struct.atom_t* %47, %struct.atom_t** %10, align 8, !dbg !2010
  %48 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !2011
  %49 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %48, i32 0, i32 2, !dbg !2013
  %50 = load i32, i32* %49, align 8, !dbg !2013
  %51 = and i32 %50, 1, !dbg !2014
  %52 = icmp ne i32 %51, 0, !dbg !2014
  br i1 %52, label %53, label %56, !dbg !2015

53:                                               ; preds = %41
  %54 = load i32, i32* %7, align 4, !dbg !2016
  %55 = add nsw i32 %54, 1, !dbg !2016
  store i32 %55, i32* %7, align 4, !dbg !2016
  br label %56, !dbg !2017

56:                                               ; preds = %53, %41
  br label %57, !dbg !2018

57:                                               ; preds = %56
  %58 = load i32, i32* %6, align 4, !dbg !2019
  %59 = add nsw i32 %58, 1, !dbg !2019
  store i32 %59, i32* %6, align 4, !dbg !2019
  br label %35, !dbg !2020, !llvm.loop !2021

60:                                               ; preds = %35
  br label %61, !dbg !2023

61:                                               ; preds = %60
  %62 = load i32, i32* %5, align 4, !dbg !2024
  %63 = add nsw i32 %62, 1, !dbg !2024
  store i32 %63, i32* %5, align 4, !dbg !2024
  br label %21, !dbg !2025, !llvm.loop !2026

64:                                               ; preds = %21
  br label %65, !dbg !2028

65:                                               ; preds = %64
  %66 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !2029
  %67 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %66, i32 0, i32 4, !dbg !2030
  %68 = load %struct.strand_t*, %struct.strand_t** %67, align 8, !dbg !2030
  store %struct.strand_t* %68, %struct.strand_t** %8, align 8, !dbg !2031
  br label %17, !dbg !2032, !llvm.loop !2033

69:                                               ; preds = %17
  %70 = load i32, i32* %7, align 4, !dbg !2035
  ret i32 %70, !dbg !2036
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @dist(%struct.molecule_t* %0, i8* %1, i8* %2) #0 !dbg !2037 {
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [3 x double], align 16
  %8 = alloca [3 x double], align 16
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !2040, metadata !DIExpression()), !dbg !2041
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !2042, metadata !DIExpression()), !dbg !2043
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2044, metadata !DIExpression()), !dbg !2045
  call void @llvm.dbg.declare(metadata [3 x double]* %7, metadata !2046, metadata !DIExpression()), !dbg !2047
  call void @llvm.dbg.declare(metadata [3 x double]* %8, metadata !2048, metadata !DIExpression()), !dbg !2049
  %9 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !2050
  %10 = load i8*, i8** %5, align 8, !dbg !2051
  %11 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0, !dbg !2052
  %12 = call i32 @setpoint(%struct.molecule_t* %9, i8* %10, double* %11), !dbg !2053
  %13 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !2054
  %14 = load i8*, i8** %6, align 8, !dbg !2055
  %15 = getelementptr inbounds [3 x double], [3 x double]* %8, i64 0, i64 0, !dbg !2056
  %16 = call i32 @setpoint(%struct.molecule_t* %13, i8* %14, double* %15), !dbg !2057
  %17 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0, !dbg !2058
  %18 = getelementptr inbounds [3 x double], [3 x double]* %8, i64 0, i64 0, !dbg !2059
  %19 = call double @distp(double* %17, double* %18), !dbg !2060
  ret double %19, !dbg !2061
}

declare dso_local i32 @setpoint(%struct.molecule_t*, i8*, double*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @distp(double* %0, double* %1) #0 !dbg !2062 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  store double* %0, double** %3, align 8
  call void @llvm.dbg.declare(metadata double** %3, metadata !2065, metadata !DIExpression()), !dbg !2066
  store double* %1, double** %4, align 8
  call void @llvm.dbg.declare(metadata double** %4, metadata !2067, metadata !DIExpression()), !dbg !2068
  call void @llvm.dbg.declare(metadata double* %5, metadata !2069, metadata !DIExpression()), !dbg !2070
  call void @llvm.dbg.declare(metadata double* %6, metadata !2071, metadata !DIExpression()), !dbg !2072
  call void @llvm.dbg.declare(metadata double* %7, metadata !2073, metadata !DIExpression()), !dbg !2074
  %8 = load double*, double** %3, align 8, !dbg !2075
  %9 = getelementptr inbounds double, double* %8, i64 0, !dbg !2075
  %10 = load double, double* %9, align 8, !dbg !2075
  %11 = load double*, double** %4, align 8, !dbg !2076
  %12 = getelementptr inbounds double, double* %11, i64 0, !dbg !2076
  %13 = load double, double* %12, align 8, !dbg !2076
  %14 = fsub double %10, %13, !dbg !2077
  store double %14, double* %5, align 8, !dbg !2078
  %15 = load double*, double** %3, align 8, !dbg !2079
  %16 = getelementptr inbounds double, double* %15, i64 1, !dbg !2079
  %17 = load double, double* %16, align 8, !dbg !2079
  %18 = load double*, double** %4, align 8, !dbg !2080
  %19 = getelementptr inbounds double, double* %18, i64 1, !dbg !2080
  %20 = load double, double* %19, align 8, !dbg !2080
  %21 = fsub double %17, %20, !dbg !2081
  store double %21, double* %6, align 8, !dbg !2082
  %22 = load double*, double** %3, align 8, !dbg !2083
  %23 = getelementptr inbounds double, double* %22, i64 2, !dbg !2083
  %24 = load double, double* %23, align 8, !dbg !2083
  %25 = load double*, double** %4, align 8, !dbg !2084
  %26 = getelementptr inbounds double, double* %25, i64 2, !dbg !2084
  %27 = load double, double* %26, align 8, !dbg !2084
  %28 = fsub double %24, %27, !dbg !2085
  store double %28, double* %7, align 8, !dbg !2086
  %29 = load double, double* %5, align 8, !dbg !2087
  %30 = load double, double* %5, align 8, !dbg !2088
  %31 = fmul double %29, %30, !dbg !2089
  %32 = load double, double* %6, align 8, !dbg !2090
  %33 = load double, double* %6, align 8, !dbg !2091
  %34 = fmul double %32, %33, !dbg !2092
  %35 = fadd double %31, %34, !dbg !2093
  %36 = load double, double* %7, align 8, !dbg !2094
  %37 = load double, double* %7, align 8, !dbg !2095
  %38 = fmul double %36, %37, !dbg !2096
  %39 = fadd double %35, %38, !dbg !2097
  %40 = call double @sqrt(double %39) #8, !dbg !2098
  ret double %40, !dbg !2099
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @angle(%struct.molecule_t* %0, i8* %1, i8* %2, i8* %3) #0 !dbg !2100 {
  %5 = alloca %struct.molecule_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [3 x double], align 16
  %10 = alloca [3 x double], align 16
  %11 = alloca [3 x double], align 16
  store %struct.molecule_t* %0, %struct.molecule_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %5, metadata !2103, metadata !DIExpression()), !dbg !2104
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2105, metadata !DIExpression()), !dbg !2106
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2107, metadata !DIExpression()), !dbg !2108
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2109, metadata !DIExpression()), !dbg !2110
  call void @llvm.dbg.declare(metadata [3 x double]* %9, metadata !2111, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.declare(metadata [3 x double]* %10, metadata !2113, metadata !DIExpression()), !dbg !2114
  call void @llvm.dbg.declare(metadata [3 x double]* %11, metadata !2115, metadata !DIExpression()), !dbg !2116
  %12 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !2117
  %13 = load i8*, i8** %6, align 8, !dbg !2118
  %14 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0, !dbg !2119
  %15 = call i32 @setpoint(%struct.molecule_t* %12, i8* %13, double* %14), !dbg !2120
  %16 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !2121
  %17 = load i8*, i8** %7, align 8, !dbg !2122
  %18 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0, !dbg !2123
  %19 = call i32 @setpoint(%struct.molecule_t* %16, i8* %17, double* %18), !dbg !2124
  %20 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !2125
  %21 = load i8*, i8** %8, align 8, !dbg !2126
  %22 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !2127
  %23 = call i32 @setpoint(%struct.molecule_t* %20, i8* %21, double* %22), !dbg !2128
  %24 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0, !dbg !2129
  %25 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0, !dbg !2130
  %26 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !2131
  %27 = call double @anglep(double* %24, double* %25, double* %26), !dbg !2132
  ret double %27, !dbg !2133
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @anglep(double* %0, double* %1, double* %2) #0 !dbg !2134 {
  %4 = alloca double, align 8
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  store double* %0, double** %5, align 8
  call void @llvm.dbg.declare(metadata double** %5, metadata !2137, metadata !DIExpression()), !dbg !2138
  store double* %1, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !2139, metadata !DIExpression()), !dbg !2140
  store double* %2, double** %7, align 8
  call void @llvm.dbg.declare(metadata double** %7, metadata !2141, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.declare(metadata double* %8, metadata !2143, metadata !DIExpression()), !dbg !2144
  call void @llvm.dbg.declare(metadata double* %9, metadata !2145, metadata !DIExpression()), !dbg !2146
  call void @llvm.dbg.declare(metadata double* %10, metadata !2147, metadata !DIExpression()), !dbg !2148
  call void @llvm.dbg.declare(metadata double* %11, metadata !2149, metadata !DIExpression()), !dbg !2150
  call void @llvm.dbg.declare(metadata double* %12, metadata !2151, metadata !DIExpression()), !dbg !2152
  call void @llvm.dbg.declare(metadata double* %13, metadata !2153, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata double* %14, metadata !2155, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.declare(metadata double* %15, metadata !2157, metadata !DIExpression()), !dbg !2158
  call void @llvm.dbg.declare(metadata double* %16, metadata !2159, metadata !DIExpression()), !dbg !2160
  %17 = load double*, double** %5, align 8, !dbg !2161
  %18 = getelementptr inbounds double, double* %17, i64 0, !dbg !2161
  %19 = load double, double* %18, align 8, !dbg !2161
  %20 = load double*, double** %6, align 8, !dbg !2162
  %21 = getelementptr inbounds double, double* %20, i64 0, !dbg !2162
  %22 = load double, double* %21, align 8, !dbg !2162
  %23 = fsub double %19, %22, !dbg !2163
  store double %23, double* %8, align 8, !dbg !2164
  %24 = load double*, double** %5, align 8, !dbg !2165
  %25 = getelementptr inbounds double, double* %24, i64 1, !dbg !2165
  %26 = load double, double* %25, align 8, !dbg !2165
  %27 = load double*, double** %6, align 8, !dbg !2166
  %28 = getelementptr inbounds double, double* %27, i64 1, !dbg !2166
  %29 = load double, double* %28, align 8, !dbg !2166
  %30 = fsub double %26, %29, !dbg !2167
  store double %30, double* %10, align 8, !dbg !2168
  %31 = load double*, double** %5, align 8, !dbg !2169
  %32 = getelementptr inbounds double, double* %31, i64 2, !dbg !2169
  %33 = load double, double* %32, align 8, !dbg !2169
  %34 = load double*, double** %6, align 8, !dbg !2170
  %35 = getelementptr inbounds double, double* %34, i64 2, !dbg !2170
  %36 = load double, double* %35, align 8, !dbg !2170
  %37 = fsub double %33, %36, !dbg !2171
  store double %37, double* %12, align 8, !dbg !2172
  %38 = load double*, double** %7, align 8, !dbg !2173
  %39 = getelementptr inbounds double, double* %38, i64 0, !dbg !2173
  %40 = load double, double* %39, align 8, !dbg !2173
  %41 = load double*, double** %6, align 8, !dbg !2174
  %42 = getelementptr inbounds double, double* %41, i64 0, !dbg !2174
  %43 = load double, double* %42, align 8, !dbg !2174
  %44 = fsub double %40, %43, !dbg !2175
  store double %44, double* %9, align 8, !dbg !2176
  %45 = load double*, double** %7, align 8, !dbg !2177
  %46 = getelementptr inbounds double, double* %45, i64 1, !dbg !2177
  %47 = load double, double* %46, align 8, !dbg !2177
  %48 = load double*, double** %6, align 8, !dbg !2178
  %49 = getelementptr inbounds double, double* %48, i64 1, !dbg !2178
  %50 = load double, double* %49, align 8, !dbg !2178
  %51 = fsub double %47, %50, !dbg !2179
  store double %51, double* %11, align 8, !dbg !2180
  %52 = load double*, double** %7, align 8, !dbg !2181
  %53 = getelementptr inbounds double, double* %52, i64 2, !dbg !2181
  %54 = load double, double* %53, align 8, !dbg !2181
  %55 = load double*, double** %6, align 8, !dbg !2182
  %56 = getelementptr inbounds double, double* %55, i64 2, !dbg !2182
  %57 = load double, double* %56, align 8, !dbg !2182
  %58 = fsub double %54, %57, !dbg !2183
  store double %58, double* %13, align 8, !dbg !2184
  %59 = load double, double* %8, align 8, !dbg !2185
  %60 = load double, double* %8, align 8, !dbg !2186
  %61 = fmul double %59, %60, !dbg !2187
  %62 = load double, double* %10, align 8, !dbg !2188
  %63 = load double, double* %10, align 8, !dbg !2189
  %64 = fmul double %62, %63, !dbg !2190
  %65 = fadd double %61, %64, !dbg !2191
  %66 = load double, double* %12, align 8, !dbg !2192
  %67 = load double, double* %12, align 8, !dbg !2193
  %68 = fmul double %66, %67, !dbg !2194
  %69 = fadd double %65, %68, !dbg !2195
  %70 = call double @sqrt(double %69) #8, !dbg !2196
  store double %70, double* %14, align 8, !dbg !2197
  %71 = load double, double* %9, align 8, !dbg !2198
  %72 = load double, double* %9, align 8, !dbg !2199
  %73 = fmul double %71, %72, !dbg !2200
  %74 = load double, double* %11, align 8, !dbg !2201
  %75 = load double, double* %11, align 8, !dbg !2202
  %76 = fmul double %74, %75, !dbg !2203
  %77 = fadd double %73, %76, !dbg !2204
  %78 = load double, double* %13, align 8, !dbg !2205
  %79 = load double, double* %13, align 8, !dbg !2206
  %80 = fmul double %78, %79, !dbg !2207
  %81 = fadd double %77, %80, !dbg !2208
  %82 = call double @sqrt(double %81) #8, !dbg !2209
  store double %82, double* %15, align 8, !dbg !2210
  %83 = load double, double* %14, align 8, !dbg !2211
  %84 = fcmp oeq double %83, 0.000000e+00, !dbg !2213
  br i1 %84, label %85, label %88, !dbg !2214

85:                                               ; preds = %3
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2215
  %87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %86, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i64 0, i64 0)), !dbg !2217
  store double 0.000000e+00, double* %4, align 8, !dbg !2218
  br label %113, !dbg !2218

88:                                               ; preds = %3
  %89 = load double, double* %15, align 8, !dbg !2219
  %90 = fcmp oeq double %89, 0.000000e+00, !dbg !2221
  br i1 %90, label %91, label %94, !dbg !2222

91:                                               ; preds = %88
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2223
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %92, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0)), !dbg !2225
  store double 0.000000e+00, double* %4, align 8, !dbg !2226
  br label %113, !dbg !2226

94:                                               ; preds = %88
  %95 = load double, double* %8, align 8, !dbg !2227
  %96 = load double, double* %9, align 8, !dbg !2228
  %97 = fmul double %95, %96, !dbg !2229
  %98 = load double, double* %10, align 8, !dbg !2230
  %99 = load double, double* %11, align 8, !dbg !2231
  %100 = fmul double %98, %99, !dbg !2232
  %101 = fadd double %97, %100, !dbg !2233
  %102 = load double, double* %12, align 8, !dbg !2234
  %103 = load double, double* %13, align 8, !dbg !2235
  %104 = fmul double %102, %103, !dbg !2236
  %105 = fadd double %101, %104, !dbg !2237
  store double %105, double* %16, align 8, !dbg !2238
  %106 = load double, double* %16, align 8, !dbg !2239
  %107 = load double, double* %14, align 8, !dbg !2240
  %108 = load double, double* %15, align 8, !dbg !2241
  %109 = fmul double %107, %108, !dbg !2242
  %110 = fdiv double %106, %109, !dbg !2243
  %111 = call double @acos(double %110) #8, !dbg !2244
  %112 = fmul double 0x404CA5DC1A63C1F8, %111, !dbg !2245
  store double %112, double* %4, align 8, !dbg !2246
  br label %113, !dbg !2246

113:                                              ; preds = %94, %91, %85
  %114 = load double, double* %4, align 8, !dbg !2247
  ret double %114, !dbg !2247
}

; Function Attrs: nounwind
declare dso_local double @acos(double) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @torsion(%struct.molecule_t* %0, i8* %1, i8* %2, i8* %3, i8* %4) #0 !dbg !2248 {
  %6 = alloca %struct.molecule_t*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [3 x double], align 16
  %12 = alloca [3 x double], align 16
  %13 = alloca [3 x double], align 16
  %14 = alloca [3 x double], align 16
  store %struct.molecule_t* %0, %struct.molecule_t** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %6, metadata !2251, metadata !DIExpression()), !dbg !2252
  store i8* %1, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !2253, metadata !DIExpression()), !dbg !2254
  store i8* %2, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !2255, metadata !DIExpression()), !dbg !2256
  store i8* %3, i8** %9, align 8
  call void @llvm.dbg.declare(metadata i8** %9, metadata !2257, metadata !DIExpression()), !dbg !2258
  store i8* %4, i8** %10, align 8
  call void @llvm.dbg.declare(metadata i8** %10, metadata !2259, metadata !DIExpression()), !dbg !2260
  call void @llvm.dbg.declare(metadata [3 x double]* %11, metadata !2261, metadata !DIExpression()), !dbg !2262
  call void @llvm.dbg.declare(metadata [3 x double]* %12, metadata !2263, metadata !DIExpression()), !dbg !2264
  call void @llvm.dbg.declare(metadata [3 x double]* %13, metadata !2265, metadata !DIExpression()), !dbg !2266
  call void @llvm.dbg.declare(metadata [3 x double]* %14, metadata !2267, metadata !DIExpression()), !dbg !2268
  %15 = load %struct.molecule_t*, %struct.molecule_t** %6, align 8, !dbg !2269
  %16 = load i8*, i8** %7, align 8, !dbg !2270
  %17 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !2271
  %18 = call i32 @setpoint(%struct.molecule_t* %15, i8* %16, double* %17), !dbg !2272
  %19 = load %struct.molecule_t*, %struct.molecule_t** %6, align 8, !dbg !2273
  %20 = load i8*, i8** %8, align 8, !dbg !2274
  %21 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 0, !dbg !2275
  %22 = call i32 @setpoint(%struct.molecule_t* %19, i8* %20, double* %21), !dbg !2276
  %23 = load %struct.molecule_t*, %struct.molecule_t** %6, align 8, !dbg !2277
  %24 = load i8*, i8** %9, align 8, !dbg !2278
  %25 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0, !dbg !2279
  %26 = call i32 @setpoint(%struct.molecule_t* %23, i8* %24, double* %25), !dbg !2280
  %27 = load %struct.molecule_t*, %struct.molecule_t** %6, align 8, !dbg !2281
  %28 = load i8*, i8** %10, align 8, !dbg !2282
  %29 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0, !dbg !2283
  %30 = call i32 @setpoint(%struct.molecule_t* %27, i8* %28, double* %29), !dbg !2284
  %31 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !2285
  %32 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 0, !dbg !2286
  %33 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0, !dbg !2287
  %34 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0, !dbg !2288
  %35 = call double @torsionp(double* %31, double* %32, double* %33, double* %34), !dbg !2289
  ret double %35, !dbg !2290
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double @torsionp(double* %0, double* %1, double* %2, double* %3) #0 !dbg !2291 {
  %5 = alloca double*, align 8
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca double*, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca double, align 8
  %29 = alloca double, align 8
  store double* %0, double** %5, align 8
  call void @llvm.dbg.declare(metadata double** %5, metadata !2294, metadata !DIExpression()), !dbg !2295
  store double* %1, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !2296, metadata !DIExpression()), !dbg !2297
  store double* %2, double** %7, align 8
  call void @llvm.dbg.declare(metadata double** %7, metadata !2298, metadata !DIExpression()), !dbg !2299
  store double* %3, double** %8, align 8
  call void @llvm.dbg.declare(metadata double** %8, metadata !2300, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.declare(metadata double* %9, metadata !2302, metadata !DIExpression()), !dbg !2303
  call void @llvm.dbg.declare(metadata double* %10, metadata !2304, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.declare(metadata double* %11, metadata !2306, metadata !DIExpression()), !dbg !2307
  call void @llvm.dbg.declare(metadata double* %12, metadata !2308, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.declare(metadata double* %13, metadata !2310, metadata !DIExpression()), !dbg !2311
  call void @llvm.dbg.declare(metadata double* %14, metadata !2312, metadata !DIExpression()), !dbg !2313
  call void @llvm.dbg.declare(metadata double* %15, metadata !2314, metadata !DIExpression()), !dbg !2315
  call void @llvm.dbg.declare(metadata double* %16, metadata !2316, metadata !DIExpression()), !dbg !2317
  call void @llvm.dbg.declare(metadata double* %17, metadata !2318, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.declare(metadata double* %18, metadata !2320, metadata !DIExpression()), !dbg !2321
  call void @llvm.dbg.declare(metadata double* %19, metadata !2322, metadata !DIExpression()), !dbg !2323
  call void @llvm.dbg.declare(metadata double* %20, metadata !2324, metadata !DIExpression()), !dbg !2325
  call void @llvm.dbg.declare(metadata double* %21, metadata !2326, metadata !DIExpression()), !dbg !2327
  call void @llvm.dbg.declare(metadata double* %22, metadata !2328, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.declare(metadata double* %23, metadata !2330, metadata !DIExpression()), !dbg !2331
  call void @llvm.dbg.declare(metadata double* %24, metadata !2332, metadata !DIExpression()), !dbg !2333
  call void @llvm.dbg.declare(metadata double* %25, metadata !2334, metadata !DIExpression()), !dbg !2335
  call void @llvm.dbg.declare(metadata double* %26, metadata !2336, metadata !DIExpression()), !dbg !2337
  call void @llvm.dbg.declare(metadata double* %27, metadata !2338, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.declare(metadata double* %28, metadata !2340, metadata !DIExpression()), !dbg !2341
  call void @llvm.dbg.declare(metadata double* %29, metadata !2342, metadata !DIExpression()), !dbg !2343
  %30 = load double*, double** %5, align 8, !dbg !2344
  %31 = getelementptr inbounds double, double* %30, i64 0, !dbg !2344
  %32 = load double, double* %31, align 8, !dbg !2344
  %33 = load double*, double** %6, align 8, !dbg !2345
  %34 = getelementptr inbounds double, double* %33, i64 0, !dbg !2345
  %35 = load double, double* %34, align 8, !dbg !2345
  %36 = fsub double %32, %35, !dbg !2346
  store double %36, double* %9, align 8, !dbg !2347
  %37 = load double*, double** %5, align 8, !dbg !2348
  %38 = getelementptr inbounds double, double* %37, i64 1, !dbg !2348
  %39 = load double, double* %38, align 8, !dbg !2348
  %40 = load double*, double** %6, align 8, !dbg !2349
  %41 = getelementptr inbounds double, double* %40, i64 1, !dbg !2349
  %42 = load double, double* %41, align 8, !dbg !2349
  %43 = fsub double %39, %42, !dbg !2350
  store double %43, double* %10, align 8, !dbg !2351
  %44 = load double*, double** %5, align 8, !dbg !2352
  %45 = getelementptr inbounds double, double* %44, i64 2, !dbg !2352
  %46 = load double, double* %45, align 8, !dbg !2352
  %47 = load double*, double** %6, align 8, !dbg !2353
  %48 = getelementptr inbounds double, double* %47, i64 2, !dbg !2353
  %49 = load double, double* %48, align 8, !dbg !2353
  %50 = fsub double %46, %49, !dbg !2354
  store double %50, double* %11, align 8, !dbg !2355
  %51 = load double*, double** %7, align 8, !dbg !2356
  %52 = getelementptr inbounds double, double* %51, i64 0, !dbg !2356
  %53 = load double, double* %52, align 8, !dbg !2356
  %54 = load double*, double** %6, align 8, !dbg !2357
  %55 = getelementptr inbounds double, double* %54, i64 0, !dbg !2357
  %56 = load double, double* %55, align 8, !dbg !2357
  %57 = fsub double %53, %56, !dbg !2358
  store double %57, double* %12, align 8, !dbg !2359
  %58 = load double*, double** %7, align 8, !dbg !2360
  %59 = getelementptr inbounds double, double* %58, i64 1, !dbg !2360
  %60 = load double, double* %59, align 8, !dbg !2360
  %61 = load double*, double** %6, align 8, !dbg !2361
  %62 = getelementptr inbounds double, double* %61, i64 1, !dbg !2361
  %63 = load double, double* %62, align 8, !dbg !2361
  %64 = fsub double %60, %63, !dbg !2362
  store double %64, double* %13, align 8, !dbg !2363
  %65 = load double*, double** %7, align 8, !dbg !2364
  %66 = getelementptr inbounds double, double* %65, i64 2, !dbg !2364
  %67 = load double, double* %66, align 8, !dbg !2364
  %68 = load double*, double** %6, align 8, !dbg !2365
  %69 = getelementptr inbounds double, double* %68, i64 2, !dbg !2365
  %70 = load double, double* %69, align 8, !dbg !2365
  %71 = fsub double %67, %70, !dbg !2366
  store double %71, double* %14, align 8, !dbg !2367
  %72 = load double*, double** %7, align 8, !dbg !2368
  %73 = getelementptr inbounds double, double* %72, i64 0, !dbg !2368
  %74 = load double, double* %73, align 8, !dbg !2368
  %75 = load double*, double** %8, align 8, !dbg !2369
  %76 = getelementptr inbounds double, double* %75, i64 0, !dbg !2369
  %77 = load double, double* %76, align 8, !dbg !2369
  %78 = fsub double %74, %77, !dbg !2370
  store double %78, double* %15, align 8, !dbg !2371
  %79 = load double*, double** %7, align 8, !dbg !2372
  %80 = getelementptr inbounds double, double* %79, i64 1, !dbg !2372
  %81 = load double, double* %80, align 8, !dbg !2372
  %82 = load double*, double** %8, align 8, !dbg !2373
  %83 = getelementptr inbounds double, double* %82, i64 1, !dbg !2373
  %84 = load double, double* %83, align 8, !dbg !2373
  %85 = fsub double %81, %84, !dbg !2374
  store double %85, double* %16, align 8, !dbg !2375
  %86 = load double*, double** %7, align 8, !dbg !2376
  %87 = getelementptr inbounds double, double* %86, i64 2, !dbg !2376
  %88 = load double, double* %87, align 8, !dbg !2376
  %89 = load double*, double** %8, align 8, !dbg !2377
  %90 = getelementptr inbounds double, double* %89, i64 2, !dbg !2377
  %91 = load double, double* %90, align 8, !dbg !2377
  %92 = fsub double %88, %91, !dbg !2378
  store double %92, double* %17, align 8, !dbg !2379
  %93 = load double, double* %10, align 8, !dbg !2380
  %94 = load double, double* %14, align 8, !dbg !2381
  %95 = fmul double %93, %94, !dbg !2382
  %96 = load double, double* %11, align 8, !dbg !2383
  %97 = load double, double* %13, align 8, !dbg !2384
  %98 = fmul double %96, %97, !dbg !2385
  %99 = fsub double %95, %98, !dbg !2386
  store double %99, double* %18, align 8, !dbg !2387
  %100 = load double, double* %11, align 8, !dbg !2388
  %101 = load double, double* %12, align 8, !dbg !2389
  %102 = fmul double %100, %101, !dbg !2390
  %103 = load double, double* %9, align 8, !dbg !2391
  %104 = load double, double* %14, align 8, !dbg !2392
  %105 = fmul double %103, %104, !dbg !2393
  %106 = fsub double %102, %105, !dbg !2394
  store double %106, double* %19, align 8, !dbg !2395
  %107 = load double, double* %9, align 8, !dbg !2396
  %108 = load double, double* %13, align 8, !dbg !2397
  %109 = fmul double %107, %108, !dbg !2398
  %110 = load double, double* %10, align 8, !dbg !2399
  %111 = load double, double* %12, align 8, !dbg !2400
  %112 = fmul double %110, %111, !dbg !2401
  %113 = fsub double %109, %112, !dbg !2402
  store double %113, double* %20, align 8, !dbg !2403
  %114 = load double, double* %14, align 8, !dbg !2404
  %115 = load double, double* %16, align 8, !dbg !2405
  %116 = fmul double %114, %115, !dbg !2406
  %117 = load double, double* %13, align 8, !dbg !2407
  %118 = load double, double* %17, align 8, !dbg !2408
  %119 = fmul double %117, %118, !dbg !2409
  %120 = fsub double %116, %119, !dbg !2410
  store double %120, double* %21, align 8, !dbg !2411
  %121 = load double, double* %12, align 8, !dbg !2412
  %122 = load double, double* %17, align 8, !dbg !2413
  %123 = fmul double %121, %122, !dbg !2414
  %124 = load double, double* %14, align 8, !dbg !2415
  %125 = load double, double* %15, align 8, !dbg !2416
  %126 = fmul double %124, %125, !dbg !2417
  %127 = fsub double %123, %126, !dbg !2418
  store double %127, double* %22, align 8, !dbg !2419
  %128 = load double, double* %13, align 8, !dbg !2420
  %129 = load double, double* %15, align 8, !dbg !2421
  %130 = fmul double %128, %129, !dbg !2422
  %131 = load double, double* %12, align 8, !dbg !2423
  %132 = load double, double* %16, align 8, !dbg !2424
  %133 = fmul double %131, %132, !dbg !2425
  %134 = fsub double %130, %133, !dbg !2426
  store double %134, double* %23, align 8, !dbg !2427
  %135 = load double, double* %18, align 8, !dbg !2428
  %136 = load double, double* %18, align 8, !dbg !2429
  %137 = fmul double %135, %136, !dbg !2430
  %138 = load double, double* %19, align 8, !dbg !2431
  %139 = load double, double* %19, align 8, !dbg !2432
  %140 = fmul double %138, %139, !dbg !2433
  %141 = fadd double %137, %140, !dbg !2434
  %142 = load double, double* %20, align 8, !dbg !2435
  %143 = load double, double* %20, align 8, !dbg !2436
  %144 = fmul double %142, %143, !dbg !2437
  %145 = fadd double %141, %144, !dbg !2438
  store double %145, double* %24, align 8, !dbg !2439
  %146 = load double, double* %21, align 8, !dbg !2440
  %147 = load double, double* %21, align 8, !dbg !2441
  %148 = fmul double %146, %147, !dbg !2442
  %149 = load double, double* %22, align 8, !dbg !2443
  %150 = load double, double* %22, align 8, !dbg !2444
  %151 = fmul double %149, %150, !dbg !2445
  %152 = fadd double %148, %151, !dbg !2446
  %153 = load double, double* %23, align 8, !dbg !2447
  %154 = load double, double* %23, align 8, !dbg !2448
  %155 = fmul double %153, %154, !dbg !2449
  %156 = fadd double %152, %155, !dbg !2450
  store double %156, double* %25, align 8, !dbg !2451
  %157 = load double, double* %18, align 8, !dbg !2452
  %158 = load double, double* %21, align 8, !dbg !2453
  %159 = fmul double %157, %158, !dbg !2454
  %160 = load double, double* %19, align 8, !dbg !2455
  %161 = load double, double* %22, align 8, !dbg !2456
  %162 = fmul double %160, %161, !dbg !2457
  %163 = fadd double %159, %162, !dbg !2458
  %164 = load double, double* %20, align 8, !dbg !2459
  %165 = load double, double* %23, align 8, !dbg !2460
  %166 = fmul double %164, %165, !dbg !2461
  %167 = fadd double %163, %166, !dbg !2462
  store double %167, double* %26, align 8, !dbg !2463
  %168 = load double, double* %26, align 8, !dbg !2464
  %169 = load double, double* %24, align 8, !dbg !2465
  %170 = load double, double* %25, align 8, !dbg !2466
  %171 = fmul double %169, %170, !dbg !2467
  %172 = call double @sqrt(double %171) #8, !dbg !2468
  %173 = fdiv double %168, %172, !dbg !2469
  store double %173, double* %26, align 8, !dbg !2470
  %174 = load double, double* %26, align 8, !dbg !2471
  %175 = fcmp olt double %174, -1.000000e+00, !dbg !2473
  br i1 %175, label %176, label %177, !dbg !2474

176:                                              ; preds = %4
  store double -1.000000e+00, double* %26, align 8, !dbg !2475
  br label %182, !dbg !2476

177:                                              ; preds = %4
  %178 = load double, double* %26, align 8, !dbg !2477
  %179 = fcmp ogt double %178, 1.000000e+00, !dbg !2479
  br i1 %179, label %180, label %181, !dbg !2480

180:                                              ; preds = %177
  store double 1.000000e+00, double* %26, align 8, !dbg !2481
  br label %181, !dbg !2482

181:                                              ; preds = %180, %177
  br label %182

182:                                              ; preds = %181, %176
  %183 = load double, double* %26, align 8, !dbg !2483
  %184 = call double @acos(double %183) #8, !dbg !2484
  store double %184, double* %28, align 8, !dbg !2485
  %185 = load double, double* %12, align 8, !dbg !2486
  %186 = load double, double* %20, align 8, !dbg !2487
  %187 = load double, double* %22, align 8, !dbg !2488
  %188 = fmul double %186, %187, !dbg !2489
  %189 = load double, double* %19, align 8, !dbg !2490
  %190 = load double, double* %23, align 8, !dbg !2491
  %191 = fmul double %189, %190, !dbg !2492
  %192 = fsub double %188, %191, !dbg !2493
  %193 = fmul double %185, %192, !dbg !2494
  %194 = load double, double* %13, align 8, !dbg !2495
  %195 = load double, double* %18, align 8, !dbg !2496
  %196 = load double, double* %23, align 8, !dbg !2497
  %197 = fmul double %195, %196, !dbg !2498
  %198 = load double, double* %20, align 8, !dbg !2499
  %199 = load double, double* %21, align 8, !dbg !2500
  %200 = fmul double %198, %199, !dbg !2501
  %201 = fsub double %197, %200, !dbg !2502
  %202 = fmul double %194, %201, !dbg !2503
  %203 = fadd double %193, %202, !dbg !2504
  %204 = load double, double* %14, align 8, !dbg !2505
  %205 = load double, double* %19, align 8, !dbg !2506
  %206 = load double, double* %21, align 8, !dbg !2507
  %207 = fmul double %205, %206, !dbg !2508
  %208 = load double, double* %18, align 8, !dbg !2509
  %209 = load double, double* %22, align 8, !dbg !2510
  %210 = fmul double %208, %209, !dbg !2511
  %211 = fsub double %207, %210, !dbg !2512
  %212 = fmul double %204, %211, !dbg !2513
  %213 = fadd double %203, %212, !dbg !2514
  store double %213, double* %27, align 8, !dbg !2515
  %214 = load double, double* %27, align 8, !dbg !2516
  %215 = fcmp olt double %214, 0.000000e+00, !dbg !2518
  br i1 %215, label %216, label %219, !dbg !2519

216:                                              ; preds = %182
  %217 = load double, double* %28, align 8, !dbg !2520
  %218 = fneg double %217, !dbg !2521
  store double %218, double* %28, align 8, !dbg !2522
  br label %219, !dbg !2523

219:                                              ; preds = %216, %182
  %220 = load double, double* %28, align 8, !dbg !2524
  %221 = fsub double 0x400921FB54442D18, %220, !dbg !2525
  store double %221, double* %28, align 8, !dbg !2526
  %222 = load double, double* %28, align 8, !dbg !2527
  %223 = fmul double 1.800000e+02, %222, !dbg !2528
  %224 = fdiv double %223, 0x400921FB54442D18, !dbg !2529
  store double %224, double* %29, align 8, !dbg !2530
  %225 = load double, double* %29, align 8, !dbg !2531
  %226 = fcmp ogt double %225, 1.800000e+02, !dbg !2533
  br i1 %226, label %227, label %230, !dbg !2534

227:                                              ; preds = %219
  %228 = load double, double* %29, align 8, !dbg !2535
  %229 = fsub double %228, 3.600000e+02, !dbg !2536
  store double %229, double* %29, align 8, !dbg !2537
  br label %230, !dbg !2538

230:                                              ; preds = %227, %219
  %231 = load double, double* %29, align 8, !dbg !2539
  ret double %231, !dbg !2540
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getresname(%struct.residue_t* %0) #0 !dbg !249 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.residue_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %3, metadata !2541, metadata !DIExpression()), !dbg !2542
  %4 = call noalias i8* @malloc(i64 8) #8, !dbg !2543
  store i8* %4, i8** @getresname.rname, align 8, !dbg !2545
  %5 = icmp eq i8* %4, null, !dbg !2546
  br i1 %5, label %6, label %7, !dbg !2547

6:                                                ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !2548
  br label %14, !dbg !2548

7:                                                ; preds = %1
  %8 = load i8*, i8** @getresname.rname, align 8, !dbg !2550
  %9 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !2551
  %10 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %9, i32 0, i32 4, !dbg !2552
  %11 = load i8*, i8** %10, align 8, !dbg !2552
  %12 = call i8* @strcpy(i8* %8, i8* %11) #8, !dbg !2553
  %13 = load i8*, i8** @getresname.rname, align 8, !dbg !2554
  store i8* %13, i8** %2, align 8, !dbg !2555
  br label %14, !dbg !2555

14:                                               ; preds = %7, %6
  %15 = load i8*, i8** %2, align 8, !dbg !2556
  ret i8* %15, !dbg !2556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cap(%struct.molecule_t* %0, i8* %1, i32 %2, i32 %3) #0 !dbg !2557 {
  %5 = alloca %struct.molecule_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.strand_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %5, metadata !2560, metadata !DIExpression()), !dbg !2561
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2562, metadata !DIExpression()), !dbg !2563
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2564, metadata !DIExpression()), !dbg !2565
  store i32 %3, i32* %8, align 4
  call void @llvm.dbg.declare(metadata i32* %8, metadata !2566, metadata !DIExpression()), !dbg !2567
  call void @llvm.dbg.declare(metadata %struct.strand_t** %9, metadata !2568, metadata !DIExpression()), !dbg !2569
  %10 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !2570
  %11 = load i8*, i8** %6, align 8, !dbg !2571
  %12 = call i32 @select_atoms(%struct.molecule_t* %10, i8* %11), !dbg !2572
  %13 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !2573
  %14 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %13, i32 0, i32 2, !dbg !2575
  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !2575
  store %struct.strand_t* %15, %struct.strand_t** %9, align 8, !dbg !2576
  br label %16, !dbg !2577

16:                                               ; preds = %55, %4
  %17 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2578
  %18 = icmp ne %struct.strand_t* %17, null, !dbg !2580
  br i1 %18, label %19, label %59, !dbg !2580

19:                                               ; preds = %16
  %20 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2581
  %21 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %20, i32 0, i32 5, !dbg !2584
  %22 = load i32, i32* %21, align 8, !dbg !2584
  %23 = icmp sgt i32 %22, 0, !dbg !2585
  br i1 %23, label %24, label %54, !dbg !2586

24:                                               ; preds = %19
  %25 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2587
  %26 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %25, i32 0, i32 2, !dbg !2588
  %27 = load i32, i32* %26, align 4, !dbg !2588
  %28 = and i32 %27, 1, !dbg !2589
  %29 = icmp ne i32 %28, 0, !dbg !2589
  br i1 %29, label %30, label %54, !dbg !2590

30:                                               ; preds = %24
  %31 = load i32, i32* %7, align 4, !dbg !2591
  %32 = icmp ne i32 %31, 0, !dbg !2591
  br i1 %32, label %33, label %39, !dbg !2594

33:                                               ; preds = %30
  %34 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2595
  %35 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %34, i32 0, i32 7, !dbg !2596
  %36 = load %struct.residue_t**, %struct.residue_t*** %35, align 8, !dbg !2596
  %37 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %36, i64 0, !dbg !2595
  %38 = load %struct.residue_t*, %struct.residue_t** %37, align 8, !dbg !2595
  call void @cvt_p2hb(%struct.residue_t* %38), !dbg !2597
  br label %39, !dbg !2597

39:                                               ; preds = %33, %30
  %40 = load i32, i32* %8, align 4, !dbg !2598
  %41 = icmp ne i32 %40, 0, !dbg !2598
  br i1 %41, label %42, label %53, !dbg !2600

42:                                               ; preds = %39
  %43 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2601
  %44 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %43, i32 0, i32 7, !dbg !2602
  %45 = load %struct.residue_t**, %struct.residue_t*** %44, align 8, !dbg !2602
  %46 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2603
  %47 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %46, i32 0, i32 5, !dbg !2604
  %48 = load i32, i32* %47, align 8, !dbg !2604
  %49 = sub nsw i32 %48, 1, !dbg !2605
  %50 = sext i32 %49 to i64, !dbg !2601
  %51 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %45, i64 %50, !dbg !2601
  %52 = load %struct.residue_t*, %struct.residue_t** %51, align 8, !dbg !2601
  call void @add_he2o3(%struct.residue_t* %52), !dbg !2606
  br label %53, !dbg !2606

53:                                               ; preds = %42, %39
  br label %54, !dbg !2607

54:                                               ; preds = %53, %24, %19
  br label %55, !dbg !2608

55:                                               ; preds = %54
  %56 = load %struct.strand_t*, %struct.strand_t** %9, align 8, !dbg !2609
  %57 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %56, i32 0, i32 4, !dbg !2610
  %58 = load %struct.strand_t*, %struct.strand_t** %57, align 8, !dbg !2610
  store %struct.strand_t* %58, %struct.strand_t** %9, align 8, !dbg !2611
  br label %16, !dbg !2612, !llvm.loop !2613

59:                                               ; preds = %16
  %60 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !2615
  %61 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %60, i32 0, i32 5, !dbg !2616
  store i32 0, i32* %61, align 8, !dbg !2617
  ret i32 0, !dbg !2618
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cvt_p2hb(%struct.residue_t* %0) #0 !dbg !2619 {
  %2 = alloca %struct.residue_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca %struct.atom_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %2, metadata !2622, metadata !DIExpression()), !dbg !2623
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2624, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2626, metadata !DIExpression()), !dbg !2627
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2628, metadata !DIExpression()), !dbg !2629
  call void @llvm.dbg.declare(metadata double* %6, metadata !2630, metadata !DIExpression()), !dbg !2631
  call void @llvm.dbg.declare(metadata double* %7, metadata !2632, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.declare(metadata double* %8, metadata !2634, metadata !DIExpression()), !dbg !2635
  call void @llvm.dbg.declare(metadata double* %9, metadata !2636, metadata !DIExpression()), !dbg !2637
  call void @llvm.dbg.declare(metadata %struct.atom_t** %10, metadata !2638, metadata !DIExpression()), !dbg !2639
  %11 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2640
  %12 = call i32 @find_atom(%struct.residue_t* %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0)), !dbg !2641
  store i32 %12, i32* %3, align 4, !dbg !2642
  %13 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2643
  %14 = call i32 @find_atom(%struct.residue_t* %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)), !dbg !2645
  store i32 %14, i32* %4, align 4, !dbg !2646
  %15 = icmp eq i32 %14, -1, !dbg !2647
  br i1 %15, label %16, label %19, !dbg !2648

16:                                               ; preds = %1
  %17 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2649
  %18 = call i32 @find_atom(%struct.residue_t* %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)), !dbg !2650
  store i32 %18, i32* %4, align 4, !dbg !2651
  br label %19, !dbg !2652

19:                                               ; preds = %16, %1
  %20 = load i32, i32* %4, align 4, !dbg !2653
  %21 = icmp eq i32 %20, -1, !dbg !2655
  br i1 %21, label %22, label %23, !dbg !2656

22:                                               ; preds = %19
  br label %212, !dbg !2657

23:                                               ; preds = %19
  %24 = load i32, i32* %3, align 4, !dbg !2658
  %25 = icmp ne i32 %24, -1, !dbg !2660
  br i1 %25, label %26, label %211, !dbg !2661

26:                                               ; preds = %23
  %27 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2662
  %28 = call i32 @find_atom(%struct.residue_t* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0)), !dbg !2665
  store i32 %28, i32* %5, align 4, !dbg !2666
  %29 = icmp eq i32 %28, -1, !dbg !2667
  br i1 %29, label %30, label %39, !dbg !2668

30:                                               ; preds = %26
  %31 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2669
  %32 = call i32 @find_atom(%struct.residue_t* %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0)), !dbg !2672
  store i32 %32, i32* %5, align 4, !dbg !2673
  %33 = icmp ne i32 %32, -1, !dbg !2674
  br i1 %33, label %34, label %38, !dbg !2675

34:                                               ; preds = %30
  %35 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2676
  %36 = load i32, i32* %5, align 4, !dbg !2677
  %37 = call i32 @delete_atom(%struct.residue_t* %35, i32 %36), !dbg !2678
  br label %38, !dbg !2678

38:                                               ; preds = %34, %30
  br label %43, !dbg !2679

39:                                               ; preds = %26
  %40 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2680
  %41 = load i32, i32* %5, align 4, !dbg !2681
  %42 = call i32 @delete_atom(%struct.residue_t* %40, i32 %41), !dbg !2682
  br label %43

43:                                               ; preds = %39, %38
  %44 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2683
  %45 = call i32 @find_atom(%struct.residue_t* %44, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0)), !dbg !2685
  store i32 %45, i32* %5, align 4, !dbg !2686
  %46 = icmp eq i32 %45, -1, !dbg !2687
  br i1 %46, label %47, label %56, !dbg !2688

47:                                               ; preds = %43
  %48 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2689
  %49 = call i32 @find_atom(%struct.residue_t* %48, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0)), !dbg !2692
  store i32 %49, i32* %5, align 4, !dbg !2693
  %50 = icmp ne i32 %49, -1, !dbg !2694
  br i1 %50, label %51, label %55, !dbg !2695

51:                                               ; preds = %47
  %52 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2696
  %53 = load i32, i32* %5, align 4, !dbg !2697
  %54 = call i32 @delete_atom(%struct.residue_t* %52, i32 %53), !dbg !2698
  br label %55, !dbg !2698

55:                                               ; preds = %51, %47
  br label %60, !dbg !2699

56:                                               ; preds = %43
  %57 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2700
  %58 = load i32, i32* %5, align 4, !dbg !2701
  %59 = call i32 @delete_atom(%struct.residue_t* %57, i32 %58), !dbg !2702
  br label %60

60:                                               ; preds = %56, %55
  %61 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2703
  %62 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %61, i32 0, i32 17, !dbg !2704
  %63 = load %struct.atom_t*, %struct.atom_t** %62, align 8, !dbg !2704
  %64 = load i32, i32* %3, align 4, !dbg !2705
  %65 = sext i32 %64 to i64, !dbg !2703
  %66 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %63, i64 %65, !dbg !2703
  store %struct.atom_t* %66, %struct.atom_t** %10, align 8, !dbg !2706
  %67 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !2707
  %68 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %67, i32 0, i32 0, !dbg !2708
  %69 = load i8*, i8** %68, align 8, !dbg !2708
  %70 = call i8* @strcpy(i8* %69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0)) #8, !dbg !2709
  %71 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2710
  %72 = call i32 @find_atom(%struct.residue_t* %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)), !dbg !2712
  store i32 %72, i32* %4, align 4, !dbg !2713
  %73 = icmp eq i32 %72, -1, !dbg !2714
  br i1 %73, label %74, label %77, !dbg !2715

74:                                               ; preds = %60
  %75 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2716
  %76 = call i32 @find_atom(%struct.residue_t* %75, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)), !dbg !2717
  store i32 %76, i32* %4, align 4, !dbg !2718
  br label %77, !dbg !2719

77:                                               ; preds = %74, %60
  %78 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2720
  %79 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %78, i32 0, i32 17, !dbg !2721
  %80 = load %struct.atom_t*, %struct.atom_t** %79, align 8, !dbg !2721
  %81 = load i32, i32* %3, align 4, !dbg !2722
  %82 = sext i32 %81 to i64, !dbg !2720
  %83 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %80, i64 %82, !dbg !2720
  %84 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %83, i32 0, i32 17, !dbg !2723
  %85 = getelementptr inbounds [3 x double], [3 x double]* %84, i64 0, i64 0, !dbg !2720
  %86 = load double, double* %85, align 8, !dbg !2720
  %87 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2724
  %88 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %87, i32 0, i32 17, !dbg !2725
  %89 = load %struct.atom_t*, %struct.atom_t** %88, align 8, !dbg !2725
  %90 = load i32, i32* %4, align 4, !dbg !2726
  %91 = sext i32 %90 to i64, !dbg !2724
  %92 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %89, i64 %91, !dbg !2724
  %93 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %92, i32 0, i32 17, !dbg !2727
  %94 = getelementptr inbounds [3 x double], [3 x double]* %93, i64 0, i64 0, !dbg !2724
  %95 = load double, double* %94, align 8, !dbg !2724
  %96 = fsub double %86, %95, !dbg !2728
  store double %96, double* %6, align 8, !dbg !2729
  %97 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2730
  %98 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %97, i32 0, i32 17, !dbg !2731
  %99 = load %struct.atom_t*, %struct.atom_t** %98, align 8, !dbg !2731
  %100 = load i32, i32* %3, align 4, !dbg !2732
  %101 = sext i32 %100 to i64, !dbg !2730
  %102 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %99, i64 %101, !dbg !2730
  %103 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %102, i32 0, i32 17, !dbg !2733
  %104 = getelementptr inbounds [3 x double], [3 x double]* %103, i64 0, i64 1, !dbg !2730
  %105 = load double, double* %104, align 8, !dbg !2730
  %106 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2734
  %107 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %106, i32 0, i32 17, !dbg !2735
  %108 = load %struct.atom_t*, %struct.atom_t** %107, align 8, !dbg !2735
  %109 = load i32, i32* %4, align 4, !dbg !2736
  %110 = sext i32 %109 to i64, !dbg !2734
  %111 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %108, i64 %110, !dbg !2734
  %112 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %111, i32 0, i32 17, !dbg !2737
  %113 = getelementptr inbounds [3 x double], [3 x double]* %112, i64 0, i64 1, !dbg !2734
  %114 = load double, double* %113, align 8, !dbg !2734
  %115 = fsub double %105, %114, !dbg !2738
  store double %115, double* %7, align 8, !dbg !2739
  %116 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2740
  %117 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %116, i32 0, i32 17, !dbg !2741
  %118 = load %struct.atom_t*, %struct.atom_t** %117, align 8, !dbg !2741
  %119 = load i32, i32* %3, align 4, !dbg !2742
  %120 = sext i32 %119 to i64, !dbg !2740
  %121 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %118, i64 %120, !dbg !2740
  %122 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %121, i32 0, i32 17, !dbg !2743
  %123 = getelementptr inbounds [3 x double], [3 x double]* %122, i64 0, i64 2, !dbg !2740
  %124 = load double, double* %123, align 8, !dbg !2740
  %125 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2744
  %126 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %125, i32 0, i32 17, !dbg !2745
  %127 = load %struct.atom_t*, %struct.atom_t** %126, align 8, !dbg !2745
  %128 = load i32, i32* %4, align 4, !dbg !2746
  %129 = sext i32 %128 to i64, !dbg !2744
  %130 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %127, i64 %129, !dbg !2744
  %131 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %130, i32 0, i32 17, !dbg !2747
  %132 = getelementptr inbounds [3 x double], [3 x double]* %131, i64 0, i64 2, !dbg !2744
  %133 = load double, double* %132, align 8, !dbg !2744
  %134 = fsub double %124, %133, !dbg !2748
  store double %134, double* %8, align 8, !dbg !2749
  %135 = load double, double* %6, align 8, !dbg !2750
  %136 = load double, double* %6, align 8, !dbg !2751
  %137 = fmul double %135, %136, !dbg !2752
  %138 = load double, double* %7, align 8, !dbg !2753
  %139 = load double, double* %7, align 8, !dbg !2754
  %140 = fmul double %138, %139, !dbg !2755
  %141 = fadd double %137, %140, !dbg !2756
  %142 = load double, double* %8, align 8, !dbg !2757
  %143 = load double, double* %8, align 8, !dbg !2758
  %144 = fmul double %142, %143, !dbg !2759
  %145 = fadd double %141, %144, !dbg !2760
  %146 = call double @sqrt(double %145) #8, !dbg !2761
  %147 = fdiv double 0x3FEEB851EB851EB8, %146, !dbg !2762
  store double %147, double* %9, align 8, !dbg !2763
  %148 = load double, double* %9, align 8, !dbg !2764
  %149 = load double, double* %6, align 8, !dbg !2765
  %150 = fmul double %148, %149, !dbg !2766
  %151 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2767
  %152 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %151, i32 0, i32 17, !dbg !2768
  %153 = load %struct.atom_t*, %struct.atom_t** %152, align 8, !dbg !2768
  %154 = load i32, i32* %4, align 4, !dbg !2769
  %155 = sext i32 %154 to i64, !dbg !2767
  %156 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %153, i64 %155, !dbg !2767
  %157 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %156, i32 0, i32 17, !dbg !2770
  %158 = getelementptr inbounds [3 x double], [3 x double]* %157, i64 0, i64 0, !dbg !2767
  %159 = load double, double* %158, align 8, !dbg !2767
  %160 = fadd double %150, %159, !dbg !2771
  %161 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2772
  %162 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %161, i32 0, i32 17, !dbg !2773
  %163 = load %struct.atom_t*, %struct.atom_t** %162, align 8, !dbg !2773
  %164 = load i32, i32* %3, align 4, !dbg !2774
  %165 = sext i32 %164 to i64, !dbg !2772
  %166 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %163, i64 %165, !dbg !2772
  %167 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %166, i32 0, i32 17, !dbg !2775
  %168 = getelementptr inbounds [3 x double], [3 x double]* %167, i64 0, i64 0, !dbg !2772
  store double %160, double* %168, align 8, !dbg !2776
  %169 = load double, double* %9, align 8, !dbg !2777
  %170 = load double, double* %7, align 8, !dbg !2778
  %171 = fmul double %169, %170, !dbg !2779
  %172 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2780
  %173 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %172, i32 0, i32 17, !dbg !2781
  %174 = load %struct.atom_t*, %struct.atom_t** %173, align 8, !dbg !2781
  %175 = load i32, i32* %4, align 4, !dbg !2782
  %176 = sext i32 %175 to i64, !dbg !2780
  %177 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %174, i64 %176, !dbg !2780
  %178 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %177, i32 0, i32 17, !dbg !2783
  %179 = getelementptr inbounds [3 x double], [3 x double]* %178, i64 0, i64 1, !dbg !2780
  %180 = load double, double* %179, align 8, !dbg !2780
  %181 = fadd double %171, %180, !dbg !2784
  %182 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2785
  %183 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %182, i32 0, i32 17, !dbg !2786
  %184 = load %struct.atom_t*, %struct.atom_t** %183, align 8, !dbg !2786
  %185 = load i32, i32* %3, align 4, !dbg !2787
  %186 = sext i32 %185 to i64, !dbg !2785
  %187 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %184, i64 %186, !dbg !2785
  %188 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %187, i32 0, i32 17, !dbg !2788
  %189 = getelementptr inbounds [3 x double], [3 x double]* %188, i64 0, i64 1, !dbg !2785
  store double %181, double* %189, align 8, !dbg !2789
  %190 = load double, double* %9, align 8, !dbg !2790
  %191 = load double, double* %8, align 8, !dbg !2791
  %192 = fmul double %190, %191, !dbg !2792
  %193 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2793
  %194 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %193, i32 0, i32 17, !dbg !2794
  %195 = load %struct.atom_t*, %struct.atom_t** %194, align 8, !dbg !2794
  %196 = load i32, i32* %4, align 4, !dbg !2795
  %197 = sext i32 %196 to i64, !dbg !2793
  %198 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %195, i64 %197, !dbg !2793
  %199 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %198, i32 0, i32 17, !dbg !2796
  %200 = getelementptr inbounds [3 x double], [3 x double]* %199, i64 0, i64 2, !dbg !2793
  %201 = load double, double* %200, align 8, !dbg !2793
  %202 = fadd double %192, %201, !dbg !2797
  %203 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2798
  %204 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %203, i32 0, i32 17, !dbg !2799
  %205 = load %struct.atom_t*, %struct.atom_t** %204, align 8, !dbg !2799
  %206 = load i32, i32* %3, align 4, !dbg !2800
  %207 = sext i32 %206 to i64, !dbg !2798
  %208 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %205, i64 %207, !dbg !2798
  %209 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %208, i32 0, i32 17, !dbg !2801
  %210 = getelementptr inbounds [3 x double], [3 x double]* %209, i64 0, i64 2, !dbg !2798
  store double %202, double* %210, align 8, !dbg !2802
  br label %211, !dbg !2803

211:                                              ; preds = %77, %23
  br label %212

212:                                              ; preds = %211, %22
  ret void, !dbg !2804
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @add_he2o3(%struct.residue_t* %0) #0 !dbg !2805 {
  %2 = alloca %struct.residue_t*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca %struct.atom_t*, align 8
  %18 = alloca %struct.atom_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %2, metadata !2806, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2808, metadata !DIExpression()), !dbg !2809
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2810, metadata !DIExpression()), !dbg !2811
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2812, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata double* %6, metadata !2814, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata double* %7, metadata !2816, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.declare(metadata double* %8, metadata !2818, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.declare(metadata double* %9, metadata !2820, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.declare(metadata double* %10, metadata !2822, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.declare(metadata double* %11, metadata !2824, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.declare(metadata double* %12, metadata !2826, metadata !DIExpression()), !dbg !2827
  call void @llvm.dbg.declare(metadata double* %13, metadata !2828, metadata !DIExpression()), !dbg !2829
  call void @llvm.dbg.declare(metadata double* %14, metadata !2830, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.declare(metadata double* %15, metadata !2832, metadata !DIExpression()), !dbg !2833
  call void @llvm.dbg.declare(metadata double* %16, metadata !2834, metadata !DIExpression()), !dbg !2835
  call void @llvm.dbg.declare(metadata %struct.atom_t** %17, metadata !2836, metadata !DIExpression()), !dbg !2837
  call void @llvm.dbg.declare(metadata %struct.atom_t** %18, metadata !2838, metadata !DIExpression()), !dbg !2839
  %19 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2840
  %20 = call i32 @find_atom(%struct.residue_t* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !2842
  %21 = icmp ne i32 %20, -1, !dbg !2843
  br i1 %21, label %22, label %23, !dbg !2844

22:                                               ; preds = %1
  br label %210, !dbg !2845

23:                                               ; preds = %1
  %24 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2846
  %25 = call i32 @find_atom(%struct.residue_t* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0)), !dbg !2848
  store i32 %25, i32* %4, align 4, !dbg !2849
  %26 = icmp eq i32 %25, -1, !dbg !2850
  br i1 %26, label %27, label %30, !dbg !2851

27:                                               ; preds = %23
  %28 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2852
  %29 = call i32 @find_atom(%struct.residue_t* %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0)), !dbg !2853
  store i32 %29, i32* %4, align 4, !dbg !2854
  br label %30, !dbg !2855

30:                                               ; preds = %27, %23
  %31 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2856
  %32 = call i32 @find_atom(%struct.residue_t* %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i64 0, i64 0)), !dbg !2858
  store i32 %32, i32* %3, align 4, !dbg !2859
  %33 = icmp eq i32 %32, -1, !dbg !2860
  br i1 %33, label %34, label %37, !dbg !2861

34:                                               ; preds = %30
  %35 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2862
  %36 = call i32 @find_atom(%struct.residue_t* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0)), !dbg !2863
  store i32 %36, i32* %3, align 4, !dbg !2864
  br label %37, !dbg !2865

37:                                               ; preds = %34, %30
  %38 = load i32, i32* %3, align 4, !dbg !2866
  %39 = icmp eq i32 %38, -1, !dbg !2868
  br i1 %39, label %43, label %40, !dbg !2869

40:                                               ; preds = %37
  %41 = load i32, i32* %4, align 4, !dbg !2870
  %42 = icmp eq i32 %41, -1, !dbg !2871
  br i1 %42, label %43, label %44, !dbg !2872

43:                                               ; preds = %40, %37
  br label %210, !dbg !2873

44:                                               ; preds = %40
  %45 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2874
  %46 = call i32 @add_atom(%struct.residue_t* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !2875
  %47 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2876
  %48 = call i32 @find_atom(%struct.residue_t* %47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0)), !dbg !2877
  store i32 %48, i32* %5, align 4, !dbg !2878
  %49 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2879
  %50 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %49, i32 0, i32 17, !dbg !2880
  %51 = load %struct.atom_t*, %struct.atom_t** %50, align 8, !dbg !2880
  %52 = load i32, i32* %4, align 4, !dbg !2881
  %53 = sext i32 %52 to i64, !dbg !2879
  %54 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %51, i64 %53, !dbg !2879
  %55 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %54, i32 0, i32 17, !dbg !2882
  %56 = getelementptr inbounds [3 x double], [3 x double]* %55, i64 0, i64 0, !dbg !2879
  %57 = load double, double* %56, align 8, !dbg !2879
  %58 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2883
  %59 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %58, i32 0, i32 17, !dbg !2884
  %60 = load %struct.atom_t*, %struct.atom_t** %59, align 8, !dbg !2884
  %61 = load i32, i32* %3, align 4, !dbg !2885
  %62 = sext i32 %61 to i64, !dbg !2883
  %63 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %60, i64 %62, !dbg !2883
  %64 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %63, i32 0, i32 17, !dbg !2886
  %65 = getelementptr inbounds [3 x double], [3 x double]* %64, i64 0, i64 0, !dbg !2883
  %66 = load double, double* %65, align 8, !dbg !2883
  %67 = fsub double %57, %66, !dbg !2887
  store double %67, double* %6, align 8, !dbg !2888
  %68 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2889
  %69 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %68, i32 0, i32 17, !dbg !2890
  %70 = load %struct.atom_t*, %struct.atom_t** %69, align 8, !dbg !2890
  %71 = load i32, i32* %4, align 4, !dbg !2891
  %72 = sext i32 %71 to i64, !dbg !2889
  %73 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %70, i64 %72, !dbg !2889
  %74 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %73, i32 0, i32 17, !dbg !2892
  %75 = getelementptr inbounds [3 x double], [3 x double]* %74, i64 0, i64 1, !dbg !2889
  %76 = load double, double* %75, align 8, !dbg !2889
  %77 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2893
  %78 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %77, i32 0, i32 17, !dbg !2894
  %79 = load %struct.atom_t*, %struct.atom_t** %78, align 8, !dbg !2894
  %80 = load i32, i32* %3, align 4, !dbg !2895
  %81 = sext i32 %80 to i64, !dbg !2893
  %82 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %79, i64 %81, !dbg !2893
  %83 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %82, i32 0, i32 17, !dbg !2896
  %84 = getelementptr inbounds [3 x double], [3 x double]* %83, i64 0, i64 1, !dbg !2893
  %85 = load double, double* %84, align 8, !dbg !2893
  %86 = fsub double %76, %85, !dbg !2897
  store double %86, double* %7, align 8, !dbg !2898
  %87 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2899
  %88 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %87, i32 0, i32 17, !dbg !2900
  %89 = load %struct.atom_t*, %struct.atom_t** %88, align 8, !dbg !2900
  %90 = load i32, i32* %4, align 4, !dbg !2901
  %91 = sext i32 %90 to i64, !dbg !2899
  %92 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %89, i64 %91, !dbg !2899
  %93 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %92, i32 0, i32 17, !dbg !2902
  %94 = getelementptr inbounds [3 x double], [3 x double]* %93, i64 0, i64 2, !dbg !2899
  %95 = load double, double* %94, align 8, !dbg !2899
  %96 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2903
  %97 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %96, i32 0, i32 17, !dbg !2904
  %98 = load %struct.atom_t*, %struct.atom_t** %97, align 8, !dbg !2904
  %99 = load i32, i32* %3, align 4, !dbg !2905
  %100 = sext i32 %99 to i64, !dbg !2903
  %101 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %98, i64 %100, !dbg !2903
  %102 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %101, i32 0, i32 17, !dbg !2906
  %103 = getelementptr inbounds [3 x double], [3 x double]* %102, i64 0, i64 2, !dbg !2903
  %104 = load double, double* %103, align 8, !dbg !2903
  %105 = fsub double %95, %104, !dbg !2907
  store double %105, double* %8, align 8, !dbg !2908
  %106 = load double, double* %6, align 8, !dbg !2909
  %107 = load double, double* %6, align 8, !dbg !2910
  %108 = fmul double %106, %107, !dbg !2911
  %109 = load double, double* %7, align 8, !dbg !2912
  %110 = load double, double* %7, align 8, !dbg !2913
  %111 = fmul double %109, %110, !dbg !2914
  %112 = fadd double %108, %111, !dbg !2915
  %113 = load double, double* %8, align 8, !dbg !2916
  %114 = load double, double* %8, align 8, !dbg !2917
  %115 = fmul double %113, %114, !dbg !2918
  %116 = fadd double %112, %115, !dbg !2919
  %117 = call double @sqrt(double %116) #8, !dbg !2920
  store double %117, double* %9, align 8, !dbg !2921
  %118 = call double @cos(double 0x3FF3F770E9584BA6) #8, !dbg !2922
  %119 = fmul double 0x3FEEB851EB851EB8, %118, !dbg !2923
  %120 = load double, double* %9, align 8, !dbg !2924
  %121 = fdiv double %119, %120, !dbg !2925
  store double %121, double* %16, align 8, !dbg !2926
  %122 = load double, double* %16, align 8, !dbg !2927
  %123 = load double, double* %6, align 8, !dbg !2928
  %124 = fmul double %122, %123, !dbg !2929
  store double %124, double* %10, align 8, !dbg !2930
  %125 = load double, double* %16, align 8, !dbg !2931
  %126 = load double, double* %7, align 8, !dbg !2932
  %127 = fmul double %125, %126, !dbg !2933
  store double %127, double* %11, align 8, !dbg !2934
  %128 = load double, double* %16, align 8, !dbg !2935
  %129 = load double, double* %8, align 8, !dbg !2936
  %130 = fmul double %128, %129, !dbg !2937
  store double %130, double* %12, align 8, !dbg !2938
  %131 = load double, double* %11, align 8, !dbg !2939
  %132 = fcmp une double %131, 0.000000e+00, !dbg !2941
  br i1 %132, label %133, label %138, !dbg !2942

133:                                              ; preds = %44
  store double 1.000000e+00, double* %13, align 8, !dbg !2943
  %134 = load double, double* %10, align 8, !dbg !2945
  %135 = fneg double %134, !dbg !2946
  %136 = load double, double* %11, align 8, !dbg !2947
  %137 = fdiv double %135, %136, !dbg !2948
  store double %137, double* %14, align 8, !dbg !2949
  store double 0.000000e+00, double* %15, align 8, !dbg !2950
  br label %139, !dbg !2951

138:                                              ; preds = %44
  store double 0.000000e+00, double* %13, align 8, !dbg !2952
  store double 1.000000e+00, double* %14, align 8, !dbg !2954
  store double 0.000000e+00, double* %15, align 8, !dbg !2955
  br label %139

139:                                              ; preds = %138, %133
  %140 = load double, double* %13, align 8, !dbg !2956
  %141 = load double, double* %13, align 8, !dbg !2957
  %142 = fmul double %140, %141, !dbg !2958
  %143 = load double, double* %14, align 8, !dbg !2959
  %144 = load double, double* %14, align 8, !dbg !2960
  %145 = fmul double %143, %144, !dbg !2961
  %146 = fadd double %142, %145, !dbg !2962
  %147 = load double, double* %15, align 8, !dbg !2963
  %148 = load double, double* %15, align 8, !dbg !2964
  %149 = fmul double %147, %148, !dbg !2965
  %150 = fadd double %146, %149, !dbg !2966
  %151 = call double @sqrt(double %150) #8, !dbg !2967
  store double %151, double* %9, align 8, !dbg !2968
  %152 = call double @sin(double 0x3FF3F770E9584BA6) #8, !dbg !2969
  %153 = fmul double 0x3FEEB851EB851EB8, %152, !dbg !2970
  %154 = load double, double* %9, align 8, !dbg !2971
  %155 = fdiv double %153, %154, !dbg !2972
  store double %155, double* %16, align 8, !dbg !2973
  %156 = load double, double* %16, align 8, !dbg !2974
  %157 = load double, double* %13, align 8, !dbg !2975
  %158 = fmul double %156, %157, !dbg !2976
  store double %158, double* %13, align 8, !dbg !2977
  %159 = load double, double* %16, align 8, !dbg !2978
  %160 = load double, double* %14, align 8, !dbg !2979
  %161 = fmul double %159, %160, !dbg !2980
  store double %161, double* %14, align 8, !dbg !2981
  %162 = load double, double* %16, align 8, !dbg !2982
  %163 = load double, double* %15, align 8, !dbg !2983
  %164 = fmul double %162, %163, !dbg !2984
  store double %164, double* %15, align 8, !dbg !2985
  %165 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2986
  %166 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %165, i32 0, i32 17, !dbg !2987
  %167 = load %struct.atom_t*, %struct.atom_t** %166, align 8, !dbg !2987
  %168 = load i32, i32* %4, align 4, !dbg !2988
  %169 = sext i32 %168 to i64, !dbg !2986
  %170 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %167, i64 %169, !dbg !2986
  store %struct.atom_t* %170, %struct.atom_t** %18, align 8, !dbg !2989
  %171 = load %struct.residue_t*, %struct.residue_t** %2, align 8, !dbg !2990
  %172 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %171, i32 0, i32 17, !dbg !2991
  %173 = load %struct.atom_t*, %struct.atom_t** %172, align 8, !dbg !2991
  %174 = load i32, i32* %5, align 4, !dbg !2992
  %175 = sext i32 %174 to i64, !dbg !2990
  %176 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %173, i64 %175, !dbg !2990
  store %struct.atom_t* %176, %struct.atom_t** %17, align 8, !dbg !2993
  %177 = load %struct.atom_t*, %struct.atom_t** %18, align 8, !dbg !2994
  %178 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %177, i32 0, i32 17, !dbg !2995
  %179 = getelementptr inbounds [3 x double], [3 x double]* %178, i64 0, i64 0, !dbg !2994
  %180 = load double, double* %179, align 8, !dbg !2994
  %181 = load double, double* %10, align 8, !dbg !2996
  %182 = fadd double %180, %181, !dbg !2997
  %183 = load double, double* %13, align 8, !dbg !2998
  %184 = fadd double %182, %183, !dbg !2999
  %185 = load %struct.atom_t*, %struct.atom_t** %17, align 8, !dbg !3000
  %186 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %185, i32 0, i32 17, !dbg !3001
  %187 = getelementptr inbounds [3 x double], [3 x double]* %186, i64 0, i64 0, !dbg !3000
  store double %184, double* %187, align 8, !dbg !3002
  %188 = load %struct.atom_t*, %struct.atom_t** %18, align 8, !dbg !3003
  %189 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %188, i32 0, i32 17, !dbg !3004
  %190 = getelementptr inbounds [3 x double], [3 x double]* %189, i64 0, i64 1, !dbg !3003
  %191 = load double, double* %190, align 8, !dbg !3003
  %192 = load double, double* %11, align 8, !dbg !3005
  %193 = fadd double %191, %192, !dbg !3006
  %194 = load double, double* %14, align 8, !dbg !3007
  %195 = fadd double %193, %194, !dbg !3008
  %196 = load %struct.atom_t*, %struct.atom_t** %17, align 8, !dbg !3009
  %197 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %196, i32 0, i32 17, !dbg !3010
  %198 = getelementptr inbounds [3 x double], [3 x double]* %197, i64 0, i64 1, !dbg !3009
  store double %195, double* %198, align 8, !dbg !3011
  %199 = load %struct.atom_t*, %struct.atom_t** %18, align 8, !dbg !3012
  %200 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %199, i32 0, i32 17, !dbg !3013
  %201 = getelementptr inbounds [3 x double], [3 x double]* %200, i64 0, i64 2, !dbg !3012
  %202 = load double, double* %201, align 8, !dbg !3012
  %203 = load double, double* %12, align 8, !dbg !3014
  %204 = fadd double %202, %203, !dbg !3015
  %205 = load double, double* %15, align 8, !dbg !3016
  %206 = fadd double %204, %205, !dbg !3017
  %207 = load %struct.atom_t*, %struct.atom_t** %17, align 8, !dbg !3018
  %208 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %207, i32 0, i32 17, !dbg !3019
  %209 = getelementptr inbounds [3 x double], [3 x double]* %208, i64 0, i64 2, !dbg !3018
  store double %206, double* %209, align 8, !dbg !3020
  br label %210, !dbg !3021

210:                                              ; preds = %139, %43, %22
  ret void, !dbg !3021
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.extbond_t* @copyextbonds(%struct.residue_t* %0) #0 !dbg !3022 {
  %2 = alloca %struct.extbond_t*, align 8
  %3 = alloca %struct.residue_t*, align 8
  %4 = alloca %struct.extbond_t*, align 8
  %5 = alloca %struct.extbond_t*, align 8
  %6 = alloca %struct.extbond_t*, align 8
  %7 = alloca %struct.extbond_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %3, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %4, metadata !3027, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %5, metadata !3029, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %6, metadata !3031, metadata !DIExpression()), !dbg !3032
  call void @llvm.dbg.declare(metadata %struct.extbond_t** %7, metadata !3033, metadata !DIExpression()), !dbg !3034
  store %struct.extbond_t* null, %struct.extbond_t** %5, align 8, !dbg !3035
  store %struct.extbond_t* null, %struct.extbond_t** %7, align 8, !dbg !3037
  %8 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3038
  %9 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %8, i32 0, i32 10, !dbg !3039
  %10 = load %struct.extbond_t*, %struct.extbond_t** %9, align 8, !dbg !3039
  store %struct.extbond_t* %10, %struct.extbond_t** %6, align 8, !dbg !3040
  br label %11, !dbg !3041

11:                                               ; preds = %52, %1
  %12 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !3042
  %13 = icmp ne %struct.extbond_t* %12, null, !dbg !3044
  br i1 %13, label %14, label %56, !dbg !3044

14:                                               ; preds = %11
  %15 = call noalias i8* @malloc(i64 24) #8, !dbg !3045
  %16 = bitcast i8* %15 to %struct.extbond_t*, !dbg !3048
  store %struct.extbond_t* %16, %struct.extbond_t** %4, align 8, !dbg !3049
  %17 = icmp eq %struct.extbond_t* %16, null, !dbg !3050
  br i1 %17, label %18, label %21, !dbg !3051

18:                                               ; preds = %14
  %19 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0)) #8, !dbg !3052
  %20 = call i32 @rt_errormsg_s(i32 1, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([256 x i8], [256 x i8]* @e_msg, i64 0, i64 0)), !dbg !3054
  store %struct.extbond_t* null, %struct.extbond_t** %2, align 8, !dbg !3055
  br label %58, !dbg !3055

21:                                               ; preds = %14
  %22 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3056
  %23 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %22, i32 0, i32 0, !dbg !3057
  store %struct.extbond_t* null, %struct.extbond_t** %23, align 8, !dbg !3058
  %24 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !3059
  %25 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %24, i32 0, i32 1, !dbg !3060
  %26 = load i32, i32* %25, align 8, !dbg !3060
  %27 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3061
  %28 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %27, i32 0, i32 1, !dbg !3062
  store i32 %26, i32* %28, align 8, !dbg !3063
  %29 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !3064
  %30 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %29, i32 0, i32 2, !dbg !3065
  %31 = load i32, i32* %30, align 4, !dbg !3065
  %32 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3066
  %33 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %32, i32 0, i32 2, !dbg !3067
  store i32 %31, i32* %33, align 4, !dbg !3068
  %34 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !3069
  %35 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %34, i32 0, i32 3, !dbg !3070
  %36 = load i32, i32* %35, align 8, !dbg !3070
  %37 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3071
  %38 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %37, i32 0, i32 3, !dbg !3072
  store i32 %36, i32* %38, align 8, !dbg !3073
  %39 = load %struct.extbond_t*, %struct.extbond_t** %7, align 8, !dbg !3074
  %40 = icmp eq %struct.extbond_t* %39, null, !dbg !3076
  br i1 %40, label %41, label %43, !dbg !3077

41:                                               ; preds = %21
  %42 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3078
  store %struct.extbond_t* %42, %struct.extbond_t** %7, align 8, !dbg !3079
  br label %43, !dbg !3080

43:                                               ; preds = %41, %21
  %44 = load %struct.extbond_t*, %struct.extbond_t** %5, align 8, !dbg !3081
  %45 = icmp ne %struct.extbond_t* %44, null, !dbg !3083
  br i1 %45, label %46, label %50, !dbg !3084

46:                                               ; preds = %43
  %47 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3085
  %48 = load %struct.extbond_t*, %struct.extbond_t** %5, align 8, !dbg !3086
  %49 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %48, i32 0, i32 0, !dbg !3087
  store %struct.extbond_t* %47, %struct.extbond_t** %49, align 8, !dbg !3088
  br label %50, !dbg !3086

50:                                               ; preds = %46, %43
  %51 = load %struct.extbond_t*, %struct.extbond_t** %4, align 8, !dbg !3089
  store %struct.extbond_t* %51, %struct.extbond_t** %5, align 8, !dbg !3090
  br label %52, !dbg !3091

52:                                               ; preds = %50
  %53 = load %struct.extbond_t*, %struct.extbond_t** %6, align 8, !dbg !3092
  %54 = getelementptr inbounds %struct.extbond_t, %struct.extbond_t* %53, i32 0, i32 0, !dbg !3093
  %55 = load %struct.extbond_t*, %struct.extbond_t** %54, align 8, !dbg !3093
  store %struct.extbond_t* %55, %struct.extbond_t** %6, align 8, !dbg !3094
  br label %11, !dbg !3095, !llvm.loop !3096

56:                                               ; preds = %11
  %57 = load %struct.extbond_t*, %struct.extbond_t** %7, align 8, !dbg !3098
  store %struct.extbond_t* %57, %struct.extbond_t** %2, align 8, !dbg !3099
  br label %58, !dbg !3099

58:                                               ; preds = %56, %18
  %59 = load %struct.extbond_t*, %struct.extbond_t** %2, align 8, !dbg !3100
  ret %struct.extbond_t* %59, !dbg !3100
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setreskind(%struct.molecule_t* %0, i8* %1, i8* %2) #0 !dbg !3101 {
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.strand_t*, align 8
  %8 = alloca %struct.residue_t*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [10 x i8], align 1
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !3104, metadata !DIExpression()), !dbg !3105
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !3106, metadata !DIExpression()), !dbg !3107
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !3108, metadata !DIExpression()), !dbg !3109
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !3110, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.declare(metadata %struct.residue_t** %8, metadata !3112, metadata !DIExpression()), !dbg !3113
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3114, metadata !DIExpression()), !dbg !3115
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3116, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.declare(metadata i8** %11, metadata !3118, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.declare(metadata i8** %12, metadata !3120, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.declare(metadata [10 x i8]* %13, metadata !3122, metadata !DIExpression()), !dbg !3126
  %14 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0, !dbg !3127
  store i8* %14, i8** %12, align 8, !dbg !3129
  %15 = load i8*, i8** %6, align 8, !dbg !3130
  store i8* %15, i8** %11, align 8, !dbg !3131
  br label %16, !dbg !3132

16:                                               ; preds = %46, %3
  %17 = load i8*, i8** %11, align 8, !dbg !3133
  %18 = load i8, i8* %17, align 1, !dbg !3135
  %19 = icmp ne i8 %18, 0, !dbg !3136
  br i1 %19, label %20, label %49, !dbg !3136

20:                                               ; preds = %16
  %21 = call i16** @__ctype_b_loc() #10, !dbg !3137
  %22 = load i16*, i16** %21, align 8, !dbg !3137
  %23 = load i8*, i8** %11, align 8, !dbg !3137
  %24 = load i8, i8* %23, align 1, !dbg !3137
  %25 = sext i8 %24 to i32, !dbg !3137
  %26 = sext i32 %25 to i64, !dbg !3137
  %27 = getelementptr inbounds i16, i16* %22, i64 %26, !dbg !3137
  %28 = load i16, i16* %27, align 2, !dbg !3137
  %29 = zext i16 %28 to i32, !dbg !3137
  %30 = and i32 %29, 256, !dbg !3137
  %31 = icmp ne i32 %30, 0, !dbg !3137
  br i1 %31, label %32, label %37, !dbg !3137

32:                                               ; preds = %20
  %33 = load i8*, i8** %11, align 8, !dbg !3138
  %34 = load i8, i8* %33, align 1, !dbg !3139
  %35 = sext i8 %34 to i32, !dbg !3139
  %36 = call i32 @tolower(i32 %35) #9, !dbg !3140
  br label %41, !dbg !3137

37:                                               ; preds = %20
  %38 = load i8*, i8** %11, align 8, !dbg !3141
  %39 = load i8, i8* %38, align 1, !dbg !3142
  %40 = sext i8 %39 to i32, !dbg !3142
  br label %41, !dbg !3137

41:                                               ; preds = %37, %32
  %42 = phi i32 [ %36, %32 ], [ %40, %37 ], !dbg !3137
  %43 = trunc i32 %42 to i8, !dbg !3137
  %44 = load i8*, i8** %12, align 8, !dbg !3143
  %45 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !3143
  store i8* %45, i8** %12, align 8, !dbg !3143
  store i8 %43, i8* %44, align 1, !dbg !3144
  br label %46, !dbg !3145

46:                                               ; preds = %41
  %47 = load i8*, i8** %11, align 8, !dbg !3146
  %48 = getelementptr inbounds i8, i8* %47, i32 1, !dbg !3146
  store i8* %48, i8** %11, align 8, !dbg !3146
  br label %16, !dbg !3147, !llvm.loop !3148

49:                                               ; preds = %16
  %50 = load i8*, i8** %12, align 8, !dbg !3150
  store i8 0, i8* %50, align 1, !dbg !3151
  %51 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0, !dbg !3152
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !3154
  %53 = icmp ne i32 %52, 0, !dbg !3154
  br i1 %53, label %55, label %54, !dbg !3155

54:                                               ; preds = %49
  store i32 1, i32* %10, align 4, !dbg !3156
  br label %71, !dbg !3157

55:                                               ; preds = %49
  %56 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0, !dbg !3158
  %57 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3160
  %58 = icmp ne i32 %57, 0, !dbg !3160
  br i1 %58, label %60, label %59, !dbg !3161

59:                                               ; preds = %55
  store i32 2, i32* %10, align 4, !dbg !3162
  br label %70, !dbg !3163

60:                                               ; preds = %55
  %61 = getelementptr inbounds [10 x i8], [10 x i8]* %13, i64 0, i64 0, !dbg !3164
  %62 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !3166
  %63 = icmp ne i32 %62, 0, !dbg !3166
  br i1 %63, label %65, label %64, !dbg !3167

64:                                               ; preds = %60
  store i32 3, i32* %10, align 4, !dbg !3168
  br label %69, !dbg !3169

65:                                               ; preds = %60
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3170
  %67 = load i8*, i8** %6, align 8, !dbg !3172
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i64 0, i64 0), i8* %67), !dbg !3173
  store i32 0, i32* %10, align 4, !dbg !3174
  br label %69

69:                                               ; preds = %65, %64
  br label %70

70:                                               ; preds = %69, %59
  br label %71

71:                                               ; preds = %70, %54
  %72 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !3175
  %73 = load i8*, i8** %5, align 8, !dbg !3176
  %74 = call i32 @select_atoms(%struct.molecule_t* %72, i8* %73), !dbg !3177
  %75 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !3178
  %76 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %75, i32 0, i32 2, !dbg !3180
  %77 = load %struct.strand_t*, %struct.strand_t** %76, align 8, !dbg !3180
  store %struct.strand_t* %77, %struct.strand_t** %7, align 8, !dbg !3181
  br label %78, !dbg !3182

78:                                               ; preds = %110, %71
  %79 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !3183
  %80 = icmp ne %struct.strand_t* %79, null, !dbg !3185
  br i1 %80, label %81, label %114, !dbg !3185

81:                                               ; preds = %78
  store i32 0, i32* %9, align 4, !dbg !3186
  br label %82, !dbg !3189

82:                                               ; preds = %106, %81
  %83 = load i32, i32* %9, align 4, !dbg !3190
  %84 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !3192
  %85 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %84, i32 0, i32 5, !dbg !3193
  %86 = load i32, i32* %85, align 8, !dbg !3193
  %87 = icmp slt i32 %83, %86, !dbg !3194
  br i1 %87, label %88, label %109, !dbg !3195

88:                                               ; preds = %82
  %89 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !3196
  %90 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %89, i32 0, i32 7, !dbg !3198
  %91 = load %struct.residue_t**, %struct.residue_t*** %90, align 8, !dbg !3198
  %92 = load i32, i32* %9, align 4, !dbg !3199
  %93 = sext i32 %92 to i64, !dbg !3196
  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %91, i64 %93, !dbg !3196
  %95 = load %struct.residue_t*, %struct.residue_t** %94, align 8, !dbg !3196
  store %struct.residue_t* %95, %struct.residue_t** %8, align 8, !dbg !3200
  %96 = load %struct.residue_t*, %struct.residue_t** %8, align 8, !dbg !3201
  %97 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %96, i32 0, i32 6, !dbg !3203
  %98 = load i32, i32* %97, align 8, !dbg !3203
  %99 = and i32 %98, 1, !dbg !3204
  %100 = icmp ne i32 %99, 0, !dbg !3204
  br i1 %100, label %101, label %105, !dbg !3205

101:                                              ; preds = %88
  %102 = load i32, i32* %10, align 4, !dbg !3206
  %103 = load %struct.residue_t*, %struct.residue_t** %8, align 8, !dbg !3207
  %104 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %103, i32 0, i32 7, !dbg !3208
  store i32 %102, i32* %104, align 4, !dbg !3209
  br label %105, !dbg !3207

105:                                              ; preds = %101, %88
  br label %106, !dbg !3210

106:                                              ; preds = %105
  %107 = load i32, i32* %9, align 4, !dbg !3211
  %108 = add nsw i32 %107, 1, !dbg !3211
  store i32 %108, i32* %9, align 4, !dbg !3211
  br label %82, !dbg !3212, !llvm.loop !3213

109:                                              ; preds = %82
  br label %110, !dbg !3215

110:                                              ; preds = %109
  %111 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !3216
  %112 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %111, i32 0, i32 4, !dbg !3217
  %113 = load %struct.strand_t*, %struct.strand_t** %112, align 8, !dbg !3217
  store %struct.strand_t* %113, %struct.strand_t** %7, align 8, !dbg !3218
  br label %78, !dbg !3219, !llvm.loop !3220

114:                                              ; preds = %78
  ret i32 0, !dbg !3222
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #5

; Function Attrs: nounwind readonly
declare dso_local i32 @tolower(i32) #4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setxyz_from_mol(%struct.molecule_t** %0, i8** %1, [3 x double]* %2) #0 !dbg !3223 {
  %4 = alloca %struct.molecule_t**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca [3 x double]*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.strand_t*, align 8
  %11 = alloca %struct.residue_t*, align 8
  %12 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t** %0, %struct.molecule_t*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t*** %4, metadata !3229, metadata !DIExpression()), !dbg !3230
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !3231, metadata !DIExpression()), !dbg !3232
  store [3 x double]* %2, [3 x double]** %6, align 8
  call void @llvm.dbg.declare(metadata [3 x double]** %6, metadata !3233, metadata !DIExpression()), !dbg !3234
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3235, metadata !DIExpression()), !dbg !3236
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3237, metadata !DIExpression()), !dbg !3238
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3239, metadata !DIExpression()), !dbg !3240
  call void @llvm.dbg.declare(metadata %struct.strand_t** %10, metadata !3241, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.declare(metadata %struct.residue_t** %11, metadata !3243, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.declare(metadata %struct.atom_t** %12, metadata !3245, metadata !DIExpression()), !dbg !3246
  %13 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3247
  %14 = load %struct.molecule_t*, %struct.molecule_t** %13, align 8, !dbg !3248
  %15 = load i8**, i8*** %5, align 8, !dbg !3249
  %16 = icmp ne i8** %15, null, !dbg !3249
  br i1 %16, label %17, label %20, !dbg !3249

17:                                               ; preds = %3
  %18 = load i8**, i8*** %5, align 8, !dbg !3250
  %19 = load i8*, i8** %18, align 8, !dbg !3251
  br label %21, !dbg !3249

20:                                               ; preds = %3
  br label %21, !dbg !3249

21:                                               ; preds = %20, %17
  %22 = phi i8* [ %19, %17 ], [ null, %20 ], !dbg !3249
  %23 = call i32 @select_atoms(%struct.molecule_t* %14, i8* %22), !dbg !3252
  store i32 0, i32* %9, align 4, !dbg !3253
  %24 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3255
  %25 = load %struct.molecule_t*, %struct.molecule_t** %24, align 8, !dbg !3256
  %26 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %25, i32 0, i32 2, !dbg !3257
  %27 = load %struct.strand_t*, %struct.strand_t** %26, align 8, !dbg !3257
  store %struct.strand_t* %27, %struct.strand_t** %10, align 8, !dbg !3258
  br label %28, !dbg !3259

28:                                               ; preds = %103, %21
  %29 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3260
  %30 = icmp ne %struct.strand_t* %29, null, !dbg !3262
  br i1 %30, label %31, label %107, !dbg !3262

31:                                               ; preds = %28
  store i32 0, i32* %7, align 4, !dbg !3263
  br label %32, !dbg !3266

32:                                               ; preds = %99, %31
  %33 = load i32, i32* %7, align 4, !dbg !3267
  %34 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3269
  %35 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %34, i32 0, i32 5, !dbg !3270
  %36 = load i32, i32* %35, align 8, !dbg !3270
  %37 = icmp slt i32 %33, %36, !dbg !3271
  br i1 %37, label %38, label %102, !dbg !3272

38:                                               ; preds = %32
  %39 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3273
  %40 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %39, i32 0, i32 7, !dbg !3275
  %41 = load %struct.residue_t**, %struct.residue_t*** %40, align 8, !dbg !3275
  %42 = load i32, i32* %7, align 4, !dbg !3276
  %43 = sext i32 %42 to i64, !dbg !3273
  %44 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %41, i64 %43, !dbg !3273
  %45 = load %struct.residue_t*, %struct.residue_t** %44, align 8, !dbg !3273
  store %struct.residue_t* %45, %struct.residue_t** %11, align 8, !dbg !3277
  store i32 0, i32* %8, align 4, !dbg !3278
  br label %46, !dbg !3280

46:                                               ; preds = %95, %38
  %47 = load i32, i32* %8, align 4, !dbg !3281
  %48 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3283
  %49 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %48, i32 0, i32 15, !dbg !3284
  %50 = load i32, i32* %49, align 8, !dbg !3284
  %51 = icmp slt i32 %47, %50, !dbg !3285
  br i1 %51, label %52, label %98, !dbg !3286

52:                                               ; preds = %46
  %53 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3287
  %54 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i32 0, i32 17, !dbg !3289
  %55 = load %struct.atom_t*, %struct.atom_t** %54, align 8, !dbg !3289
  %56 = load i32, i32* %8, align 4, !dbg !3290
  %57 = sext i32 %56 to i64, !dbg !3287
  %58 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i64 %57, !dbg !3287
  store %struct.atom_t* %58, %struct.atom_t** %12, align 8, !dbg !3291
  %59 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3292
  %60 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i32 0, i32 2, !dbg !3294
  %61 = load i32, i32* %60, align 8, !dbg !3294
  %62 = and i32 %61, 1, !dbg !3295
  %63 = icmp ne i32 %62, 0, !dbg !3295
  br i1 %63, label %64, label %94, !dbg !3296

64:                                               ; preds = %52
  %65 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3297
  %66 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %65, i32 0, i32 17, !dbg !3299
  %67 = getelementptr inbounds [3 x double], [3 x double]* %66, i64 0, i64 0, !dbg !3297
  %68 = load double, double* %67, align 8, !dbg !3297
  %69 = load [3 x double]*, [3 x double]** %6, align 8, !dbg !3300
  %70 = load i32, i32* %9, align 4, !dbg !3301
  %71 = sext i32 %70 to i64, !dbg !3300
  %72 = getelementptr inbounds [3 x double], [3 x double]* %69, i64 %71, !dbg !3300
  %73 = getelementptr inbounds [3 x double], [3 x double]* %72, i64 0, i64 0, !dbg !3300
  store double %68, double* %73, align 8, !dbg !3302
  %74 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3303
  %75 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %74, i32 0, i32 17, !dbg !3304
  %76 = getelementptr inbounds [3 x double], [3 x double]* %75, i64 0, i64 1, !dbg !3303
  %77 = load double, double* %76, align 8, !dbg !3303
  %78 = load [3 x double]*, [3 x double]** %6, align 8, !dbg !3305
  %79 = load i32, i32* %9, align 4, !dbg !3306
  %80 = sext i32 %79 to i64, !dbg !3305
  %81 = getelementptr inbounds [3 x double], [3 x double]* %78, i64 %80, !dbg !3305
  %82 = getelementptr inbounds [3 x double], [3 x double]* %81, i64 0, i64 1, !dbg !3305
  store double %77, double* %82, align 8, !dbg !3307
  %83 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3308
  %84 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %83, i32 0, i32 17, !dbg !3309
  %85 = getelementptr inbounds [3 x double], [3 x double]* %84, i64 0, i64 2, !dbg !3308
  %86 = load double, double* %85, align 8, !dbg !3308
  %87 = load [3 x double]*, [3 x double]** %6, align 8, !dbg !3310
  %88 = load i32, i32* %9, align 4, !dbg !3311
  %89 = sext i32 %88 to i64, !dbg !3310
  %90 = getelementptr inbounds [3 x double], [3 x double]* %87, i64 %89, !dbg !3310
  %91 = getelementptr inbounds [3 x double], [3 x double]* %90, i64 0, i64 2, !dbg !3310
  store double %86, double* %91, align 8, !dbg !3312
  %92 = load i32, i32* %9, align 4, !dbg !3313
  %93 = add nsw i32 %92, 1, !dbg !3313
  store i32 %93, i32* %9, align 4, !dbg !3313
  br label %94, !dbg !3314

94:                                               ; preds = %64, %52
  br label %95, !dbg !3315

95:                                               ; preds = %94
  %96 = load i32, i32* %8, align 4, !dbg !3316
  %97 = add nsw i32 %96, 1, !dbg !3316
  store i32 %97, i32* %8, align 4, !dbg !3316
  br label %46, !dbg !3317, !llvm.loop !3318

98:                                               ; preds = %46
  br label %99, !dbg !3320

99:                                               ; preds = %98
  %100 = load i32, i32* %7, align 4, !dbg !3321
  %101 = add nsw i32 %100, 1, !dbg !3321
  store i32 %101, i32* %7, align 4, !dbg !3321
  br label %32, !dbg !3322, !llvm.loop !3323

102:                                              ; preds = %32
  br label %103, !dbg !3325

103:                                              ; preds = %102
  %104 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3326
  %105 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %104, i32 0, i32 4, !dbg !3327
  %106 = load %struct.strand_t*, %struct.strand_t** %105, align 8, !dbg !3327
  store %struct.strand_t* %106, %struct.strand_t** %10, align 8, !dbg !3328
  br label %28, !dbg !3329, !llvm.loop !3330

107:                                              ; preds = %28
  %108 = load i32, i32* %9, align 4, !dbg !3332
  ret i32 %108, !dbg !3333
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setxyzw_from_mol(%struct.molecule_t** %0, i8** %1, double* %2) #0 !dbg !3334 {
  %4 = alloca %struct.molecule_t**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca double*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.strand_t*, align 8
  %11 = alloca %struct.residue_t*, align 8
  %12 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t** %0, %struct.molecule_t*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t*** %4, metadata !3337, metadata !DIExpression()), !dbg !3338
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !3339, metadata !DIExpression()), !dbg !3340
  store double* %2, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !3341, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3343, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3345, metadata !DIExpression()), !dbg !3346
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3347, metadata !DIExpression()), !dbg !3348
  call void @llvm.dbg.declare(metadata %struct.strand_t** %10, metadata !3349, metadata !DIExpression()), !dbg !3350
  call void @llvm.dbg.declare(metadata %struct.residue_t** %11, metadata !3351, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.declare(metadata %struct.atom_t** %12, metadata !3353, metadata !DIExpression()), !dbg !3354
  %13 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3355
  %14 = load %struct.molecule_t*, %struct.molecule_t** %13, align 8, !dbg !3356
  %15 = load i8**, i8*** %5, align 8, !dbg !3357
  %16 = icmp ne i8** %15, null, !dbg !3357
  br i1 %16, label %17, label %20, !dbg !3357

17:                                               ; preds = %3
  %18 = load i8**, i8*** %5, align 8, !dbg !3358
  %19 = load i8*, i8** %18, align 8, !dbg !3359
  br label %21, !dbg !3357

20:                                               ; preds = %3
  br label %21, !dbg !3357

21:                                               ; preds = %20, %17
  %22 = phi i8* [ %19, %17 ], [ null, %20 ], !dbg !3357
  %23 = call i32 @select_atoms(%struct.molecule_t* %14, i8* %22), !dbg !3360
  store i32 0, i32* %9, align 4, !dbg !3361
  %24 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3363
  %25 = load %struct.molecule_t*, %struct.molecule_t** %24, align 8, !dbg !3364
  %26 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %25, i32 0, i32 2, !dbg !3365
  %27 = load %struct.strand_t*, %struct.strand_t** %26, align 8, !dbg !3365
  store %struct.strand_t* %27, %struct.strand_t** %10, align 8, !dbg !3366
  br label %28, !dbg !3367

28:                                               ; preds = %115, %21
  %29 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3368
  %30 = icmp ne %struct.strand_t* %29, null, !dbg !3370
  br i1 %30, label %31, label %119, !dbg !3370

31:                                               ; preds = %28
  store i32 0, i32* %7, align 4, !dbg !3371
  br label %32, !dbg !3374

32:                                               ; preds = %111, %31
  %33 = load i32, i32* %7, align 4, !dbg !3375
  %34 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3377
  %35 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %34, i32 0, i32 5, !dbg !3378
  %36 = load i32, i32* %35, align 8, !dbg !3378
  %37 = icmp slt i32 %33, %36, !dbg !3379
  br i1 %37, label %38, label %114, !dbg !3380

38:                                               ; preds = %32
  %39 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3381
  %40 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %39, i32 0, i32 7, !dbg !3383
  %41 = load %struct.residue_t**, %struct.residue_t*** %40, align 8, !dbg !3383
  %42 = load i32, i32* %7, align 4, !dbg !3384
  %43 = sext i32 %42 to i64, !dbg !3381
  %44 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %41, i64 %43, !dbg !3381
  %45 = load %struct.residue_t*, %struct.residue_t** %44, align 8, !dbg !3381
  store %struct.residue_t* %45, %struct.residue_t** %11, align 8, !dbg !3385
  store i32 0, i32* %8, align 4, !dbg !3386
  br label %46, !dbg !3388

46:                                               ; preds = %107, %38
  %47 = load i32, i32* %8, align 4, !dbg !3389
  %48 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3391
  %49 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %48, i32 0, i32 15, !dbg !3392
  %50 = load i32, i32* %49, align 8, !dbg !3392
  %51 = icmp slt i32 %47, %50, !dbg !3393
  br i1 %51, label %52, label %110, !dbg !3394

52:                                               ; preds = %46
  %53 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3395
  %54 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i32 0, i32 17, !dbg !3397
  %55 = load %struct.atom_t*, %struct.atom_t** %54, align 8, !dbg !3397
  %56 = load i32, i32* %8, align 4, !dbg !3398
  %57 = sext i32 %56 to i64, !dbg !3395
  %58 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i64 %57, !dbg !3395
  store %struct.atom_t* %58, %struct.atom_t** %12, align 8, !dbg !3399
  %59 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3400
  %60 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i32 0, i32 2, !dbg !3402
  %61 = load i32, i32* %60, align 8, !dbg !3402
  %62 = and i32 %61, 1, !dbg !3403
  %63 = icmp ne i32 %62, 0, !dbg !3403
  br i1 %63, label %64, label %106, !dbg !3404

64:                                               ; preds = %52
  %65 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3405
  %66 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %65, i32 0, i32 17, !dbg !3407
  %67 = getelementptr inbounds [3 x double], [3 x double]* %66, i64 0, i64 0, !dbg !3405
  %68 = load double, double* %67, align 8, !dbg !3405
  %69 = load double*, double** %6, align 8, !dbg !3408
  %70 = load i32, i32* %9, align 4, !dbg !3409
  %71 = mul nsw i32 4, %70, !dbg !3410
  %72 = add nsw i32 %71, 0, !dbg !3411
  %73 = sext i32 %72 to i64, !dbg !3408
  %74 = getelementptr inbounds double, double* %69, i64 %73, !dbg !3408
  store double %68, double* %74, align 8, !dbg !3412
  %75 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3413
  %76 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %75, i32 0, i32 17, !dbg !3414
  %77 = getelementptr inbounds [3 x double], [3 x double]* %76, i64 0, i64 1, !dbg !3413
  %78 = load double, double* %77, align 8, !dbg !3413
  %79 = load double*, double** %6, align 8, !dbg !3415
  %80 = load i32, i32* %9, align 4, !dbg !3416
  %81 = mul nsw i32 4, %80, !dbg !3417
  %82 = add nsw i32 %81, 1, !dbg !3418
  %83 = sext i32 %82 to i64, !dbg !3415
  %84 = getelementptr inbounds double, double* %79, i64 %83, !dbg !3415
  store double %78, double* %84, align 8, !dbg !3419
  %85 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3420
  %86 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %85, i32 0, i32 17, !dbg !3421
  %87 = getelementptr inbounds [3 x double], [3 x double]* %86, i64 0, i64 2, !dbg !3420
  %88 = load double, double* %87, align 8, !dbg !3420
  %89 = load double*, double** %6, align 8, !dbg !3422
  %90 = load i32, i32* %9, align 4, !dbg !3423
  %91 = mul nsw i32 4, %90, !dbg !3424
  %92 = add nsw i32 %91, 2, !dbg !3425
  %93 = sext i32 %92 to i64, !dbg !3422
  %94 = getelementptr inbounds double, double* %89, i64 %93, !dbg !3422
  store double %88, double* %94, align 8, !dbg !3426
  %95 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3427
  %96 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %95, i32 0, i32 18, !dbg !3428
  %97 = load double, double* %96, align 8, !dbg !3428
  %98 = load double*, double** %6, align 8, !dbg !3429
  %99 = load i32, i32* %9, align 4, !dbg !3430
  %100 = mul nsw i32 4, %99, !dbg !3431
  %101 = add nsw i32 %100, 3, !dbg !3432
  %102 = sext i32 %101 to i64, !dbg !3429
  %103 = getelementptr inbounds double, double* %98, i64 %102, !dbg !3429
  store double %97, double* %103, align 8, !dbg !3433
  %104 = load i32, i32* %9, align 4, !dbg !3434
  %105 = add nsw i32 %104, 1, !dbg !3434
  store i32 %105, i32* %9, align 4, !dbg !3434
  br label %106, !dbg !3435

106:                                              ; preds = %64, %52
  br label %107, !dbg !3436

107:                                              ; preds = %106
  %108 = load i32, i32* %8, align 4, !dbg !3437
  %109 = add nsw i32 %108, 1, !dbg !3437
  store i32 %109, i32* %8, align 4, !dbg !3437
  br label %46, !dbg !3438, !llvm.loop !3439

110:                                              ; preds = %46
  br label %111, !dbg !3441

111:                                              ; preds = %110
  %112 = load i32, i32* %7, align 4, !dbg !3442
  %113 = add nsw i32 %112, 1, !dbg !3442
  store i32 %113, i32* %7, align 4, !dbg !3442
  br label %32, !dbg !3443, !llvm.loop !3444

114:                                              ; preds = %32
  br label %115, !dbg !3446

115:                                              ; preds = %114
  %116 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3447
  %117 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %116, i32 0, i32 4, !dbg !3448
  %118 = load %struct.strand_t*, %struct.strand_t** %117, align 8, !dbg !3448
  store %struct.strand_t* %118, %struct.strand_t** %10, align 8, !dbg !3449
  br label %28, !dbg !3450, !llvm.loop !3451

119:                                              ; preds = %28
  %120 = load i32, i32* %9, align 4, !dbg !3453
  ret i32 %120, !dbg !3454
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setmol_from_xyz(%struct.molecule_t** %0, i8** %1, double* %2) #0 !dbg !3455 {
  %4 = alloca %struct.molecule_t**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca double*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.strand_t*, align 8
  %11 = alloca %struct.residue_t*, align 8
  %12 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t** %0, %struct.molecule_t*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t*** %4, metadata !3456, metadata !DIExpression()), !dbg !3457
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !3458, metadata !DIExpression()), !dbg !3459
  store double* %2, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !3460, metadata !DIExpression()), !dbg !3461
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3462, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3464, metadata !DIExpression()), !dbg !3465
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3466, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.declare(metadata %struct.strand_t** %10, metadata !3468, metadata !DIExpression()), !dbg !3469
  call void @llvm.dbg.declare(metadata %struct.residue_t** %11, metadata !3470, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.declare(metadata %struct.atom_t** %12, metadata !3472, metadata !DIExpression()), !dbg !3473
  %13 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3474
  %14 = load %struct.molecule_t*, %struct.molecule_t** %13, align 8, !dbg !3475
  %15 = load i8**, i8*** %5, align 8, !dbg !3476
  %16 = icmp ne i8** %15, null, !dbg !3476
  br i1 %16, label %17, label %20, !dbg !3476

17:                                               ; preds = %3
  %18 = load i8**, i8*** %5, align 8, !dbg !3477
  %19 = load i8*, i8** %18, align 8, !dbg !3478
  br label %21, !dbg !3476

20:                                               ; preds = %3
  br label %21, !dbg !3476

21:                                               ; preds = %20, %17
  %22 = phi i8* [ %19, %17 ], [ null, %20 ], !dbg !3476
  %23 = call i32 @select_atoms(%struct.molecule_t* %14, i8* %22), !dbg !3479
  store i32 0, i32* %9, align 4, !dbg !3480
  %24 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3482
  %25 = load %struct.molecule_t*, %struct.molecule_t** %24, align 8, !dbg !3483
  %26 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %25, i32 0, i32 2, !dbg !3484
  %27 = load %struct.strand_t*, %struct.strand_t** %26, align 8, !dbg !3484
  store %struct.strand_t* %27, %struct.strand_t** %10, align 8, !dbg !3485
  br label %28, !dbg !3486

28:                                               ; preds = %106, %21
  %29 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3487
  %30 = icmp ne %struct.strand_t* %29, null, !dbg !3489
  br i1 %30, label %31, label %110, !dbg !3489

31:                                               ; preds = %28
  store i32 0, i32* %7, align 4, !dbg !3490
  br label %32, !dbg !3493

32:                                               ; preds = %102, %31
  %33 = load i32, i32* %7, align 4, !dbg !3494
  %34 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3496
  %35 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %34, i32 0, i32 5, !dbg !3497
  %36 = load i32, i32* %35, align 8, !dbg !3497
  %37 = icmp slt i32 %33, %36, !dbg !3498
  br i1 %37, label %38, label %105, !dbg !3499

38:                                               ; preds = %32
  %39 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3500
  %40 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %39, i32 0, i32 7, !dbg !3502
  %41 = load %struct.residue_t**, %struct.residue_t*** %40, align 8, !dbg !3502
  %42 = load i32, i32* %7, align 4, !dbg !3503
  %43 = sext i32 %42 to i64, !dbg !3500
  %44 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %41, i64 %43, !dbg !3500
  %45 = load %struct.residue_t*, %struct.residue_t** %44, align 8, !dbg !3500
  store %struct.residue_t* %45, %struct.residue_t** %11, align 8, !dbg !3504
  store i32 0, i32* %8, align 4, !dbg !3505
  br label %46, !dbg !3507

46:                                               ; preds = %98, %38
  %47 = load i32, i32* %8, align 4, !dbg !3508
  %48 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3510
  %49 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %48, i32 0, i32 15, !dbg !3511
  %50 = load i32, i32* %49, align 8, !dbg !3511
  %51 = icmp slt i32 %47, %50, !dbg !3512
  br i1 %51, label %52, label %101, !dbg !3513

52:                                               ; preds = %46
  %53 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3514
  %54 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i32 0, i32 17, !dbg !3516
  %55 = load %struct.atom_t*, %struct.atom_t** %54, align 8, !dbg !3516
  %56 = load i32, i32* %8, align 4, !dbg !3517
  %57 = sext i32 %56 to i64, !dbg !3514
  %58 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i64 %57, !dbg !3514
  store %struct.atom_t* %58, %struct.atom_t** %12, align 8, !dbg !3518
  %59 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3519
  %60 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i32 0, i32 2, !dbg !3521
  %61 = load i32, i32* %60, align 8, !dbg !3521
  %62 = and i32 %61, 1, !dbg !3522
  %63 = icmp ne i32 %62, 0, !dbg !3522
  br i1 %63, label %64, label %97, !dbg !3523

64:                                               ; preds = %52
  %65 = load double*, double** %6, align 8, !dbg !3524
  %66 = load i32, i32* %9, align 4, !dbg !3526
  %67 = mul nsw i32 3, %66, !dbg !3527
  %68 = add nsw i32 %67, 0, !dbg !3528
  %69 = sext i32 %68 to i64, !dbg !3524
  %70 = getelementptr inbounds double, double* %65, i64 %69, !dbg !3524
  %71 = load double, double* %70, align 8, !dbg !3524
  %72 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3529
  %73 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %72, i32 0, i32 17, !dbg !3530
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i64 0, i64 0, !dbg !3529
  store double %71, double* %74, align 8, !dbg !3531
  %75 = load double*, double** %6, align 8, !dbg !3532
  %76 = load i32, i32* %9, align 4, !dbg !3533
  %77 = mul nsw i32 3, %76, !dbg !3534
  %78 = add nsw i32 %77, 1, !dbg !3535
  %79 = sext i32 %78 to i64, !dbg !3532
  %80 = getelementptr inbounds double, double* %75, i64 %79, !dbg !3532
  %81 = load double, double* %80, align 8, !dbg !3532
  %82 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3536
  %83 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %82, i32 0, i32 17, !dbg !3537
  %84 = getelementptr inbounds [3 x double], [3 x double]* %83, i64 0, i64 1, !dbg !3536
  store double %81, double* %84, align 8, !dbg !3538
  %85 = load double*, double** %6, align 8, !dbg !3539
  %86 = load i32, i32* %9, align 4, !dbg !3540
  %87 = mul nsw i32 3, %86, !dbg !3541
  %88 = add nsw i32 %87, 2, !dbg !3542
  %89 = sext i32 %88 to i64, !dbg !3539
  %90 = getelementptr inbounds double, double* %85, i64 %89, !dbg !3539
  %91 = load double, double* %90, align 8, !dbg !3539
  %92 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3543
  %93 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %92, i32 0, i32 17, !dbg !3544
  %94 = getelementptr inbounds [3 x double], [3 x double]* %93, i64 0, i64 2, !dbg !3543
  store double %91, double* %94, align 8, !dbg !3545
  %95 = load i32, i32* %9, align 4, !dbg !3546
  %96 = add nsw i32 %95, 1, !dbg !3546
  store i32 %96, i32* %9, align 4, !dbg !3546
  br label %97, !dbg !3547

97:                                               ; preds = %64, %52
  br label %98, !dbg !3548

98:                                               ; preds = %97
  %99 = load i32, i32* %8, align 4, !dbg !3549
  %100 = add nsw i32 %99, 1, !dbg !3549
  store i32 %100, i32* %8, align 4, !dbg !3549
  br label %46, !dbg !3550, !llvm.loop !3551

101:                                              ; preds = %46
  br label %102, !dbg !3553

102:                                              ; preds = %101
  %103 = load i32, i32* %7, align 4, !dbg !3554
  %104 = add nsw i32 %103, 1, !dbg !3554
  store i32 %104, i32* %7, align 4, !dbg !3554
  br label %32, !dbg !3555, !llvm.loop !3556

105:                                              ; preds = %32
  br label %106, !dbg !3558

106:                                              ; preds = %105
  %107 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3559
  %108 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %107, i32 0, i32 4, !dbg !3560
  %109 = load %struct.strand_t*, %struct.strand_t** %108, align 8, !dbg !3560
  store %struct.strand_t* %109, %struct.strand_t** %10, align 8, !dbg !3561
  br label %28, !dbg !3562, !llvm.loop !3563

110:                                              ; preds = %28
  %111 = load i32, i32* %9, align 4, !dbg !3565
  ret i32 %111, !dbg !3566
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setmol_from_xyzw(%struct.molecule_t** %0, i8** %1, double* %2) #0 !dbg !3567 {
  %4 = alloca %struct.molecule_t**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca double*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.strand_t*, align 8
  %11 = alloca %struct.residue_t*, align 8
  %12 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t** %0, %struct.molecule_t*** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t*** %4, metadata !3568, metadata !DIExpression()), !dbg !3569
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !3570, metadata !DIExpression()), !dbg !3571
  store double* %2, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !3572, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.declare(metadata i32* %7, metadata !3574, metadata !DIExpression()), !dbg !3575
  call void @llvm.dbg.declare(metadata i32* %8, metadata !3576, metadata !DIExpression()), !dbg !3577
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3578, metadata !DIExpression()), !dbg !3579
  call void @llvm.dbg.declare(metadata %struct.strand_t** %10, metadata !3580, metadata !DIExpression()), !dbg !3581
  call void @llvm.dbg.declare(metadata %struct.residue_t** %11, metadata !3582, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.declare(metadata %struct.atom_t** %12, metadata !3584, metadata !DIExpression()), !dbg !3585
  %13 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3586
  %14 = load %struct.molecule_t*, %struct.molecule_t** %13, align 8, !dbg !3587
  %15 = load i8**, i8*** %5, align 8, !dbg !3588
  %16 = icmp ne i8** %15, null, !dbg !3588
  br i1 %16, label %17, label %20, !dbg !3588

17:                                               ; preds = %3
  %18 = load i8**, i8*** %5, align 8, !dbg !3589
  %19 = load i8*, i8** %18, align 8, !dbg !3590
  br label %21, !dbg !3588

20:                                               ; preds = %3
  br label %21, !dbg !3588

21:                                               ; preds = %20, %17
  %22 = phi i8* [ %19, %17 ], [ null, %20 ], !dbg !3588
  %23 = call i32 @select_atoms(%struct.molecule_t* %14, i8* %22), !dbg !3591
  store i32 0, i32* %9, align 4, !dbg !3592
  %24 = load %struct.molecule_t**, %struct.molecule_t*** %4, align 8, !dbg !3594
  %25 = load %struct.molecule_t*, %struct.molecule_t** %24, align 8, !dbg !3595
  %26 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %25, i32 0, i32 2, !dbg !3596
  %27 = load %struct.strand_t*, %struct.strand_t** %26, align 8, !dbg !3596
  store %struct.strand_t* %27, %struct.strand_t** %10, align 8, !dbg !3597
  br label %28, !dbg !3598

28:                                               ; preds = %115, %21
  %29 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3599
  %30 = icmp ne %struct.strand_t* %29, null, !dbg !3601
  br i1 %30, label %31, label %119, !dbg !3601

31:                                               ; preds = %28
  store i32 0, i32* %7, align 4, !dbg !3602
  br label %32, !dbg !3605

32:                                               ; preds = %111, %31
  %33 = load i32, i32* %7, align 4, !dbg !3606
  %34 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3608
  %35 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %34, i32 0, i32 5, !dbg !3609
  %36 = load i32, i32* %35, align 8, !dbg !3609
  %37 = icmp slt i32 %33, %36, !dbg !3610
  br i1 %37, label %38, label %114, !dbg !3611

38:                                               ; preds = %32
  %39 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3612
  %40 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %39, i32 0, i32 7, !dbg !3614
  %41 = load %struct.residue_t**, %struct.residue_t*** %40, align 8, !dbg !3614
  %42 = load i32, i32* %7, align 4, !dbg !3615
  %43 = sext i32 %42 to i64, !dbg !3612
  %44 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %41, i64 %43, !dbg !3612
  %45 = load %struct.residue_t*, %struct.residue_t** %44, align 8, !dbg !3612
  store %struct.residue_t* %45, %struct.residue_t** %11, align 8, !dbg !3616
  store i32 0, i32* %8, align 4, !dbg !3617
  br label %46, !dbg !3619

46:                                               ; preds = %107, %38
  %47 = load i32, i32* %8, align 4, !dbg !3620
  %48 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3622
  %49 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %48, i32 0, i32 15, !dbg !3623
  %50 = load i32, i32* %49, align 8, !dbg !3623
  %51 = icmp slt i32 %47, %50, !dbg !3624
  br i1 %51, label %52, label %110, !dbg !3625

52:                                               ; preds = %46
  %53 = load %struct.residue_t*, %struct.residue_t** %11, align 8, !dbg !3626
  %54 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i32 0, i32 17, !dbg !3628
  %55 = load %struct.atom_t*, %struct.atom_t** %54, align 8, !dbg !3628
  %56 = load i32, i32* %8, align 4, !dbg !3629
  %57 = sext i32 %56 to i64, !dbg !3626
  %58 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i64 %57, !dbg !3626
  store %struct.atom_t* %58, %struct.atom_t** %12, align 8, !dbg !3630
  %59 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3631
  %60 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i32 0, i32 2, !dbg !3633
  %61 = load i32, i32* %60, align 8, !dbg !3633
  %62 = and i32 %61, 1, !dbg !3634
  %63 = icmp ne i32 %62, 0, !dbg !3634
  br i1 %63, label %64, label %106, !dbg !3635

64:                                               ; preds = %52
  %65 = load double*, double** %6, align 8, !dbg !3636
  %66 = load i32, i32* %9, align 4, !dbg !3638
  %67 = mul nsw i32 4, %66, !dbg !3639
  %68 = add nsw i32 %67, 0, !dbg !3640
  %69 = sext i32 %68 to i64, !dbg !3636
  %70 = getelementptr inbounds double, double* %65, i64 %69, !dbg !3636
  %71 = load double, double* %70, align 8, !dbg !3636
  %72 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3641
  %73 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %72, i32 0, i32 17, !dbg !3642
  %74 = getelementptr inbounds [3 x double], [3 x double]* %73, i64 0, i64 0, !dbg !3641
  store double %71, double* %74, align 8, !dbg !3643
  %75 = load double*, double** %6, align 8, !dbg !3644
  %76 = load i32, i32* %9, align 4, !dbg !3645
  %77 = mul nsw i32 4, %76, !dbg !3646
  %78 = add nsw i32 %77, 1, !dbg !3647
  %79 = sext i32 %78 to i64, !dbg !3644
  %80 = getelementptr inbounds double, double* %75, i64 %79, !dbg !3644
  %81 = load double, double* %80, align 8, !dbg !3644
  %82 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3648
  %83 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %82, i32 0, i32 17, !dbg !3649
  %84 = getelementptr inbounds [3 x double], [3 x double]* %83, i64 0, i64 1, !dbg !3648
  store double %81, double* %84, align 8, !dbg !3650
  %85 = load double*, double** %6, align 8, !dbg !3651
  %86 = load i32, i32* %9, align 4, !dbg !3652
  %87 = mul nsw i32 4, %86, !dbg !3653
  %88 = add nsw i32 %87, 2, !dbg !3654
  %89 = sext i32 %88 to i64, !dbg !3651
  %90 = getelementptr inbounds double, double* %85, i64 %89, !dbg !3651
  %91 = load double, double* %90, align 8, !dbg !3651
  %92 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3655
  %93 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %92, i32 0, i32 17, !dbg !3656
  %94 = getelementptr inbounds [3 x double], [3 x double]* %93, i64 0, i64 2, !dbg !3655
  store double %91, double* %94, align 8, !dbg !3657
  %95 = load double*, double** %6, align 8, !dbg !3658
  %96 = load i32, i32* %9, align 4, !dbg !3659
  %97 = mul nsw i32 4, %96, !dbg !3660
  %98 = add nsw i32 %97, 3, !dbg !3661
  %99 = sext i32 %98 to i64, !dbg !3658
  %100 = getelementptr inbounds double, double* %95, i64 %99, !dbg !3658
  %101 = load double, double* %100, align 8, !dbg !3658
  %102 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !3662
  %103 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %102, i32 0, i32 18, !dbg !3663
  store double %101, double* %103, align 8, !dbg !3664
  %104 = load i32, i32* %9, align 4, !dbg !3665
  %105 = add nsw i32 %104, 1, !dbg !3665
  store i32 %105, i32* %9, align 4, !dbg !3665
  br label %106, !dbg !3666

106:                                              ; preds = %64, %52
  br label %107, !dbg !3667

107:                                              ; preds = %106
  %108 = load i32, i32* %8, align 4, !dbg !3668
  %109 = add nsw i32 %108, 1, !dbg !3668
  store i32 %109, i32* %8, align 4, !dbg !3668
  br label %46, !dbg !3669, !llvm.loop !3670

110:                                              ; preds = %46
  br label %111, !dbg !3672

111:                                              ; preds = %110
  %112 = load i32, i32* %7, align 4, !dbg !3673
  %113 = add nsw i32 %112, 1, !dbg !3673
  store i32 %113, i32* %7, align 4, !dbg !3673
  br label %32, !dbg !3674, !llvm.loop !3675

114:                                              ; preds = %32
  br label %115, !dbg !3677

115:                                              ; preds = %114
  %116 = load %struct.strand_t*, %struct.strand_t** %10, align 8, !dbg !3678
  %117 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %116, i32 0, i32 4, !dbg !3679
  %118 = load %struct.strand_t*, %struct.strand_t** %117, align 8, !dbg !3679
  store %struct.strand_t* %118, %struct.strand_t** %10, align 8, !dbg !3680
  br label %28, !dbg !3681, !llvm.loop !3682

119:                                              ; preds = %28
  %120 = load i32, i32* %9, align 4, !dbg !3684
  ret i32 %120, !dbg !3685
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @NAB_ainit(i8** %0, i32 %1) #0 !dbg !3686 {
  %3 = alloca i8**, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8** %0, i8*** %3, align 8
  call void @llvm.dbg.declare(metadata i8*** %3, metadata !3689, metadata !DIExpression()), !dbg !3690
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3691, metadata !DIExpression()), !dbg !3692
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3693, metadata !DIExpression()), !dbg !3694
  store i32 0, i32* %5, align 4, !dbg !3695
  br label %6, !dbg !3697

6:                                                ; preds = %15, %2
  %7 = load i32, i32* %5, align 4, !dbg !3698
  %8 = load i32, i32* %4, align 4, !dbg !3700
  %9 = icmp slt i32 %7, %8, !dbg !3701
  br i1 %9, label %10, label %18, !dbg !3702

10:                                               ; preds = %6
  %11 = load i8**, i8*** %3, align 8, !dbg !3703
  %12 = load i32, i32* %5, align 4, !dbg !3704
  %13 = sext i32 %12 to i64, !dbg !3703
  %14 = getelementptr inbounds i8*, i8** %11, i64 %13, !dbg !3703
  store i8* null, i8** %14, align 8, !dbg !3705
  br label %15, !dbg !3703

15:                                               ; preds = %10
  %16 = load i32, i32* %5, align 4, !dbg !3706
  %17 = add nsw i32 %16, 1, !dbg !3706
  store i32 %17, i32* %5, align 4, !dbg !3706
  br label %6, !dbg !3707, !llvm.loop !3708

18:                                               ; preds = %6
  ret i32 0, !dbg !3710
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NAB_initres(%struct.residue_t* %0, i32 %1) #0 !dbg !3711 {
  %3 = alloca %struct.residue_t*, align 8
  %4 = alloca i32, align 4
  store %struct.residue_t* %0, %struct.residue_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %3, metadata !3712, metadata !DIExpression()), !dbg !3713
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3714, metadata !DIExpression()), !dbg !3715
  %5 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3716
  %6 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %5, i32 0, i32 0, !dbg !3717
  store %struct.residue_t* null, %struct.residue_t** %6, align 8, !dbg !3718
  %7 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3719
  %8 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %7, i32 0, i32 1, !dbg !3720
  store i32 0, i32* %8, align 8, !dbg !3721
  %9 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3722
  %10 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %9, i32 0, i32 2, !dbg !3723
  store i32 0, i32* %10, align 4, !dbg !3724
  %11 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3725
  %12 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %11, i32 0, i32 3, !dbg !3726
  store i32 0, i32* %12, align 8, !dbg !3727
  %13 = load i32, i32* %4, align 4, !dbg !3728
  %14 = icmp ne i32 %13, 0, !dbg !3728
  br i1 %14, label %15, label %20, !dbg !3730

15:                                               ; preds = %2
  %16 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3731
  %17 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %16, i32 0, i32 4, !dbg !3733
  store i8* null, i8** %17, align 8, !dbg !3734
  %18 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3735
  %19 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %18, i32 0, i32 5, !dbg !3736
  store i8* null, i8** %19, align 8, !dbg !3737
  br label %20, !dbg !3738

20:                                               ; preds = %15, %2
  %21 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3739
  %22 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %21, i32 0, i32 6, !dbg !3740
  store i32 0, i32* %22, align 8, !dbg !3741
  %23 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3742
  %24 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %23, i32 0, i32 7, !dbg !3743
  store i32 0, i32* %24, align 4, !dbg !3744
  %25 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3745
  %26 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %25, i32 0, i32 8, !dbg !3746
  store i32 0, i32* %26, align 8, !dbg !3747
  %27 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3748
  %28 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %27, i32 0, i32 9, !dbg !3749
  store %struct.strand_t* null, %struct.strand_t** %28, align 8, !dbg !3750
  %29 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3751
  %30 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %29, i32 0, i32 10, !dbg !3752
  store %struct.extbond_t* null, %struct.extbond_t** %30, align 8, !dbg !3753
  %31 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3754
  %32 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %31, i32 0, i32 11, !dbg !3755
  store i32 0, i32* %32, align 8, !dbg !3756
  %33 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3757
  %34 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %33, i32 0, i32 12, !dbg !3758
  store [2 x i32]* null, [2 x i32]** %34, align 8, !dbg !3759
  %35 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3760
  %36 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %35, i32 0, i32 8, !dbg !3761
  store i32 0, i32* %36, align 8, !dbg !3762
  %37 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3763
  %38 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %37, i32 0, i32 13, !dbg !3764
  store i32 0, i32* %38, align 8, !dbg !3765
  %39 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3766
  %40 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %39, i32 0, i32 14, !dbg !3767
  store %struct.chiral_t* null, %struct.chiral_t** %40, align 8, !dbg !3768
  %41 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3769
  %42 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %41, i32 0, i32 15, !dbg !3770
  store i32 0, i32* %42, align 8, !dbg !3771
  %43 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3772
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i32 0, i32 16, !dbg !3773
  store i32* null, i32** %44, align 8, !dbg !3774
  %45 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !3775
  %46 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %45, i32 0, i32 17, !dbg !3776
  store %struct.atom_t* null, %struct.atom_t** %46, align 8, !dbg !3777
  ret void, !dbg !3778
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @NAB_initatom(%struct.atom_t* %0, i32 %1) #0 !dbg !3779 {
  %3 = alloca %struct.atom_t*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.atom_t* %0, %struct.atom_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %3, metadata !3782, metadata !DIExpression()), !dbg !3783
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3784, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3786, metadata !DIExpression()), !dbg !3787
  %6 = load i32, i32* %4, align 4, !dbg !3788
  %7 = icmp ne i32 %6, 0, !dbg !3788
  br i1 %7, label %8, label %11, !dbg !3790

8:                                                ; preds = %2
  %9 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3791
  %10 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %9, i32 0, i32 0, !dbg !3792
  store i8* null, i8** %10, align 8, !dbg !3793
  br label %11, !dbg !3791

11:                                               ; preds = %8, %2
  %12 = load i32, i32* %4, align 4, !dbg !3794
  %13 = icmp ne i32 %12, 0, !dbg !3794
  br i1 %13, label %14, label %17, !dbg !3796

14:                                               ; preds = %11
  %15 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3797
  %16 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %15, i32 0, i32 1, !dbg !3798
  store i8* null, i8** %16, align 8, !dbg !3799
  br label %17, !dbg !3797

17:                                               ; preds = %14, %11
  %18 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3800
  %19 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %18, i32 0, i32 2, !dbg !3801
  store i32 0, i32* %19, align 8, !dbg !3802
  %20 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3803
  %21 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %20, i32 0, i32 3, !dbg !3804
  store i32 0, i32* %21, align 4, !dbg !3805
  store i32 0, i32* %5, align 4, !dbg !3806
  br label %22, !dbg !3808

22:                                               ; preds = %31, %17
  %23 = load i32, i32* %5, align 4, !dbg !3809
  %24 = icmp slt i32 %23, 8, !dbg !3811
  br i1 %24, label %25, label %34, !dbg !3812

25:                                               ; preds = %22
  %26 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3813
  %27 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %26, i32 0, i32 4, !dbg !3814
  %28 = load i32, i32* %5, align 4, !dbg !3815
  %29 = sext i32 %28 to i64, !dbg !3813
  %30 = getelementptr inbounds [8 x i32], [8 x i32]* %27, i64 0, i64 %29, !dbg !3813
  store i32 0, i32* %30, align 4, !dbg !3816
  br label %31, !dbg !3813

31:                                               ; preds = %25
  %32 = load i32, i32* %5, align 4, !dbg !3817
  %33 = add nsw i32 %32, 1, !dbg !3817
  store i32 %33, i32* %5, align 4, !dbg !3817
  br label %22, !dbg !3818, !llvm.loop !3819

34:                                               ; preds = %22
  %35 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3821
  %36 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %35, i32 0, i32 5, !dbg !3822
  store %struct.residue_t* null, %struct.residue_t** %36, align 8, !dbg !3823
  %37 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3824
  %38 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %37, i32 0, i32 6, !dbg !3825
  store double 0.000000e+00, double* %38, align 8, !dbg !3826
  %39 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3827
  %40 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %39, i32 0, i32 7, !dbg !3828
  store double 0.000000e+00, double* %40, align 8, !dbg !3829
  %41 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3830
  %42 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %41, i32 0, i32 8, !dbg !3831
  store double 0.000000e+00, double* %42, align 8, !dbg !3832
  %43 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3833
  %44 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %43, i32 0, i32 9, !dbg !3834
  store double 1.000000e+00, double* %44, align 8, !dbg !3835
  %45 = load i32, i32* %4, align 4, !dbg !3836
  %46 = icmp ne i32 %45, 0, !dbg !3836
  br i1 %46, label %47, label %50, !dbg !3838

47:                                               ; preds = %34
  %48 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3839
  %49 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %48, i32 0, i32 10, !dbg !3840
  store i8* null, i8** %49, align 8, !dbg !3841
  br label %50, !dbg !3839

50:                                               ; preds = %47, %34
  %51 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3842
  %52 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %51, i32 0, i32 11, !dbg !3843
  store i32 0, i32* %52, align 8, !dbg !3844
  %53 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3845
  %54 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %53, i32 0, i32 12, !dbg !3846
  store double 0.000000e+00, double* %54, align 8, !dbg !3847
  %55 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3848
  %56 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i32 0, i32 13, !dbg !3849
  store double 0.000000e+00, double* %56, align 8, !dbg !3850
  %57 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3851
  %58 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %57, i32 0, i32 14, !dbg !3852
  store i32 0, i32* %58, align 8, !dbg !3853
  %59 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3854
  %60 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i32 0, i32 15, !dbg !3855
  store i32 0, i32* %60, align 4, !dbg !3856
  %61 = load i32, i32* %4, align 4, !dbg !3857
  %62 = icmp ne i32 %61, 0, !dbg !3857
  br i1 %62, label %63, label %66, !dbg !3859

63:                                               ; preds = %50
  %64 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3860
  %65 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %64, i32 0, i32 16, !dbg !3861
  store i8* null, i8** %65, align 8, !dbg !3862
  br label %66, !dbg !3860

66:                                               ; preds = %63, %50
  %67 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3863
  %68 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %67, i32 0, i32 17, !dbg !3864
  %69 = getelementptr inbounds [3 x double], [3 x double]* %68, i64 0, i64 0, !dbg !3863
  store double 0.000000e+00, double* %69, align 8, !dbg !3865
  %70 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3866
  %71 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %70, i32 0, i32 17, !dbg !3867
  %72 = getelementptr inbounds [3 x double], [3 x double]* %71, i64 0, i64 1, !dbg !3866
  store double 0.000000e+00, double* %72, align 8, !dbg !3868
  %73 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3869
  %74 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %73, i32 0, i32 17, !dbg !3870
  %75 = getelementptr inbounds [3 x double], [3 x double]* %74, i64 0, i64 2, !dbg !3869
  store double 0.000000e+00, double* %75, align 8, !dbg !3871
  %76 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !3872
  %77 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %76, i32 0, i32 18, !dbg !3873
  store double 0.000000e+00, double* %77, align 8, !dbg !3874
  ret void, !dbg !3875
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.atom_t* @NAB_mnext(%struct.molecule_t* %0, %struct.atom_t* %1) #0 !dbg !3876 {
  %3 = alloca %struct.atom_t*, align 8
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca %struct.atom_t*, align 8
  %6 = alloca %struct.strand_t*, align 8
  %7 = alloca %struct.residue_t*, align 8
  %8 = alloca %struct.atom_t*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !3879, metadata !DIExpression()), !dbg !3880
  store %struct.atom_t* %1, %struct.atom_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %5, metadata !3881, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !3883, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.declare(metadata %struct.residue_t** %7, metadata !3885, metadata !DIExpression()), !dbg !3886
  call void @llvm.dbg.declare(metadata %struct.atom_t** %8, metadata !3887, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata i32* %9, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.declare(metadata i32* %10, metadata !3891, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.declare(metadata i32* %11, metadata !3893, metadata !DIExpression()), !dbg !3894
  %12 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !3895
  %13 = icmp ne %struct.atom_t* %12, null, !dbg !3895
  br i1 %13, label %48, label %14, !dbg !3897

14:                                               ; preds = %2
  %15 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !3898
  %16 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %15, i32 0, i32 2, !dbg !3901
  %17 = load %struct.strand_t*, %struct.strand_t** %16, align 8, !dbg !3901
  store %struct.strand_t* %17, %struct.strand_t** %6, align 8, !dbg !3902
  br label %18, !dbg !3903

18:                                               ; preds = %29, %14
  %19 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3904
  %20 = icmp ne %struct.strand_t* %19, null, !dbg !3904
  br i1 %20, label %21, label %26, !dbg !3906

21:                                               ; preds = %18
  %22 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3907
  %23 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %22, i32 0, i32 5, !dbg !3908
  %24 = load i32, i32* %23, align 8, !dbg !3908
  %25 = icmp eq i32 %24, 0, !dbg !3909
  br label %26

26:                                               ; preds = %21, %18
  %27 = phi i1 [ false, %18 ], [ %25, %21 ], !dbg !3910
  br i1 %27, label %28, label %33, !dbg !3911

28:                                               ; preds = %26
  br label %29, !dbg !3911

29:                                               ; preds = %28
  %30 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3912
  %31 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %30, i32 0, i32 4, !dbg !3913
  %32 = load %struct.strand_t*, %struct.strand_t** %31, align 8, !dbg !3913
  store %struct.strand_t* %32, %struct.strand_t** %6, align 8, !dbg !3914
  br label %18, !dbg !3915, !llvm.loop !3916

33:                                               ; preds = %26
  %34 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3918
  %35 = icmp ne %struct.strand_t* %34, null, !dbg !3918
  br i1 %35, label %37, label %36, !dbg !3920

36:                                               ; preds = %33
  store %struct.atom_t* null, %struct.atom_t** %3, align 8, !dbg !3921
  br label %158, !dbg !3921

37:                                               ; preds = %33
  %38 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3922
  %39 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %38, i32 0, i32 7, !dbg !3923
  %40 = load %struct.residue_t**, %struct.residue_t*** %39, align 8, !dbg !3923
  %41 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %40, i64 0, !dbg !3922
  %42 = load %struct.residue_t*, %struct.residue_t** %41, align 8, !dbg !3922
  store %struct.residue_t* %42, %struct.residue_t** %7, align 8, !dbg !3924
  %43 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3925
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i32 0, i32 17, !dbg !3926
  %45 = load %struct.atom_t*, %struct.atom_t** %44, align 8, !dbg !3926
  %46 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %45, i64 0, !dbg !3925
  store %struct.atom_t* %46, %struct.atom_t** %8, align 8, !dbg !3927
  %47 = load %struct.atom_t*, %struct.atom_t** %8, align 8, !dbg !3928
  store %struct.atom_t* %47, %struct.atom_t** %3, align 8, !dbg !3929
  br label %158, !dbg !3929

48:                                               ; preds = %2
  %49 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !3930
  %50 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %49, i32 0, i32 5, !dbg !3932
  %51 = load %struct.residue_t*, %struct.residue_t** %50, align 8, !dbg !3932
  store %struct.residue_t* %51, %struct.residue_t** %7, align 8, !dbg !3933
  %52 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !3934
  %53 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3935
  %54 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %53, i32 0, i32 17, !dbg !3936
  %55 = load %struct.atom_t*, %struct.atom_t** %54, align 8, !dbg !3936
  %56 = ptrtoint %struct.atom_t* %52 to i64, !dbg !3937
  %57 = ptrtoint %struct.atom_t* %55 to i64, !dbg !3937
  %58 = sub i64 %56, %57, !dbg !3937
  %59 = sdiv exact i64 %58, 176, !dbg !3937
  %60 = add nsw i64 %59, 1, !dbg !3938
  %61 = trunc i64 %60 to i32, !dbg !3934
  store i32 %61, i32* %11, align 4, !dbg !3939
  %62 = load i32, i32* %11, align 4, !dbg !3940
  %63 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3942
  %64 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %63, i32 0, i32 15, !dbg !3943
  %65 = load i32, i32* %64, align 8, !dbg !3943
  %66 = icmp slt i32 %62, %65, !dbg !3944
  br i1 %66, label %67, label %75, !dbg !3945

67:                                               ; preds = %48
  %68 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3946
  %69 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %68, i32 0, i32 17, !dbg !3948
  %70 = load %struct.atom_t*, %struct.atom_t** %69, align 8, !dbg !3948
  %71 = load i32, i32* %11, align 4, !dbg !3949
  %72 = sext i32 %71 to i64, !dbg !3946
  %73 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %70, i64 %72, !dbg !3946
  store %struct.atom_t* %73, %struct.atom_t** %8, align 8, !dbg !3950
  %74 = load %struct.atom_t*, %struct.atom_t** %8, align 8, !dbg !3951
  store %struct.atom_t* %74, %struct.atom_t** %3, align 8, !dbg !3952
  br label %158, !dbg !3952

75:                                               ; preds = %48
  %76 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3953
  %77 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %76, i32 0, i32 9, !dbg !3954
  %78 = load %struct.strand_t*, %struct.strand_t** %77, align 8, !dbg !3954
  store %struct.strand_t* %78, %struct.strand_t** %6, align 8, !dbg !3955
  %79 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3956
  %80 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %79, i32 0, i32 5, !dbg !3958
  %81 = load i32, i32* %80, align 8, !dbg !3958
  store i32 %81, i32* %10, align 4, !dbg !3959
  store i32 0, i32* %9, align 4, !dbg !3960
  br label %82, !dbg !3961

82:                                               ; preds = %102, %75
  %83 = load i32, i32* %9, align 4, !dbg !3962
  %84 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3964
  %85 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %84, i32 0, i32 5, !dbg !3965
  %86 = load i32, i32* %85, align 8, !dbg !3965
  %87 = icmp slt i32 %83, %86, !dbg !3966
  br i1 %87, label %88, label %105, !dbg !3967

88:                                               ; preds = %82
  %89 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3968
  %90 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %89, i32 0, i32 7, !dbg !3971
  %91 = load %struct.residue_t**, %struct.residue_t*** %90, align 8, !dbg !3971
  %92 = load i32, i32* %9, align 4, !dbg !3972
  %93 = sext i32 %92 to i64, !dbg !3968
  %94 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %91, i64 %93, !dbg !3968
  %95 = load %struct.residue_t*, %struct.residue_t** %94, align 8, !dbg !3968
  %96 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3973
  %97 = icmp eq %struct.residue_t* %95, %96, !dbg !3974
  br i1 %97, label %98, label %101, !dbg !3975

98:                                               ; preds = %88
  %99 = load i32, i32* %9, align 4, !dbg !3976
  %100 = add nsw i32 %99, 1, !dbg !3978
  store i32 %100, i32* %10, align 4, !dbg !3979
  br label %105, !dbg !3980

101:                                              ; preds = %88
  br label %102, !dbg !3981

102:                                              ; preds = %101
  %103 = load i32, i32* %9, align 4, !dbg !3982
  %104 = add nsw i32 %103, 1, !dbg !3982
  store i32 %104, i32* %9, align 4, !dbg !3982
  br label %82, !dbg !3983, !llvm.loop !3984

105:                                              ; preds = %98, %82
  %106 = load i32, i32* %10, align 4, !dbg !3986
  %107 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3988
  %108 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %107, i32 0, i32 5, !dbg !3989
  %109 = load i32, i32* %108, align 8, !dbg !3989
  %110 = icmp slt i32 %106, %109, !dbg !3990
  br i1 %110, label %111, label %124, !dbg !3991

111:                                              ; preds = %105
  %112 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !3992
  %113 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %112, i32 0, i32 7, !dbg !3994
  %114 = load %struct.residue_t**, %struct.residue_t*** %113, align 8, !dbg !3994
  %115 = load i32, i32* %10, align 4, !dbg !3995
  %116 = sext i32 %115 to i64, !dbg !3992
  %117 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %114, i64 %116, !dbg !3992
  %118 = load %struct.residue_t*, %struct.residue_t** %117, align 8, !dbg !3992
  store %struct.residue_t* %118, %struct.residue_t** %7, align 8, !dbg !3996
  %119 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !3997
  %120 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %119, i32 0, i32 17, !dbg !3998
  %121 = load %struct.atom_t*, %struct.atom_t** %120, align 8, !dbg !3998
  %122 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %121, i64 0, !dbg !3997
  store %struct.atom_t* %122, %struct.atom_t** %8, align 8, !dbg !3999
  %123 = load %struct.atom_t*, %struct.atom_t** %8, align 8, !dbg !4000
  store %struct.atom_t* %123, %struct.atom_t** %3, align 8, !dbg !4001
  br label %158, !dbg !4001

124:                                              ; preds = %105
  %125 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4002
  %126 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %125, i32 0, i32 4, !dbg !4004
  %127 = load %struct.strand_t*, %struct.strand_t** %126, align 8, !dbg !4004
  store %struct.strand_t* %127, %struct.strand_t** %6, align 8, !dbg !4005
  br label %128, !dbg !4006

128:                                              ; preds = %139, %124
  %129 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4007
  %130 = icmp ne %struct.strand_t* %129, null, !dbg !4007
  br i1 %130, label %131, label %136, !dbg !4009

131:                                              ; preds = %128
  %132 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4010
  %133 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %132, i32 0, i32 5, !dbg !4011
  %134 = load i32, i32* %133, align 8, !dbg !4011
  %135 = icmp eq i32 %134, 0, !dbg !4012
  br label %136

136:                                              ; preds = %131, %128
  %137 = phi i1 [ false, %128 ], [ %135, %131 ], !dbg !4013
  br i1 %137, label %138, label %143, !dbg !4014

138:                                              ; preds = %136
  br label %139, !dbg !4014

139:                                              ; preds = %138
  %140 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4015
  %141 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %140, i32 0, i32 4, !dbg !4016
  %142 = load %struct.strand_t*, %struct.strand_t** %141, align 8, !dbg !4016
  store %struct.strand_t* %142, %struct.strand_t** %6, align 8, !dbg !4017
  br label %128, !dbg !4018, !llvm.loop !4019

143:                                              ; preds = %136
  %144 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4021
  %145 = icmp ne %struct.strand_t* %144, null, !dbg !4021
  br i1 %145, label %147, label %146, !dbg !4023

146:                                              ; preds = %143
  store %struct.atom_t* null, %struct.atom_t** %3, align 8, !dbg !4024
  br label %158, !dbg !4024

147:                                              ; preds = %143
  %148 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4025
  %149 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %148, i32 0, i32 7, !dbg !4026
  %150 = load %struct.residue_t**, %struct.residue_t*** %149, align 8, !dbg !4026
  %151 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %150, i64 0, !dbg !4025
  %152 = load %struct.residue_t*, %struct.residue_t** %151, align 8, !dbg !4025
  store %struct.residue_t* %152, %struct.residue_t** %7, align 8, !dbg !4027
  %153 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !4028
  %154 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %153, i32 0, i32 17, !dbg !4029
  %155 = load %struct.atom_t*, %struct.atom_t** %154, align 8, !dbg !4029
  %156 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %155, i64 0, !dbg !4028
  store %struct.atom_t* %156, %struct.atom_t** %8, align 8, !dbg !4030
  %157 = load %struct.atom_t*, %struct.atom_t** %8, align 8, !dbg !4031
  store %struct.atom_t* %157, %struct.atom_t** %3, align 8, !dbg !4032
  br label %158, !dbg !4032

158:                                              ; preds = %147, %146, %111, %67, %37, %36
  %159 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !4033
  ret %struct.atom_t* %159, !dbg !4033
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.residue_t* @NAB_rnext(%struct.molecule_t* %0, %struct.residue_t* %1) #0 !dbg !4034 {
  %3 = alloca %struct.residue_t*, align 8
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca %struct.residue_t*, align 8
  %6 = alloca %struct.strand_t*, align 8
  %7 = alloca %struct.residue_t*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !4037, metadata !DIExpression()), !dbg !4038
  store %struct.residue_t* %1, %struct.residue_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %5, metadata !4039, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !4041, metadata !DIExpression()), !dbg !4042
  call void @llvm.dbg.declare(metadata %struct.residue_t** %7, metadata !4043, metadata !DIExpression()), !dbg !4044
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4045, metadata !DIExpression()), !dbg !4046
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4047, metadata !DIExpression()), !dbg !4048
  %10 = load %struct.residue_t*, %struct.residue_t** %5, align 8, !dbg !4049
  %11 = icmp ne %struct.residue_t* %10, null, !dbg !4049
  br i1 %11, label %42, label %12, !dbg !4051

12:                                               ; preds = %2
  %13 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4052
  %14 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %13, i32 0, i32 2, !dbg !4055
  %15 = load %struct.strand_t*, %struct.strand_t** %14, align 8, !dbg !4055
  store %struct.strand_t* %15, %struct.strand_t** %6, align 8, !dbg !4056
  br label %16, !dbg !4057

16:                                               ; preds = %27, %12
  %17 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4058
  %18 = icmp ne %struct.strand_t* %17, null, !dbg !4058
  br i1 %18, label %19, label %24, !dbg !4060

19:                                               ; preds = %16
  %20 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4061
  %21 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %20, i32 0, i32 5, !dbg !4062
  %22 = load i32, i32* %21, align 8, !dbg !4062
  %23 = icmp eq i32 %22, 0, !dbg !4063
  br label %24

24:                                               ; preds = %19, %16
  %25 = phi i1 [ false, %16 ], [ %23, %19 ], !dbg !4064
  br i1 %25, label %26, label %31, !dbg !4065

26:                                               ; preds = %24
  br label %27, !dbg !4065

27:                                               ; preds = %26
  %28 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4066
  %29 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %28, i32 0, i32 4, !dbg !4067
  %30 = load %struct.strand_t*, %struct.strand_t** %29, align 8, !dbg !4067
  store %struct.strand_t* %30, %struct.strand_t** %6, align 8, !dbg !4068
  br label %16, !dbg !4069, !llvm.loop !4070

31:                                               ; preds = %24
  %32 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4072
  %33 = icmp ne %struct.strand_t* %32, null, !dbg !4072
  br i1 %33, label %35, label %34, !dbg !4074

34:                                               ; preds = %31
  store %struct.residue_t* null, %struct.residue_t** %3, align 8, !dbg !4075
  br label %117, !dbg !4075

35:                                               ; preds = %31
  %36 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4076
  %37 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %36, i32 0, i32 7, !dbg !4077
  %38 = load %struct.residue_t**, %struct.residue_t*** %37, align 8, !dbg !4077
  %39 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %38, i64 0, !dbg !4076
  %40 = load %struct.residue_t*, %struct.residue_t** %39, align 8, !dbg !4076
  store %struct.residue_t* %40, %struct.residue_t** %7, align 8, !dbg !4078
  %41 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !4079
  store %struct.residue_t* %41, %struct.residue_t** %3, align 8, !dbg !4080
  br label %117, !dbg !4080

42:                                               ; preds = %2
  %43 = load %struct.residue_t*, %struct.residue_t** %5, align 8, !dbg !4081
  %44 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %43, i32 0, i32 9, !dbg !4083
  %45 = load %struct.strand_t*, %struct.strand_t** %44, align 8, !dbg !4083
  store %struct.strand_t* %45, %struct.strand_t** %6, align 8, !dbg !4084
  %46 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4085
  %47 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %46, i32 0, i32 5, !dbg !4087
  %48 = load i32, i32* %47, align 8, !dbg !4087
  store i32 %48, i32* %9, align 4, !dbg !4088
  store i32 0, i32* %8, align 4, !dbg !4089
  br label %49, !dbg !4090

49:                                               ; preds = %69, %42
  %50 = load i32, i32* %8, align 4, !dbg !4091
  %51 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4093
  %52 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %51, i32 0, i32 5, !dbg !4094
  %53 = load i32, i32* %52, align 8, !dbg !4094
  %54 = icmp slt i32 %50, %53, !dbg !4095
  br i1 %54, label %55, label %72, !dbg !4096

55:                                               ; preds = %49
  %56 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4097
  %57 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %56, i32 0, i32 7, !dbg !4100
  %58 = load %struct.residue_t**, %struct.residue_t*** %57, align 8, !dbg !4100
  %59 = load i32, i32* %8, align 4, !dbg !4101
  %60 = sext i32 %59 to i64, !dbg !4097
  %61 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %58, i64 %60, !dbg !4097
  %62 = load %struct.residue_t*, %struct.residue_t** %61, align 8, !dbg !4097
  %63 = load %struct.residue_t*, %struct.residue_t** %5, align 8, !dbg !4102
  %64 = icmp eq %struct.residue_t* %62, %63, !dbg !4103
  br i1 %64, label %65, label %68, !dbg !4104

65:                                               ; preds = %55
  %66 = load i32, i32* %8, align 4, !dbg !4105
  %67 = add nsw i32 %66, 1, !dbg !4107
  store i32 %67, i32* %9, align 4, !dbg !4108
  br label %72, !dbg !4109

68:                                               ; preds = %55
  br label %69, !dbg !4110

69:                                               ; preds = %68
  %70 = load i32, i32* %8, align 4, !dbg !4111
  %71 = add nsw i32 %70, 1, !dbg !4111
  store i32 %71, i32* %8, align 4, !dbg !4111
  br label %49, !dbg !4112, !llvm.loop !4113

72:                                               ; preds = %65, %49
  %73 = load i32, i32* %9, align 4, !dbg !4115
  %74 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4117
  %75 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %74, i32 0, i32 5, !dbg !4118
  %76 = load i32, i32* %75, align 8, !dbg !4118
  %77 = icmp slt i32 %73, %76, !dbg !4119
  br i1 %77, label %78, label %87, !dbg !4120

78:                                               ; preds = %72
  %79 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4121
  %80 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %79, i32 0, i32 7, !dbg !4123
  %81 = load %struct.residue_t**, %struct.residue_t*** %80, align 8, !dbg !4123
  %82 = load i32, i32* %9, align 4, !dbg !4124
  %83 = sext i32 %82 to i64, !dbg !4121
  %84 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %81, i64 %83, !dbg !4121
  %85 = load %struct.residue_t*, %struct.residue_t** %84, align 8, !dbg !4121
  store %struct.residue_t* %85, %struct.residue_t** %7, align 8, !dbg !4125
  %86 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !4126
  store %struct.residue_t* %86, %struct.residue_t** %3, align 8, !dbg !4127
  br label %117, !dbg !4127

87:                                               ; preds = %72
  %88 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4128
  %89 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %88, i32 0, i32 4, !dbg !4130
  %90 = load %struct.strand_t*, %struct.strand_t** %89, align 8, !dbg !4130
  store %struct.strand_t* %90, %struct.strand_t** %6, align 8, !dbg !4131
  br label %91, !dbg !4132

91:                                               ; preds = %102, %87
  %92 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4133
  %93 = icmp ne %struct.strand_t* %92, null, !dbg !4133
  br i1 %93, label %94, label %99, !dbg !4135

94:                                               ; preds = %91
  %95 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4136
  %96 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %95, i32 0, i32 5, !dbg !4137
  %97 = load i32, i32* %96, align 8, !dbg !4137
  %98 = icmp eq i32 %97, 0, !dbg !4138
  br label %99

99:                                               ; preds = %94, %91
  %100 = phi i1 [ false, %91 ], [ %98, %94 ], !dbg !4139
  br i1 %100, label %101, label %106, !dbg !4140

101:                                              ; preds = %99
  br label %102, !dbg !4140

102:                                              ; preds = %101
  %103 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4141
  %104 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %103, i32 0, i32 4, !dbg !4142
  %105 = load %struct.strand_t*, %struct.strand_t** %104, align 8, !dbg !4142
  store %struct.strand_t* %105, %struct.strand_t** %6, align 8, !dbg !4143
  br label %91, !dbg !4144, !llvm.loop !4145

106:                                              ; preds = %99
  %107 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4147
  %108 = icmp ne %struct.strand_t* %107, null, !dbg !4147
  br i1 %108, label %110, label %109, !dbg !4149

109:                                              ; preds = %106
  store %struct.residue_t* null, %struct.residue_t** %3, align 8, !dbg !4150
  br label %117, !dbg !4150

110:                                              ; preds = %106
  %111 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4151
  %112 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %111, i32 0, i32 7, !dbg !4152
  %113 = load %struct.residue_t**, %struct.residue_t*** %112, align 8, !dbg !4152
  %114 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %113, i64 0, !dbg !4151
  %115 = load %struct.residue_t*, %struct.residue_t** %114, align 8, !dbg !4151
  store %struct.residue_t* %115, %struct.residue_t** %7, align 8, !dbg !4153
  %116 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !4154
  store %struct.residue_t* %116, %struct.residue_t** %3, align 8, !dbg !4155
  br label %117, !dbg !4155

117:                                              ; preds = %110, %109, %78, %35, %34
  %118 = load %struct.residue_t*, %struct.residue_t** %3, align 8, !dbg !4156
  ret %struct.residue_t* %118, !dbg !4156
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.atom_t* @NAB_anext(%struct.residue_t* %0, %struct.atom_t* %1) #0 !dbg !4157 {
  %3 = alloca %struct.atom_t*, align 8
  %4 = alloca %struct.residue_t*, align 8
  %5 = alloca %struct.atom_t*, align 8
  %6 = alloca %struct.atom_t*, align 8
  %7 = alloca i32, align 4
  store %struct.residue_t* %0, %struct.residue_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %4, metadata !4160, metadata !DIExpression()), !dbg !4161
  store %struct.atom_t* %1, %struct.atom_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %5, metadata !4162, metadata !DIExpression()), !dbg !4163
  call void @llvm.dbg.declare(metadata %struct.atom_t** %6, metadata !4164, metadata !DIExpression()), !dbg !4165
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4166, metadata !DIExpression()), !dbg !4167
  %8 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !4168
  %9 = icmp ne %struct.atom_t* %8, null, !dbg !4168
  br i1 %9, label %15, label %10, !dbg !4170

10:                                               ; preds = %2
  %11 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4171
  %12 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %11, i32 0, i32 17, !dbg !4173
  %13 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !4173
  store %struct.atom_t* %13, %struct.atom_t** %6, align 8, !dbg !4174
  %14 = load %struct.atom_t*, %struct.atom_t** %6, align 8, !dbg !4175
  store %struct.atom_t* %14, %struct.atom_t** %3, align 8, !dbg !4176
  br label %40, !dbg !4176

15:                                               ; preds = %2
  %16 = load %struct.atom_t*, %struct.atom_t** %5, align 8, !dbg !4177
  %17 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4179
  %18 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %17, i32 0, i32 17, !dbg !4180
  %19 = load %struct.atom_t*, %struct.atom_t** %18, align 8, !dbg !4180
  %20 = ptrtoint %struct.atom_t* %16 to i64, !dbg !4181
  %21 = ptrtoint %struct.atom_t* %19 to i64, !dbg !4181
  %22 = sub i64 %20, %21, !dbg !4181
  %23 = sdiv exact i64 %22, 176, !dbg !4181
  %24 = add nsw i64 %23, 1, !dbg !4182
  %25 = trunc i64 %24 to i32, !dbg !4183
  store i32 %25, i32* %7, align 4, !dbg !4184
  %26 = load i32, i32* %7, align 4, !dbg !4185
  %27 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4187
  %28 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %27, i32 0, i32 15, !dbg !4188
  %29 = load i32, i32* %28, align 8, !dbg !4188
  %30 = icmp slt i32 %26, %29, !dbg !4189
  br i1 %30, label %31, label %39, !dbg !4190

31:                                               ; preds = %15
  %32 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4191
  %33 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %32, i32 0, i32 17, !dbg !4193
  %34 = load %struct.atom_t*, %struct.atom_t** %33, align 8, !dbg !4193
  %35 = load i32, i32* %7, align 4, !dbg !4194
  %36 = sext i32 %35 to i64, !dbg !4191
  %37 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %34, i64 %36, !dbg !4191
  store %struct.atom_t* %37, %struct.atom_t** %6, align 8, !dbg !4195
  %38 = load %struct.atom_t*, %struct.atom_t** %6, align 8, !dbg !4196
  store %struct.atom_t* %38, %struct.atom_t** %3, align 8, !dbg !4197
  br label %40, !dbg !4197

39:                                               ; preds = %15
  store %struct.atom_t* null, %struct.atom_t** %3, align 8, !dbg !4198
  br label %40, !dbg !4198

40:                                               ; preds = %39, %31, %10
  %41 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !4199
  ret %struct.atom_t* %41, !dbg !4199
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @NAB_mri(%struct.molecule_t* %0, i8* %1) #0 !dbg !4200 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca i8*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !4203, metadata !DIExpression()), !dbg !4204
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4205, metadata !DIExpression()), !dbg !4206
  %6 = load i8*, i8** %5, align 8, !dbg !4207
  %7 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !4209
  %8 = icmp ne i32 %7, 0, !dbg !4209
  br i1 %8, label %19, label %9, !dbg !4210

9:                                                ; preds = %2
  %10 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4211
  %11 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %10, i32 0, i32 5, !dbg !4214
  %12 = load i32, i32* %11, align 8, !dbg !4214
  %13 = icmp ne i32 %12, 0, !dbg !4211
  br i1 %13, label %16, label %14, !dbg !4215

14:                                               ; preds = %9
  %15 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4216
  call void @upd_molnumbers(%struct.molecule_t* %15), !dbg !4217
  br label %16, !dbg !4217

16:                                               ; preds = %14, %9
  %17 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4218
  %18 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %17, i32 0, i32 1, !dbg !4219
  store i32* %18, i32** %3, align 8, !dbg !4220
  br label %54, !dbg !4220

19:                                               ; preds = %2
  %20 = load i8*, i8** %5, align 8, !dbg !4221
  %21 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !4223
  %22 = icmp ne i32 %21, 0, !dbg !4223
  br i1 %22, label %33, label %23, !dbg !4224

23:                                               ; preds = %19
  %24 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4225
  %25 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %24, i32 0, i32 5, !dbg !4228
  %26 = load i32, i32* %25, align 8, !dbg !4228
  %27 = icmp ne i32 %26, 0, !dbg !4225
  br i1 %27, label %30, label %28, !dbg !4229

28:                                               ; preds = %23
  %29 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4230
  call void @upd_molnumbers(%struct.molecule_t* %29), !dbg !4231
  br label %30, !dbg !4231

30:                                               ; preds = %28, %23
  %31 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4232
  %32 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %31, i32 0, i32 3, !dbg !4233
  store i32* %32, i32** %3, align 8, !dbg !4234
  br label %54, !dbg !4234

33:                                               ; preds = %19
  %34 = load i8*, i8** %5, align 8, !dbg !4235
  %35 = call i32 @strcmp(i8* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !4237
  %36 = icmp ne i32 %35, 0, !dbg !4237
  br i1 %36, label %47, label %37, !dbg !4238

37:                                               ; preds = %33
  %38 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4239
  %39 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %38, i32 0, i32 5, !dbg !4242
  %40 = load i32, i32* %39, align 8, !dbg !4242
  %41 = icmp ne i32 %40, 0, !dbg !4239
  br i1 %41, label %44, label %42, !dbg !4243

42:                                               ; preds = %37
  %43 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4244
  call void @upd_molnumbers(%struct.molecule_t* %43), !dbg !4245
  br label %44, !dbg !4245

44:                                               ; preds = %42, %37
  %45 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !4246
  %46 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %45, i32 0, i32 4, !dbg !4247
  store i32* %46, i32** %3, align 8, !dbg !4248
  br label %54, !dbg !4248

47:                                               ; preds = %33
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4249
  %49 = load i8*, i8** %5, align 8, !dbg !4250
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.28, i64 0, i64 0), i8* %49), !dbg !4251
  br label %51

51:                                               ; preds = %47
  br label %52

52:                                               ; preds = %51
  br label %53

53:                                               ; preds = %52
  store i32* null, i32** %3, align 8, !dbg !4252
  br label %54, !dbg !4252

54:                                               ; preds = %53, %44, %30, %16
  %55 = load i32*, i32** %3, align 8, !dbg !4253
  ret i32* %55, !dbg !4253
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @NAB_rri(%struct.residue_t* %0, i8* %1) #0 !dbg !255 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.residue_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.strand_t*, align 8
  %7 = alloca %struct.molecule_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %4, metadata !4254, metadata !DIExpression()), !dbg !4255
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4256, metadata !DIExpression()), !dbg !4257
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %7, metadata !4260, metadata !DIExpression()), !dbg !4261
  %8 = load i8*, i8** %5, align 8, !dbg !4262
  %9 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !4264
  %10 = icmp ne i32 %9, 0, !dbg !4264
  br i1 %10, label %27, label %11, !dbg !4265

11:                                               ; preds = %2
  %12 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4266
  %13 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %12, i32 0, i32 9, !dbg !4268
  %14 = load %struct.strand_t*, %struct.strand_t** %13, align 8, !dbg !4268
  store %struct.strand_t* %14, %struct.strand_t** %6, align 8, !dbg !4269
  %15 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4270
  %16 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %15, i32 0, i32 3, !dbg !4271
  %17 = load %struct.molecule_t*, %struct.molecule_t** %16, align 8, !dbg !4271
  store %struct.molecule_t* %17, %struct.molecule_t** %7, align 8, !dbg !4272
  %18 = load %struct.molecule_t*, %struct.molecule_t** %7, align 8, !dbg !4273
  %19 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %18, i32 0, i32 5, !dbg !4275
  %20 = load i32, i32* %19, align 8, !dbg !4275
  %21 = icmp ne i32 %20, 0, !dbg !4273
  br i1 %21, label %24, label %22, !dbg !4276

22:                                               ; preds = %11
  %23 = load %struct.molecule_t*, %struct.molecule_t** %7, align 8, !dbg !4277
  call void @upd_molnumbers(%struct.molecule_t* %23), !dbg !4278
  br label %24, !dbg !4278

24:                                               ; preds = %22, %11
  %25 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4279
  %26 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %25, i32 0, i32 3, !dbg !4280
  store i32* %26, i32** %3, align 8, !dbg !4281
  br label %74, !dbg !4281

27:                                               ; preds = %2
  %28 = load i8*, i8** %5, align 8, !dbg !4282
  %29 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !4284
  %30 = icmp ne i32 %29, 0, !dbg !4284
  br i1 %30, label %47, label %31, !dbg !4285

31:                                               ; preds = %27
  %32 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4286
  %33 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %32, i32 0, i32 9, !dbg !4288
  %34 = load %struct.strand_t*, %struct.strand_t** %33, align 8, !dbg !4288
  store %struct.strand_t* %34, %struct.strand_t** %6, align 8, !dbg !4289
  %35 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4290
  %36 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %35, i32 0, i32 3, !dbg !4291
  %37 = load %struct.molecule_t*, %struct.molecule_t** %36, align 8, !dbg !4291
  store %struct.molecule_t* %37, %struct.molecule_t** %7, align 8, !dbg !4292
  %38 = load %struct.molecule_t*, %struct.molecule_t** %7, align 8, !dbg !4293
  %39 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %38, i32 0, i32 5, !dbg !4295
  %40 = load i32, i32* %39, align 8, !dbg !4295
  %41 = icmp ne i32 %40, 0, !dbg !4293
  br i1 %41, label %44, label %42, !dbg !4296

42:                                               ; preds = %31
  %43 = load %struct.molecule_t*, %struct.molecule_t** %7, align 8, !dbg !4297
  call void @upd_molnumbers(%struct.molecule_t* %43), !dbg !4298
  br label %44, !dbg !4298

44:                                               ; preds = %42, %31
  %45 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4299
  %46 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %45, i32 0, i32 2, !dbg !4300
  store i32* %46, i32** %3, align 8, !dbg !4301
  br label %74, !dbg !4301

47:                                               ; preds = %27
  %48 = load i8*, i8** %5, align 8, !dbg !4302
  %49 = call i32 @strcmp(i8* %48, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !4304
  %50 = icmp ne i32 %49, 0, !dbg !4304
  br i1 %50, label %67, label %51, !dbg !4305

51:                                               ; preds = %47
  %52 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4306
  %53 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %52, i32 0, i32 9, !dbg !4308
  %54 = load %struct.strand_t*, %struct.strand_t** %53, align 8, !dbg !4308
  store %struct.strand_t* %54, %struct.strand_t** %6, align 8, !dbg !4309
  %55 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4310
  %56 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %55, i32 0, i32 3, !dbg !4311
  %57 = load %struct.molecule_t*, %struct.molecule_t** %56, align 8, !dbg !4311
  store %struct.molecule_t* %57, %struct.molecule_t** %7, align 8, !dbg !4312
  %58 = load %struct.molecule_t*, %struct.molecule_t** %7, align 8, !dbg !4313
  %59 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %58, i32 0, i32 5, !dbg !4315
  %60 = load i32, i32* %59, align 8, !dbg !4315
  %61 = icmp ne i32 %60, 0, !dbg !4313
  br i1 %61, label %64, label %62, !dbg !4316

62:                                               ; preds = %51
  %63 = load %struct.molecule_t*, %struct.molecule_t** %7, align 8, !dbg !4317
  call void @upd_molnumbers(%struct.molecule_t* %63), !dbg !4318
  br label %64, !dbg !4318

64:                                               ; preds = %62, %51
  %65 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4319
  %66 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %65, i32 0, i32 1, !dbg !4320
  store i32* %66, i32** %3, align 8, !dbg !4321
  br label %74, !dbg !4321

67:                                               ; preds = %47
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4322
  %69 = load i8*, i8** %5, align 8, !dbg !4323
  %70 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i64 0, i64 0), i8* %69), !dbg !4324
  br label %71

71:                                               ; preds = %67
  br label %72

72:                                               ; preds = %71
  br label %73

73:                                               ; preds = %72
  store i32 0, i32* @NAB_rri.rv_err, align 4, !dbg !4325
  store i32* @NAB_rri.rv_err, i32** %3, align 8, !dbg !4326
  br label %74, !dbg !4326

74:                                               ; preds = %73, %64, %44, %24
  %75 = load i32*, i32** %3, align 8, !dbg !4327
  ret i32* %75, !dbg !4327
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8** @NAB_rrc(%struct.residue_t* %0, i8* %1) #0 !dbg !4328 {
  %3 = alloca i8**, align 8
  %4 = alloca %struct.residue_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.strand_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %4, metadata !4331, metadata !DIExpression()), !dbg !4332
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4333, metadata !DIExpression()), !dbg !4334
  call void @llvm.dbg.declare(metadata %struct.strand_t** %6, metadata !4335, metadata !DIExpression()), !dbg !4336
  %7 = load i8*, i8** %5, align 8, !dbg !4337
  %8 = call i32 @strcmp(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !4339
  %9 = icmp ne i32 %8, 0, !dbg !4339
  br i1 %9, label %13, label %10, !dbg !4340

10:                                               ; preds = %2
  %11 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4341
  %12 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %11, i32 0, i32 4, !dbg !4343
  store i8** %12, i8*** %3, align 8, !dbg !4344
  br label %34, !dbg !4344

13:                                               ; preds = %2
  %14 = load i8*, i8** %5, align 8, !dbg !4345
  %15 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !4347
  %16 = icmp ne i32 %15, 0, !dbg !4347
  br i1 %16, label %20, label %17, !dbg !4348

17:                                               ; preds = %13
  %18 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4349
  %19 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %18, i32 0, i32 5, !dbg !4351
  store i8** %19, i8*** %3, align 8, !dbg !4352
  br label %34, !dbg !4352

20:                                               ; preds = %13
  %21 = load i8*, i8** %5, align 8, !dbg !4353
  %22 = call i32 @strcmp(i8* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !4355
  %23 = icmp ne i32 %22, 0, !dbg !4355
  br i1 %23, label %30, label %24, !dbg !4356

24:                                               ; preds = %20
  %25 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !4357
  %26 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %25, i32 0, i32 9, !dbg !4359
  %27 = load %struct.strand_t*, %struct.strand_t** %26, align 8, !dbg !4359
  store %struct.strand_t* %27, %struct.strand_t** %6, align 8, !dbg !4360
  %28 = load %struct.strand_t*, %struct.strand_t** %6, align 8, !dbg !4361
  %29 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %28, i32 0, i32 0, !dbg !4362
  store i8** %29, i8*** %3, align 8, !dbg !4363
  br label %34, !dbg !4363

30:                                               ; preds = %20
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4364
  %32 = load i8*, i8** %5, align 8, !dbg !4366
  %33 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0), i8* %32), !dbg !4367
  store i8** null, i8*** %3, align 8, !dbg !4368
  br label %34, !dbg !4368

34:                                               ; preds = %30, %24, %17, %10
  %35 = load i8**, i8*** %3, align 8, !dbg !4369
  ret i8** %35, !dbg !4369
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @NAB_ari(%struct.atom_t* %0, i8* %1) #0 !dbg !260 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.atom_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.residue_t*, align 8
  %7 = alloca %struct.strand_t*, align 8
  %8 = alloca %struct.molecule_t*, align 8
  store %struct.atom_t* %0, %struct.atom_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %4, metadata !4370, metadata !DIExpression()), !dbg !4371
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4372, metadata !DIExpression()), !dbg !4373
  call void @llvm.dbg.declare(metadata %struct.residue_t** %6, metadata !4374, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !4376, metadata !DIExpression()), !dbg !4377
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %8, metadata !4378, metadata !DIExpression()), !dbg !4379
  %9 = load i8*, i8** %5, align 8, !dbg !4380
  %10 = call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !4382
  %11 = icmp ne i32 %10, 0, !dbg !4382
  br i1 %11, label %31, label %12, !dbg !4383

12:                                               ; preds = %2
  %13 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4384
  %14 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %13, i32 0, i32 5, !dbg !4386
  %15 = load %struct.residue_t*, %struct.residue_t** %14, align 8, !dbg !4386
  store %struct.residue_t* %15, %struct.residue_t** %6, align 8, !dbg !4387
  %16 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4388
  %17 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %16, i32 0, i32 9, !dbg !4389
  %18 = load %struct.strand_t*, %struct.strand_t** %17, align 8, !dbg !4389
  store %struct.strand_t* %18, %struct.strand_t** %7, align 8, !dbg !4390
  %19 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4391
  %20 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %19, i32 0, i32 3, !dbg !4392
  %21 = load %struct.molecule_t*, %struct.molecule_t** %20, align 8, !dbg !4392
  store %struct.molecule_t* %21, %struct.molecule_t** %8, align 8, !dbg !4393
  %22 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4394
  %23 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %22, i32 0, i32 5, !dbg !4396
  %24 = load i32, i32* %23, align 8, !dbg !4396
  %25 = icmp ne i32 %24, 0, !dbg !4394
  br i1 %25, label %28, label %26, !dbg !4397

26:                                               ; preds = %12
  %27 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4398
  call void @upd_molnumbers(%struct.molecule_t* %27), !dbg !4399
  br label %28, !dbg !4399

28:                                               ; preds = %26, %12
  %29 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4400
  %30 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %29, i32 0, i32 1, !dbg !4401
  store i32* %30, i32** %3, align 8, !dbg !4402
  br label %140, !dbg !4402

31:                                               ; preds = %2
  %32 = load i8*, i8** %5, align 8, !dbg !4403
  %33 = call i32 @strcmp(i8* %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !4405
  %34 = icmp ne i32 %33, 0, !dbg !4405
  br i1 %34, label %54, label %35, !dbg !4406

35:                                               ; preds = %31
  %36 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4407
  %37 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i32 0, i32 5, !dbg !4409
  %38 = load %struct.residue_t*, %struct.residue_t** %37, align 8, !dbg !4409
  store %struct.residue_t* %38, %struct.residue_t** %6, align 8, !dbg !4410
  %39 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4411
  %40 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %39, i32 0, i32 9, !dbg !4412
  %41 = load %struct.strand_t*, %struct.strand_t** %40, align 8, !dbg !4412
  store %struct.strand_t* %41, %struct.strand_t** %7, align 8, !dbg !4413
  %42 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4414
  %43 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %42, i32 0, i32 3, !dbg !4415
  %44 = load %struct.molecule_t*, %struct.molecule_t** %43, align 8, !dbg !4415
  store %struct.molecule_t* %44, %struct.molecule_t** %8, align 8, !dbg !4416
  %45 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4417
  %46 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %45, i32 0, i32 5, !dbg !4419
  %47 = load i32, i32* %46, align 8, !dbg !4419
  %48 = icmp ne i32 %47, 0, !dbg !4417
  br i1 %48, label %51, label %49, !dbg !4420

49:                                               ; preds = %35
  %50 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4421
  call void @upd_molnumbers(%struct.molecule_t* %50), !dbg !4422
  br label %51, !dbg !4422

51:                                               ; preds = %49, %35
  %52 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4423
  %53 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %52, i32 0, i32 3, !dbg !4424
  store i32* %53, i32** %3, align 8, !dbg !4425
  br label %140, !dbg !4425

54:                                               ; preds = %31
  %55 = load i8*, i8** %5, align 8, !dbg !4426
  %56 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !4428
  %57 = icmp ne i32 %56, 0, !dbg !4428
  br i1 %57, label %77, label %58, !dbg !4429

58:                                               ; preds = %54
  %59 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4430
  %60 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i32 0, i32 5, !dbg !4432
  %61 = load %struct.residue_t*, %struct.residue_t** %60, align 8, !dbg !4432
  store %struct.residue_t* %61, %struct.residue_t** %6, align 8, !dbg !4433
  %62 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4434
  %63 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %62, i32 0, i32 9, !dbg !4435
  %64 = load %struct.strand_t*, %struct.strand_t** %63, align 8, !dbg !4435
  store %struct.strand_t* %64, %struct.strand_t** %7, align 8, !dbg !4436
  %65 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4437
  %66 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %65, i32 0, i32 3, !dbg !4438
  %67 = load %struct.molecule_t*, %struct.molecule_t** %66, align 8, !dbg !4438
  store %struct.molecule_t* %67, %struct.molecule_t** %8, align 8, !dbg !4439
  %68 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4440
  %69 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %68, i32 0, i32 5, !dbg !4442
  %70 = load i32, i32* %69, align 8, !dbg !4442
  %71 = icmp ne i32 %70, 0, !dbg !4440
  br i1 %71, label %74, label %72, !dbg !4443

72:                                               ; preds = %58
  %73 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4444
  call void @upd_molnumbers(%struct.molecule_t* %73), !dbg !4445
  br label %74, !dbg !4445

74:                                               ; preds = %72, %58
  %75 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4446
  %76 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %75, i32 0, i32 2, !dbg !4447
  store i32* %76, i32** %3, align 8, !dbg !4448
  br label %140, !dbg !4448

77:                                               ; preds = %54
  %78 = load i8*, i8** %5, align 8, !dbg !4449
  %79 = call i32 @strcmp(i8* %78, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0)) #9, !dbg !4451
  %80 = icmp ne i32 %79, 0, !dbg !4451
  br i1 %80, label %100, label %81, !dbg !4452

81:                                               ; preds = %77
  %82 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4453
  %83 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %82, i32 0, i32 5, !dbg !4455
  %84 = load %struct.residue_t*, %struct.residue_t** %83, align 8, !dbg !4455
  store %struct.residue_t* %84, %struct.residue_t** %6, align 8, !dbg !4456
  %85 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4457
  %86 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %85, i32 0, i32 9, !dbg !4458
  %87 = load %struct.strand_t*, %struct.strand_t** %86, align 8, !dbg !4458
  store %struct.strand_t* %87, %struct.strand_t** %7, align 8, !dbg !4459
  %88 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4460
  %89 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %88, i32 0, i32 3, !dbg !4461
  %90 = load %struct.molecule_t*, %struct.molecule_t** %89, align 8, !dbg !4461
  store %struct.molecule_t* %90, %struct.molecule_t** %8, align 8, !dbg !4462
  %91 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4463
  %92 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %91, i32 0, i32 5, !dbg !4465
  %93 = load i32, i32* %92, align 8, !dbg !4465
  %94 = icmp ne i32 %93, 0, !dbg !4463
  br i1 %94, label %97, label %95, !dbg !4466

95:                                               ; preds = %81
  %96 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4467
  call void @upd_molnumbers(%struct.molecule_t* %96), !dbg !4468
  br label %97, !dbg !4468

97:                                               ; preds = %95, %81
  %98 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4469
  %99 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %98, i32 0, i32 15, !dbg !4470
  store i32* %99, i32** %3, align 8, !dbg !4471
  br label %140, !dbg !4471

100:                                              ; preds = %77
  %101 = load i8*, i8** %5, align 8, !dbg !4472
  %102 = call i32 @strcmp(i8* %101, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #9, !dbg !4474
  %103 = icmp ne i32 %102, 0, !dbg !4474
  br i1 %103, label %123, label %104, !dbg !4475

104:                                              ; preds = %100
  %105 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4476
  %106 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %105, i32 0, i32 5, !dbg !4478
  %107 = load %struct.residue_t*, %struct.residue_t** %106, align 8, !dbg !4478
  store %struct.residue_t* %107, %struct.residue_t** %6, align 8, !dbg !4479
  %108 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4480
  %109 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %108, i32 0, i32 9, !dbg !4481
  %110 = load %struct.strand_t*, %struct.strand_t** %109, align 8, !dbg !4481
  store %struct.strand_t* %110, %struct.strand_t** %7, align 8, !dbg !4482
  %111 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4483
  %112 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %111, i32 0, i32 3, !dbg !4484
  %113 = load %struct.molecule_t*, %struct.molecule_t** %112, align 8, !dbg !4484
  store %struct.molecule_t* %113, %struct.molecule_t** %8, align 8, !dbg !4485
  %114 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4486
  %115 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %114, i32 0, i32 5, !dbg !4488
  %116 = load i32, i32* %115, align 8, !dbg !4488
  %117 = icmp ne i32 %116, 0, !dbg !4486
  br i1 %117, label %120, label %118, !dbg !4489

118:                                              ; preds = %104
  %119 = load %struct.molecule_t*, %struct.molecule_t** %8, align 8, !dbg !4490
  call void @upd_molnumbers(%struct.molecule_t* %119), !dbg !4491
  br label %120, !dbg !4491

120:                                              ; preds = %118, %104
  %121 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4492
  %122 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %121, i32 0, i32 14, !dbg !4493
  store i32* %122, i32** %3, align 8, !dbg !4494
  br label %140, !dbg !4494

123:                                              ; preds = %100
  %124 = load i8*, i8** %5, align 8, !dbg !4495
  %125 = call i32 @strcmp(i8* %124, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #9, !dbg !4497
  %126 = icmp ne i32 %125, 0, !dbg !4497
  br i1 %126, label %130, label %127, !dbg !4498

127:                                              ; preds = %123
  %128 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4499
  %129 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %128, i32 0, i32 11, !dbg !4501
  store i32* %129, i32** %3, align 8, !dbg !4502
  br label %140, !dbg !4502

130:                                              ; preds = %123
  %131 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4503
  %132 = load i8*, i8** %5, align 8, !dbg !4504
  %133 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %131, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0), i8* %132), !dbg !4505
  br label %134

134:                                              ; preds = %130
  br label %135

135:                                              ; preds = %134
  br label %136

136:                                              ; preds = %135
  br label %137

137:                                              ; preds = %136
  br label %138

138:                                              ; preds = %137
  br label %139

139:                                              ; preds = %138
  store i32 0, i32* @NAB_ari.rv_err, align 4, !dbg !4506
  store i32* @NAB_ari.rv_err, i32** %3, align 8, !dbg !4507
  br label %140, !dbg !4507

140:                                              ; preds = %139, %127, %120, %97, %74, %51, %28
  %141 = load i32*, i32** %3, align 8, !dbg !4508
  ret i32* %141, !dbg !4508
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local double* @NAB_arf(%struct.atom_t* %0, i8* %1) #0 !dbg !265 {
  %3 = alloca double*, align 8
  %4 = alloca %struct.atom_t*, align 8
  %5 = alloca i8*, align 8
  store %struct.atom_t* %0, %struct.atom_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %4, metadata !4509, metadata !DIExpression()), !dbg !4510
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4511, metadata !DIExpression()), !dbg !4512
  %6 = load i8*, i8** %5, align 8, !dbg !4513
  %7 = call i32 @strcmp(i8* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #9, !dbg !4515
  %8 = icmp ne i32 %7, 0, !dbg !4515
  br i1 %8, label %13, label %9, !dbg !4516

9:                                                ; preds = %2
  %10 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4517
  %11 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %10, i32 0, i32 17, !dbg !4518
  %12 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !4517
  store double* %12, double** %3, align 8, !dbg !4519
  br label %61, !dbg !4519

13:                                               ; preds = %2
  %14 = load i8*, i8** %5, align 8, !dbg !4520
  %15 = call i32 @strcmp(i8* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.42, i64 0, i64 0)) #9, !dbg !4522
  %16 = icmp ne i32 %15, 0, !dbg !4522
  br i1 %16, label %21, label %17, !dbg !4523

17:                                               ; preds = %13
  %18 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4524
  %19 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %18, i32 0, i32 17, !dbg !4525
  %20 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 0, i64 1, !dbg !4524
  store double* %20, double** %3, align 8, !dbg !4526
  br label %61, !dbg !4526

21:                                               ; preds = %13
  %22 = load i8*, i8** %5, align 8, !dbg !4527
  %23 = call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0)) #9, !dbg !4529
  %24 = icmp ne i32 %23, 0, !dbg !4529
  br i1 %24, label %29, label %25, !dbg !4530

25:                                               ; preds = %21
  %26 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4531
  %27 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %26, i32 0, i32 17, !dbg !4532
  %28 = getelementptr inbounds [3 x double], [3 x double]* %27, i64 0, i64 2, !dbg !4531
  store double* %28, double** %3, align 8, !dbg !4533
  br label %61, !dbg !4533

29:                                               ; preds = %21
  %30 = load i8*, i8** %5, align 8, !dbg !4534
  %31 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0)) #9, !dbg !4536
  %32 = icmp ne i32 %31, 0, !dbg !4536
  br i1 %32, label %36, label %33, !dbg !4537

33:                                               ; preds = %29
  %34 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4538
  %35 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %34, i32 0, i32 6, !dbg !4539
  store double* %35, double** %3, align 8, !dbg !4540
  br label %61, !dbg !4540

36:                                               ; preds = %29
  %37 = load i8*, i8** %5, align 8, !dbg !4541
  %38 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0)) #9, !dbg !4543
  %39 = icmp ne i32 %38, 0, !dbg !4543
  br i1 %39, label %43, label %40, !dbg !4544

40:                                               ; preds = %36
  %41 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4545
  %42 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %41, i32 0, i32 7, !dbg !4546
  store double* %42, double** %3, align 8, !dbg !4547
  br label %61, !dbg !4547

43:                                               ; preds = %36
  %44 = load i8*, i8** %5, align 8, !dbg !4548
  %45 = call i32 @strcmp(i8* %44, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !4550
  %46 = icmp ne i32 %45, 0, !dbg !4550
  br i1 %46, label %50, label %47, !dbg !4551

47:                                               ; preds = %43
  %48 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4552
  %49 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %48, i32 0, i32 12, !dbg !4553
  store double* %49, double** %3, align 8, !dbg !4554
  br label %61, !dbg !4554

50:                                               ; preds = %43
  %51 = load i8*, i8** %5, align 8, !dbg !4555
  %52 = call i32 @strcmp(i8* %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i64 0, i64 0)) #9, !dbg !4557
  %53 = icmp ne i32 %52, 0, !dbg !4557
  br i1 %53, label %57, label %54, !dbg !4558

54:                                               ; preds = %50
  %55 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4559
  %56 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i32 0, i32 13, !dbg !4560
  store double* %56, double** %3, align 8, !dbg !4561
  br label %61, !dbg !4561

57:                                               ; preds = %50
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4562
  %59 = load i8*, i8** %5, align 8, !dbg !4564
  %60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %58, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.48, i64 0, i64 0), i8* %59), !dbg !4565
  store double 0.000000e+00, double* @NAB_arf.f, align 8, !dbg !4566
  store double* @NAB_arf.f, double** %3, align 8, !dbg !4567
  br label %61, !dbg !4567

61:                                               ; preds = %57, %54, %47, %40, %33, %25, %17, %9
  %62 = load double*, double** %3, align 8, !dbg !4568
  ret double* %62, !dbg !4568
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8** @NAB_arc(%struct.atom_t* %0, i8* %1) #0 !dbg !4569 {
  %3 = alloca i8**, align 8
  %4 = alloca %struct.atom_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.residue_t*, align 8
  %7 = alloca %struct.strand_t*, align 8
  %8 = alloca %struct.strand_t*, align 8
  %9 = alloca %struct.molecule_t*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [100 x i8], align 16
  store %struct.atom_t* %0, %struct.atom_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %4, metadata !4572, metadata !DIExpression()), !dbg !4573
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4574, metadata !DIExpression()), !dbg !4575
  call void @llvm.dbg.declare(metadata %struct.residue_t** %6, metadata !4576, metadata !DIExpression()), !dbg !4577
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !4578, metadata !DIExpression()), !dbg !4579
  call void @llvm.dbg.declare(metadata %struct.strand_t** %8, metadata !4580, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %9, metadata !4582, metadata !DIExpression()), !dbg !4583
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4584, metadata !DIExpression()), !dbg !4585
  call void @llvm.dbg.declare(metadata i32* %11, metadata !4586, metadata !DIExpression()), !dbg !4587
  call void @llvm.dbg.declare(metadata [100 x i8]* %12, metadata !4588, metadata !DIExpression()), !dbg !4592
  %13 = load i8*, i8** %5, align 8, !dbg !4593
  %14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !4595
  %15 = icmp ne i32 %14, 0, !dbg !4595
  br i1 %15, label %19, label %16, !dbg !4596

16:                                               ; preds = %2
  %17 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4597
  %18 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %17, i32 0, i32 0, !dbg !4599
  store i8** %18, i8*** %3, align 8, !dbg !4600
  br label %143, !dbg !4600

19:                                               ; preds = %2
  %20 = load i8*, i8** %5, align 8, !dbg !4601
  %21 = call i32 @strcmp(i8* %20, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !4603
  %22 = icmp ne i32 %21, 0, !dbg !4603
  br i1 %22, label %29, label %23, !dbg !4604

23:                                               ; preds = %19
  %24 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4605
  %25 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %24, i32 0, i32 5, !dbg !4607
  %26 = load %struct.residue_t*, %struct.residue_t** %25, align 8, !dbg !4607
  store %struct.residue_t* %26, %struct.residue_t** %6, align 8, !dbg !4608
  %27 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4609
  %28 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %27, i32 0, i32 4, !dbg !4610
  store i8** %28, i8*** %3, align 8, !dbg !4611
  br label %143, !dbg !4611

29:                                               ; preds = %19
  %30 = load i8*, i8** %5, align 8, !dbg !4612
  %31 = call i32 @strcmp(i8* %30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !4614
  %32 = icmp ne i32 %31, 0, !dbg !4614
  br i1 %32, label %39, label %33, !dbg !4615

33:                                               ; preds = %29
  %34 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4616
  %35 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %34, i32 0, i32 5, !dbg !4618
  %36 = load %struct.residue_t*, %struct.residue_t** %35, align 8, !dbg !4618
  store %struct.residue_t* %36, %struct.residue_t** %6, align 8, !dbg !4619
  %37 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4620
  %38 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %37, i32 0, i32 5, !dbg !4621
  store i8** %38, i8*** %3, align 8, !dbg !4622
  br label %143, !dbg !4622

39:                                               ; preds = %29
  %40 = load i8*, i8** %5, align 8, !dbg !4623
  %41 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !4625
  %42 = icmp ne i32 %41, 0, !dbg !4625
  br i1 %42, label %52, label %43, !dbg !4626

43:                                               ; preds = %39
  %44 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4627
  %45 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i32 0, i32 5, !dbg !4629
  %46 = load %struct.residue_t*, %struct.residue_t** %45, align 8, !dbg !4629
  store %struct.residue_t* %46, %struct.residue_t** %6, align 8, !dbg !4630
  %47 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4631
  %48 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %47, i32 0, i32 9, !dbg !4632
  %49 = load %struct.strand_t*, %struct.strand_t** %48, align 8, !dbg !4632
  store %struct.strand_t* %49, %struct.strand_t** %7, align 8, !dbg !4633
  %50 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4634
  %51 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %50, i32 0, i32 0, !dbg !4635
  store i8** %51, i8*** %3, align 8, !dbg !4636
  br label %143, !dbg !4636

52:                                               ; preds = %39
  %53 = load i8*, i8** %5, align 8, !dbg !4637
  %54 = call i32 @strcmp(i8* %53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !4639
  %55 = icmp ne i32 %54, 0, !dbg !4639
  br i1 %55, label %139, label %56, !dbg !4640

56:                                               ; preds = %52
  %57 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4641
  %58 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %57, i32 0, i32 5, !dbg !4643
  %59 = load %struct.residue_t*, %struct.residue_t** %58, align 8, !dbg !4643
  store %struct.residue_t* %59, %struct.residue_t** %6, align 8, !dbg !4644
  %60 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4645
  %61 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %60, i32 0, i32 9, !dbg !4646
  %62 = load %struct.strand_t*, %struct.strand_t** %61, align 8, !dbg !4646
  store %struct.strand_t* %62, %struct.strand_t** %7, align 8, !dbg !4647
  %63 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4648
  %64 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %63, i32 0, i32 3, !dbg !4649
  %65 = load %struct.molecule_t*, %struct.molecule_t** %64, align 8, !dbg !4649
  store %struct.molecule_t* %65, %struct.molecule_t** %9, align 8, !dbg !4650
  %66 = load %struct.molecule_t*, %struct.molecule_t** %9, align 8, !dbg !4651
  call void @upd_molnumbers(%struct.molecule_t* %66), !dbg !4652
  store i32 0, i32* %11, align 4, !dbg !4653
  br label %67, !dbg !4655

67:                                               ; preds = %85, %56
  %68 = load i32, i32* %11, align 4, !dbg !4656
  %69 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4658
  %70 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %69, i32 0, i32 5, !dbg !4659
  %71 = load i32, i32* %70, align 8, !dbg !4659
  %72 = icmp slt i32 %68, %71, !dbg !4660
  br i1 %72, label %73, label %88, !dbg !4661

73:                                               ; preds = %67
  %74 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4662
  %75 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %74, i32 0, i32 7, !dbg !4664
  %76 = load %struct.residue_t**, %struct.residue_t*** %75, align 8, !dbg !4664
  %77 = load i32, i32* %11, align 4, !dbg !4665
  %78 = sext i32 %77 to i64, !dbg !4662
  %79 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %76, i64 %78, !dbg !4662
  %80 = load %struct.residue_t*, %struct.residue_t** %79, align 8, !dbg !4662
  %81 = load %struct.residue_t*, %struct.residue_t** %6, align 8, !dbg !4666
  %82 = icmp eq %struct.residue_t* %80, %81, !dbg !4667
  br i1 %82, label %83, label %84, !dbg !4668

83:                                               ; preds = %73
  br label %88, !dbg !4669

84:                                               ; preds = %73
  br label %85, !dbg !4666

85:                                               ; preds = %84
  %86 = load i32, i32* %11, align 4, !dbg !4670
  %87 = add nsw i32 %86, 1, !dbg !4670
  store i32 %87, i32* %11, align 4, !dbg !4670
  br label %67, !dbg !4671, !llvm.loop !4672

88:                                               ; preds = %83, %67
  store i32 0, i32* %10, align 4, !dbg !4674
  %89 = load %struct.molecule_t*, %struct.molecule_t** %9, align 8, !dbg !4676
  %90 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %89, i32 0, i32 2, !dbg !4677
  %91 = load %struct.strand_t*, %struct.strand_t** %90, align 8, !dbg !4677
  store %struct.strand_t* %91, %struct.strand_t** %8, align 8, !dbg !4678
  br label %92, !dbg !4679

92:                                               ; preds = %103, %88
  %93 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !4680
  %94 = icmp ne %struct.strand_t* %93, null, !dbg !4682
  br i1 %94, label %95, label %107, !dbg !4682

95:                                               ; preds = %92
  %96 = load i32, i32* %10, align 4, !dbg !4683
  %97 = add nsw i32 %96, 1, !dbg !4683
  store i32 %97, i32* %10, align 4, !dbg !4683
  %98 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !4685
  %99 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !4687
  %100 = icmp eq %struct.strand_t* %98, %99, !dbg !4688
  br i1 %100, label %101, label %102, !dbg !4689

101:                                              ; preds = %95
  br label %107, !dbg !4690

102:                                              ; preds = %95
  br label %103, !dbg !4691

103:                                              ; preds = %102
  %104 = load %struct.strand_t*, %struct.strand_t** %8, align 8, !dbg !4692
  %105 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %104, i32 0, i32 4, !dbg !4693
  %106 = load %struct.strand_t*, %struct.strand_t** %105, align 8, !dbg !4693
  store %struct.strand_t* %106, %struct.strand_t** %8, align 8, !dbg !4694
  br label %92, !dbg !4695, !llvm.loop !4696

107:                                              ; preds = %101, %92
  %108 = getelementptr inbounds [100 x i8], [100 x i8]* %12, i64 0, i64 0, !dbg !4698
  %109 = load i32, i32* %10, align 4, !dbg !4699
  %110 = load i32, i32* %11, align 4, !dbg !4700
  %111 = add nsw i32 %110, 1, !dbg !4701
  %112 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4702
  %113 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %112, i32 0, i32 0, !dbg !4703
  %114 = load i8*, i8** %113, align 8, !dbg !4703
  %115 = call i32 (i8*, i8*, ...) @sprintf(i8* %108, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i32 %109, i32 %111, i8* %114) #8, !dbg !4704
  %116 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4705
  %117 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %116, i32 0, i32 16, !dbg !4707
  %118 = load i8*, i8** %117, align 8, !dbg !4707
  %119 = icmp ne i8* %118, null, !dbg !4705
  br i1 %119, label %120, label %124, !dbg !4708

120:                                              ; preds = %107
  %121 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4709
  %122 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %121, i32 0, i32 16, !dbg !4710
  %123 = load i8*, i8** %122, align 8, !dbg !4710
  call void @free(i8* %123) #8, !dbg !4711
  br label %124, !dbg !4711

124:                                              ; preds = %120, %107
  %125 = getelementptr inbounds [100 x i8], [100 x i8]* %12, i64 0, i64 0, !dbg !4712
  %126 = call i64 @strlen(i8* %125) #9, !dbg !4713
  %127 = add i64 %126, 1, !dbg !4714
  %128 = mul i64 %127, 1, !dbg !4715
  %129 = call noalias i8* @malloc(i64 %128) #8, !dbg !4716
  %130 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4717
  %131 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %130, i32 0, i32 16, !dbg !4718
  store i8* %129, i8** %131, align 8, !dbg !4719
  %132 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4720
  %133 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %132, i32 0, i32 16, !dbg !4721
  %134 = load i8*, i8** %133, align 8, !dbg !4721
  %135 = getelementptr inbounds [100 x i8], [100 x i8]* %12, i64 0, i64 0, !dbg !4722
  %136 = call i8* @strcpy(i8* %134, i8* %135) #8, !dbg !4723
  %137 = load %struct.atom_t*, %struct.atom_t** %4, align 8, !dbg !4724
  %138 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %137, i32 0, i32 16, !dbg !4725
  store i8** %138, i8*** %3, align 8, !dbg !4726
  br label %143, !dbg !4726

139:                                              ; preds = %52
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4727
  %141 = load i8*, i8** %5, align 8, !dbg !4729
  %142 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %140, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52, i64 0, i64 0), i8* %141), !dbg !4730
  store i8** null, i8*** %3, align 8, !dbg !4731
  br label %143, !dbg !4731

143:                                              ; preds = %139, %124, %43, %33, %23, %16
  %144 = load i8**, i8*** %3, align 8, !dbg !4732
  ret i8** %144, !dbg !4732
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [3 x double]* @NAB_arp(%struct.atom_t* %0, i8* %1) #0 !dbg !4733 {
  %3 = alloca %struct.atom_t*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  store %struct.atom_t* %0, %struct.atom_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.atom_t** %3, metadata !4736, metadata !DIExpression()), !dbg !4737
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !4738, metadata !DIExpression()), !dbg !4739
  call void @llvm.dbg.declare(metadata i8** %5, metadata !4740, metadata !DIExpression()), !dbg !4741
  %6 = load %struct.atom_t*, %struct.atom_t** %3, align 8, !dbg !4742
  %7 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %6, i32 0, i32 17, !dbg !4743
  %8 = getelementptr inbounds [3 x double], [3 x double]* %7, i64 0, i64 0, !dbg !4742
  %9 = bitcast double* %8 to i8*, !dbg !4742
  store i8* %9, i8** %5, align 8, !dbg !4744
  %10 = load i8*, i8** %5, align 8, !dbg !4745
  %11 = bitcast i8* %10 to [3 x double]*, !dbg !4746
  ret [3 x double]* %11, !dbg !4747
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @newtransform(double %0, double %1, double %2, double %3, double %4, double %5) #0 !dbg !270 {
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca i8*, align 8
  %14 = alloca [4 x [4 x double]], align 16
  %15 = alloca [4 x [4 x double]], align 16
  %16 = alloca [4 x [4 x double]], align 16
  store double %0, double* %7, align 8
  call void @llvm.dbg.declare(metadata double* %7, metadata !4748, metadata !DIExpression()), !dbg !4749
  store double %1, double* %8, align 8
  call void @llvm.dbg.declare(metadata double* %8, metadata !4750, metadata !DIExpression()), !dbg !4751
  store double %2, double* %9, align 8
  call void @llvm.dbg.declare(metadata double* %9, metadata !4752, metadata !DIExpression()), !dbg !4753
  store double %3, double* %10, align 8
  call void @llvm.dbg.declare(metadata double* %10, metadata !4754, metadata !DIExpression()), !dbg !4755
  store double %4, double* %11, align 8
  call void @llvm.dbg.declare(metadata double* %11, metadata !4756, metadata !DIExpression()), !dbg !4757
  store double %5, double* %12, align 8
  call void @llvm.dbg.declare(metadata double* %12, metadata !4758, metadata !DIExpression()), !dbg !4759
  call void @llvm.dbg.declare(metadata i8** %13, metadata !4760, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %14, metadata !4762, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %15, metadata !4764, metadata !DIExpression()), !dbg !4765
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %16, metadata !4766, metadata !DIExpression()), !dbg !4767
  %17 = load double, double* %12, align 8, !dbg !4768
  %18 = fneg double %17, !dbg !4769
  store double %18, double* %12, align 8, !dbg !4770
  call void @mk_idmat([4 x double]* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @newtransform.mp, i64 0, i64 0)), !dbg !4771
  %19 = load double, double* %7, align 8, !dbg !4772
  store double %19, double* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @newtransform.mp, i64 0, i64 3, i64 0), align 16, !dbg !4773
  %20 = load double, double* %8, align 8, !dbg !4774
  store double %20, double* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @newtransform.mp, i64 0, i64 3, i64 1), align 8, !dbg !4775
  %21 = load double, double* %9, align 8, !dbg !4776
  store double %21, double* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @newtransform.mp, i64 0, i64 3, i64 2), align 16, !dbg !4777
  %22 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4778
  call void @mk_idmat([4 x double]* %22), !dbg !4779
  %23 = load double, double* %10, align 8, !dbg !4780
  %24 = fcmp une double %23, 0.000000e+00, !dbg !4782
  br i1 %24, label %25, label %53, !dbg !4783

25:                                               ; preds = %6
  %26 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %15, i64 0, i64 0, !dbg !4784
  call void @mk_idmat([4 x double]* %26), !dbg !4786
  %27 = load double, double* %10, align 8, !dbg !4787
  %28 = fmul double 0x3F91DF46A2529D39, %27, !dbg !4788
  %29 = call double @cos(double %28) #8, !dbg !4789
  %30 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 1, !dbg !4790
  %31 = getelementptr inbounds [4 x double], [4 x double]* %30, i64 0, i64 1, !dbg !4790
  store double %29, double* %31, align 8, !dbg !4791
  %32 = load double, double* %10, align 8, !dbg !4792
  %33 = fmul double 0x3F91DF46A2529D39, %32, !dbg !4793
  %34 = call double @sin(double %33) #8, !dbg !4794
  %35 = fneg double %34, !dbg !4795
  %36 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 1, !dbg !4796
  %37 = getelementptr inbounds [4 x double], [4 x double]* %36, i64 0, i64 2, !dbg !4796
  store double %35, double* %37, align 16, !dbg !4797
  %38 = load double, double* %10, align 8, !dbg !4798
  %39 = fmul double 0x3F91DF46A2529D39, %38, !dbg !4799
  %40 = call double @sin(double %39) #8, !dbg !4800
  %41 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 2, !dbg !4801
  %42 = getelementptr inbounds [4 x double], [4 x double]* %41, i64 0, i64 1, !dbg !4801
  store double %40, double* %42, align 8, !dbg !4802
  %43 = load double, double* %10, align 8, !dbg !4803
  %44 = fmul double 0x3F91DF46A2529D39, %43, !dbg !4804
  %45 = call double @cos(double %44) #8, !dbg !4805
  %46 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 2, !dbg !4806
  %47 = getelementptr inbounds [4 x double], [4 x double]* %46, i64 0, i64 2, !dbg !4806
  store double %45, double* %47, align 16, !dbg !4807
  %48 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4808
  %49 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %15, i64 0, i64 0, !dbg !4809
  %50 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4810
  call void @concat_mat([4 x double]* %48, [4 x double]* %49, [4 x double]* %50), !dbg !4811
  %51 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4812
  %52 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4813
  call void @copy_mat([4 x double]* %51, [4 x double]* %52), !dbg !4814
  br label %53, !dbg !4815

53:                                               ; preds = %25, %6
  %54 = load double, double* %11, align 8, !dbg !4816
  %55 = fcmp une double %54, 0.000000e+00, !dbg !4818
  br i1 %55, label %56, label %84, !dbg !4819

56:                                               ; preds = %53
  %57 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %15, i64 0, i64 0, !dbg !4820
  call void @mk_idmat([4 x double]* %57), !dbg !4822
  %58 = load double, double* %11, align 8, !dbg !4823
  %59 = fmul double 0x3F91DF46A2529D39, %58, !dbg !4824
  %60 = call double @cos(double %59) #8, !dbg !4825
  %61 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4826
  %62 = getelementptr inbounds [4 x double], [4 x double]* %61, i64 0, i64 0, !dbg !4826
  store double %60, double* %62, align 16, !dbg !4827
  %63 = load double, double* %11, align 8, !dbg !4828
  %64 = fmul double 0x3F91DF46A2529D39, %63, !dbg !4829
  %65 = call double @sin(double %64) #8, !dbg !4830
  %66 = fneg double %65, !dbg !4831
  %67 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4832
  %68 = getelementptr inbounds [4 x double], [4 x double]* %67, i64 0, i64 2, !dbg !4832
  store double %66, double* %68, align 16, !dbg !4833
  %69 = load double, double* %11, align 8, !dbg !4834
  %70 = fmul double 0x3F91DF46A2529D39, %69, !dbg !4835
  %71 = call double @sin(double %70) #8, !dbg !4836
  %72 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 2, !dbg !4837
  %73 = getelementptr inbounds [4 x double], [4 x double]* %72, i64 0, i64 0, !dbg !4837
  store double %71, double* %73, align 16, !dbg !4838
  %74 = load double, double* %11, align 8, !dbg !4839
  %75 = fmul double 0x3F91DF46A2529D39, %74, !dbg !4840
  %76 = call double @cos(double %75) #8, !dbg !4841
  %77 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 2, !dbg !4842
  %78 = getelementptr inbounds [4 x double], [4 x double]* %77, i64 0, i64 2, !dbg !4842
  store double %76, double* %78, align 16, !dbg !4843
  %79 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4844
  %80 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %15, i64 0, i64 0, !dbg !4845
  %81 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4846
  call void @concat_mat([4 x double]* %79, [4 x double]* %80, [4 x double]* %81), !dbg !4847
  %82 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4848
  %83 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4849
  call void @copy_mat([4 x double]* %82, [4 x double]* %83), !dbg !4850
  br label %84, !dbg !4851

84:                                               ; preds = %56, %53
  %85 = load double, double* %12, align 8, !dbg !4852
  %86 = fcmp une double %85, 0.000000e+00, !dbg !4854
  br i1 %86, label %87, label %115, !dbg !4855

87:                                               ; preds = %84
  %88 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %15, i64 0, i64 0, !dbg !4856
  call void @mk_idmat([4 x double]* %88), !dbg !4858
  %89 = load double, double* %12, align 8, !dbg !4859
  %90 = fmul double 0x3F91DF46A2529D39, %89, !dbg !4860
  %91 = call double @cos(double %90) #8, !dbg !4861
  %92 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4862
  %93 = getelementptr inbounds [4 x double], [4 x double]* %92, i64 0, i64 0, !dbg !4862
  store double %91, double* %93, align 16, !dbg !4863
  %94 = load double, double* %12, align 8, !dbg !4864
  %95 = fmul double 0x3F91DF46A2529D39, %94, !dbg !4865
  %96 = call double @sin(double %95) #8, !dbg !4866
  %97 = fneg double %96, !dbg !4867
  %98 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4868
  %99 = getelementptr inbounds [4 x double], [4 x double]* %98, i64 0, i64 1, !dbg !4868
  store double %97, double* %99, align 8, !dbg !4869
  %100 = load double, double* %12, align 8, !dbg !4870
  %101 = fmul double 0x3F91DF46A2529D39, %100, !dbg !4871
  %102 = call double @sin(double %101) #8, !dbg !4872
  %103 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 1, !dbg !4873
  %104 = getelementptr inbounds [4 x double], [4 x double]* %103, i64 0, i64 0, !dbg !4873
  store double %102, double* %104, align 16, !dbg !4874
  %105 = load double, double* %12, align 8, !dbg !4875
  %106 = fmul double 0x3F91DF46A2529D39, %105, !dbg !4876
  %107 = call double @cos(double %106) #8, !dbg !4877
  %108 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 1, !dbg !4878
  %109 = getelementptr inbounds [4 x double], [4 x double]* %108, i64 0, i64 1, !dbg !4878
  store double %107, double* %109, align 8, !dbg !4879
  %110 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4880
  %111 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %15, i64 0, i64 0, !dbg !4881
  %112 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4882
  call void @concat_mat([4 x double]* %110, [4 x double]* %111, [4 x double]* %112), !dbg !4883
  %113 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4884
  %114 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4885
  call void @copy_mat([4 x double]* %113, [4 x double]* %114), !dbg !4886
  br label %115, !dbg !4887

115:                                              ; preds = %87, %84
  %116 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %14, i64 0, i64 0, !dbg !4888
  %117 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4889
  call void @concat_mat([4 x double]* %116, [4 x double]* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @newtransform.mp, i64 0, i64 0), [4 x double]* %117), !dbg !4890
  %118 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %16, i64 0, i64 0, !dbg !4891
  call void @copy_mat([4 x double]* %118, [4 x double]* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @newtransform.mp, i64 0, i64 0)), !dbg !4892
  store i8* bitcast ([4 x [4 x double]]* @newtransform.mp to i8*), i8** %13, align 8, !dbg !4893
  %119 = load i8*, i8** %13, align 8, !dbg !4894
  %120 = bitcast i8* %119 to [4 x [4 x double]]*, !dbg !4895
  ret [4 x [4 x double]]* %120, !dbg !4896
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mk_idmat([4 x double]* %0) #0 !dbg !4897 {
  %2 = alloca [4 x double]*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store [4 x double]* %0, [4 x double]** %2, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %2, metadata !4900, metadata !DIExpression()), !dbg !4901
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4904, metadata !DIExpression()), !dbg !4905
  store i32 0, i32* %3, align 4, !dbg !4906
  br label %5, !dbg !4908

5:                                                ; preds = %29, %1
  %6 = load i32, i32* %3, align 4, !dbg !4909
  %7 = icmp slt i32 %6, 4, !dbg !4911
  br i1 %7, label %8, label %32, !dbg !4912

8:                                                ; preds = %5
  store i32 0, i32* %4, align 4, !dbg !4913
  br label %9, !dbg !4916

9:                                                ; preds = %25, %8
  %10 = load i32, i32* %4, align 4, !dbg !4917
  %11 = icmp slt i32 %10, 4, !dbg !4919
  br i1 %11, label %12, label %28, !dbg !4920

12:                                               ; preds = %9
  %13 = load i32, i32* %3, align 4, !dbg !4921
  %14 = load i32, i32* %4, align 4, !dbg !4923
  %15 = icmp eq i32 %13, %14, !dbg !4924
  %16 = zext i1 %15 to i64, !dbg !4925
  %17 = select i1 %15, double 1.000000e+00, double 0.000000e+00, !dbg !4925
  %18 = load [4 x double]*, [4 x double]** %2, align 8, !dbg !4926
  %19 = load i32, i32* %3, align 4, !dbg !4927
  %20 = sext i32 %19 to i64, !dbg !4926
  %21 = getelementptr inbounds [4 x double], [4 x double]* %18, i64 %20, !dbg !4926
  %22 = load i32, i32* %4, align 4, !dbg !4928
  %23 = sext i32 %22 to i64, !dbg !4926
  %24 = getelementptr inbounds [4 x double], [4 x double]* %21, i64 0, i64 %23, !dbg !4926
  store double %17, double* %24, align 8, !dbg !4929
  br label %25, !dbg !4930

25:                                               ; preds = %12
  %26 = load i32, i32* %4, align 4, !dbg !4931
  %27 = add nsw i32 %26, 1, !dbg !4931
  store i32 %27, i32* %4, align 4, !dbg !4931
  br label %9, !dbg !4932, !llvm.loop !4933

28:                                               ; preds = %9
  br label %29, !dbg !4935

29:                                               ; preds = %28
  %30 = load i32, i32* %3, align 4, !dbg !4936
  %31 = add nsw i32 %30, 1, !dbg !4936
  store i32 %31, i32* %3, align 4, !dbg !4936
  br label %5, !dbg !4937, !llvm.loop !4938

32:                                               ; preds = %5
  ret void, !dbg !4940
}

; Function Attrs: nounwind
declare dso_local double @cos(double) #2

; Function Attrs: nounwind
declare dso_local double @sin(double) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @concat_mat([4 x double]* %0, [4 x double]* %1, [4 x double]* %2) #0 !dbg !4941 {
  %4 = alloca [4 x double]*, align 8
  %5 = alloca [4 x double]*, align 8
  %6 = alloca [4 x double]*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store [4 x double]* %0, [4 x double]** %4, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %4, metadata !4944, metadata !DIExpression()), !dbg !4945
  store [4 x double]* %1, [4 x double]** %5, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %5, metadata !4946, metadata !DIExpression()), !dbg !4947
  store [4 x double]* %2, [4 x double]** %6, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %6, metadata !4948, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4950, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.declare(metadata i32* %8, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i32 0, i32* %7, align 4, !dbg !4956
  br label %10, !dbg !4958

10:                                               ; preds = %63, %3
  %11 = load i32, i32* %7, align 4, !dbg !4959
  %12 = icmp slt i32 %11, 4, !dbg !4961
  br i1 %12, label %13, label %66, !dbg !4962

13:                                               ; preds = %10
  store i32 0, i32* %8, align 4, !dbg !4963
  br label %14, !dbg !4966

14:                                               ; preds = %59, %13
  %15 = load i32, i32* %8, align 4, !dbg !4967
  %16 = icmp slt i32 %15, 4, !dbg !4969
  br i1 %16, label %17, label %62, !dbg !4970

17:                                               ; preds = %14
  %18 = load [4 x double]*, [4 x double]** %6, align 8, !dbg !4971
  %19 = load i32, i32* %7, align 4, !dbg !4973
  %20 = sext i32 %19 to i64, !dbg !4971
  %21 = getelementptr inbounds [4 x double], [4 x double]* %18, i64 %20, !dbg !4971
  %22 = load i32, i32* %8, align 4, !dbg !4974
  %23 = sext i32 %22 to i64, !dbg !4971
  %24 = getelementptr inbounds [4 x double], [4 x double]* %21, i64 0, i64 %23, !dbg !4971
  store double 0.000000e+00, double* %24, align 8, !dbg !4975
  store i32 0, i32* %9, align 4, !dbg !4976
  br label %25, !dbg !4978

25:                                               ; preds = %55, %17
  %26 = load i32, i32* %9, align 4, !dbg !4979
  %27 = icmp slt i32 %26, 4, !dbg !4981
  br i1 %27, label %28, label %58, !dbg !4982

28:                                               ; preds = %25
  %29 = load [4 x double]*, [4 x double]** %4, align 8, !dbg !4983
  %30 = load i32, i32* %7, align 4, !dbg !4985
  %31 = sext i32 %30 to i64, !dbg !4983
  %32 = getelementptr inbounds [4 x double], [4 x double]* %29, i64 %31, !dbg !4983
  %33 = load i32, i32* %9, align 4, !dbg !4986
  %34 = sext i32 %33 to i64, !dbg !4983
  %35 = getelementptr inbounds [4 x double], [4 x double]* %32, i64 0, i64 %34, !dbg !4983
  %36 = load double, double* %35, align 8, !dbg !4983
  %37 = load [4 x double]*, [4 x double]** %5, align 8, !dbg !4987
  %38 = load i32, i32* %9, align 4, !dbg !4988
  %39 = sext i32 %38 to i64, !dbg !4987
  %40 = getelementptr inbounds [4 x double], [4 x double]* %37, i64 %39, !dbg !4987
  %41 = load i32, i32* %8, align 4, !dbg !4989
  %42 = sext i32 %41 to i64, !dbg !4987
  %43 = getelementptr inbounds [4 x double], [4 x double]* %40, i64 0, i64 %42, !dbg !4987
  %44 = load double, double* %43, align 8, !dbg !4987
  %45 = fmul double %36, %44, !dbg !4990
  %46 = load [4 x double]*, [4 x double]** %6, align 8, !dbg !4991
  %47 = load i32, i32* %7, align 4, !dbg !4992
  %48 = sext i32 %47 to i64, !dbg !4991
  %49 = getelementptr inbounds [4 x double], [4 x double]* %46, i64 %48, !dbg !4991
  %50 = load i32, i32* %8, align 4, !dbg !4993
  %51 = sext i32 %50 to i64, !dbg !4991
  %52 = getelementptr inbounds [4 x double], [4 x double]* %49, i64 0, i64 %51, !dbg !4991
  %53 = load double, double* %52, align 8, !dbg !4994
  %54 = fadd double %53, %45, !dbg !4994
  store double %54, double* %52, align 8, !dbg !4994
  br label %55, !dbg !4995

55:                                               ; preds = %28
  %56 = load i32, i32* %9, align 4, !dbg !4996
  %57 = add nsw i32 %56, 1, !dbg !4996
  store i32 %57, i32* %9, align 4, !dbg !4996
  br label %25, !dbg !4997, !llvm.loop !4998

58:                                               ; preds = %25
  br label %59, !dbg !5000

59:                                               ; preds = %58
  %60 = load i32, i32* %8, align 4, !dbg !5001
  %61 = add nsw i32 %60, 1, !dbg !5001
  store i32 %61, i32* %8, align 4, !dbg !5001
  br label %14, !dbg !5002, !llvm.loop !5003

62:                                               ; preds = %14
  br label %63, !dbg !5005

63:                                               ; preds = %62
  %64 = load i32, i32* %7, align 4, !dbg !5006
  %65 = add nsw i32 %64, 1, !dbg !5006
  store i32 %65, i32* %7, align 4, !dbg !5006
  br label %10, !dbg !5007, !llvm.loop !5008

66:                                               ; preds = %10
  ret void, !dbg !5010
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_mat([4 x double]* %0, [4 x double]* %1) #0 !dbg !5011 {
  %3 = alloca [4 x double]*, align 8
  %4 = alloca [4 x double]*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store [4 x double]* %0, [4 x double]** %3, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %3, metadata !5014, metadata !DIExpression()), !dbg !5015
  store [4 x double]* %1, [4 x double]** %4, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %4, metadata !5016, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5018, metadata !DIExpression()), !dbg !5019
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5020, metadata !DIExpression()), !dbg !5021
  store i32 0, i32* %5, align 4, !dbg !5022
  br label %7, !dbg !5024

7:                                                ; preds = %34, %2
  %8 = load i32, i32* %5, align 4, !dbg !5025
  %9 = icmp slt i32 %8, 4, !dbg !5027
  br i1 %9, label %10, label %37, !dbg !5028

10:                                               ; preds = %7
  store i32 0, i32* %6, align 4, !dbg !5029
  br label %11, !dbg !5032

11:                                               ; preds = %30, %10
  %12 = load i32, i32* %6, align 4, !dbg !5033
  %13 = icmp slt i32 %12, 4, !dbg !5035
  br i1 %13, label %14, label %33, !dbg !5036

14:                                               ; preds = %11
  %15 = load [4 x double]*, [4 x double]** %3, align 8, !dbg !5037
  %16 = load i32, i32* %5, align 4, !dbg !5038
  %17 = sext i32 %16 to i64, !dbg !5037
  %18 = getelementptr inbounds [4 x double], [4 x double]* %15, i64 %17, !dbg !5037
  %19 = load i32, i32* %6, align 4, !dbg !5039
  %20 = sext i32 %19 to i64, !dbg !5037
  %21 = getelementptr inbounds [4 x double], [4 x double]* %18, i64 0, i64 %20, !dbg !5037
  %22 = load double, double* %21, align 8, !dbg !5037
  %23 = load [4 x double]*, [4 x double]** %4, align 8, !dbg !5040
  %24 = load i32, i32* %5, align 4, !dbg !5041
  %25 = sext i32 %24 to i64, !dbg !5040
  %26 = getelementptr inbounds [4 x double], [4 x double]* %23, i64 %25, !dbg !5040
  %27 = load i32, i32* %6, align 4, !dbg !5042
  %28 = sext i32 %27 to i64, !dbg !5040
  %29 = getelementptr inbounds [4 x double], [4 x double]* %26, i64 0, i64 %28, !dbg !5040
  store double %22, double* %29, align 8, !dbg !5043
  br label %30, !dbg !5040

30:                                               ; preds = %14
  %31 = load i32, i32* %6, align 4, !dbg !5044
  %32 = add nsw i32 %31, 1, !dbg !5044
  store i32 %32, i32* %6, align 4, !dbg !5044
  br label %11, !dbg !5045, !llvm.loop !5046

33:                                               ; preds = %11
  br label %34, !dbg !5048

34:                                               ; preds = %33
  %35 = load i32, i32* %5, align 4, !dbg !5049
  %36 = add nsw i32 %35, 1, !dbg !5049
  store i32 %36, i32* %5, align 4, !dbg !5049
  br label %7, !dbg !5050, !llvm.loop !5051

37:                                               ; preds = %7
  ret void, !dbg !5053
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.residue_t* @transformres([4 x double]* %0, %struct.residue_t* %1, i8* %2) #0 !dbg !5054 {
  %4 = alloca [4 x double]*, align 8
  %5 = alloca %struct.residue_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.residue_t*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.atom_t*, align 8
  %11 = alloca [3 x double], align 16
  %12 = alloca [3 x double], align 16
  store [4 x double]* %0, [4 x double]** %4, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %4, metadata !5057, metadata !DIExpression()), !dbg !5058
  store %struct.residue_t* %1, %struct.residue_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %5, metadata !5059, metadata !DIExpression()), !dbg !5060
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5061, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.declare(metadata %struct.residue_t** %7, metadata !5063, metadata !DIExpression()), !dbg !5064
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5065, metadata !DIExpression()), !dbg !5066
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5067, metadata !DIExpression()), !dbg !5068
  call void @llvm.dbg.declare(metadata %struct.atom_t** %10, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata [3 x double]* %11, metadata !5071, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.declare(metadata [3 x double]* %12, metadata !5073, metadata !DIExpression()), !dbg !5074
  %13 = load %struct.residue_t*, %struct.residue_t** %5, align 8, !dbg !5075
  %14 = call %struct.residue_t* @copyresidue(%struct.residue_t* %13), !dbg !5076
  store %struct.residue_t* %14, %struct.residue_t** %7, align 8, !dbg !5077
  store i32 0, i32* %8, align 4, !dbg !5078
  br label %15, !dbg !5080

15:                                               ; preds = %65, %3
  %16 = load i32, i32* %8, align 4, !dbg !5081
  %17 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !5083
  %18 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %17, i32 0, i32 15, !dbg !5084
  %19 = load i32, i32* %18, align 8, !dbg !5084
  %20 = icmp slt i32 %16, %19, !dbg !5085
  br i1 %20, label %21, label %68, !dbg !5086

21:                                               ; preds = %15
  %22 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !5087
  %23 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %22, i32 0, i32 17, !dbg !5089
  %24 = load %struct.atom_t*, %struct.atom_t** %23, align 8, !dbg !5089
  %25 = load i32, i32* %8, align 4, !dbg !5090
  %26 = sext i32 %25 to i64, !dbg !5087
  %27 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %24, i64 %26, !dbg !5087
  store %struct.atom_t* %27, %struct.atom_t** %10, align 8, !dbg !5091
  store i32 0, i32* %9, align 4, !dbg !5092
  br label %28, !dbg !5094

28:                                               ; preds = %41, %21
  %29 = load i32, i32* %9, align 4, !dbg !5095
  %30 = icmp slt i32 %29, 3, !dbg !5097
  br i1 %30, label %31, label %44, !dbg !5098

31:                                               ; preds = %28
  %32 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !5099
  %33 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %32, i32 0, i32 17, !dbg !5100
  %34 = load i32, i32* %9, align 4, !dbg !5101
  %35 = sext i32 %34 to i64, !dbg !5099
  %36 = getelementptr inbounds [3 x double], [3 x double]* %33, i64 0, i64 %35, !dbg !5099
  %37 = load double, double* %36, align 8, !dbg !5099
  %38 = load i32, i32* %9, align 4, !dbg !5102
  %39 = sext i32 %38 to i64, !dbg !5103
  %40 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 %39, !dbg !5103
  store double %37, double* %40, align 8, !dbg !5104
  br label %41, !dbg !5103

41:                                               ; preds = %31
  %42 = load i32, i32* %9, align 4, !dbg !5105
  %43 = add nsw i32 %42, 1, !dbg !5105
  store i32 %43, i32* %9, align 4, !dbg !5105
  br label %28, !dbg !5106, !llvm.loop !5107

44:                                               ; preds = %28
  %45 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !5109
  %46 = load [4 x double]*, [4 x double]** %4, align 8, !dbg !5110
  %47 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 0, !dbg !5111
  call void @xfm_xyz(double* %45, [4 x double]* %46, double* %47), !dbg !5112
  store i32 0, i32* %9, align 4, !dbg !5113
  br label %48, !dbg !5115

48:                                               ; preds = %61, %44
  %49 = load i32, i32* %9, align 4, !dbg !5116
  %50 = icmp slt i32 %49, 3, !dbg !5118
  br i1 %50, label %51, label %64, !dbg !5119

51:                                               ; preds = %48
  %52 = load i32, i32* %9, align 4, !dbg !5120
  %53 = sext i32 %52 to i64, !dbg !5121
  %54 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 %53, !dbg !5121
  %55 = load double, double* %54, align 8, !dbg !5121
  %56 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !5122
  %57 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %56, i32 0, i32 17, !dbg !5123
  %58 = load i32, i32* %9, align 4, !dbg !5124
  %59 = sext i32 %58 to i64, !dbg !5122
  %60 = getelementptr inbounds [3 x double], [3 x double]* %57, i64 0, i64 %59, !dbg !5122
  store double %55, double* %60, align 8, !dbg !5125
  br label %61, !dbg !5122

61:                                               ; preds = %51
  %62 = load i32, i32* %9, align 4, !dbg !5126
  %63 = add nsw i32 %62, 1, !dbg !5126
  store i32 %63, i32* %9, align 4, !dbg !5126
  br label %48, !dbg !5127, !llvm.loop !5128

64:                                               ; preds = %48
  br label %65, !dbg !5130

65:                                               ; preds = %64
  %66 = load i32, i32* %8, align 4, !dbg !5131
  %67 = add nsw i32 %66, 1, !dbg !5131
  store i32 %67, i32* %8, align 4, !dbg !5131
  br label %15, !dbg !5132, !llvm.loop !5133

68:                                               ; preds = %15
  %69 = load %struct.residue_t*, %struct.residue_t** %7, align 8, !dbg !5135
  ret %struct.residue_t* %69, !dbg !5136
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xfm_xyz(double* %0, [4 x double]* %1, double* %2) #0 !dbg !5137 {
  %4 = alloca double*, align 8
  %5 = alloca [4 x double]*, align 8
  %6 = alloca double*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [4 x double], align 16
  %10 = alloca [4 x double], align 16
  store double* %0, double** %4, align 8
  call void @llvm.dbg.declare(metadata double** %4, metadata !5140, metadata !DIExpression()), !dbg !5141
  store [4 x double]* %1, [4 x double]** %5, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %5, metadata !5142, metadata !DIExpression()), !dbg !5143
  store double* %2, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !5144, metadata !DIExpression()), !dbg !5145
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5146, metadata !DIExpression()), !dbg !5147
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5148, metadata !DIExpression()), !dbg !5149
  call void @llvm.dbg.declare(metadata [4 x double]* %9, metadata !5150, metadata !DIExpression()), !dbg !5151
  call void @llvm.dbg.declare(metadata [4 x double]* %10, metadata !5152, metadata !DIExpression()), !dbg !5153
  store i32 0, i32* %7, align 4, !dbg !5154
  br label %11, !dbg !5156

11:                                               ; preds = %23, %3
  %12 = load i32, i32* %7, align 4, !dbg !5157
  %13 = icmp slt i32 %12, 3, !dbg !5159
  br i1 %13, label %14, label %26, !dbg !5160

14:                                               ; preds = %11
  %15 = load double*, double** %4, align 8, !dbg !5161
  %16 = load i32, i32* %7, align 4, !dbg !5162
  %17 = sext i32 %16 to i64, !dbg !5161
  %18 = getelementptr inbounds double, double* %15, i64 %17, !dbg !5161
  %19 = load double, double* %18, align 8, !dbg !5161
  %20 = load i32, i32* %7, align 4, !dbg !5163
  %21 = sext i32 %20 to i64, !dbg !5164
  %22 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 %21, !dbg !5164
  store double %19, double* %22, align 8, !dbg !5165
  br label %23, !dbg !5164

23:                                               ; preds = %14
  %24 = load i32, i32* %7, align 4, !dbg !5166
  %25 = add nsw i32 %24, 1, !dbg !5166
  store i32 %25, i32* %7, align 4, !dbg !5166
  br label %11, !dbg !5167, !llvm.loop !5168

26:                                               ; preds = %11
  %27 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 3, !dbg !5170
  store double 1.000000e+00, double* %27, align 8, !dbg !5171
  store i32 0, i32* %7, align 4, !dbg !5172
  br label %28, !dbg !5174

28:                                               ; preds = %61, %26
  %29 = load i32, i32* %7, align 4, !dbg !5175
  %30 = icmp slt i32 %29, 4, !dbg !5177
  br i1 %30, label %31, label %64, !dbg !5178

31:                                               ; preds = %28
  %32 = load i32, i32* %7, align 4, !dbg !5179
  %33 = sext i32 %32 to i64, !dbg !5181
  %34 = getelementptr inbounds [4 x double], [4 x double]* %10, i64 0, i64 %33, !dbg !5181
  store double 0.000000e+00, double* %34, align 8, !dbg !5182
  store i32 0, i32* %8, align 4, !dbg !5183
  br label %35, !dbg !5185

35:                                               ; preds = %57, %31
  %36 = load i32, i32* %8, align 4, !dbg !5186
  %37 = icmp slt i32 %36, 4, !dbg !5188
  br i1 %37, label %38, label %60, !dbg !5189

38:                                               ; preds = %35
  %39 = load i32, i32* %8, align 4, !dbg !5190
  %40 = sext i32 %39 to i64, !dbg !5192
  %41 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 %40, !dbg !5192
  %42 = load double, double* %41, align 8, !dbg !5192
  %43 = load [4 x double]*, [4 x double]** %5, align 8, !dbg !5193
  %44 = load i32, i32* %8, align 4, !dbg !5194
  %45 = sext i32 %44 to i64, !dbg !5193
  %46 = getelementptr inbounds [4 x double], [4 x double]* %43, i64 %45, !dbg !5193
  %47 = load i32, i32* %7, align 4, !dbg !5195
  %48 = sext i32 %47 to i64, !dbg !5193
  %49 = getelementptr inbounds [4 x double], [4 x double]* %46, i64 0, i64 %48, !dbg !5193
  %50 = load double, double* %49, align 8, !dbg !5193
  %51 = fmul double %42, %50, !dbg !5196
  %52 = load i32, i32* %7, align 4, !dbg !5197
  %53 = sext i32 %52 to i64, !dbg !5198
  %54 = getelementptr inbounds [4 x double], [4 x double]* %10, i64 0, i64 %53, !dbg !5198
  %55 = load double, double* %54, align 8, !dbg !5199
  %56 = fadd double %55, %51, !dbg !5199
  store double %56, double* %54, align 8, !dbg !5199
  br label %57, !dbg !5200

57:                                               ; preds = %38
  %58 = load i32, i32* %8, align 4, !dbg !5201
  %59 = add nsw i32 %58, 1, !dbg !5201
  store i32 %59, i32* %8, align 4, !dbg !5201
  br label %35, !dbg !5202, !llvm.loop !5203

60:                                               ; preds = %35
  br label %61, !dbg !5205

61:                                               ; preds = %60
  %62 = load i32, i32* %7, align 4, !dbg !5206
  %63 = add nsw i32 %62, 1, !dbg !5206
  store i32 %63, i32* %7, align 4, !dbg !5206
  br label %28, !dbg !5207, !llvm.loop !5208

64:                                               ; preds = %28
  store i32 0, i32* %7, align 4, !dbg !5210
  br label %65, !dbg !5212

65:                                               ; preds = %77, %64
  %66 = load i32, i32* %7, align 4, !dbg !5213
  %67 = icmp slt i32 %66, 3, !dbg !5215
  br i1 %67, label %68, label %80, !dbg !5216

68:                                               ; preds = %65
  %69 = load i32, i32* %7, align 4, !dbg !5217
  %70 = sext i32 %69 to i64, !dbg !5218
  %71 = getelementptr inbounds [4 x double], [4 x double]* %10, i64 0, i64 %70, !dbg !5218
  %72 = load double, double* %71, align 8, !dbg !5218
  %73 = load double*, double** %6, align 8, !dbg !5219
  %74 = load i32, i32* %7, align 4, !dbg !5220
  %75 = sext i32 %74 to i64, !dbg !5219
  %76 = getelementptr inbounds double, double* %73, i64 %75, !dbg !5219
  store double %72, double* %76, align 8, !dbg !5221
  br label %77, !dbg !5219

77:                                               ; preds = %68
  %78 = load i32, i32* %7, align 4, !dbg !5222
  %79 = add nsw i32 %78, 1, !dbg !5222
  store i32 %79, i32* %7, align 4, !dbg !5222
  br label %65, !dbg !5223, !llvm.loop !5224

80:                                               ; preds = %65
  ret void, !dbg !5226
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @transformmol([4 x double]* %0, %struct.molecule_t* %1, i8* %2) #0 !dbg !5227 {
  %4 = alloca [4 x double]*, align 8
  %5 = alloca %struct.molecule_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca %struct.strand_t*, align 8
  %8 = alloca %struct.residue_t*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.atom_t*, align 8
  %14 = alloca [3 x double], align 16
  %15 = alloca [3 x double], align 16
  store [4 x double]* %0, [4 x double]** %4, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %4, metadata !5230, metadata !DIExpression()), !dbg !5231
  store %struct.molecule_t* %1, %struct.molecule_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %5, metadata !5232, metadata !DIExpression()), !dbg !5233
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5234, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.declare(metadata %struct.strand_t** %7, metadata !5236, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.declare(metadata %struct.residue_t** %8, metadata !5238, metadata !DIExpression()), !dbg !5239
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5240, metadata !DIExpression()), !dbg !5241
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5242, metadata !DIExpression()), !dbg !5243
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5244, metadata !DIExpression()), !dbg !5245
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5246, metadata !DIExpression()), !dbg !5247
  call void @llvm.dbg.declare(metadata %struct.atom_t** %13, metadata !5248, metadata !DIExpression()), !dbg !5249
  call void @llvm.dbg.declare(metadata [3 x double]* %14, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata [3 x double]* %15, metadata !5252, metadata !DIExpression()), !dbg !5253
  %16 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !5254
  %17 = load i8*, i8** %6, align 8, !dbg !5255
  %18 = call i32 @select_atoms(%struct.molecule_t* %16, i8* %17), !dbg !5256
  %19 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !5257
  %20 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %19, i32 0, i32 2, !dbg !5259
  %21 = load %struct.strand_t*, %struct.strand_t** %20, align 8, !dbg !5259
  store %struct.strand_t* %21, %struct.strand_t** %7, align 8, !dbg !5260
  store i32 0, i32* %12, align 4, !dbg !5261
  br label %22, !dbg !5262

22:                                               ; preds = %107, %3
  %23 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !5263
  %24 = icmp ne %struct.strand_t* %23, null, !dbg !5265
  br i1 %24, label %25, label %111, !dbg !5265

25:                                               ; preds = %22
  store i32 0, i32* %9, align 4, !dbg !5266
  br label %26, !dbg !5269

26:                                               ; preds = %103, %25
  %27 = load i32, i32* %9, align 4, !dbg !5270
  %28 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !5272
  %29 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %28, i32 0, i32 5, !dbg !5273
  %30 = load i32, i32* %29, align 8, !dbg !5273
  %31 = icmp slt i32 %27, %30, !dbg !5274
  br i1 %31, label %32, label %106, !dbg !5275

32:                                               ; preds = %26
  %33 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !5276
  %34 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %33, i32 0, i32 7, !dbg !5278
  %35 = load %struct.residue_t**, %struct.residue_t*** %34, align 8, !dbg !5278
  %36 = load i32, i32* %9, align 4, !dbg !5279
  %37 = sext i32 %36 to i64, !dbg !5276
  %38 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %35, i64 %37, !dbg !5276
  %39 = load %struct.residue_t*, %struct.residue_t** %38, align 8, !dbg !5276
  store %struct.residue_t* %39, %struct.residue_t** %8, align 8, !dbg !5280
  store i32 0, i32* %10, align 4, !dbg !5281
  br label %40, !dbg !5283

40:                                               ; preds = %99, %32
  %41 = load i32, i32* %10, align 4, !dbg !5284
  %42 = load %struct.residue_t*, %struct.residue_t** %8, align 8, !dbg !5286
  %43 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %42, i32 0, i32 15, !dbg !5287
  %44 = load i32, i32* %43, align 8, !dbg !5287
  %45 = icmp slt i32 %41, %44, !dbg !5288
  br i1 %45, label %46, label %102, !dbg !5289

46:                                               ; preds = %40
  %47 = load %struct.residue_t*, %struct.residue_t** %8, align 8, !dbg !5290
  %48 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %47, i32 0, i32 17, !dbg !5292
  %49 = load %struct.atom_t*, %struct.atom_t** %48, align 8, !dbg !5292
  %50 = load i32, i32* %10, align 4, !dbg !5293
  %51 = sext i32 %50 to i64, !dbg !5290
  %52 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %49, i64 %51, !dbg !5290
  store %struct.atom_t* %52, %struct.atom_t** %13, align 8, !dbg !5294
  %53 = load %struct.atom_t*, %struct.atom_t** %13, align 8, !dbg !5295
  %54 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %53, i32 0, i32 2, !dbg !5297
  %55 = load i32, i32* %54, align 8, !dbg !5297
  %56 = and i32 %55, 1, !dbg !5298
  %57 = icmp ne i32 %56, 0, !dbg !5298
  br i1 %57, label %58, label %98, !dbg !5299

58:                                               ; preds = %46
  %59 = load i32, i32* %12, align 4, !dbg !5300
  %60 = add nsw i32 %59, 1, !dbg !5300
  store i32 %60, i32* %12, align 4, !dbg !5300
  store i32 0, i32* %11, align 4, !dbg !5302
  br label %61, !dbg !5304

61:                                               ; preds = %74, %58
  %62 = load i32, i32* %11, align 4, !dbg !5305
  %63 = icmp slt i32 %62, 3, !dbg !5307
  br i1 %63, label %64, label %77, !dbg !5308

64:                                               ; preds = %61
  %65 = load %struct.atom_t*, %struct.atom_t** %13, align 8, !dbg !5309
  %66 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %65, i32 0, i32 17, !dbg !5310
  %67 = load i32, i32* %11, align 4, !dbg !5311
  %68 = sext i32 %67 to i64, !dbg !5309
  %69 = getelementptr inbounds [3 x double], [3 x double]* %66, i64 0, i64 %68, !dbg !5309
  %70 = load double, double* %69, align 8, !dbg !5309
  %71 = load i32, i32* %11, align 4, !dbg !5312
  %72 = sext i32 %71 to i64, !dbg !5313
  %73 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 %72, !dbg !5313
  store double %70, double* %73, align 8, !dbg !5314
  br label %74, !dbg !5313

74:                                               ; preds = %64
  %75 = load i32, i32* %11, align 4, !dbg !5315
  %76 = add nsw i32 %75, 1, !dbg !5315
  store i32 %76, i32* %11, align 4, !dbg !5315
  br label %61, !dbg !5316, !llvm.loop !5317

77:                                               ; preds = %61
  %78 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0, !dbg !5319
  %79 = load [4 x double]*, [4 x double]** %4, align 8, !dbg !5320
  %80 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 0, !dbg !5321
  call void @xfm_xyz(double* %78, [4 x double]* %79, double* %80), !dbg !5322
  store i32 0, i32* %11, align 4, !dbg !5323
  br label %81, !dbg !5325

81:                                               ; preds = %94, %77
  %82 = load i32, i32* %11, align 4, !dbg !5326
  %83 = icmp slt i32 %82, 3, !dbg !5328
  br i1 %83, label %84, label %97, !dbg !5329

84:                                               ; preds = %81
  %85 = load i32, i32* %11, align 4, !dbg !5330
  %86 = sext i32 %85 to i64, !dbg !5331
  %87 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 %86, !dbg !5331
  %88 = load double, double* %87, align 8, !dbg !5331
  %89 = load %struct.atom_t*, %struct.atom_t** %13, align 8, !dbg !5332
  %90 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %89, i32 0, i32 17, !dbg !5333
  %91 = load i32, i32* %11, align 4, !dbg !5334
  %92 = sext i32 %91 to i64, !dbg !5332
  %93 = getelementptr inbounds [3 x double], [3 x double]* %90, i64 0, i64 %92, !dbg !5332
  store double %88, double* %93, align 8, !dbg !5335
  br label %94, !dbg !5332

94:                                               ; preds = %84
  %95 = load i32, i32* %11, align 4, !dbg !5336
  %96 = add nsw i32 %95, 1, !dbg !5336
  store i32 %96, i32* %11, align 4, !dbg !5336
  br label %81, !dbg !5337, !llvm.loop !5338

97:                                               ; preds = %81
  br label %98, !dbg !5340

98:                                               ; preds = %97, %46
  br label %99, !dbg !5341

99:                                               ; preds = %98
  %100 = load i32, i32* %10, align 4, !dbg !5342
  %101 = add nsw i32 %100, 1, !dbg !5342
  store i32 %101, i32* %10, align 4, !dbg !5342
  br label %40, !dbg !5343, !llvm.loop !5344

102:                                              ; preds = %40
  br label %103, !dbg !5346

103:                                              ; preds = %102
  %104 = load i32, i32* %9, align 4, !dbg !5347
  %105 = add nsw i32 %104, 1, !dbg !5347
  store i32 %105, i32* %9, align 4, !dbg !5347
  br label %26, !dbg !5348, !llvm.loop !5349

106:                                              ; preds = %26
  br label %107, !dbg !5351

107:                                              ; preds = %106
  %108 = load %struct.strand_t*, %struct.strand_t** %7, align 8, !dbg !5352
  %109 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %108, i32 0, i32 4, !dbg !5353
  %110 = load %struct.strand_t*, %struct.strand_t** %109, align 8, !dbg !5353
  store %struct.strand_t* %110, %struct.strand_t** %7, align 8, !dbg !5354
  br label %22, !dbg !5355, !llvm.loop !5356

111:                                              ; preds = %22
  %112 = load i32, i32* %12, align 4, !dbg !5358
  ret i32 %112, !dbg !5359
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @transformpts([4 x double]* %0, [3 x double]* %1, i32 %2) #0 !dbg !5360 {
  %4 = alloca [4 x double]*, align 8
  %5 = alloca [3 x double]*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store [4 x double]* %0, [4 x double]** %4, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %4, metadata !5363, metadata !DIExpression()), !dbg !5364
  store [3 x double]* %1, [3 x double]** %5, align 8
  call void @llvm.dbg.declare(metadata [3 x double]** %5, metadata !5365, metadata !DIExpression()), !dbg !5366
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !5367, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5369, metadata !DIExpression()), !dbg !5370
  store i32 0, i32* %7, align 4, !dbg !5371
  br label %8, !dbg !5373

8:                                                ; preds = %24, %3
  %9 = load i32, i32* %7, align 4, !dbg !5374
  %10 = load i32, i32* %6, align 4, !dbg !5376
  %11 = icmp slt i32 %9, %10, !dbg !5377
  br i1 %11, label %12, label %27, !dbg !5378

12:                                               ; preds = %8
  %13 = load [3 x double]*, [3 x double]** %5, align 8, !dbg !5379
  %14 = load i32, i32* %7, align 4, !dbg !5380
  %15 = sext i32 %14 to i64, !dbg !5379
  %16 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 %15, !dbg !5379
  %17 = getelementptr inbounds [3 x double], [3 x double]* %16, i64 0, i64 0, !dbg !5379
  %18 = load [4 x double]*, [4 x double]** %4, align 8, !dbg !5381
  %19 = load [3 x double]*, [3 x double]** %5, align 8, !dbg !5382
  %20 = load i32, i32* %7, align 4, !dbg !5383
  %21 = sext i32 %20 to i64, !dbg !5382
  %22 = getelementptr inbounds [3 x double], [3 x double]* %19, i64 %21, !dbg !5382
  %23 = getelementptr inbounds [3 x double], [3 x double]* %22, i64 0, i64 0, !dbg !5382
  call void @xfm_xyz(double* %17, [4 x double]* %18, double* %23), !dbg !5384
  br label %24, !dbg !5384

24:                                               ; preds = %12
  %25 = load i32, i32* %7, align 4, !dbg !5385
  %26 = add nsw i32 %25, 1, !dbg !5385
  store i32 %26, i32* %7, align 4, !dbg !5385
  br label %8, !dbg !5386, !llvm.loop !5387

27:                                               ; preds = %8
  ret i32 0, !dbg !5389
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @updtransform([4 x double]* %0, [4 x double]* %1) #0 !dbg !275 {
  %3 = alloca [4 x double]*, align 8
  %4 = alloca [4 x double]*, align 8
  %5 = alloca i8*, align 8
  store [4 x double]* %0, [4 x double]** %3, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %3, metadata !5390, metadata !DIExpression()), !dbg !5391
  store [4 x double]* %1, [4 x double]** %4, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %4, metadata !5392, metadata !DIExpression()), !dbg !5393
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5394, metadata !DIExpression()), !dbg !5395
  %6 = load [4 x double]*, [4 x double]** %3, align 8, !dbg !5396
  %7 = load [4 x double]*, [4 x double]** %4, align 8, !dbg !5397
  call void @concat_mat([4 x double]* %6, [4 x double]* %7, [4 x double]* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @updtransform.mr, i64 0, i64 0)), !dbg !5398
  store i8* bitcast ([4 x [4 x double]]* @updtransform.mr to i8*), i8** %5, align 8, !dbg !5399
  %8 = load i8*, i8** %5, align 8, !dbg !5400
  %9 = bitcast i8* %8 to [4 x [4 x double]]*, !dbg !5401
  ret [4 x [4 x double]]* %9, !dbg !5402
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @trans4p(double* %0, double* %1, double %2) #0 !dbg !282 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double, align 8
  %7 = alloca i8*, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca double, align 8
  %11 = alloca double, align 8
  store double* %0, double** %4, align 8
  call void @llvm.dbg.declare(metadata double** %4, metadata !5403, metadata !DIExpression()), !dbg !5404
  store double* %1, double** %5, align 8
  call void @llvm.dbg.declare(metadata double** %5, metadata !5405, metadata !DIExpression()), !dbg !5406
  store double %2, double* %6, align 8
  call void @llvm.dbg.declare(metadata double* %6, metadata !5407, metadata !DIExpression()), !dbg !5408
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5409, metadata !DIExpression()), !dbg !5410
  call void @llvm.dbg.declare(metadata double* %8, metadata !5411, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.declare(metadata double* %9, metadata !5413, metadata !DIExpression()), !dbg !5414
  call void @llvm.dbg.declare(metadata double* %10, metadata !5415, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata double* %11, metadata !5417, metadata !DIExpression()), !dbg !5418
  %12 = load double*, double** %5, align 8, !dbg !5419
  %13 = getelementptr inbounds double, double* %12, i64 0, !dbg !5419
  %14 = load double, double* %13, align 8, !dbg !5419
  %15 = load double*, double** %4, align 8, !dbg !5420
  %16 = getelementptr inbounds double, double* %15, i64 0, !dbg !5420
  %17 = load double, double* %16, align 8, !dbg !5420
  %18 = fsub double %14, %17, !dbg !5421
  store double %18, double* %8, align 8, !dbg !5422
  %19 = load double*, double** %5, align 8, !dbg !5423
  %20 = getelementptr inbounds double, double* %19, i64 1, !dbg !5423
  %21 = load double, double* %20, align 8, !dbg !5423
  %22 = load double*, double** %4, align 8, !dbg !5424
  %23 = getelementptr inbounds double, double* %22, i64 1, !dbg !5424
  %24 = load double, double* %23, align 8, !dbg !5424
  %25 = fsub double %21, %24, !dbg !5425
  store double %25, double* %9, align 8, !dbg !5426
  %26 = load double*, double** %5, align 8, !dbg !5427
  %27 = getelementptr inbounds double, double* %26, i64 2, !dbg !5427
  %28 = load double, double* %27, align 8, !dbg !5427
  %29 = load double*, double** %4, align 8, !dbg !5428
  %30 = getelementptr inbounds double, double* %29, i64 2, !dbg !5428
  %31 = load double, double* %30, align 8, !dbg !5428
  %32 = fsub double %28, %31, !dbg !5429
  store double %32, double* %10, align 8, !dbg !5430
  %33 = load double, double* %8, align 8, !dbg !5431
  %34 = load double, double* %8, align 8, !dbg !5433
  %35 = fmul double %33, %34, !dbg !5434
  %36 = load double, double* %9, align 8, !dbg !5435
  %37 = load double, double* %9, align 8, !dbg !5436
  %38 = fmul double %36, %37, !dbg !5437
  %39 = fadd double %35, %38, !dbg !5438
  %40 = load double, double* %10, align 8, !dbg !5439
  %41 = load double, double* %10, align 8, !dbg !5440
  %42 = fmul double %40, %41, !dbg !5441
  %43 = fadd double %39, %42, !dbg !5442
  %44 = call double @sqrt(double %43) #8, !dbg !5443
  store double %44, double* %11, align 8, !dbg !5444
  %45 = fcmp oeq double %44, 0.000000e+00, !dbg !5445
  br i1 %45, label %46, label %50, !dbg !5446

46:                                               ; preds = %3
  %47 = call [4 x [4 x double]]* @newtransform(double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00), !dbg !5447
  %48 = bitcast [4 x [4 x double]]* %47 to i8*, !dbg !5447
  %49 = call [4 x [4 x double]]* @NAB_matcpy(i8* bitcast ([4 x [4 x double]]* @trans4p.mat to i8*), i8* %48), !dbg !5449
  br label %72, !dbg !5450

50:                                               ; preds = %3
  %51 = load double, double* %11, align 8, !dbg !5451
  %52 = load double, double* %8, align 8, !dbg !5453
  %53 = fdiv double %52, %51, !dbg !5453
  store double %53, double* %8, align 8, !dbg !5453
  %54 = load double, double* %11, align 8, !dbg !5454
  %55 = load double, double* %9, align 8, !dbg !5455
  %56 = fdiv double %55, %54, !dbg !5455
  store double %56, double* %9, align 8, !dbg !5455
  %57 = load double, double* %11, align 8, !dbg !5456
  %58 = load double, double* %10, align 8, !dbg !5457
  %59 = fdiv double %58, %57, !dbg !5457
  store double %59, double* %10, align 8, !dbg !5457
  %60 = load double, double* %6, align 8, !dbg !5458
  %61 = load double, double* %8, align 8, !dbg !5459
  %62 = fmul double %60, %61, !dbg !5460
  %63 = load double, double* %6, align 8, !dbg !5461
  %64 = load double, double* %9, align 8, !dbg !5462
  %65 = fmul double %63, %64, !dbg !5463
  %66 = load double, double* %6, align 8, !dbg !5464
  %67 = load double, double* %10, align 8, !dbg !5465
  %68 = fmul double %66, %67, !dbg !5466
  %69 = call [4 x [4 x double]]* @newtransform(double %62, double %65, double %68, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00), !dbg !5467
  %70 = bitcast [4 x [4 x double]]* %69 to i8*, !dbg !5467
  %71 = call [4 x [4 x double]]* @NAB_matcpy(i8* bitcast ([4 x [4 x double]]* @trans4p.mat to i8*), i8* %70), !dbg !5468
  br label %72

72:                                               ; preds = %50, %46
  store i8* bitcast ([4 x [4 x double]]* @trans4p.mat to i8*), i8** %7, align 8, !dbg !5469
  %73 = load i8*, i8** %7, align 8, !dbg !5470
  %74 = bitcast i8* %73 to [4 x [4 x double]]*, !dbg !5471
  ret [4 x [4 x double]]* %74, !dbg !5472
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @NAB_matcpy(i8* %0, i8* %1) #0 !dbg !5473 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !5476, metadata !DIExpression()), !dbg !5477
  store i8* %1, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !5478, metadata !DIExpression()), !dbg !5479
  %5 = load i8*, i8** %3, align 8, !dbg !5480
  %6 = load i8*, i8** %4, align 8, !dbg !5481
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 128, i1 false), !dbg !5482
  %7 = bitcast i8* %5 to [4 x [4 x double]]*, !dbg !5483
  ret [4 x [4 x double]]* %7, !dbg !5484
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @trans4(%struct.molecule_t* %0, i8* %1, i8* %2, double %3) #0 !dbg !5485 {
  %5 = alloca %struct.molecule_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca double, align 8
  %9 = alloca [3 x double], align 16
  %10 = alloca [3 x double], align 16
  store %struct.molecule_t* %0, %struct.molecule_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %5, metadata !5488, metadata !DIExpression()), !dbg !5489
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5490, metadata !DIExpression()), !dbg !5491
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5492, metadata !DIExpression()), !dbg !5493
  store double %3, double* %8, align 8
  call void @llvm.dbg.declare(metadata double* %8, metadata !5494, metadata !DIExpression()), !dbg !5495
  call void @llvm.dbg.declare(metadata [3 x double]* %9, metadata !5496, metadata !DIExpression()), !dbg !5497
  call void @llvm.dbg.declare(metadata [3 x double]* %10, metadata !5498, metadata !DIExpression()), !dbg !5499
  %11 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !5500
  %12 = load i8*, i8** %6, align 8, !dbg !5501
  %13 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0, !dbg !5502
  %14 = call i32 @setpoint(%struct.molecule_t* %11, i8* %12, double* %13), !dbg !5503
  %15 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !5504
  %16 = load i8*, i8** %7, align 8, !dbg !5505
  %17 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0, !dbg !5506
  %18 = call i32 @setpoint(%struct.molecule_t* %15, i8* %16, double* %17), !dbg !5507
  %19 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0, !dbg !5508
  %20 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0, !dbg !5509
  %21 = load double, double* %8, align 8, !dbg !5510
  %22 = call [4 x [4 x double]]* @trans4p(double* %19, double* %20, double %21), !dbg !5511
  ret [4 x [4 x double]]* %22, !dbg !5512
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @rot4p(double* %0, double* %1, double %2) #0 !dbg !287 {
  %4 = alloca double*, align 8
  %5 = alloca double*, align 8
  %6 = alloca double, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [4 x [4 x double]], align 16
  %9 = alloca [4 x [4 x double]], align 16
  %10 = alloca [4 x [4 x double]], align 16
  %11 = alloca [4 x [4 x double]], align 16
  store double* %0, double** %4, align 8
  call void @llvm.dbg.declare(metadata double** %4, metadata !5513, metadata !DIExpression()), !dbg !5514
  store double* %1, double** %5, align 8
  call void @llvm.dbg.declare(metadata double** %5, metadata !5515, metadata !DIExpression()), !dbg !5516
  store double %2, double* %6, align 8
  call void @llvm.dbg.declare(metadata double* %6, metadata !5517, metadata !DIExpression()), !dbg !5518
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5519, metadata !DIExpression()), !dbg !5520
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %8, metadata !5521, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %9, metadata !5523, metadata !DIExpression()), !dbg !5524
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %10, metadata !5525, metadata !DIExpression()), !dbg !5526
  call void @llvm.dbg.declare(metadata [4 x [4 x double]]* %11, metadata !5527, metadata !DIExpression()), !dbg !5528
  %12 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %8, i64 0, i64 0, !dbg !5529
  %13 = bitcast [4 x double]* %12 to i8*, !dbg !5529
  %14 = load double*, double** %4, align 8, !dbg !5530
  %15 = getelementptr inbounds double, double* %14, i64 0, !dbg !5530
  %16 = load double, double* %15, align 8, !dbg !5530
  %17 = fneg double %16, !dbg !5531
  %18 = load double*, double** %4, align 8, !dbg !5532
  %19 = getelementptr inbounds double, double* %18, i64 1, !dbg !5532
  %20 = load double, double* %19, align 8, !dbg !5532
  %21 = fneg double %20, !dbg !5533
  %22 = load double*, double** %4, align 8, !dbg !5534
  %23 = getelementptr inbounds double, double* %22, i64 2, !dbg !5534
  %24 = load double, double* %23, align 8, !dbg !5534
  %25 = fneg double %24, !dbg !5535
  %26 = call [4 x [4 x double]]* @newtransform(double %17, double %21, double %25, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00), !dbg !5536
  %27 = bitcast [4 x [4 x double]]* %26 to i8*, !dbg !5536
  %28 = call [4 x [4 x double]]* @NAB_matcpy(i8* %13, i8* %27), !dbg !5537
  %29 = load double*, double** %5, align 8, !dbg !5538
  %30 = getelementptr inbounds double, double* %29, i64 0, !dbg !5538
  %31 = load double, double* %30, align 8, !dbg !5538
  %32 = load double*, double** %4, align 8, !dbg !5539
  %33 = getelementptr inbounds double, double* %32, i64 0, !dbg !5539
  %34 = load double, double* %33, align 8, !dbg !5539
  %35 = fsub double %31, %34, !dbg !5540
  %36 = load double*, double** %5, align 8, !dbg !5541
  %37 = getelementptr inbounds double, double* %36, i64 1, !dbg !5541
  %38 = load double, double* %37, align 8, !dbg !5541
  %39 = load double*, double** %4, align 8, !dbg !5542
  %40 = getelementptr inbounds double, double* %39, i64 1, !dbg !5542
  %41 = load double, double* %40, align 8, !dbg !5542
  %42 = fsub double %38, %41, !dbg !5543
  %43 = load double*, double** %5, align 8, !dbg !5544
  %44 = getelementptr inbounds double, double* %43, i64 2, !dbg !5544
  %45 = load double, double* %44, align 8, !dbg !5544
  %46 = load double*, double** %4, align 8, !dbg !5545
  %47 = getelementptr inbounds double, double* %46, i64 2, !dbg !5545
  %48 = load double, double* %47, align 8, !dbg !5545
  %49 = fsub double %45, %48, !dbg !5546
  %50 = load double, double* %6, align 8, !dbg !5547
  %51 = fneg double %50, !dbg !5548
  %52 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %9, i64 0, i64 0, !dbg !5549
  call void @raa2mat(double %35, double %42, double %49, double %51, [4 x double]* %52), !dbg !5550
  %53 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %10, i64 0, i64 0, !dbg !5551
  %54 = bitcast [4 x double]* %53 to i8*, !dbg !5551
  %55 = load double*, double** %4, align 8, !dbg !5552
  %56 = getelementptr inbounds double, double* %55, i64 0, !dbg !5552
  %57 = load double, double* %56, align 8, !dbg !5552
  %58 = load double*, double** %4, align 8, !dbg !5553
  %59 = getelementptr inbounds double, double* %58, i64 1, !dbg !5553
  %60 = load double, double* %59, align 8, !dbg !5553
  %61 = load double*, double** %4, align 8, !dbg !5554
  %62 = getelementptr inbounds double, double* %61, i64 2, !dbg !5554
  %63 = load double, double* %62, align 8, !dbg !5554
  %64 = call [4 x [4 x double]]* @newtransform(double %57, double %60, double %63, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00), !dbg !5555
  %65 = bitcast [4 x [4 x double]]* %64 to i8*, !dbg !5555
  %66 = call [4 x [4 x double]]* @NAB_matcpy(i8* %54, i8* %65), !dbg !5556
  %67 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %8, i64 0, i64 0, !dbg !5557
  %68 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %9, i64 0, i64 0, !dbg !5558
  %69 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %11, i64 0, i64 0, !dbg !5559
  call void @concat_mat([4 x double]* %67, [4 x double]* %68, [4 x double]* %69), !dbg !5560
  %70 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %11, i64 0, i64 0, !dbg !5561
  %71 = getelementptr inbounds [4 x [4 x double]], [4 x [4 x double]]* %10, i64 0, i64 0, !dbg !5562
  call void @concat_mat([4 x double]* %70, [4 x double]* %71, [4 x double]* getelementptr inbounds ([4 x [4 x double]], [4 x [4 x double]]* @rot4p.mat5, i64 0, i64 0)), !dbg !5563
  store i8* bitcast ([4 x [4 x double]]* @rot4p.mat5 to i8*), i8** %7, align 8, !dbg !5564
  %72 = load i8*, i8** %7, align 8, !dbg !5565
  %73 = bitcast i8* %72 to [4 x [4 x double]]*, !dbg !5566
  ret [4 x [4 x double]]* %73, !dbg !5567
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @raa2mat(double %0, double %1, double %2, double %3, [4 x double]* %4) #0 !dbg !5568 {
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = alloca [4 x double]*, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = alloca double, align 8
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  %19 = alloca double, align 8
  %20 = alloca double, align 8
  %21 = alloca double, align 8
  %22 = alloca double, align 8
  %23 = alloca double, align 8
  %24 = alloca double, align 8
  %25 = alloca double, align 8
  %26 = alloca double, align 8
  %27 = alloca double, align 8
  %28 = alloca double, align 8
  store double %0, double* %6, align 8
  call void @llvm.dbg.declare(metadata double* %6, metadata !5571, metadata !DIExpression()), !dbg !5572
  store double %1, double* %7, align 8
  call void @llvm.dbg.declare(metadata double* %7, metadata !5573, metadata !DIExpression()), !dbg !5574
  store double %2, double* %8, align 8
  call void @llvm.dbg.declare(metadata double* %8, metadata !5575, metadata !DIExpression()), !dbg !5576
  store double %3, double* %9, align 8
  call void @llvm.dbg.declare(metadata double* %9, metadata !5577, metadata !DIExpression()), !dbg !5578
  store [4 x double]* %4, [4 x double]** %10, align 8
  call void @llvm.dbg.declare(metadata [4 x double]** %10, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.declare(metadata double* %11, metadata !5581, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.declare(metadata double* %12, metadata !5583, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.declare(metadata double* %13, metadata !5585, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.declare(metadata double* %14, metadata !5587, metadata !DIExpression()), !dbg !5588
  call void @llvm.dbg.declare(metadata double* %15, metadata !5589, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata double* %16, metadata !5591, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.declare(metadata double* %17, metadata !5593, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.declare(metadata double* %18, metadata !5595, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata double* %19, metadata !5597, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.declare(metadata double* %20, metadata !5599, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata double* %21, metadata !5601, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.declare(metadata double* %22, metadata !5603, metadata !DIExpression()), !dbg !5604
  call void @llvm.dbg.declare(metadata double* %23, metadata !5605, metadata !DIExpression()), !dbg !5606
  call void @llvm.dbg.declare(metadata double* %24, metadata !5607, metadata !DIExpression()), !dbg !5608
  call void @llvm.dbg.declare(metadata double* %25, metadata !5609, metadata !DIExpression()), !dbg !5610
  call void @llvm.dbg.declare(metadata double* %26, metadata !5611, metadata !DIExpression()), !dbg !5612
  call void @llvm.dbg.declare(metadata double* %27, metadata !5613, metadata !DIExpression()), !dbg !5614
  call void @llvm.dbg.declare(metadata double* %28, metadata !5615, metadata !DIExpression()), !dbg !5616
  %29 = load double, double* %6, align 8, !dbg !5617
  %30 = load double, double* %7, align 8, !dbg !5619
  %31 = call double @hypot(double %29, double %30) #8, !dbg !5620
  %32 = load double, double* %8, align 8, !dbg !5621
  %33 = call double @hypot(double %31, double %32) #8, !dbg !5622
  store double %33, double* %11, align 8, !dbg !5623
  %34 = fcmp oeq double %33, 0.000000e+00, !dbg !5624
  br i1 %34, label %35, label %36, !dbg !5625

35:                                               ; preds = %5
  store double 0.000000e+00, double* %6, align 8, !dbg !5626
  store double 0.000000e+00, double* %7, align 8, !dbg !5628
  store double 1.000000e+00, double* %8, align 8, !dbg !5629
  store double 1.000000e+00, double* %11, align 8, !dbg !5630
  br label %36, !dbg !5631

36:                                               ; preds = %35, %5
  %37 = load double, double* %11, align 8, !dbg !5632
  %38 = load double, double* %6, align 8, !dbg !5633
  %39 = fdiv double %38, %37, !dbg !5633
  store double %39, double* %6, align 8, !dbg !5633
  %40 = load double, double* %11, align 8, !dbg !5634
  %41 = load double, double* %7, align 8, !dbg !5635
  %42 = fdiv double %41, %40, !dbg !5635
  store double %42, double* %7, align 8, !dbg !5635
  %43 = load double, double* %11, align 8, !dbg !5636
  %44 = load double, double* %8, align 8, !dbg !5637
  %45 = fdiv double %44, %43, !dbg !5637
  store double %45, double* %8, align 8, !dbg !5637
  %46 = load double, double* %6, align 8, !dbg !5638
  store double %46, double* %12, align 8, !dbg !5639
  %47 = load double, double* %7, align 8, !dbg !5640
  store double %47, double* %13, align 8, !dbg !5641
  %48 = load double, double* %8, align 8, !dbg !5642
  store double %48, double* %14, align 8, !dbg !5643
  %49 = load double, double* %6, align 8, !dbg !5644
  %50 = load double, double* %6, align 8, !dbg !5645
  %51 = fmul double %49, %50, !dbg !5646
  store double %51, double* %15, align 8, !dbg !5647
  %52 = load double, double* %6, align 8, !dbg !5648
  %53 = load double, double* %7, align 8, !dbg !5649
  %54 = fmul double %52, %53, !dbg !5650
  store double %54, double* %16, align 8, !dbg !5651
  %55 = load double, double* %6, align 8, !dbg !5652
  %56 = load double, double* %8, align 8, !dbg !5653
  %57 = fmul double %55, %56, !dbg !5654
  store double %57, double* %17, align 8, !dbg !5655
  %58 = load double, double* %7, align 8, !dbg !5656
  %59 = load double, double* %7, align 8, !dbg !5657
  %60 = fmul double %58, %59, !dbg !5658
  store double %60, double* %18, align 8, !dbg !5659
  %61 = load double, double* %7, align 8, !dbg !5660
  %62 = load double, double* %8, align 8, !dbg !5661
  %63 = fmul double %61, %62, !dbg !5662
  store double %63, double* %19, align 8, !dbg !5663
  %64 = load double, double* %8, align 8, !dbg !5664
  %65 = load double, double* %8, align 8, !dbg !5665
  %66 = fmul double %64, %65, !dbg !5666
  store double %66, double* %20, align 8, !dbg !5667
  %67 = load double, double* %9, align 8, !dbg !5668
  %68 = fmul double 0x3F91DF46A2529D39, %67, !dbg !5669
  %69 = call double @sin(double %68) #8, !dbg !5670
  store double %69, double* %28, align 8, !dbg !5671
  %70 = load double, double* %9, align 8, !dbg !5672
  %71 = fmul double 0x3F91DF46A2529D39, %70, !dbg !5673
  %72 = call double @cos(double %71) #8, !dbg !5674
  store double %72, double* %27, align 8, !dbg !5675
  %73 = load double, double* %27, align 8, !dbg !5676
  %74 = load double, double* %16, align 8, !dbg !5677
  %75 = fmul double %73, %74, !dbg !5678
  store double %75, double* %21, align 8, !dbg !5679
  %76 = load double, double* %27, align 8, !dbg !5680
  %77 = load double, double* %19, align 8, !dbg !5681
  %78 = fmul double %76, %77, !dbg !5682
  store double %78, double* %22, align 8, !dbg !5683
  %79 = load double, double* %27, align 8, !dbg !5684
  %80 = load double, double* %17, align 8, !dbg !5685
  %81 = fmul double %79, %80, !dbg !5686
  store double %81, double* %23, align 8, !dbg !5687
  %82 = load double, double* %28, align 8, !dbg !5688
  %83 = load double, double* %12, align 8, !dbg !5689
  %84 = fmul double %82, %83, !dbg !5690
  store double %84, double* %24, align 8, !dbg !5691
  %85 = load double, double* %28, align 8, !dbg !5692
  %86 = load double, double* %13, align 8, !dbg !5693
  %87 = fmul double %85, %86, !dbg !5694
  store double %87, double* %25, align 8, !dbg !5695
  %88 = load double, double* %28, align 8, !dbg !5696
  %89 = load double, double* %14, align 8, !dbg !5697
  %90 = fmul double %88, %89, !dbg !5698
  store double %90, double* %26, align 8, !dbg !5699
  %91 = load double, double* %15, align 8, !dbg !5700
  %92 = load double, double* %27, align 8, !dbg !5700
  %93 = load double, double* %15, align 8, !dbg !5700
  %94 = fsub double 1.000000e+00, %93, !dbg !5700
  %95 = fmul double %92, %94, !dbg !5700
  %96 = fadd double %91, %95, !dbg !5700
  %97 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5701
  %98 = getelementptr inbounds [4 x double], [4 x double]* %97, i64 0, !dbg !5701
  %99 = getelementptr inbounds [4 x double], [4 x double]* %98, i64 0, i64 0, !dbg !5701
  store double %96, double* %99, align 8, !dbg !5702
  %100 = load double, double* %16, align 8, !dbg !5703
  %101 = load double, double* %21, align 8, !dbg !5703
  %102 = fneg double %101, !dbg !5703
  %103 = fadd double %100, %102, !dbg !5703
  %104 = load double, double* %26, align 8, !dbg !5703
  %105 = fneg double %104, !dbg !5703
  %106 = fadd double %103, %105, !dbg !5703
  %107 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5704
  %108 = getelementptr inbounds [4 x double], [4 x double]* %107, i64 0, !dbg !5704
  %109 = getelementptr inbounds [4 x double], [4 x double]* %108, i64 0, i64 1, !dbg !5704
  store double %106, double* %109, align 8, !dbg !5705
  %110 = load double, double* %17, align 8, !dbg !5706
  %111 = load double, double* %23, align 8, !dbg !5706
  %112 = fneg double %111, !dbg !5706
  %113 = fadd double %110, %112, !dbg !5706
  %114 = load double, double* %25, align 8, !dbg !5706
  %115 = fadd double %113, %114, !dbg !5706
  %116 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5707
  %117 = getelementptr inbounds [4 x double], [4 x double]* %116, i64 0, !dbg !5707
  %118 = getelementptr inbounds [4 x double], [4 x double]* %117, i64 0, i64 2, !dbg !5707
  store double %115, double* %118, align 8, !dbg !5708
  %119 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5709
  %120 = getelementptr inbounds [4 x double], [4 x double]* %119, i64 0, !dbg !5709
  %121 = getelementptr inbounds [4 x double], [4 x double]* %120, i64 0, i64 3, !dbg !5709
  store double 0.000000e+00, double* %121, align 8, !dbg !5710
  %122 = load double, double* %16, align 8, !dbg !5711
  %123 = load double, double* %21, align 8, !dbg !5711
  %124 = fneg double %123, !dbg !5711
  %125 = fadd double %122, %124, !dbg !5711
  %126 = load double, double* %26, align 8, !dbg !5711
  %127 = fadd double %125, %126, !dbg !5711
  %128 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5712
  %129 = getelementptr inbounds [4 x double], [4 x double]* %128, i64 1, !dbg !5712
  %130 = getelementptr inbounds [4 x double], [4 x double]* %129, i64 0, i64 0, !dbg !5712
  store double %127, double* %130, align 8, !dbg !5713
  %131 = load double, double* %18, align 8, !dbg !5714
  %132 = load double, double* %27, align 8, !dbg !5714
  %133 = load double, double* %18, align 8, !dbg !5714
  %134 = fsub double 1.000000e+00, %133, !dbg !5714
  %135 = fmul double %132, %134, !dbg !5714
  %136 = fadd double %131, %135, !dbg !5714
  %137 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5715
  %138 = getelementptr inbounds [4 x double], [4 x double]* %137, i64 1, !dbg !5715
  %139 = getelementptr inbounds [4 x double], [4 x double]* %138, i64 0, i64 1, !dbg !5715
  store double %136, double* %139, align 8, !dbg !5716
  %140 = load double, double* %19, align 8, !dbg !5717
  %141 = load double, double* %22, align 8, !dbg !5717
  %142 = fneg double %141, !dbg !5717
  %143 = fadd double %140, %142, !dbg !5717
  %144 = load double, double* %24, align 8, !dbg !5717
  %145 = fneg double %144, !dbg !5717
  %146 = fadd double %143, %145, !dbg !5717
  %147 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5718
  %148 = getelementptr inbounds [4 x double], [4 x double]* %147, i64 1, !dbg !5718
  %149 = getelementptr inbounds [4 x double], [4 x double]* %148, i64 0, i64 2, !dbg !5718
  store double %146, double* %149, align 8, !dbg !5719
  %150 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5720
  %151 = getelementptr inbounds [4 x double], [4 x double]* %150, i64 1, !dbg !5720
  %152 = getelementptr inbounds [4 x double], [4 x double]* %151, i64 0, i64 3, !dbg !5720
  store double 0.000000e+00, double* %152, align 8, !dbg !5721
  %153 = load double, double* %17, align 8, !dbg !5722
  %154 = load double, double* %23, align 8, !dbg !5722
  %155 = fneg double %154, !dbg !5722
  %156 = fadd double %153, %155, !dbg !5722
  %157 = load double, double* %25, align 8, !dbg !5722
  %158 = fneg double %157, !dbg !5722
  %159 = fadd double %156, %158, !dbg !5722
  %160 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5723
  %161 = getelementptr inbounds [4 x double], [4 x double]* %160, i64 2, !dbg !5723
  %162 = getelementptr inbounds [4 x double], [4 x double]* %161, i64 0, i64 0, !dbg !5723
  store double %159, double* %162, align 8, !dbg !5724
  %163 = load double, double* %19, align 8, !dbg !5725
  %164 = load double, double* %22, align 8, !dbg !5725
  %165 = fneg double %164, !dbg !5725
  %166 = fadd double %163, %165, !dbg !5725
  %167 = load double, double* %24, align 8, !dbg !5725
  %168 = fadd double %166, %167, !dbg !5725
  %169 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5726
  %170 = getelementptr inbounds [4 x double], [4 x double]* %169, i64 2, !dbg !5726
  %171 = getelementptr inbounds [4 x double], [4 x double]* %170, i64 0, i64 1, !dbg !5726
  store double %168, double* %171, align 8, !dbg !5727
  %172 = load double, double* %20, align 8, !dbg !5728
  %173 = load double, double* %27, align 8, !dbg !5728
  %174 = load double, double* %20, align 8, !dbg !5728
  %175 = fsub double 1.000000e+00, %174, !dbg !5728
  %176 = fmul double %173, %175, !dbg !5728
  %177 = fadd double %172, %176, !dbg !5728
  %178 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5729
  %179 = getelementptr inbounds [4 x double], [4 x double]* %178, i64 2, !dbg !5729
  %180 = getelementptr inbounds [4 x double], [4 x double]* %179, i64 0, i64 2, !dbg !5729
  store double %177, double* %180, align 8, !dbg !5730
  %181 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5731
  %182 = getelementptr inbounds [4 x double], [4 x double]* %181, i64 2, !dbg !5731
  %183 = getelementptr inbounds [4 x double], [4 x double]* %182, i64 0, i64 3, !dbg !5731
  store double 0.000000e+00, double* %183, align 8, !dbg !5732
  %184 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5733
  %185 = getelementptr inbounds [4 x double], [4 x double]* %184, i64 3, !dbg !5733
  %186 = getelementptr inbounds [4 x double], [4 x double]* %185, i64 0, i64 0, !dbg !5733
  store double 0.000000e+00, double* %186, align 8, !dbg !5734
  %187 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5735
  %188 = getelementptr inbounds [4 x double], [4 x double]* %187, i64 3, !dbg !5735
  %189 = getelementptr inbounds [4 x double], [4 x double]* %188, i64 0, i64 1, !dbg !5735
  store double 0.000000e+00, double* %189, align 8, !dbg !5736
  %190 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5737
  %191 = getelementptr inbounds [4 x double], [4 x double]* %190, i64 3, !dbg !5737
  %192 = getelementptr inbounds [4 x double], [4 x double]* %191, i64 0, i64 2, !dbg !5737
  store double 0.000000e+00, double* %192, align 8, !dbg !5738
  %193 = load [4 x double]*, [4 x double]** %10, align 8, !dbg !5739
  %194 = getelementptr inbounds [4 x double], [4 x double]* %193, i64 3, !dbg !5739
  %195 = getelementptr inbounds [4 x double], [4 x double]* %194, i64 0, i64 3, !dbg !5739
  store double 1.000000e+00, double* %195, align 8, !dbg !5740
  ret void, !dbg !5741
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local [4 x [4 x double]]* @rot4(%struct.molecule_t* %0, i8* %1, i8* %2, double %3) #0 !dbg !5742 {
  %5 = alloca %struct.molecule_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca double, align 8
  %9 = alloca [3 x double], align 16
  %10 = alloca [3 x double], align 16
  store %struct.molecule_t* %0, %struct.molecule_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %5, metadata !5743, metadata !DIExpression()), !dbg !5744
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !5747, metadata !DIExpression()), !dbg !5748
  store double %3, double* %8, align 8
  call void @llvm.dbg.declare(metadata double* %8, metadata !5749, metadata !DIExpression()), !dbg !5750
  call void @llvm.dbg.declare(metadata [3 x double]* %9, metadata !5751, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata [3 x double]* %10, metadata !5753, metadata !DIExpression()), !dbg !5754
  %11 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !5755
  %12 = load i8*, i8** %6, align 8, !dbg !5756
  %13 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0, !dbg !5757
  %14 = call i32 @setpoint(%struct.molecule_t* %11, i8* %12, double* %13), !dbg !5758
  %15 = load %struct.molecule_t*, %struct.molecule_t** %5, align 8, !dbg !5759
  %16 = load i8*, i8** %7, align 8, !dbg !5760
  %17 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0, !dbg !5761
  %18 = call i32 @setpoint(%struct.molecule_t* %15, i8* %16, double* %17), !dbg !5762
  %19 = getelementptr inbounds [3 x double], [3 x double]* %9, i64 0, i64 0, !dbg !5763
  %20 = getelementptr inbounds [3 x double], [3 x double]* %10, i64 0, i64 0, !dbg !5764
  %21 = load double, double* %8, align 8, !dbg !5765
  %22 = call [4 x [4 x double]]* @rot4p(double* %19, double* %20, double %21), !dbg !5766
  ret [4 x [4 x double]]* %22, !dbg !5767
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_belly_mask(%struct.molecule_t* %0, i8* %1, i32* %2) #0 !dbg !5768 {
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32*, align 8
  %22 = alloca %struct.strand_t*, align 8
  %23 = alloca %struct.residue_t*, align 8
  %24 = alloca %struct.atom_t*, align 8
  %25 = alloca %struct.parm*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !5771, metadata !DIExpression()), !dbg !5772
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !5773, metadata !DIExpression()), !dbg !5774
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !5775, metadata !DIExpression()), !dbg !5776
  call void @llvm.dbg.declare(metadata i32* %7, metadata !5777, metadata !DIExpression()), !dbg !5778
  call void @llvm.dbg.declare(metadata i32* %8, metadata !5779, metadata !DIExpression()), !dbg !5780
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5781, metadata !DIExpression()), !dbg !5782
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5783, metadata !DIExpression()), !dbg !5784
  call void @llvm.dbg.declare(metadata i32* %11, metadata !5785, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5787, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5789, metadata !DIExpression()), !dbg !5790
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5791, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5793, metadata !DIExpression()), !dbg !5794
  call void @llvm.dbg.declare(metadata i32* %16, metadata !5795, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5797, metadata !DIExpression()), !dbg !5798
  call void @llvm.dbg.declare(metadata i32* %18, metadata !5799, metadata !DIExpression()), !dbg !5800
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5801, metadata !DIExpression()), !dbg !5802
  call void @llvm.dbg.declare(metadata i32* %20, metadata !5803, metadata !DIExpression()), !dbg !5804
  call void @llvm.dbg.declare(metadata i32** %21, metadata !5805, metadata !DIExpression()), !dbg !5806
  call void @llvm.dbg.declare(metadata %struct.strand_t** %22, metadata !5807, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.declare(metadata %struct.residue_t** %23, metadata !5809, metadata !DIExpression()), !dbg !5810
  call void @llvm.dbg.declare(metadata %struct.atom_t** %24, metadata !5811, metadata !DIExpression()), !dbg !5812
  call void @llvm.dbg.declare(metadata %struct.parm** %25, metadata !5813, metadata !DIExpression()), !dbg !5814
  %26 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !5815
  %27 = load i8*, i8** %5, align 8, !dbg !5816
  %28 = call i32 @select_atoms(%struct.molecule_t* %26, i8* %27), !dbg !5817
  store i32 0, i32* %15, align 4, !dbg !5818
  store i32 0, i32* %14, align 4, !dbg !5819
  %29 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !5821
  %30 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %29, i32 0, i32 2, !dbg !5822
  %31 = load %struct.strand_t*, %struct.strand_t** %30, align 8, !dbg !5822
  store %struct.strand_t* %31, %struct.strand_t** %22, align 8, !dbg !5823
  br label %32, !dbg !5824

32:                                               ; preds = %91, %3
  %33 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !5825
  %34 = icmp ne %struct.strand_t* %33, null, !dbg !5827
  br i1 %34, label %35, label %95, !dbg !5827

35:                                               ; preds = %32
  store i32 0, i32* %12, align 4, !dbg !5828
  br label %36, !dbg !5831

36:                                               ; preds = %87, %35
  %37 = load i32, i32* %12, align 4, !dbg !5832
  %38 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !5834
  %39 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %38, i32 0, i32 5, !dbg !5835
  %40 = load i32, i32* %39, align 8, !dbg !5835
  %41 = icmp slt i32 %37, %40, !dbg !5836
  br i1 %41, label %42, label %90, !dbg !5837

42:                                               ; preds = %36
  %43 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !5838
  %44 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %43, i32 0, i32 7, !dbg !5840
  %45 = load %struct.residue_t**, %struct.residue_t*** %44, align 8, !dbg !5840
  %46 = load i32, i32* %12, align 4, !dbg !5841
  %47 = sext i32 %46 to i64, !dbg !5838
  %48 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %45, i64 %47, !dbg !5838
  %49 = load %struct.residue_t*, %struct.residue_t** %48, align 8, !dbg !5838
  store %struct.residue_t* %49, %struct.residue_t** %23, align 8, !dbg !5842
  store i32 0, i32* %13, align 4, !dbg !5843
  br label %50, !dbg !5845

50:                                               ; preds = %83, %42
  %51 = load i32, i32* %13, align 4, !dbg !5846
  %52 = load %struct.residue_t*, %struct.residue_t** %23, align 8, !dbg !5848
  %53 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %52, i32 0, i32 15, !dbg !5849
  %54 = load i32, i32* %53, align 8, !dbg !5849
  %55 = icmp slt i32 %51, %54, !dbg !5850
  br i1 %55, label %56, label %86, !dbg !5851

56:                                               ; preds = %50
  %57 = load %struct.residue_t*, %struct.residue_t** %23, align 8, !dbg !5852
  %58 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %57, i32 0, i32 17, !dbg !5854
  %59 = load %struct.atom_t*, %struct.atom_t** %58, align 8, !dbg !5854
  %60 = load i32, i32* %13, align 4, !dbg !5855
  %61 = sext i32 %60 to i64, !dbg !5852
  %62 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %59, i64 %61, !dbg !5852
  store %struct.atom_t* %62, %struct.atom_t** %24, align 8, !dbg !5856
  %63 = load %struct.atom_t*, %struct.atom_t** %24, align 8, !dbg !5857
  %64 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %63, i32 0, i32 2, !dbg !5859
  %65 = load i32, i32* %64, align 8, !dbg !5859
  %66 = and i32 %65, 1, !dbg !5860
  %67 = icmp ne i32 %66, 0, !dbg !5860
  br i1 %67, label %68, label %73, !dbg !5861

68:                                               ; preds = %56
  %69 = load i32*, i32** %6, align 8, !dbg !5862
  %70 = load i32, i32* %14, align 4, !dbg !5863
  %71 = sext i32 %70 to i64, !dbg !5862
  %72 = getelementptr inbounds i32, i32* %69, i64 %71, !dbg !5862
  store i32 0, i32* %72, align 4, !dbg !5864
  br label %80, !dbg !5862

73:                                               ; preds = %56
  %74 = load i32*, i32** %6, align 8, !dbg !5865
  %75 = load i32, i32* %14, align 4, !dbg !5867
  %76 = sext i32 %75 to i64, !dbg !5865
  %77 = getelementptr inbounds i32, i32* %74, i64 %76, !dbg !5865
  store i32 1, i32* %77, align 4, !dbg !5868
  %78 = load i32, i32* %15, align 4, !dbg !5869
  %79 = add nsw i32 %78, 1, !dbg !5869
  store i32 %79, i32* %15, align 4, !dbg !5869
  br label %80

80:                                               ; preds = %73, %68
  %81 = load i32, i32* %14, align 4, !dbg !5870
  %82 = add nsw i32 %81, 1, !dbg !5870
  store i32 %82, i32* %14, align 4, !dbg !5870
  br label %83, !dbg !5871

83:                                               ; preds = %80
  %84 = load i32, i32* %13, align 4, !dbg !5872
  %85 = add nsw i32 %84, 1, !dbg !5872
  store i32 %85, i32* %13, align 4, !dbg !5872
  br label %50, !dbg !5873, !llvm.loop !5874

86:                                               ; preds = %50
  br label %87, !dbg !5876

87:                                               ; preds = %86
  %88 = load i32, i32* %12, align 4, !dbg !5877
  %89 = add nsw i32 %88, 1, !dbg !5877
  store i32 %89, i32* %12, align 4, !dbg !5877
  br label %36, !dbg !5878, !llvm.loop !5879

90:                                               ; preds = %36
  br label %91, !dbg !5881

91:                                               ; preds = %90
  %92 = load %struct.strand_t*, %struct.strand_t** %22, align 8, !dbg !5882
  %93 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %92, i32 0, i32 4, !dbg !5883
  %94 = load %struct.strand_t*, %struct.strand_t** %93, align 8, !dbg !5883
  store %struct.strand_t* %94, %struct.strand_t** %22, align 8, !dbg !5884
  br label %32, !dbg !5885, !llvm.loop !5886

95:                                               ; preds = %32
  %96 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !5888
  %97 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %96, i32 0, i32 6, !dbg !5889
  %98 = load %struct.parm*, %struct.parm** %97, align 8, !dbg !5889
  store %struct.parm* %98, %struct.parm** %25, align 8, !dbg !5890
  %99 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5891
  %100 = icmp ne %struct.parm* %99, null, !dbg !5891
  br i1 %100, label %101, label %976, !dbg !5893

101:                                              ; preds = %95
  store i32 0, i32* %16, align 4, !dbg !5894
  store i32 0, i32* %11, align 4, !dbg !5897
  br label %102, !dbg !5898

102:                                              ; preds = %181, %101
  %103 = load i32, i32* %11, align 4, !dbg !5899
  %104 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5901
  %105 = getelementptr inbounds %struct.parm, %struct.parm* %104, i32 0, i32 6, !dbg !5902
  %106 = load i32, i32* %105, align 8, !dbg !5902
  %107 = icmp slt i32 %103, %106, !dbg !5903
  br i1 %107, label %108, label %184, !dbg !5904

108:                                              ; preds = %102
  %109 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5905
  %110 = getelementptr inbounds %struct.parm, %struct.parm* %109, i32 0, i32 66, !dbg !5907
  %111 = load i32*, i32** %110, align 8, !dbg !5907
  %112 = load i32, i32* %11, align 4, !dbg !5908
  %113 = sext i32 %112 to i64, !dbg !5905
  %114 = getelementptr inbounds i32, i32* %111, i64 %113, !dbg !5905
  %115 = load i32, i32* %114, align 4, !dbg !5905
  %116 = sdiv i32 %115, 3, !dbg !5909
  store i32 %116, i32* %7, align 4, !dbg !5910
  %117 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5911
  %118 = getelementptr inbounds %struct.parm, %struct.parm* %117, i32 0, i32 67, !dbg !5912
  %119 = load i32*, i32** %118, align 8, !dbg !5912
  %120 = load i32, i32* %11, align 4, !dbg !5913
  %121 = sext i32 %120 to i64, !dbg !5911
  %122 = getelementptr inbounds i32, i32* %119, i64 %121, !dbg !5911
  %123 = load i32, i32* %122, align 4, !dbg !5911
  %124 = sdiv i32 %123, 3, !dbg !5914
  store i32 %124, i32* %8, align 4, !dbg !5915
  %125 = load i32*, i32** %6, align 8, !dbg !5916
  %126 = load i32, i32* %7, align 4, !dbg !5918
  %127 = sext i32 %126 to i64, !dbg !5916
  %128 = getelementptr inbounds i32, i32* %125, i64 %127, !dbg !5916
  %129 = load i32, i32* %128, align 4, !dbg !5916
  %130 = icmp ne i32 %129, 0, !dbg !5916
  br i1 %130, label %131, label %138, !dbg !5919

131:                                              ; preds = %108
  %132 = load i32*, i32** %6, align 8, !dbg !5920
  %133 = load i32, i32* %8, align 4, !dbg !5921
  %134 = sext i32 %133 to i64, !dbg !5920
  %135 = getelementptr inbounds i32, i32* %132, i64 %134, !dbg !5920
  %136 = load i32, i32* %135, align 4, !dbg !5920
  %137 = icmp ne i32 %136, 0, !dbg !5920
  br i1 %137, label %180, label %138, !dbg !5922

138:                                              ; preds = %131, %108
  %139 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5923
  %140 = getelementptr inbounds %struct.parm, %struct.parm* %139, i32 0, i32 66, !dbg !5925
  %141 = load i32*, i32** %140, align 8, !dbg !5925
  %142 = load i32, i32* %11, align 4, !dbg !5926
  %143 = sext i32 %142 to i64, !dbg !5923
  %144 = getelementptr inbounds i32, i32* %141, i64 %143, !dbg !5923
  %145 = load i32, i32* %144, align 4, !dbg !5923
  %146 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5927
  %147 = getelementptr inbounds %struct.parm, %struct.parm* %146, i32 0, i32 66, !dbg !5928
  %148 = load i32*, i32** %147, align 8, !dbg !5928
  %149 = load i32, i32* %16, align 4, !dbg !5929
  %150 = sext i32 %149 to i64, !dbg !5927
  %151 = getelementptr inbounds i32, i32* %148, i64 %150, !dbg !5927
  store i32 %145, i32* %151, align 4, !dbg !5930
  %152 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5931
  %153 = getelementptr inbounds %struct.parm, %struct.parm* %152, i32 0, i32 67, !dbg !5932
  %154 = load i32*, i32** %153, align 8, !dbg !5932
  %155 = load i32, i32* %11, align 4, !dbg !5933
  %156 = sext i32 %155 to i64, !dbg !5931
  %157 = getelementptr inbounds i32, i32* %154, i64 %156, !dbg !5931
  %158 = load i32, i32* %157, align 4, !dbg !5931
  %159 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5934
  %160 = getelementptr inbounds %struct.parm, %struct.parm* %159, i32 0, i32 67, !dbg !5935
  %161 = load i32*, i32** %160, align 8, !dbg !5935
  %162 = load i32, i32* %16, align 4, !dbg !5936
  %163 = sext i32 %162 to i64, !dbg !5934
  %164 = getelementptr inbounds i32, i32* %161, i64 %163, !dbg !5934
  store i32 %158, i32* %164, align 4, !dbg !5937
  %165 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5938
  %166 = getelementptr inbounds %struct.parm, %struct.parm* %165, i32 0, i32 68, !dbg !5939
  %167 = load i32*, i32** %166, align 8, !dbg !5939
  %168 = load i32, i32* %11, align 4, !dbg !5940
  %169 = sext i32 %168 to i64, !dbg !5938
  %170 = getelementptr inbounds i32, i32* %167, i64 %169, !dbg !5938
  %171 = load i32, i32* %170, align 4, !dbg !5938
  %172 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5941
  %173 = getelementptr inbounds %struct.parm, %struct.parm* %172, i32 0, i32 68, !dbg !5942
  %174 = load i32*, i32** %173, align 8, !dbg !5942
  %175 = load i32, i32* %16, align 4, !dbg !5943
  %176 = sext i32 %175 to i64, !dbg !5941
  %177 = getelementptr inbounds i32, i32* %174, i64 %176, !dbg !5941
  store i32 %171, i32* %177, align 4, !dbg !5944
  %178 = load i32, i32* %16, align 4, !dbg !5945
  %179 = add nsw i32 %178, 1, !dbg !5945
  store i32 %179, i32* %16, align 4, !dbg !5945
  br label %180, !dbg !5946

180:                                              ; preds = %138, %131
  br label %181, !dbg !5947

181:                                              ; preds = %180
  %182 = load i32, i32* %11, align 4, !dbg !5948
  %183 = add nsw i32 %182, 1, !dbg !5948
  store i32 %183, i32* %11, align 4, !dbg !5948
  br label %102, !dbg !5949, !llvm.loop !5950

184:                                              ; preds = %102
  %185 = load i32, i32* %16, align 4, !dbg !5952
  %186 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5953
  %187 = getelementptr inbounds %struct.parm, %struct.parm* %186, i32 0, i32 6, !dbg !5954
  store i32 %185, i32* %187, align 8, !dbg !5955
  store i32 0, i32* %16, align 4, !dbg !5956
  store i32 0, i32* %11, align 4, !dbg !5958
  br label %188, !dbg !5959

188:                                              ; preds = %267, %184
  %189 = load i32, i32* %11, align 4, !dbg !5960
  %190 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5962
  %191 = getelementptr inbounds %struct.parm, %struct.parm* %190, i32 0, i32 16, !dbg !5963
  %192 = load i32, i32* %191, align 8, !dbg !5963
  %193 = icmp slt i32 %189, %192, !dbg !5964
  br i1 %193, label %194, label %270, !dbg !5965

194:                                              ; preds = %188
  %195 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5966
  %196 = getelementptr inbounds %struct.parm, %struct.parm* %195, i32 0, i32 69, !dbg !5968
  %197 = load i32*, i32** %196, align 8, !dbg !5968
  %198 = load i32, i32* %11, align 4, !dbg !5969
  %199 = sext i32 %198 to i64, !dbg !5966
  %200 = getelementptr inbounds i32, i32* %197, i64 %199, !dbg !5966
  %201 = load i32, i32* %200, align 4, !dbg !5966
  %202 = sdiv i32 %201, 3, !dbg !5970
  store i32 %202, i32* %7, align 4, !dbg !5971
  %203 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5972
  %204 = getelementptr inbounds %struct.parm, %struct.parm* %203, i32 0, i32 70, !dbg !5973
  %205 = load i32*, i32** %204, align 8, !dbg !5973
  %206 = load i32, i32* %11, align 4, !dbg !5974
  %207 = sext i32 %206 to i64, !dbg !5972
  %208 = getelementptr inbounds i32, i32* %205, i64 %207, !dbg !5972
  %209 = load i32, i32* %208, align 4, !dbg !5972
  %210 = sdiv i32 %209, 3, !dbg !5975
  store i32 %210, i32* %8, align 4, !dbg !5976
  %211 = load i32*, i32** %6, align 8, !dbg !5977
  %212 = load i32, i32* %7, align 4, !dbg !5979
  %213 = sext i32 %212 to i64, !dbg !5977
  %214 = getelementptr inbounds i32, i32* %211, i64 %213, !dbg !5977
  %215 = load i32, i32* %214, align 4, !dbg !5977
  %216 = icmp ne i32 %215, 0, !dbg !5977
  br i1 %216, label %217, label %224, !dbg !5980

217:                                              ; preds = %194
  %218 = load i32*, i32** %6, align 8, !dbg !5981
  %219 = load i32, i32* %8, align 4, !dbg !5982
  %220 = sext i32 %219 to i64, !dbg !5981
  %221 = getelementptr inbounds i32, i32* %218, i64 %220, !dbg !5981
  %222 = load i32, i32* %221, align 4, !dbg !5981
  %223 = icmp ne i32 %222, 0, !dbg !5981
  br i1 %223, label %266, label %224, !dbg !5983

224:                                              ; preds = %217, %194
  %225 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5984
  %226 = getelementptr inbounds %struct.parm, %struct.parm* %225, i32 0, i32 69, !dbg !5986
  %227 = load i32*, i32** %226, align 8, !dbg !5986
  %228 = load i32, i32* %11, align 4, !dbg !5987
  %229 = sext i32 %228 to i64, !dbg !5984
  %230 = getelementptr inbounds i32, i32* %227, i64 %229, !dbg !5984
  %231 = load i32, i32* %230, align 4, !dbg !5984
  %232 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5988
  %233 = getelementptr inbounds %struct.parm, %struct.parm* %232, i32 0, i32 69, !dbg !5989
  %234 = load i32*, i32** %233, align 8, !dbg !5989
  %235 = load i32, i32* %16, align 4, !dbg !5990
  %236 = sext i32 %235 to i64, !dbg !5988
  %237 = getelementptr inbounds i32, i32* %234, i64 %236, !dbg !5988
  store i32 %231, i32* %237, align 4, !dbg !5991
  %238 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5992
  %239 = getelementptr inbounds %struct.parm, %struct.parm* %238, i32 0, i32 70, !dbg !5993
  %240 = load i32*, i32** %239, align 8, !dbg !5993
  %241 = load i32, i32* %11, align 4, !dbg !5994
  %242 = sext i32 %241 to i64, !dbg !5992
  %243 = getelementptr inbounds i32, i32* %240, i64 %242, !dbg !5992
  %244 = load i32, i32* %243, align 4, !dbg !5992
  %245 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5995
  %246 = getelementptr inbounds %struct.parm, %struct.parm* %245, i32 0, i32 70, !dbg !5996
  %247 = load i32*, i32** %246, align 8, !dbg !5996
  %248 = load i32, i32* %16, align 4, !dbg !5997
  %249 = sext i32 %248 to i64, !dbg !5995
  %250 = getelementptr inbounds i32, i32* %247, i64 %249, !dbg !5995
  store i32 %244, i32* %250, align 4, !dbg !5998
  %251 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !5999
  %252 = getelementptr inbounds %struct.parm, %struct.parm* %251, i32 0, i32 71, !dbg !6000
  %253 = load i32*, i32** %252, align 8, !dbg !6000
  %254 = load i32, i32* %11, align 4, !dbg !6001
  %255 = sext i32 %254 to i64, !dbg !5999
  %256 = getelementptr inbounds i32, i32* %253, i64 %255, !dbg !5999
  %257 = load i32, i32* %256, align 4, !dbg !5999
  %258 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6002
  %259 = getelementptr inbounds %struct.parm, %struct.parm* %258, i32 0, i32 71, !dbg !6003
  %260 = load i32*, i32** %259, align 8, !dbg !6003
  %261 = load i32, i32* %16, align 4, !dbg !6004
  %262 = sext i32 %261 to i64, !dbg !6002
  %263 = getelementptr inbounds i32, i32* %260, i64 %262, !dbg !6002
  store i32 %257, i32* %263, align 4, !dbg !6005
  %264 = load i32, i32* %16, align 4, !dbg !6006
  %265 = add nsw i32 %264, 1, !dbg !6006
  store i32 %265, i32* %16, align 4, !dbg !6006
  br label %266, !dbg !6007

266:                                              ; preds = %224, %217
  br label %267, !dbg !6008

267:                                              ; preds = %266
  %268 = load i32, i32* %11, align 4, !dbg !6009
  %269 = add nsw i32 %268, 1, !dbg !6009
  store i32 %269, i32* %11, align 4, !dbg !6009
  br label %188, !dbg !6010, !llvm.loop !6011

270:                                              ; preds = %188
  %271 = load i32, i32* %16, align 4, !dbg !6013
  %272 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6014
  %273 = getelementptr inbounds %struct.parm, %struct.parm* %272, i32 0, i32 16, !dbg !6015
  store i32 %271, i32* %273, align 8, !dbg !6016
  %274 = load i32, i32* %16, align 4, !dbg !6017
  %275 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6018
  %276 = getelementptr inbounds %struct.parm, %struct.parm* %275, i32 0, i32 7, !dbg !6019
  store i32 %274, i32* %276, align 4, !dbg !6020
  store i32 0, i32* %16, align 4, !dbg !6021
  store i32 0, i32* %11, align 4, !dbg !6023
  br label %277, !dbg !6024

277:                                              ; preds = %384, %270
  %278 = load i32, i32* %11, align 4, !dbg !6025
  %279 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6027
  %280 = getelementptr inbounds %struct.parm, %struct.parm* %279, i32 0, i32 8, !dbg !6028
  %281 = load i32, i32* %280, align 8, !dbg !6028
  %282 = icmp slt i32 %278, %281, !dbg !6029
  br i1 %282, label %283, label %387, !dbg !6030

283:                                              ; preds = %277
  %284 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6031
  %285 = getelementptr inbounds %struct.parm, %struct.parm* %284, i32 0, i32 72, !dbg !6033
  %286 = load i32*, i32** %285, align 8, !dbg !6033
  %287 = load i32, i32* %11, align 4, !dbg !6034
  %288 = sext i32 %287 to i64, !dbg !6031
  %289 = getelementptr inbounds i32, i32* %286, i64 %288, !dbg !6031
  %290 = load i32, i32* %289, align 4, !dbg !6031
  %291 = sdiv i32 %290, 3, !dbg !6035
  store i32 %291, i32* %7, align 4, !dbg !6036
  %292 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6037
  %293 = getelementptr inbounds %struct.parm, %struct.parm* %292, i32 0, i32 73, !dbg !6038
  %294 = load i32*, i32** %293, align 8, !dbg !6038
  %295 = load i32, i32* %11, align 4, !dbg !6039
  %296 = sext i32 %295 to i64, !dbg !6037
  %297 = getelementptr inbounds i32, i32* %294, i64 %296, !dbg !6037
  %298 = load i32, i32* %297, align 4, !dbg !6037
  %299 = sdiv i32 %298, 3, !dbg !6040
  store i32 %299, i32* %8, align 4, !dbg !6041
  %300 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6042
  %301 = getelementptr inbounds %struct.parm, %struct.parm* %300, i32 0, i32 74, !dbg !6043
  %302 = load i32*, i32** %301, align 8, !dbg !6043
  %303 = load i32, i32* %11, align 4, !dbg !6044
  %304 = sext i32 %303 to i64, !dbg !6042
  %305 = getelementptr inbounds i32, i32* %302, i64 %304, !dbg !6042
  %306 = load i32, i32* %305, align 4, !dbg !6042
  %307 = sdiv i32 %306, 3, !dbg !6045
  store i32 %307, i32* %9, align 4, !dbg !6046
  %308 = load i32*, i32** %6, align 8, !dbg !6047
  %309 = load i32, i32* %7, align 4, !dbg !6049
  %310 = sext i32 %309 to i64, !dbg !6047
  %311 = getelementptr inbounds i32, i32* %308, i64 %310, !dbg !6047
  %312 = load i32, i32* %311, align 4, !dbg !6047
  %313 = icmp ne i32 %312, 0, !dbg !6047
  br i1 %313, label %314, label %328, !dbg !6050

314:                                              ; preds = %283
  %315 = load i32*, i32** %6, align 8, !dbg !6051
  %316 = load i32, i32* %8, align 4, !dbg !6052
  %317 = sext i32 %316 to i64, !dbg !6051
  %318 = getelementptr inbounds i32, i32* %315, i64 %317, !dbg !6051
  %319 = load i32, i32* %318, align 4, !dbg !6051
  %320 = icmp ne i32 %319, 0, !dbg !6051
  br i1 %320, label %321, label %328, !dbg !6053

321:                                              ; preds = %314
  %322 = load i32*, i32** %6, align 8, !dbg !6054
  %323 = load i32, i32* %9, align 4, !dbg !6055
  %324 = sext i32 %323 to i64, !dbg !6054
  %325 = getelementptr inbounds i32, i32* %322, i64 %324, !dbg !6054
  %326 = load i32, i32* %325, align 4, !dbg !6054
  %327 = icmp ne i32 %326, 0, !dbg !6054
  br i1 %327, label %383, label %328, !dbg !6056

328:                                              ; preds = %321, %314, %283
  %329 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6057
  %330 = getelementptr inbounds %struct.parm, %struct.parm* %329, i32 0, i32 72, !dbg !6059
  %331 = load i32*, i32** %330, align 8, !dbg !6059
  %332 = load i32, i32* %11, align 4, !dbg !6060
  %333 = sext i32 %332 to i64, !dbg !6057
  %334 = getelementptr inbounds i32, i32* %331, i64 %333, !dbg !6057
  %335 = load i32, i32* %334, align 4, !dbg !6057
  %336 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6061
  %337 = getelementptr inbounds %struct.parm, %struct.parm* %336, i32 0, i32 72, !dbg !6062
  %338 = load i32*, i32** %337, align 8, !dbg !6062
  %339 = load i32, i32* %16, align 4, !dbg !6063
  %340 = sext i32 %339 to i64, !dbg !6061
  %341 = getelementptr inbounds i32, i32* %338, i64 %340, !dbg !6061
  store i32 %335, i32* %341, align 4, !dbg !6064
  %342 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6065
  %343 = getelementptr inbounds %struct.parm, %struct.parm* %342, i32 0, i32 73, !dbg !6066
  %344 = load i32*, i32** %343, align 8, !dbg !6066
  %345 = load i32, i32* %11, align 4, !dbg !6067
  %346 = sext i32 %345 to i64, !dbg !6065
  %347 = getelementptr inbounds i32, i32* %344, i64 %346, !dbg !6065
  %348 = load i32, i32* %347, align 4, !dbg !6065
  %349 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6068
  %350 = getelementptr inbounds %struct.parm, %struct.parm* %349, i32 0, i32 73, !dbg !6069
  %351 = load i32*, i32** %350, align 8, !dbg !6069
  %352 = load i32, i32* %16, align 4, !dbg !6070
  %353 = sext i32 %352 to i64, !dbg !6068
  %354 = getelementptr inbounds i32, i32* %351, i64 %353, !dbg !6068
  store i32 %348, i32* %354, align 4, !dbg !6071
  %355 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6072
  %356 = getelementptr inbounds %struct.parm, %struct.parm* %355, i32 0, i32 74, !dbg !6073
  %357 = load i32*, i32** %356, align 8, !dbg !6073
  %358 = load i32, i32* %11, align 4, !dbg !6074
  %359 = sext i32 %358 to i64, !dbg !6072
  %360 = getelementptr inbounds i32, i32* %357, i64 %359, !dbg !6072
  %361 = load i32, i32* %360, align 4, !dbg !6072
  %362 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6075
  %363 = getelementptr inbounds %struct.parm, %struct.parm* %362, i32 0, i32 74, !dbg !6076
  %364 = load i32*, i32** %363, align 8, !dbg !6076
  %365 = load i32, i32* %16, align 4, !dbg !6077
  %366 = sext i32 %365 to i64, !dbg !6075
  %367 = getelementptr inbounds i32, i32* %364, i64 %366, !dbg !6075
  store i32 %361, i32* %367, align 4, !dbg !6078
  %368 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6079
  %369 = getelementptr inbounds %struct.parm, %struct.parm* %368, i32 0, i32 75, !dbg !6080
  %370 = load i32*, i32** %369, align 8, !dbg !6080
  %371 = load i32, i32* %11, align 4, !dbg !6081
  %372 = sext i32 %371 to i64, !dbg !6079
  %373 = getelementptr inbounds i32, i32* %370, i64 %372, !dbg !6079
  %374 = load i32, i32* %373, align 4, !dbg !6079
  %375 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6082
  %376 = getelementptr inbounds %struct.parm, %struct.parm* %375, i32 0, i32 75, !dbg !6083
  %377 = load i32*, i32** %376, align 8, !dbg !6083
  %378 = load i32, i32* %16, align 4, !dbg !6084
  %379 = sext i32 %378 to i64, !dbg !6082
  %380 = getelementptr inbounds i32, i32* %377, i64 %379, !dbg !6082
  store i32 %374, i32* %380, align 4, !dbg !6085
  %381 = load i32, i32* %16, align 4, !dbg !6086
  %382 = add nsw i32 %381, 1, !dbg !6086
  store i32 %382, i32* %16, align 4, !dbg !6086
  br label %383, !dbg !6087

383:                                              ; preds = %328, %321
  br label %384, !dbg !6088

384:                                              ; preds = %383
  %385 = load i32, i32* %11, align 4, !dbg !6089
  %386 = add nsw i32 %385, 1, !dbg !6089
  store i32 %386, i32* %11, align 4, !dbg !6089
  br label %277, !dbg !6090, !llvm.loop !6091

387:                                              ; preds = %277
  %388 = load i32, i32* %16, align 4, !dbg !6093
  %389 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6094
  %390 = getelementptr inbounds %struct.parm, %struct.parm* %389, i32 0, i32 8, !dbg !6095
  store i32 %388, i32* %390, align 8, !dbg !6096
  store i32 0, i32* %16, align 4, !dbg !6097
  store i32 0, i32* %11, align 4, !dbg !6099
  br label %391, !dbg !6100

391:                                              ; preds = %498, %387
  %392 = load i32, i32* %11, align 4, !dbg !6101
  %393 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6103
  %394 = getelementptr inbounds %struct.parm, %struct.parm* %393, i32 0, i32 17, !dbg !6104
  %395 = load i32, i32* %394, align 4, !dbg !6104
  %396 = icmp slt i32 %392, %395, !dbg !6105
  br i1 %396, label %397, label %501, !dbg !6106

397:                                              ; preds = %391
  %398 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6107
  %399 = getelementptr inbounds %struct.parm, %struct.parm* %398, i32 0, i32 76, !dbg !6109
  %400 = load i32*, i32** %399, align 8, !dbg !6109
  %401 = load i32, i32* %11, align 4, !dbg !6110
  %402 = sext i32 %401 to i64, !dbg !6107
  %403 = getelementptr inbounds i32, i32* %400, i64 %402, !dbg !6107
  %404 = load i32, i32* %403, align 4, !dbg !6107
  %405 = sdiv i32 %404, 3, !dbg !6111
  store i32 %405, i32* %7, align 4, !dbg !6112
  %406 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6113
  %407 = getelementptr inbounds %struct.parm, %struct.parm* %406, i32 0, i32 77, !dbg !6114
  %408 = load i32*, i32** %407, align 8, !dbg !6114
  %409 = load i32, i32* %11, align 4, !dbg !6115
  %410 = sext i32 %409 to i64, !dbg !6113
  %411 = getelementptr inbounds i32, i32* %408, i64 %410, !dbg !6113
  %412 = load i32, i32* %411, align 4, !dbg !6113
  %413 = sdiv i32 %412, 3, !dbg !6116
  store i32 %413, i32* %8, align 4, !dbg !6117
  %414 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6118
  %415 = getelementptr inbounds %struct.parm, %struct.parm* %414, i32 0, i32 78, !dbg !6119
  %416 = load i32*, i32** %415, align 8, !dbg !6119
  %417 = load i32, i32* %11, align 4, !dbg !6120
  %418 = sext i32 %417 to i64, !dbg !6118
  %419 = getelementptr inbounds i32, i32* %416, i64 %418, !dbg !6118
  %420 = load i32, i32* %419, align 4, !dbg !6118
  %421 = sdiv i32 %420, 3, !dbg !6121
  store i32 %421, i32* %9, align 4, !dbg !6122
  %422 = load i32*, i32** %6, align 8, !dbg !6123
  %423 = load i32, i32* %7, align 4, !dbg !6125
  %424 = sext i32 %423 to i64, !dbg !6123
  %425 = getelementptr inbounds i32, i32* %422, i64 %424, !dbg !6123
  %426 = load i32, i32* %425, align 4, !dbg !6123
  %427 = icmp ne i32 %426, 0, !dbg !6123
  br i1 %427, label %428, label %442, !dbg !6126

428:                                              ; preds = %397
  %429 = load i32*, i32** %6, align 8, !dbg !6127
  %430 = load i32, i32* %8, align 4, !dbg !6128
  %431 = sext i32 %430 to i64, !dbg !6127
  %432 = getelementptr inbounds i32, i32* %429, i64 %431, !dbg !6127
  %433 = load i32, i32* %432, align 4, !dbg !6127
  %434 = icmp ne i32 %433, 0, !dbg !6127
  br i1 %434, label %435, label %442, !dbg !6129

435:                                              ; preds = %428
  %436 = load i32*, i32** %6, align 8, !dbg !6130
  %437 = load i32, i32* %9, align 4, !dbg !6131
  %438 = sext i32 %437 to i64, !dbg !6130
  %439 = getelementptr inbounds i32, i32* %436, i64 %438, !dbg !6130
  %440 = load i32, i32* %439, align 4, !dbg !6130
  %441 = icmp ne i32 %440, 0, !dbg !6130
  br i1 %441, label %497, label %442, !dbg !6132

442:                                              ; preds = %435, %428, %397
  %443 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6133
  %444 = getelementptr inbounds %struct.parm, %struct.parm* %443, i32 0, i32 76, !dbg !6135
  %445 = load i32*, i32** %444, align 8, !dbg !6135
  %446 = load i32, i32* %11, align 4, !dbg !6136
  %447 = sext i32 %446 to i64, !dbg !6133
  %448 = getelementptr inbounds i32, i32* %445, i64 %447, !dbg !6133
  %449 = load i32, i32* %448, align 4, !dbg !6133
  %450 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6137
  %451 = getelementptr inbounds %struct.parm, %struct.parm* %450, i32 0, i32 76, !dbg !6138
  %452 = load i32*, i32** %451, align 8, !dbg !6138
  %453 = load i32, i32* %16, align 4, !dbg !6139
  %454 = sext i32 %453 to i64, !dbg !6137
  %455 = getelementptr inbounds i32, i32* %452, i64 %454, !dbg !6137
  store i32 %449, i32* %455, align 4, !dbg !6140
  %456 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6141
  %457 = getelementptr inbounds %struct.parm, %struct.parm* %456, i32 0, i32 77, !dbg !6142
  %458 = load i32*, i32** %457, align 8, !dbg !6142
  %459 = load i32, i32* %11, align 4, !dbg !6143
  %460 = sext i32 %459 to i64, !dbg !6141
  %461 = getelementptr inbounds i32, i32* %458, i64 %460, !dbg !6141
  %462 = load i32, i32* %461, align 4, !dbg !6141
  %463 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6144
  %464 = getelementptr inbounds %struct.parm, %struct.parm* %463, i32 0, i32 77, !dbg !6145
  %465 = load i32*, i32** %464, align 8, !dbg !6145
  %466 = load i32, i32* %16, align 4, !dbg !6146
  %467 = sext i32 %466 to i64, !dbg !6144
  %468 = getelementptr inbounds i32, i32* %465, i64 %467, !dbg !6144
  store i32 %462, i32* %468, align 4, !dbg !6147
  %469 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6148
  %470 = getelementptr inbounds %struct.parm, %struct.parm* %469, i32 0, i32 78, !dbg !6149
  %471 = load i32*, i32** %470, align 8, !dbg !6149
  %472 = load i32, i32* %11, align 4, !dbg !6150
  %473 = sext i32 %472 to i64, !dbg !6148
  %474 = getelementptr inbounds i32, i32* %471, i64 %473, !dbg !6148
  %475 = load i32, i32* %474, align 4, !dbg !6148
  %476 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6151
  %477 = getelementptr inbounds %struct.parm, %struct.parm* %476, i32 0, i32 78, !dbg !6152
  %478 = load i32*, i32** %477, align 8, !dbg !6152
  %479 = load i32, i32* %16, align 4, !dbg !6153
  %480 = sext i32 %479 to i64, !dbg !6151
  %481 = getelementptr inbounds i32, i32* %478, i64 %480, !dbg !6151
  store i32 %475, i32* %481, align 4, !dbg !6154
  %482 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6155
  %483 = getelementptr inbounds %struct.parm, %struct.parm* %482, i32 0, i32 79, !dbg !6156
  %484 = load i32*, i32** %483, align 8, !dbg !6156
  %485 = load i32, i32* %11, align 4, !dbg !6157
  %486 = sext i32 %485 to i64, !dbg !6155
  %487 = getelementptr inbounds i32, i32* %484, i64 %486, !dbg !6155
  %488 = load i32, i32* %487, align 4, !dbg !6155
  %489 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6158
  %490 = getelementptr inbounds %struct.parm, %struct.parm* %489, i32 0, i32 79, !dbg !6159
  %491 = load i32*, i32** %490, align 8, !dbg !6159
  %492 = load i32, i32* %16, align 4, !dbg !6160
  %493 = sext i32 %492 to i64, !dbg !6158
  %494 = getelementptr inbounds i32, i32* %491, i64 %493, !dbg !6158
  store i32 %488, i32* %494, align 4, !dbg !6161
  %495 = load i32, i32* %16, align 4, !dbg !6162
  %496 = add nsw i32 %495, 1, !dbg !6162
  store i32 %496, i32* %16, align 4, !dbg !6162
  br label %497, !dbg !6163

497:                                              ; preds = %442, %435
  br label %498, !dbg !6164

498:                                              ; preds = %497
  %499 = load i32, i32* %11, align 4, !dbg !6165
  %500 = add nsw i32 %499, 1, !dbg !6165
  store i32 %500, i32* %11, align 4, !dbg !6165
  br label %391, !dbg !6166, !llvm.loop !6167

501:                                              ; preds = %391
  %502 = load i32, i32* %16, align 4, !dbg !6169
  %503 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6170
  %504 = getelementptr inbounds %struct.parm, %struct.parm* %503, i32 0, i32 17, !dbg !6171
  store i32 %502, i32* %504, align 4, !dbg !6172
  store i32 0, i32* %7, align 4, !dbg !6173
  br label %505, !dbg !6175

505:                                              ; preds = %518, %501
  %506 = load i32, i32* %7, align 4, !dbg !6176
  %507 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6178
  %508 = getelementptr inbounds %struct.parm, %struct.parm* %507, i32 0, i32 4, !dbg !6179
  %509 = load i32, i32* %508, align 8, !dbg !6179
  %510 = icmp slt i32 %506, %509, !dbg !6180
  br i1 %510, label %511, label %521, !dbg !6181

511:                                              ; preds = %505
  %512 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6182
  %513 = getelementptr inbounds %struct.parm, %struct.parm* %512, i32 0, i32 91, !dbg !6183
  %514 = load i32*, i32** %513, align 8, !dbg !6183
  %515 = load i32, i32* %7, align 4, !dbg !6184
  %516 = sext i32 %515 to i64, !dbg !6182
  %517 = getelementptr inbounds i32, i32* %514, i64 %516, !dbg !6182
  store i32 0, i32* %517, align 4, !dbg !6185
  br label %518, !dbg !6182

518:                                              ; preds = %511
  %519 = load i32, i32* %7, align 4, !dbg !6186
  %520 = add nsw i32 %519, 1, !dbg !6186
  store i32 %520, i32* %7, align 4, !dbg !6186
  br label %505, !dbg !6187, !llvm.loop !6188

521:                                              ; preds = %505
  %522 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6190
  %523 = getelementptr inbounds %struct.parm, %struct.parm* %522, i32 0, i32 4, !dbg !6191
  %524 = load i32, i32* %523, align 8, !dbg !6191
  %525 = sext i32 %524 to i64, !dbg !6190
  %526 = mul i64 48, %525, !dbg !6192
  %527 = call i8* @get(i64 %526), !dbg !6193
  %528 = bitcast i8* %527 to i32*, !dbg !6194
  store i32* %528, i32** %21, align 8, !dbg !6195
  store i32 0, i32* %16, align 4, !dbg !6196
  store i32 0, i32* %11, align 4, !dbg !6198
  br label %529, !dbg !6199

529:                                              ; preds = %722, %521
  %530 = load i32, i32* %11, align 4, !dbg !6200
  %531 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6202
  %532 = getelementptr inbounds %struct.parm, %struct.parm* %531, i32 0, i32 10, !dbg !6203
  %533 = load i32, i32* %532, align 8, !dbg !6203
  %534 = icmp slt i32 %530, %533, !dbg !6204
  br i1 %534, label %535, label %725, !dbg !6205

535:                                              ; preds = %529
  %536 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6206
  %537 = getelementptr inbounds %struct.parm, %struct.parm* %536, i32 0, i32 80, !dbg !6208
  %538 = load i32*, i32** %537, align 8, !dbg !6208
  %539 = load i32, i32* %11, align 4, !dbg !6209
  %540 = sext i32 %539 to i64, !dbg !6206
  %541 = getelementptr inbounds i32, i32* %538, i64 %540, !dbg !6206
  %542 = load i32, i32* %541, align 4, !dbg !6206
  %543 = sdiv i32 %542, 3, !dbg !6210
  store i32 %543, i32* %7, align 4, !dbg !6211
  %544 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6212
  %545 = getelementptr inbounds %struct.parm, %struct.parm* %544, i32 0, i32 81, !dbg !6213
  %546 = load i32*, i32** %545, align 8, !dbg !6213
  %547 = load i32, i32* %11, align 4, !dbg !6214
  %548 = sext i32 %547 to i64, !dbg !6212
  %549 = getelementptr inbounds i32, i32* %546, i64 %548, !dbg !6212
  %550 = load i32, i32* %549, align 4, !dbg !6212
  %551 = sdiv i32 %550, 3, !dbg !6215
  store i32 %551, i32* %8, align 4, !dbg !6216
  %552 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6217
  %553 = getelementptr inbounds %struct.parm, %struct.parm* %552, i32 0, i32 82, !dbg !6218
  %554 = load i32*, i32** %553, align 8, !dbg !6218
  %555 = load i32, i32* %11, align 4, !dbg !6219
  %556 = sext i32 %555 to i64, !dbg !6217
  %557 = getelementptr inbounds i32, i32* %554, i64 %556, !dbg !6217
  %558 = load i32, i32* %557, align 4, !dbg !6217
  %559 = sdiv i32 %558, 3, !dbg !6220
  store i32 %559, i32* %9, align 4, !dbg !6221
  %560 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6222
  %561 = getelementptr inbounds %struct.parm, %struct.parm* %560, i32 0, i32 83, !dbg !6223
  %562 = load i32*, i32** %561, align 8, !dbg !6223
  %563 = load i32, i32* %11, align 4, !dbg !6224
  %564 = sext i32 %563 to i64, !dbg !6222
  %565 = getelementptr inbounds i32, i32* %562, i64 %564, !dbg !6222
  %566 = load i32, i32* %565, align 4, !dbg !6222
  %567 = sdiv i32 %566, 3, !dbg !6225
  store i32 %567, i32* %10, align 4, !dbg !6226
  %568 = load i32, i32* %9, align 4, !dbg !6227
  %569 = icmp sgt i32 %568, 0, !dbg !6227
  br i1 %569, label %570, label %572, !dbg !6227

570:                                              ; preds = %535
  %571 = load i32, i32* %9, align 4, !dbg !6227
  br label %575, !dbg !6227

572:                                              ; preds = %535
  %573 = load i32, i32* %9, align 4, !dbg !6227
  %574 = sub nsw i32 0, %573, !dbg !6227
  br label %575, !dbg !6227

575:                                              ; preds = %572, %570
  %576 = phi i32 [ %571, %570 ], [ %574, %572 ], !dbg !6227
  store i32 %576, i32* %19, align 4, !dbg !6228
  %577 = load i32, i32* %10, align 4, !dbg !6229
  %578 = icmp sgt i32 %577, 0, !dbg !6229
  br i1 %578, label %579, label %581, !dbg !6229

579:                                              ; preds = %575
  %580 = load i32, i32* %10, align 4, !dbg !6229
  br label %584, !dbg !6229

581:                                              ; preds = %575
  %582 = load i32, i32* %10, align 4, !dbg !6229
  %583 = sub nsw i32 0, %582, !dbg !6229
  br label %584, !dbg !6229

584:                                              ; preds = %581, %579
  %585 = phi i32 [ %580, %579 ], [ %583, %581 ], !dbg !6229
  store i32 %585, i32* %20, align 4, !dbg !6230
  %586 = load i32*, i32** %6, align 8, !dbg !6231
  %587 = load i32, i32* %7, align 4, !dbg !6233
  %588 = sext i32 %587 to i64, !dbg !6231
  %589 = getelementptr inbounds i32, i32* %586, i64 %588, !dbg !6231
  %590 = load i32, i32* %589, align 4, !dbg !6231
  %591 = icmp ne i32 %590, 0, !dbg !6231
  br i1 %591, label %592, label %613, !dbg !6234

592:                                              ; preds = %584
  %593 = load i32*, i32** %6, align 8, !dbg !6235
  %594 = load i32, i32* %8, align 4, !dbg !6236
  %595 = sext i32 %594 to i64, !dbg !6235
  %596 = getelementptr inbounds i32, i32* %593, i64 %595, !dbg !6235
  %597 = load i32, i32* %596, align 4, !dbg !6235
  %598 = icmp ne i32 %597, 0, !dbg !6235
  br i1 %598, label %599, label %613, !dbg !6237

599:                                              ; preds = %592
  %600 = load i32*, i32** %6, align 8, !dbg !6238
  %601 = load i32, i32* %19, align 4, !dbg !6239
  %602 = sext i32 %601 to i64, !dbg !6238
  %603 = getelementptr inbounds i32, i32* %600, i64 %602, !dbg !6238
  %604 = load i32, i32* %603, align 4, !dbg !6238
  %605 = icmp ne i32 %604, 0, !dbg !6238
  br i1 %605, label %606, label %613, !dbg !6240

606:                                              ; preds = %599
  %607 = load i32*, i32** %6, align 8, !dbg !6241
  %608 = load i32, i32* %20, align 4, !dbg !6242
  %609 = sext i32 %608 to i64, !dbg !6241
  %610 = getelementptr inbounds i32, i32* %607, i64 %609, !dbg !6241
  %611 = load i32, i32* %610, align 4, !dbg !6241
  %612 = icmp ne i32 %611, 0, !dbg !6241
  br i1 %612, label %721, label %613, !dbg !6243

613:                                              ; preds = %606, %599, %592, %584
  %614 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6244
  %615 = getelementptr inbounds %struct.parm, %struct.parm* %614, i32 0, i32 80, !dbg !6246
  %616 = load i32*, i32** %615, align 8, !dbg !6246
  %617 = load i32, i32* %11, align 4, !dbg !6247
  %618 = sext i32 %617 to i64, !dbg !6244
  %619 = getelementptr inbounds i32, i32* %616, i64 %618, !dbg !6244
  %620 = load i32, i32* %619, align 4, !dbg !6244
  %621 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6248
  %622 = getelementptr inbounds %struct.parm, %struct.parm* %621, i32 0, i32 80, !dbg !6249
  %623 = load i32*, i32** %622, align 8, !dbg !6249
  %624 = load i32, i32* %16, align 4, !dbg !6250
  %625 = sext i32 %624 to i64, !dbg !6248
  %626 = getelementptr inbounds i32, i32* %623, i64 %625, !dbg !6248
  store i32 %620, i32* %626, align 4, !dbg !6251
  %627 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6252
  %628 = getelementptr inbounds %struct.parm, %struct.parm* %627, i32 0, i32 81, !dbg !6253
  %629 = load i32*, i32** %628, align 8, !dbg !6253
  %630 = load i32, i32* %11, align 4, !dbg !6254
  %631 = sext i32 %630 to i64, !dbg !6252
  %632 = getelementptr inbounds i32, i32* %629, i64 %631, !dbg !6252
  %633 = load i32, i32* %632, align 4, !dbg !6252
  %634 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6255
  %635 = getelementptr inbounds %struct.parm, %struct.parm* %634, i32 0, i32 81, !dbg !6256
  %636 = load i32*, i32** %635, align 8, !dbg !6256
  %637 = load i32, i32* %16, align 4, !dbg !6257
  %638 = sext i32 %637 to i64, !dbg !6255
  %639 = getelementptr inbounds i32, i32* %636, i64 %638, !dbg !6255
  store i32 %633, i32* %639, align 4, !dbg !6258
  %640 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6259
  %641 = getelementptr inbounds %struct.parm, %struct.parm* %640, i32 0, i32 82, !dbg !6260
  %642 = load i32*, i32** %641, align 8, !dbg !6260
  %643 = load i32, i32* %11, align 4, !dbg !6261
  %644 = sext i32 %643 to i64, !dbg !6259
  %645 = getelementptr inbounds i32, i32* %642, i64 %644, !dbg !6259
  %646 = load i32, i32* %645, align 4, !dbg !6259
  %647 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6262
  %648 = getelementptr inbounds %struct.parm, %struct.parm* %647, i32 0, i32 82, !dbg !6263
  %649 = load i32*, i32** %648, align 8, !dbg !6263
  %650 = load i32, i32* %16, align 4, !dbg !6264
  %651 = sext i32 %650 to i64, !dbg !6262
  %652 = getelementptr inbounds i32, i32* %649, i64 %651, !dbg !6262
  store i32 %646, i32* %652, align 4, !dbg !6265
  %653 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6266
  %654 = getelementptr inbounds %struct.parm, %struct.parm* %653, i32 0, i32 83, !dbg !6267
  %655 = load i32*, i32** %654, align 8, !dbg !6267
  %656 = load i32, i32* %11, align 4, !dbg !6268
  %657 = sext i32 %656 to i64, !dbg !6266
  %658 = getelementptr inbounds i32, i32* %655, i64 %657, !dbg !6266
  %659 = load i32, i32* %658, align 4, !dbg !6266
  %660 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6269
  %661 = getelementptr inbounds %struct.parm, %struct.parm* %660, i32 0, i32 83, !dbg !6270
  %662 = load i32*, i32** %661, align 8, !dbg !6270
  %663 = load i32, i32* %16, align 4, !dbg !6271
  %664 = sext i32 %663 to i64, !dbg !6269
  %665 = getelementptr inbounds i32, i32* %662, i64 %664, !dbg !6269
  store i32 %659, i32* %665, align 4, !dbg !6272
  %666 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6273
  %667 = getelementptr inbounds %struct.parm, %struct.parm* %666, i32 0, i32 84, !dbg !6274
  %668 = load i32*, i32** %667, align 8, !dbg !6274
  %669 = load i32, i32* %11, align 4, !dbg !6275
  %670 = sext i32 %669 to i64, !dbg !6273
  %671 = getelementptr inbounds i32, i32* %668, i64 %670, !dbg !6273
  %672 = load i32, i32* %671, align 4, !dbg !6273
  %673 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6276
  %674 = getelementptr inbounds %struct.parm, %struct.parm* %673, i32 0, i32 84, !dbg !6277
  %675 = load i32*, i32** %674, align 8, !dbg !6277
  %676 = load i32, i32* %16, align 4, !dbg !6278
  %677 = sext i32 %676 to i64, !dbg !6276
  %678 = getelementptr inbounds i32, i32* %675, i64 %677, !dbg !6276
  store i32 %672, i32* %678, align 4, !dbg !6279
  %679 = load i32, i32* %16, align 4, !dbg !6280
  %680 = add nsw i32 %679, 1, !dbg !6280
  store i32 %680, i32* %16, align 4, !dbg !6280
  %681 = load i32, i32* %9, align 4, !dbg !6281
  %682 = icmp sge i32 %681, 0, !dbg !6283
  br i1 %682, label %683, label %720, !dbg !6284

683:                                              ; preds = %613
  %684 = load i32, i32* %10, align 4, !dbg !6285
  %685 = icmp sge i32 %684, 0, !dbg !6286
  br i1 %685, label %686, label %720, !dbg !6287

686:                                              ; preds = %683
  %687 = load i32, i32* %7, align 4, !dbg !6288
  %688 = load i32, i32* %10, align 4, !dbg !6290
  %689 = icmp slt i32 %687, %688, !dbg !6291
  br i1 %689, label %690, label %692, !dbg !6288

690:                                              ; preds = %686
  %691 = load i32, i32* %7, align 4, !dbg !6292
  br label %694, !dbg !6288

692:                                              ; preds = %686
  %693 = load i32, i32* %10, align 4, !dbg !6293
  br label %694, !dbg !6288

694:                                              ; preds = %692, %690
  %695 = phi i32 [ %691, %690 ], [ %693, %692 ], !dbg !6288
  store i32 %695, i32* %18, align 4, !dbg !6294
  %696 = load i32, i32* %7, align 4, !dbg !6295
  %697 = load i32, i32* %10, align 4, !dbg !6296
  %698 = icmp sgt i32 %696, %697, !dbg !6297
  br i1 %698, label %699, label %701, !dbg !6295

699:                                              ; preds = %694
  %700 = load i32, i32* %7, align 4, !dbg !6298
  br label %703, !dbg !6295

701:                                              ; preds = %694
  %702 = load i32, i32* %10, align 4, !dbg !6299
  br label %703, !dbg !6295

703:                                              ; preds = %701, %699
  %704 = phi i32 [ %700, %699 ], [ %702, %701 ], !dbg !6295
  store i32 %704, i32* %17, align 4, !dbg !6300
  %705 = load i32, i32* %17, align 4, !dbg !6301
  %706 = load i32*, i32** %21, align 8, !dbg !6302
  %707 = load i32, i32* %18, align 4, !dbg !6303
  %708 = mul nsw i32 12, %707, !dbg !6304
  %709 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6305
  %710 = getelementptr inbounds %struct.parm, %struct.parm* %709, i32 0, i32 91, !dbg !6306
  %711 = load i32*, i32** %710, align 8, !dbg !6306
  %712 = load i32, i32* %18, align 4, !dbg !6307
  %713 = sext i32 %712 to i64, !dbg !6305
  %714 = getelementptr inbounds i32, i32* %711, i64 %713, !dbg !6305
  %715 = load i32, i32* %714, align 4, !dbg !6308
  %716 = add nsw i32 %715, 1, !dbg !6308
  store i32 %716, i32* %714, align 4, !dbg !6308
  %717 = add nsw i32 %708, %715, !dbg !6309
  %718 = sext i32 %717 to i64, !dbg !6302
  %719 = getelementptr inbounds i32, i32* %706, i64 %718, !dbg !6302
  store i32 %705, i32* %719, align 4, !dbg !6310
  br label %720, !dbg !6311

720:                                              ; preds = %703, %683, %613
  br label %721, !dbg !6312

721:                                              ; preds = %720, %606
  br label %722, !dbg !6313

722:                                              ; preds = %721
  %723 = load i32, i32* %11, align 4, !dbg !6314
  %724 = add nsw i32 %723, 1, !dbg !6314
  store i32 %724, i32* %11, align 4, !dbg !6314
  br label %529, !dbg !6315, !llvm.loop !6316

725:                                              ; preds = %529
  %726 = load i32, i32* %16, align 4, !dbg !6318
  %727 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6319
  %728 = getelementptr inbounds %struct.parm, %struct.parm* %727, i32 0, i32 10, !dbg !6320
  store i32 %726, i32* %728, align 8, !dbg !6321
  store i32 0, i32* %16, align 4, !dbg !6322
  store i32 0, i32* %11, align 4, !dbg !6324
  br label %729, !dbg !6325

729:                                              ; preds = %922, %725
  %730 = load i32, i32* %11, align 4, !dbg !6326
  %731 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6328
  %732 = getelementptr inbounds %struct.parm, %struct.parm* %731, i32 0, i32 18, !dbg !6329
  %733 = load i32, i32* %732, align 8, !dbg !6329
  %734 = icmp slt i32 %730, %733, !dbg !6330
  br i1 %734, label %735, label %925, !dbg !6331

735:                                              ; preds = %729
  %736 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6332
  %737 = getelementptr inbounds %struct.parm, %struct.parm* %736, i32 0, i32 85, !dbg !6334
  %738 = load i32*, i32** %737, align 8, !dbg !6334
  %739 = load i32, i32* %11, align 4, !dbg !6335
  %740 = sext i32 %739 to i64, !dbg !6332
  %741 = getelementptr inbounds i32, i32* %738, i64 %740, !dbg !6332
  %742 = load i32, i32* %741, align 4, !dbg !6332
  %743 = sdiv i32 %742, 3, !dbg !6336
  store i32 %743, i32* %7, align 4, !dbg !6337
  %744 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6338
  %745 = getelementptr inbounds %struct.parm, %struct.parm* %744, i32 0, i32 86, !dbg !6339
  %746 = load i32*, i32** %745, align 8, !dbg !6339
  %747 = load i32, i32* %11, align 4, !dbg !6340
  %748 = sext i32 %747 to i64, !dbg !6338
  %749 = getelementptr inbounds i32, i32* %746, i64 %748, !dbg !6338
  %750 = load i32, i32* %749, align 4, !dbg !6338
  %751 = sdiv i32 %750, 3, !dbg !6341
  store i32 %751, i32* %8, align 4, !dbg !6342
  %752 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6343
  %753 = getelementptr inbounds %struct.parm, %struct.parm* %752, i32 0, i32 87, !dbg !6344
  %754 = load i32*, i32** %753, align 8, !dbg !6344
  %755 = load i32, i32* %11, align 4, !dbg !6345
  %756 = sext i32 %755 to i64, !dbg !6343
  %757 = getelementptr inbounds i32, i32* %754, i64 %756, !dbg !6343
  %758 = load i32, i32* %757, align 4, !dbg !6343
  %759 = sdiv i32 %758, 3, !dbg !6346
  store i32 %759, i32* %9, align 4, !dbg !6347
  %760 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6348
  %761 = getelementptr inbounds %struct.parm, %struct.parm* %760, i32 0, i32 88, !dbg !6349
  %762 = load i32*, i32** %761, align 8, !dbg !6349
  %763 = load i32, i32* %11, align 4, !dbg !6350
  %764 = sext i32 %763 to i64, !dbg !6348
  %765 = getelementptr inbounds i32, i32* %762, i64 %764, !dbg !6348
  %766 = load i32, i32* %765, align 4, !dbg !6348
  %767 = sdiv i32 %766, 3, !dbg !6351
  store i32 %767, i32* %10, align 4, !dbg !6352
  %768 = load i32, i32* %9, align 4, !dbg !6353
  %769 = icmp sgt i32 %768, 0, !dbg !6353
  br i1 %769, label %770, label %772, !dbg !6353

770:                                              ; preds = %735
  %771 = load i32, i32* %9, align 4, !dbg !6353
  br label %775, !dbg !6353

772:                                              ; preds = %735
  %773 = load i32, i32* %9, align 4, !dbg !6353
  %774 = sub nsw i32 0, %773, !dbg !6353
  br label %775, !dbg !6353

775:                                              ; preds = %772, %770
  %776 = phi i32 [ %771, %770 ], [ %774, %772 ], !dbg !6353
  store i32 %776, i32* %19, align 4, !dbg !6354
  %777 = load i32, i32* %10, align 4, !dbg !6355
  %778 = icmp sgt i32 %777, 0, !dbg !6355
  br i1 %778, label %779, label %781, !dbg !6355

779:                                              ; preds = %775
  %780 = load i32, i32* %10, align 4, !dbg !6355
  br label %784, !dbg !6355

781:                                              ; preds = %775
  %782 = load i32, i32* %10, align 4, !dbg !6355
  %783 = sub nsw i32 0, %782, !dbg !6355
  br label %784, !dbg !6355

784:                                              ; preds = %781, %779
  %785 = phi i32 [ %780, %779 ], [ %783, %781 ], !dbg !6355
  store i32 %785, i32* %20, align 4, !dbg !6356
  %786 = load i32*, i32** %6, align 8, !dbg !6357
  %787 = load i32, i32* %7, align 4, !dbg !6359
  %788 = sext i32 %787 to i64, !dbg !6357
  %789 = getelementptr inbounds i32, i32* %786, i64 %788, !dbg !6357
  %790 = load i32, i32* %789, align 4, !dbg !6357
  %791 = icmp ne i32 %790, 0, !dbg !6357
  br i1 %791, label %792, label %813, !dbg !6360

792:                                              ; preds = %784
  %793 = load i32*, i32** %6, align 8, !dbg !6361
  %794 = load i32, i32* %8, align 4, !dbg !6362
  %795 = sext i32 %794 to i64, !dbg !6361
  %796 = getelementptr inbounds i32, i32* %793, i64 %795, !dbg !6361
  %797 = load i32, i32* %796, align 4, !dbg !6361
  %798 = icmp ne i32 %797, 0, !dbg !6361
  br i1 %798, label %799, label %813, !dbg !6363

799:                                              ; preds = %792
  %800 = load i32*, i32** %6, align 8, !dbg !6364
  %801 = load i32, i32* %19, align 4, !dbg !6365
  %802 = sext i32 %801 to i64, !dbg !6364
  %803 = getelementptr inbounds i32, i32* %800, i64 %802, !dbg !6364
  %804 = load i32, i32* %803, align 4, !dbg !6364
  %805 = icmp ne i32 %804, 0, !dbg !6364
  br i1 %805, label %806, label %813, !dbg !6366

806:                                              ; preds = %799
  %807 = load i32*, i32** %6, align 8, !dbg !6367
  %808 = load i32, i32* %20, align 4, !dbg !6368
  %809 = sext i32 %808 to i64, !dbg !6367
  %810 = getelementptr inbounds i32, i32* %807, i64 %809, !dbg !6367
  %811 = load i32, i32* %810, align 4, !dbg !6367
  %812 = icmp ne i32 %811, 0, !dbg !6367
  br i1 %812, label %921, label %813, !dbg !6369

813:                                              ; preds = %806, %799, %792, %784
  %814 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6370
  %815 = getelementptr inbounds %struct.parm, %struct.parm* %814, i32 0, i32 85, !dbg !6372
  %816 = load i32*, i32** %815, align 8, !dbg !6372
  %817 = load i32, i32* %11, align 4, !dbg !6373
  %818 = sext i32 %817 to i64, !dbg !6370
  %819 = getelementptr inbounds i32, i32* %816, i64 %818, !dbg !6370
  %820 = load i32, i32* %819, align 4, !dbg !6370
  %821 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6374
  %822 = getelementptr inbounds %struct.parm, %struct.parm* %821, i32 0, i32 85, !dbg !6375
  %823 = load i32*, i32** %822, align 8, !dbg !6375
  %824 = load i32, i32* %16, align 4, !dbg !6376
  %825 = sext i32 %824 to i64, !dbg !6374
  %826 = getelementptr inbounds i32, i32* %823, i64 %825, !dbg !6374
  store i32 %820, i32* %826, align 4, !dbg !6377
  %827 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6378
  %828 = getelementptr inbounds %struct.parm, %struct.parm* %827, i32 0, i32 86, !dbg !6379
  %829 = load i32*, i32** %828, align 8, !dbg !6379
  %830 = load i32, i32* %11, align 4, !dbg !6380
  %831 = sext i32 %830 to i64, !dbg !6378
  %832 = getelementptr inbounds i32, i32* %829, i64 %831, !dbg !6378
  %833 = load i32, i32* %832, align 4, !dbg !6378
  %834 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6381
  %835 = getelementptr inbounds %struct.parm, %struct.parm* %834, i32 0, i32 86, !dbg !6382
  %836 = load i32*, i32** %835, align 8, !dbg !6382
  %837 = load i32, i32* %16, align 4, !dbg !6383
  %838 = sext i32 %837 to i64, !dbg !6381
  %839 = getelementptr inbounds i32, i32* %836, i64 %838, !dbg !6381
  store i32 %833, i32* %839, align 4, !dbg !6384
  %840 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6385
  %841 = getelementptr inbounds %struct.parm, %struct.parm* %840, i32 0, i32 87, !dbg !6386
  %842 = load i32*, i32** %841, align 8, !dbg !6386
  %843 = load i32, i32* %11, align 4, !dbg !6387
  %844 = sext i32 %843 to i64, !dbg !6385
  %845 = getelementptr inbounds i32, i32* %842, i64 %844, !dbg !6385
  %846 = load i32, i32* %845, align 4, !dbg !6385
  %847 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6388
  %848 = getelementptr inbounds %struct.parm, %struct.parm* %847, i32 0, i32 87, !dbg !6389
  %849 = load i32*, i32** %848, align 8, !dbg !6389
  %850 = load i32, i32* %16, align 4, !dbg !6390
  %851 = sext i32 %850 to i64, !dbg !6388
  %852 = getelementptr inbounds i32, i32* %849, i64 %851, !dbg !6388
  store i32 %846, i32* %852, align 4, !dbg !6391
  %853 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6392
  %854 = getelementptr inbounds %struct.parm, %struct.parm* %853, i32 0, i32 88, !dbg !6393
  %855 = load i32*, i32** %854, align 8, !dbg !6393
  %856 = load i32, i32* %11, align 4, !dbg !6394
  %857 = sext i32 %856 to i64, !dbg !6392
  %858 = getelementptr inbounds i32, i32* %855, i64 %857, !dbg !6392
  %859 = load i32, i32* %858, align 4, !dbg !6392
  %860 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6395
  %861 = getelementptr inbounds %struct.parm, %struct.parm* %860, i32 0, i32 88, !dbg !6396
  %862 = load i32*, i32** %861, align 8, !dbg !6396
  %863 = load i32, i32* %16, align 4, !dbg !6397
  %864 = sext i32 %863 to i64, !dbg !6395
  %865 = getelementptr inbounds i32, i32* %862, i64 %864, !dbg !6395
  store i32 %859, i32* %865, align 4, !dbg !6398
  %866 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6399
  %867 = getelementptr inbounds %struct.parm, %struct.parm* %866, i32 0, i32 89, !dbg !6400
  %868 = load i32*, i32** %867, align 8, !dbg !6400
  %869 = load i32, i32* %11, align 4, !dbg !6401
  %870 = sext i32 %869 to i64, !dbg !6399
  %871 = getelementptr inbounds i32, i32* %868, i64 %870, !dbg !6399
  %872 = load i32, i32* %871, align 4, !dbg !6399
  %873 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6402
  %874 = getelementptr inbounds %struct.parm, %struct.parm* %873, i32 0, i32 89, !dbg !6403
  %875 = load i32*, i32** %874, align 8, !dbg !6403
  %876 = load i32, i32* %16, align 4, !dbg !6404
  %877 = sext i32 %876 to i64, !dbg !6402
  %878 = getelementptr inbounds i32, i32* %875, i64 %877, !dbg !6402
  store i32 %872, i32* %878, align 4, !dbg !6405
  %879 = load i32, i32* %16, align 4, !dbg !6406
  %880 = add nsw i32 %879, 1, !dbg !6406
  store i32 %880, i32* %16, align 4, !dbg !6406
  %881 = load i32, i32* %9, align 4, !dbg !6407
  %882 = icmp sge i32 %881, 0, !dbg !6409
  br i1 %882, label %883, label %920, !dbg !6410

883:                                              ; preds = %813
  %884 = load i32, i32* %10, align 4, !dbg !6411
  %885 = icmp sge i32 %884, 0, !dbg !6412
  br i1 %885, label %886, label %920, !dbg !6413

886:                                              ; preds = %883
  %887 = load i32, i32* %7, align 4, !dbg !6414
  %888 = load i32, i32* %10, align 4, !dbg !6416
  %889 = icmp slt i32 %887, %888, !dbg !6417
  br i1 %889, label %890, label %892, !dbg !6414

890:                                              ; preds = %886
  %891 = load i32, i32* %7, align 4, !dbg !6418
  br label %894, !dbg !6414

892:                                              ; preds = %886
  %893 = load i32, i32* %10, align 4, !dbg !6419
  br label %894, !dbg !6414

894:                                              ; preds = %892, %890
  %895 = phi i32 [ %891, %890 ], [ %893, %892 ], !dbg !6414
  store i32 %895, i32* %18, align 4, !dbg !6420
  %896 = load i32, i32* %7, align 4, !dbg !6421
  %897 = load i32, i32* %10, align 4, !dbg !6422
  %898 = icmp sgt i32 %896, %897, !dbg !6423
  br i1 %898, label %899, label %901, !dbg !6421

899:                                              ; preds = %894
  %900 = load i32, i32* %7, align 4, !dbg !6424
  br label %903, !dbg !6421

901:                                              ; preds = %894
  %902 = load i32, i32* %10, align 4, !dbg !6425
  br label %903, !dbg !6421

903:                                              ; preds = %901, %899
  %904 = phi i32 [ %900, %899 ], [ %902, %901 ], !dbg !6421
  store i32 %904, i32* %17, align 4, !dbg !6426
  %905 = load i32, i32* %17, align 4, !dbg !6427
  %906 = load i32*, i32** %21, align 8, !dbg !6428
  %907 = load i32, i32* %18, align 4, !dbg !6429
  %908 = mul nsw i32 12, %907, !dbg !6430
  %909 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6431
  %910 = getelementptr inbounds %struct.parm, %struct.parm* %909, i32 0, i32 91, !dbg !6432
  %911 = load i32*, i32** %910, align 8, !dbg !6432
  %912 = load i32, i32* %18, align 4, !dbg !6433
  %913 = sext i32 %912 to i64, !dbg !6431
  %914 = getelementptr inbounds i32, i32* %911, i64 %913, !dbg !6431
  %915 = load i32, i32* %914, align 4, !dbg !6434
  %916 = add nsw i32 %915, 1, !dbg !6434
  store i32 %916, i32* %914, align 4, !dbg !6434
  %917 = add nsw i32 %908, %915, !dbg !6435
  %918 = sext i32 %917 to i64, !dbg !6428
  %919 = getelementptr inbounds i32, i32* %906, i64 %918, !dbg !6428
  store i32 %905, i32* %919, align 4, !dbg !6436
  br label %920, !dbg !6437

920:                                              ; preds = %903, %883, %813
  br label %921, !dbg !6438

921:                                              ; preds = %920, %806
  br label %922, !dbg !6439

922:                                              ; preds = %921
  %923 = load i32, i32* %11, align 4, !dbg !6440
  %924 = add nsw i32 %923, 1, !dbg !6440
  store i32 %924, i32* %11, align 4, !dbg !6440
  br label %729, !dbg !6441, !llvm.loop !6442

925:                                              ; preds = %729
  %926 = load i32, i32* %16, align 4, !dbg !6444
  %927 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6445
  %928 = getelementptr inbounds %struct.parm, %struct.parm* %927, i32 0, i32 18, !dbg !6446
  store i32 %926, i32* %928, align 8, !dbg !6447
  %929 = load i32, i32* %16, align 4, !dbg !6448
  %930 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6449
  %931 = getelementptr inbounds %struct.parm, %struct.parm* %930, i32 0, i32 11, !dbg !6450
  store i32 %929, i32* %931, align 4, !dbg !6451
  store i32 0, i32* %8, align 4, !dbg !6452
  store i32 0, i32* %7, align 4, !dbg !6453
  br label %932, !dbg !6455

932:                                              ; preds = %970, %925
  %933 = load i32, i32* %7, align 4, !dbg !6456
  %934 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6458
  %935 = getelementptr inbounds %struct.parm, %struct.parm* %934, i32 0, i32 4, !dbg !6459
  %936 = load i32, i32* %935, align 8, !dbg !6459
  %937 = sub nsw i32 %936, 1, !dbg !6460
  %938 = icmp slt i32 %933, %937, !dbg !6461
  br i1 %938, label %939, label %973, !dbg !6462

939:                                              ; preds = %932
  store i32 0, i32* %9, align 4, !dbg !6463
  br label %940, !dbg !6466

940:                                              ; preds = %966, %939
  %941 = load i32, i32* %9, align 4, !dbg !6467
  %942 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6469
  %943 = getelementptr inbounds %struct.parm, %struct.parm* %942, i32 0, i32 91, !dbg !6470
  %944 = load i32*, i32** %943, align 8, !dbg !6470
  %945 = load i32, i32* %7, align 4, !dbg !6471
  %946 = sext i32 %945 to i64, !dbg !6469
  %947 = getelementptr inbounds i32, i32* %944, i64 %946, !dbg !6469
  %948 = load i32, i32* %947, align 4, !dbg !6469
  %949 = icmp slt i32 %941, %948, !dbg !6472
  br i1 %949, label %950, label %969, !dbg !6473

950:                                              ; preds = %940
  %951 = load i32*, i32** %21, align 8, !dbg !6474
  %952 = load i32, i32* %7, align 4, !dbg !6475
  %953 = mul nsw i32 12, %952, !dbg !6476
  %954 = load i32, i32* %9, align 4, !dbg !6477
  %955 = add nsw i32 %953, %954, !dbg !6478
  %956 = sext i32 %955 to i64, !dbg !6474
  %957 = getelementptr inbounds i32, i32* %951, i64 %956, !dbg !6474
  %958 = load i32, i32* %957, align 4, !dbg !6474
  %959 = load %struct.parm*, %struct.parm** %25, align 8, !dbg !6479
  %960 = getelementptr inbounds %struct.parm, %struct.parm* %959, i32 0, i32 92, !dbg !6480
  %961 = load i32*, i32** %960, align 8, !dbg !6480
  %962 = load i32, i32* %8, align 4, !dbg !6481
  %963 = add nsw i32 %962, 1, !dbg !6481
  store i32 %963, i32* %8, align 4, !dbg !6481
  %964 = sext i32 %962 to i64, !dbg !6479
  %965 = getelementptr inbounds i32, i32* %961, i64 %964, !dbg !6479
  store i32 %958, i32* %965, align 4, !dbg !6482
  br label %966, !dbg !6479

966:                                              ; preds = %950
  %967 = load i32, i32* %9, align 4, !dbg !6483
  %968 = add nsw i32 %967, 1, !dbg !6483
  store i32 %968, i32* %9, align 4, !dbg !6483
  br label %940, !dbg !6484, !llvm.loop !6485

969:                                              ; preds = %940
  br label %970, !dbg !6487

970:                                              ; preds = %969
  %971 = load i32, i32* %7, align 4, !dbg !6488
  %972 = add nsw i32 %971, 1, !dbg !6488
  store i32 %972, i32* %7, align 4, !dbg !6488
  br label %932, !dbg !6489, !llvm.loop !6490

973:                                              ; preds = %932
  %974 = load i32*, i32** %21, align 8, !dbg !6492
  %975 = bitcast i32* %974 to i8*, !dbg !6492
  call void @free(i8* %975) #8, !dbg !6493
  br label %976, !dbg !6494

976:                                              ; preds = %973, %95
  %977 = load i32, i32* %15, align 4, !dbg !6495
  ret i32 %977, !dbg !6496
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get(i64 %0) #0 !dbg !6497 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  store i64 %0, i64* %3, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6503, metadata !DIExpression()), !dbg !6504
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6505, metadata !DIExpression()), !dbg !6506
  %5 = load i64, i64* %3, align 8, !dbg !6507
  %6 = icmp eq i64 %5, 0, !dbg !6509
  br i1 %6, label %7, label %8, !dbg !6510

7:                                                ; preds = %1
  store i8* null, i8** %2, align 8, !dbg !6511
  br label %21, !dbg !6511

8:                                                ; preds = %1
  %9 = load i64, i64* %3, align 8, !dbg !6512
  %10 = mul i64 %9, 1, !dbg !6514
  %11 = call noalias i8* @malloc(i64 %10) #8, !dbg !6515
  store i8* %11, i8** %4, align 8, !dbg !6516
  %12 = icmp eq i8* %11, null, !dbg !6517
  br i1 %12, label %13, label %19, !dbg !6518

13:                                               ; preds = %8
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @nabout, align 8, !dbg !6519
  %15 = load i64, i64* %3, align 8, !dbg !6521
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.70, i64 0, i64 0), i64 %15), !dbg !6522
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @nabout, align 8, !dbg !6523
  %18 = call i32 @fflush(%struct._IO_FILE* %17), !dbg !6524
  call void @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.71, i64 0, i64 0)), !dbg !6525
  call void @exit(i32 1) #11, !dbg !6526
  unreachable, !dbg !6526

19:                                               ; preds = %8
  %20 = load i8*, i8** %4, align 8, !dbg !6527
  store i8* %20, i8** %2, align 8, !dbg !6528
  br label %21, !dbg !6528

21:                                               ; preds = %19, %7
  %22 = load i8*, i8** %2, align 8, !dbg !6529
  ret i8* %22, !dbg !6529
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_cons_mask(%struct.molecule_t* %0, i8* %1, i32* %2) #0 !dbg !6530 {
  %4 = alloca %struct.molecule_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.strand_t*, align 8
  %12 = alloca %struct.residue_t*, align 8
  %13 = alloca %struct.atom_t*, align 8
  store %struct.molecule_t* %0, %struct.molecule_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.molecule_t** %4, metadata !6531, metadata !DIExpression()), !dbg !6532
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6533, metadata !DIExpression()), !dbg !6534
  store i32* %2, i32** %6, align 8
  call void @llvm.dbg.declare(metadata i32** %6, metadata !6535, metadata !DIExpression()), !dbg !6536
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6537, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6539, metadata !DIExpression()), !dbg !6540
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6541, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6543, metadata !DIExpression()), !dbg !6544
  call void @llvm.dbg.declare(metadata %struct.strand_t** %11, metadata !6545, metadata !DIExpression()), !dbg !6546
  call void @llvm.dbg.declare(metadata %struct.residue_t** %12, metadata !6547, metadata !DIExpression()), !dbg !6548
  call void @llvm.dbg.declare(metadata %struct.atom_t** %13, metadata !6549, metadata !DIExpression()), !dbg !6550
  %14 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !6551
  %15 = load i8*, i8** %5, align 8, !dbg !6552
  %16 = call i32 @select_atoms(%struct.molecule_t* %14, i8* %15), !dbg !6553
  store i32 0, i32* %10, align 4, !dbg !6554
  store i32 0, i32* %9, align 4, !dbg !6555
  %17 = load %struct.molecule_t*, %struct.molecule_t** %4, align 8, !dbg !6557
  %18 = getelementptr inbounds %struct.molecule_t, %struct.molecule_t* %17, i32 0, i32 2, !dbg !6558
  %19 = load %struct.strand_t*, %struct.strand_t** %18, align 8, !dbg !6558
  store %struct.strand_t* %19, %struct.strand_t** %11, align 8, !dbg !6559
  br label %20, !dbg !6560

20:                                               ; preds = %79, %3
  %21 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !dbg !6561
  %22 = icmp ne %struct.strand_t* %21, null, !dbg !6563
  br i1 %22, label %23, label %83, !dbg !6563

23:                                               ; preds = %20
  store i32 0, i32* %7, align 4, !dbg !6564
  br label %24, !dbg !6567

24:                                               ; preds = %75, %23
  %25 = load i32, i32* %7, align 4, !dbg !6568
  %26 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !dbg !6570
  %27 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %26, i32 0, i32 5, !dbg !6571
  %28 = load i32, i32* %27, align 8, !dbg !6571
  %29 = icmp slt i32 %25, %28, !dbg !6572
  br i1 %29, label %30, label %78, !dbg !6573

30:                                               ; preds = %24
  %31 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !dbg !6574
  %32 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %31, i32 0, i32 7, !dbg !6576
  %33 = load %struct.residue_t**, %struct.residue_t*** %32, align 8, !dbg !6576
  %34 = load i32, i32* %7, align 4, !dbg !6577
  %35 = sext i32 %34 to i64, !dbg !6574
  %36 = getelementptr inbounds %struct.residue_t*, %struct.residue_t** %33, i64 %35, !dbg !6574
  %37 = load %struct.residue_t*, %struct.residue_t** %36, align 8, !dbg !6574
  store %struct.residue_t* %37, %struct.residue_t** %12, align 8, !dbg !6578
  store i32 0, i32* %8, align 4, !dbg !6579
  br label %38, !dbg !6581

38:                                               ; preds = %71, %30
  %39 = load i32, i32* %8, align 4, !dbg !6582
  %40 = load %struct.residue_t*, %struct.residue_t** %12, align 8, !dbg !6584
  %41 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %40, i32 0, i32 15, !dbg !6585
  %42 = load i32, i32* %41, align 8, !dbg !6585
  %43 = icmp slt i32 %39, %42, !dbg !6586
  br i1 %43, label %44, label %74, !dbg !6587

44:                                               ; preds = %38
  %45 = load %struct.residue_t*, %struct.residue_t** %12, align 8, !dbg !6588
  %46 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %45, i32 0, i32 17, !dbg !6590
  %47 = load %struct.atom_t*, %struct.atom_t** %46, align 8, !dbg !6590
  %48 = load i32, i32* %8, align 4, !dbg !6591
  %49 = sext i32 %48 to i64, !dbg !6588
  %50 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %47, i64 %49, !dbg !6588
  store %struct.atom_t* %50, %struct.atom_t** %13, align 8, !dbg !6592
  %51 = load %struct.atom_t*, %struct.atom_t** %13, align 8, !dbg !6593
  %52 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %51, i32 0, i32 2, !dbg !6595
  %53 = load i32, i32* %52, align 8, !dbg !6595
  %54 = and i32 %53, 1, !dbg !6596
  %55 = icmp ne i32 %54, 0, !dbg !6596
  br i1 %55, label %56, label %63, !dbg !6597

56:                                               ; preds = %44
  %57 = load i32*, i32** %6, align 8, !dbg !6598
  %58 = load i32, i32* %9, align 4, !dbg !6600
  %59 = sext i32 %58 to i64, !dbg !6598
  %60 = getelementptr inbounds i32, i32* %57, i64 %59, !dbg !6598
  store i32 1, i32* %60, align 4, !dbg !6601
  %61 = load i32, i32* %10, align 4, !dbg !6602
  %62 = add nsw i32 %61, 1, !dbg !6602
  store i32 %62, i32* %10, align 4, !dbg !6602
  br label %68, !dbg !6603

63:                                               ; preds = %44
  %64 = load i32*, i32** %6, align 8, !dbg !6604
  %65 = load i32, i32* %9, align 4, !dbg !6606
  %66 = sext i32 %65 to i64, !dbg !6604
  %67 = getelementptr inbounds i32, i32* %64, i64 %66, !dbg !6604
  store i32 0, i32* %67, align 4, !dbg !6607
  br label %68

68:                                               ; preds = %63, %56
  %69 = load i32, i32* %9, align 4, !dbg !6608
  %70 = add nsw i32 %69, 1, !dbg !6608
  store i32 %70, i32* %9, align 4, !dbg !6608
  br label %71, !dbg !6609

71:                                               ; preds = %68
  %72 = load i32, i32* %8, align 4, !dbg !6610
  %73 = add nsw i32 %72, 1, !dbg !6610
  store i32 %73, i32* %8, align 4, !dbg !6610
  br label %38, !dbg !6611, !llvm.loop !6612

74:                                               ; preds = %38
  br label %75, !dbg !6614

75:                                               ; preds = %74
  %76 = load i32, i32* %7, align 4, !dbg !6615
  %77 = add nsw i32 %76, 1, !dbg !6615
  store i32 %77, i32* %7, align 4, !dbg !6615
  br label %24, !dbg !6616, !llvm.loop !6617

78:                                               ; preds = %24
  br label %79, !dbg !6619

79:                                               ; preds = %78
  %80 = load %struct.strand_t*, %struct.strand_t** %11, align 8, !dbg !6620
  %81 = getelementptr inbounds %struct.strand_t, %struct.strand_t* %80, i32 0, i32 4, !dbg !6621
  %82 = load %struct.strand_t*, %struct.strand_t** %81, align 8, !dbg !6621
  store %struct.strand_t* %82, %struct.strand_t** %11, align 8, !dbg !6622
  br label %20, !dbg !6623, !llvm.loop !6624

83:                                               ; preds = %20
  %84 = load i32, i32* %10, align 4, !dbg !6626
  ret i32 %84, !dbg !6627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @circle(double* %0, double* %1, double* %2, double* %3) #0 !dbg !6628 {
  %5 = alloca i32, align 4
  %6 = alloca double*, align 8
  %7 = alloca double*, align 8
  %8 = alloca double*, align 8
  %9 = alloca double*, align 8
  %10 = alloca i32, align 4
  %11 = alloca [3 x double], align 16
  %12 = alloca [3 x double], align 16
  %13 = alloca [3 x double], align 16
  %14 = alloca [3 x double], align 16
  %15 = alloca [3 x double], align 16
  %16 = alloca [3 x double], align 16
  %17 = alloca double, align 8
  %18 = alloca double, align 8
  store double* %0, double** %6, align 8
  call void @llvm.dbg.declare(metadata double** %6, metadata !6631, metadata !DIExpression()), !dbg !6632
  store double* %1, double** %7, align 8
  call void @llvm.dbg.declare(metadata double** %7, metadata !6633, metadata !DIExpression()), !dbg !6634
  store double* %2, double** %8, align 8
  call void @llvm.dbg.declare(metadata double** %8, metadata !6635, metadata !DIExpression()), !dbg !6636
  store double* %3, double** %9, align 8
  call void @llvm.dbg.declare(metadata double** %9, metadata !6637, metadata !DIExpression()), !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata [3 x double]* %11, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata [3 x double]* %12, metadata !6643, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.declare(metadata [3 x double]* %13, metadata !6645, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.declare(metadata [3 x double]* %14, metadata !6647, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.declare(metadata [3 x double]* %15, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata [3 x double]* %16, metadata !6651, metadata !DIExpression()), !dbg !6652
  call void @llvm.dbg.declare(metadata double* %17, metadata !6653, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.declare(metadata double* %18, metadata !6655, metadata !DIExpression()), !dbg !6656
  store i32 0, i32* %10, align 4, !dbg !6657
  br label %19, !dbg !6659

19:                                               ; preds = %37, %4
  %20 = load i32, i32* %10, align 4, !dbg !6660
  %21 = icmp slt i32 %20, 3, !dbg !6662
  br i1 %21, label %22, label %40, !dbg !6663

22:                                               ; preds = %19
  %23 = load double*, double** %7, align 8, !dbg !6664
  %24 = load i32, i32* %10, align 4, !dbg !6665
  %25 = sext i32 %24 to i64, !dbg !6664
  %26 = getelementptr inbounds double, double* %23, i64 %25, !dbg !6664
  %27 = load double, double* %26, align 8, !dbg !6664
  %28 = load double*, double** %6, align 8, !dbg !6666
  %29 = load i32, i32* %10, align 4, !dbg !6667
  %30 = sext i32 %29 to i64, !dbg !6666
  %31 = getelementptr inbounds double, double* %28, i64 %30, !dbg !6666
  %32 = load double, double* %31, align 8, !dbg !6666
  %33 = fsub double %27, %32, !dbg !6668
  %34 = load i32, i32* %10, align 4, !dbg !6669
  %35 = sext i32 %34 to i64, !dbg !6670
  %36 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 %35, !dbg !6670
  store double %33, double* %36, align 8, !dbg !6671
  br label %37, !dbg !6670

37:                                               ; preds = %22
  %38 = load i32, i32* %10, align 4, !dbg !6672
  %39 = add nsw i32 %38, 1, !dbg !6672
  store i32 %39, i32* %10, align 4, !dbg !6672
  br label %19, !dbg !6673, !llvm.loop !6674

40:                                               ; preds = %19
  store i32 0, i32* %10, align 4, !dbg !6676
  br label %41, !dbg !6678

41:                                               ; preds = %59, %40
  %42 = load i32, i32* %10, align 4, !dbg !6679
  %43 = icmp slt i32 %42, 3, !dbg !6681
  br i1 %43, label %44, label %62, !dbg !6682

44:                                               ; preds = %41
  %45 = load double*, double** %8, align 8, !dbg !6683
  %46 = load i32, i32* %10, align 4, !dbg !6684
  %47 = sext i32 %46 to i64, !dbg !6683
  %48 = getelementptr inbounds double, double* %45, i64 %47, !dbg !6683
  %49 = load double, double* %48, align 8, !dbg !6683
  %50 = load double*, double** %6, align 8, !dbg !6685
  %51 = load i32, i32* %10, align 4, !dbg !6686
  %52 = sext i32 %51 to i64, !dbg !6685
  %53 = getelementptr inbounds double, double* %50, i64 %52, !dbg !6685
  %54 = load double, double* %53, align 8, !dbg !6685
  %55 = fsub double %49, %54, !dbg !6687
  %56 = load i32, i32* %10, align 4, !dbg !6688
  %57 = sext i32 %56 to i64, !dbg !6689
  %58 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 %57, !dbg !6689
  store double %55, double* %58, align 8, !dbg !6690
  br label %59, !dbg !6689

59:                                               ; preds = %44
  %60 = load i32, i32* %10, align 4, !dbg !6691
  %61 = add nsw i32 %60, 1, !dbg !6691
  store i32 %61, i32* %10, align 4, !dbg !6691
  br label %41, !dbg !6692, !llvm.loop !6693

62:                                               ; preds = %41
  store i32 0, i32* %10, align 4, !dbg !6695
  br label %63, !dbg !6697

63:                                               ; preds = %81, %62
  %64 = load i32, i32* %10, align 4, !dbg !6698
  %65 = icmp slt i32 %64, 3, !dbg !6700
  br i1 %65, label %66, label %84, !dbg !6701

66:                                               ; preds = %63
  %67 = load double*, double** %8, align 8, !dbg !6702
  %68 = load i32, i32* %10, align 4, !dbg !6703
  %69 = sext i32 %68 to i64, !dbg !6702
  %70 = getelementptr inbounds double, double* %67, i64 %69, !dbg !6702
  %71 = load double, double* %70, align 8, !dbg !6702
  %72 = load double*, double** %7, align 8, !dbg !6704
  %73 = load i32, i32* %10, align 4, !dbg !6705
  %74 = sext i32 %73 to i64, !dbg !6704
  %75 = getelementptr inbounds double, double* %72, i64 %74, !dbg !6704
  %76 = load double, double* %75, align 8, !dbg !6704
  %77 = fsub double %71, %76, !dbg !6706
  %78 = load i32, i32* %10, align 4, !dbg !6707
  %79 = sext i32 %78 to i64, !dbg !6708
  %80 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 %79, !dbg !6708
  store double %77, double* %80, align 8, !dbg !6709
  br label %81, !dbg !6708

81:                                               ; preds = %66
  %82 = load i32, i32* %10, align 4, !dbg !6710
  %83 = add nsw i32 %82, 1, !dbg !6710
  store i32 %83, i32* %10, align 4, !dbg !6710
  br label %63, !dbg !6711, !llvm.loop !6712

84:                                               ; preds = %63
  store i32 0, i32* %10, align 4, !dbg !6714
  br label %85, !dbg !6716

85:                                               ; preds = %104, %84
  %86 = load i32, i32* %10, align 4, !dbg !6717
  %87 = icmp slt i32 %86, 3, !dbg !6719
  br i1 %87, label %88, label %107, !dbg !6720

88:                                               ; preds = %85
  %89 = load double*, double** %6, align 8, !dbg !6721
  %90 = load i32, i32* %10, align 4, !dbg !6722
  %91 = sext i32 %90 to i64, !dbg !6721
  %92 = getelementptr inbounds double, double* %89, i64 %91, !dbg !6721
  %93 = load double, double* %92, align 8, !dbg !6721
  %94 = load double*, double** %7, align 8, !dbg !6723
  %95 = load i32, i32* %10, align 4, !dbg !6724
  %96 = sext i32 %95 to i64, !dbg !6723
  %97 = getelementptr inbounds double, double* %94, i64 %96, !dbg !6723
  %98 = load double, double* %97, align 8, !dbg !6723
  %99 = fadd double %93, %98, !dbg !6725
  %100 = fmul double 5.000000e-01, %99, !dbg !6726
  %101 = load i32, i32* %10, align 4, !dbg !6727
  %102 = sext i32 %101 to i64, !dbg !6728
  %103 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 %102, !dbg !6728
  store double %100, double* %103, align 8, !dbg !6729
  br label %104, !dbg !6728

104:                                              ; preds = %88
  %105 = load i32, i32* %10, align 4, !dbg !6730
  %106 = add nsw i32 %105, 1, !dbg !6730
  store i32 %106, i32* %10, align 4, !dbg !6730
  br label %85, !dbg !6731, !llvm.loop !6732

107:                                              ; preds = %85
  store i32 0, i32* %10, align 4, !dbg !6734
  br label %108, !dbg !6736

108:                                              ; preds = %125, %107
  %109 = load i32, i32* %10, align 4, !dbg !6737
  %110 = icmp slt i32 %109, 3, !dbg !6739
  br i1 %110, label %111, label %128, !dbg !6740

111:                                              ; preds = %108
  %112 = load double*, double** %8, align 8, !dbg !6741
  %113 = load i32, i32* %10, align 4, !dbg !6742
  %114 = sext i32 %113 to i64, !dbg !6741
  %115 = getelementptr inbounds double, double* %112, i64 %114, !dbg !6741
  %116 = load double, double* %115, align 8, !dbg !6741
  %117 = load i32, i32* %10, align 4, !dbg !6743
  %118 = sext i32 %117 to i64, !dbg !6744
  %119 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 %118, !dbg !6744
  %120 = load double, double* %119, align 8, !dbg !6744
  %121 = fsub double %116, %120, !dbg !6745
  %122 = load i32, i32* %10, align 4, !dbg !6746
  %123 = sext i32 %122 to i64, !dbg !6747
  %124 = getelementptr inbounds [3 x double], [3 x double]* %16, i64 0, i64 %123, !dbg !6747
  store double %121, double* %124, align 8, !dbg !6748
  br label %125, !dbg !6747

125:                                              ; preds = %111
  %126 = load i32, i32* %10, align 4, !dbg !6749
  %127 = add nsw i32 %126, 1, !dbg !6749
  store i32 %127, i32* %10, align 4, !dbg !6749
  br label %108, !dbg !6750, !llvm.loop !6751

128:                                              ; preds = %108
  %129 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 0, !dbg !6753
  %130 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0, !dbg !6754
  %131 = call double @vdot(double* %129, double* %130), !dbg !6755
  %132 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 0, !dbg !6756
  %133 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 0, !dbg !6757
  %134 = call double @vdot(double* %132, double* %133), !dbg !6758
  %135 = fdiv double %131, %134, !dbg !6759
  store double %135, double* %17, align 8, !dbg !6760
  store i32 0, i32* %10, align 4, !dbg !6761
  br label %136, !dbg !6763

136:                                              ; preds = %154, %128
  %137 = load i32, i32* %10, align 4, !dbg !6764
  %138 = icmp slt i32 %137, 3, !dbg !6766
  br i1 %138, label %139, label %157, !dbg !6767

139:                                              ; preds = %136
  %140 = load i32, i32* %10, align 4, !dbg !6768
  %141 = sext i32 %140 to i64, !dbg !6769
  %142 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 %141, !dbg !6769
  %143 = load double, double* %142, align 8, !dbg !6769
  %144 = load double, double* %17, align 8, !dbg !6770
  %145 = load i32, i32* %10, align 4, !dbg !6771
  %146 = sext i32 %145 to i64, !dbg !6772
  %147 = getelementptr inbounds [3 x double], [3 x double]* %12, i64 0, i64 %146, !dbg !6772
  %148 = load double, double* %147, align 8, !dbg !6772
  %149 = fmul double %144, %148, !dbg !6773
  %150 = fsub double %143, %149, !dbg !6774
  %151 = load i32, i32* %10, align 4, !dbg !6775
  %152 = sext i32 %151 to i64, !dbg !6776
  %153 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 %152, !dbg !6776
  store double %150, double* %153, align 8, !dbg !6777
  br label %154, !dbg !6776

154:                                              ; preds = %139
  %155 = load i32, i32* %10, align 4, !dbg !6778
  %156 = add nsw i32 %155, 1, !dbg !6778
  store i32 %156, i32* %10, align 4, !dbg !6778
  br label %136, !dbg !6779, !llvm.loop !6780

157:                                              ; preds = %136
  %158 = getelementptr inbounds [3 x double], [3 x double]* %16, i64 0, i64 0, !dbg !6782
  %159 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 0, !dbg !6783
  %160 = call double @vdot(double* %158, double* %159), !dbg !6784
  store double %160, double* %18, align 8, !dbg !6785
  %161 = load double, double* %18, align 8, !dbg !6786
  %162 = call double @llvm.fabs.f64(double %161), !dbg !6788
  %163 = fcmp olt double %162, 1.000000e-09, !dbg !6789
  br i1 %163, label %164, label %167, !dbg !6790

164:                                              ; preds = %157
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6791
  %166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %165, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.53, i64 0, i64 0)), !dbg !6793
  store i32 1, i32* %5, align 4, !dbg !6794
  br label %197, !dbg !6794

167:                                              ; preds = %157
  %168 = getelementptr inbounds [3 x double], [3 x double]* %14, i64 0, i64 0, !dbg !6795
  %169 = getelementptr inbounds [3 x double], [3 x double]* %13, i64 0, i64 0, !dbg !6796
  %170 = call double @vdot(double* %168, double* %169), !dbg !6797
  %171 = fmul double 5.000000e-01, %170, !dbg !6798
  %172 = load double, double* %18, align 8, !dbg !6799
  %173 = fdiv double %171, %172, !dbg !6800
  store double %173, double* %18, align 8, !dbg !6801
  store i32 0, i32* %10, align 4, !dbg !6802
  br label %174, !dbg !6804

174:                                              ; preds = %193, %167
  %175 = load i32, i32* %10, align 4, !dbg !6805
  %176 = icmp slt i32 %175, 3, !dbg !6807
  br i1 %176, label %177, label %196, !dbg !6808

177:                                              ; preds = %174
  %178 = load i32, i32* %10, align 4, !dbg !6809
  %179 = sext i32 %178 to i64, !dbg !6810
  %180 = getelementptr inbounds [3 x double], [3 x double]* %15, i64 0, i64 %179, !dbg !6810
  %181 = load double, double* %180, align 8, !dbg !6810
  %182 = load double, double* %18, align 8, !dbg !6811
  %183 = load i32, i32* %10, align 4, !dbg !6812
  %184 = sext i32 %183 to i64, !dbg !6813
  %185 = getelementptr inbounds [3 x double], [3 x double]* %11, i64 0, i64 %184, !dbg !6813
  %186 = load double, double* %185, align 8, !dbg !6813
  %187 = fmul double %182, %186, !dbg !6814
  %188 = fadd double %181, %187, !dbg !6815
  %189 = load double*, double** %9, align 8, !dbg !6816
  %190 = load i32, i32* %10, align 4, !dbg !6817
  %191 = sext i32 %190 to i64, !dbg !6816
  %192 = getelementptr inbounds double, double* %189, i64 %191, !dbg !6816
  store double %188, double* %192, align 8, !dbg !6818
  br label %193, !dbg !6816

193:                                              ; preds = %177
  %194 = load i32, i32* %10, align 4, !dbg !6819
  %195 = add nsw i32 %194, 1, !dbg !6819
  store i32 %195, i32* %10, align 4, !dbg !6819
  br label %174, !dbg !6820, !llvm.loop !6821

196:                                              ; preds = %174
  store i32 0, i32* %5, align 4, !dbg !6823
  br label %197, !dbg !6823

197:                                              ; preds = %196, %164
  %198 = load i32, i32* %5, align 4, !dbg !6824
  ret i32 %198, !dbg !6824
}

; Function Attrs: noinline nounwind optnone uwtable
define internal double @vdot(double* %0, double* %1) #0 !dbg !6825 {
  %3 = alloca double*, align 8
  %4 = alloca double*, align 8
  store double* %0, double** %3, align 8
  call void @llvm.dbg.declare(metadata double** %3, metadata !6826, metadata !DIExpression()), !dbg !6827
  store double* %1, double** %4, align 8
  call void @llvm.dbg.declare(metadata double** %4, metadata !6828, metadata !DIExpression()), !dbg !6829
  %5 = load double*, double** %3, align 8, !dbg !6830
  %6 = getelementptr inbounds double, double* %5, i64 0, !dbg !6830
  %7 = load double, double* %6, align 8, !dbg !6830
  %8 = load double*, double** %4, align 8, !dbg !6831
  %9 = getelementptr inbounds double, double* %8, i64 0, !dbg !6831
  %10 = load double, double* %9, align 8, !dbg !6831
  %11 = fmul double %7, %10, !dbg !6832
  %12 = load double*, double** %3, align 8, !dbg !6833
  %13 = getelementptr inbounds double, double* %12, i64 1, !dbg !6833
  %14 = load double, double* %13, align 8, !dbg !6833
  %15 = load double*, double** %4, align 8, !dbg !6834
  %16 = getelementptr inbounds double, double* %15, i64 1, !dbg !6834
  %17 = load double, double* %16, align 8, !dbg !6834
  %18 = fmul double %14, %17, !dbg !6835
  %19 = fadd double %11, %18, !dbg !6836
  %20 = load double*, double** %3, align 8, !dbg !6837
  %21 = getelementptr inbounds double, double* %20, i64 2, !dbg !6837
  %22 = load double, double* %21, align 8, !dbg !6837
  %23 = load double*, double** %4, align 8, !dbg !6838
  %24 = getelementptr inbounds double, double* %23, i64 2, !dbg !6838
  %25 = load double, double* %24, align 8, !dbg !6838
  %26 = fmul double %22, %25, !dbg !6839
  %27 = fadd double %19, %26, !dbg !6840
  ret double %27, !dbg !6841
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind
declare dso_local double @hypot(double, double) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @find_atom(%struct.residue_t* %0, i8* %1) #0 !dbg !6842 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.residue_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.atom_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %4, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6847, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6849, metadata !DIExpression()), !dbg !6850
  call void @llvm.dbg.declare(metadata %struct.atom_t** %7, metadata !6851, metadata !DIExpression()), !dbg !6852
  store i32 0, i32* %6, align 4, !dbg !6853
  %8 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !6855
  %9 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %8, i32 0, i32 17, !dbg !6856
  %10 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !6856
  store %struct.atom_t* %10, %struct.atom_t** %7, align 8, !dbg !6857
  br label %11, !dbg !6858

11:                                               ; preds = %27, %2
  %12 = load i32, i32* %6, align 4, !dbg !6859
  %13 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !6861
  %14 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %13, i32 0, i32 15, !dbg !6862
  %15 = load i32, i32* %14, align 8, !dbg !6862
  %16 = icmp slt i32 %12, %15, !dbg !6863
  br i1 %16, label %17, label %32, !dbg !6864

17:                                               ; preds = %11
  %18 = load %struct.atom_t*, %struct.atom_t** %7, align 8, !dbg !6865
  %19 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %18, i32 0, i32 0, !dbg !6868
  %20 = load i8*, i8** %19, align 8, !dbg !6868
  %21 = load i8*, i8** %5, align 8, !dbg !6869
  %22 = call i32 @strcmp(i8* %20, i8* %21) #9, !dbg !6870
  %23 = icmp eq i32 %22, 0, !dbg !6871
  br i1 %23, label %24, label %26, !dbg !6872

24:                                               ; preds = %17
  %25 = load i32, i32* %6, align 4, !dbg !6873
  store i32 %25, i32* %3, align 4, !dbg !6874
  br label %33, !dbg !6874

26:                                               ; preds = %17
  br label %27, !dbg !6875

27:                                               ; preds = %26
  %28 = load i32, i32* %6, align 4, !dbg !6876
  %29 = add nsw i32 %28, 1, !dbg !6876
  store i32 %29, i32* %6, align 4, !dbg !6876
  %30 = load %struct.atom_t*, %struct.atom_t** %7, align 8, !dbg !6877
  %31 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %30, i32 1, !dbg !6877
  store %struct.atom_t* %31, %struct.atom_t** %7, align 8, !dbg !6877
  br label %11, !dbg !6878, !llvm.loop !6879

32:                                               ; preds = %11
  store i32 -1, i32* %3, align 4, !dbg !6881
  br label %33, !dbg !6881

33:                                               ; preds = %32, %24
  %34 = load i32, i32* %3, align 4, !dbg !6882
  ret i32 %34, !dbg !6882
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @delete_atom(%struct.residue_t* %0, i32 %1) #0 !dbg !6883 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.residue_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.atom_t*, align 8
  %12 = alloca %struct.atom_t*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %4, metadata !6886, metadata !DIExpression()), !dbg !6887
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6888, metadata !DIExpression()), !dbg !6889
  call void @llvm.dbg.declare(metadata i32* %6, metadata !6890, metadata !DIExpression()), !dbg !6891
  call void @llvm.dbg.declare(metadata i32* %7, metadata !6892, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.declare(metadata i32* %8, metadata !6894, metadata !DIExpression()), !dbg !6895
  call void @llvm.dbg.declare(metadata i32* %9, metadata !6896, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.declare(metadata i32* %10, metadata !6898, metadata !DIExpression()), !dbg !6899
  call void @llvm.dbg.declare(metadata %struct.atom_t** %11, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.declare(metadata %struct.atom_t** %12, metadata !6902, metadata !DIExpression()), !dbg !6903
  %13 = load i32, i32* %5, align 4, !dbg !6904
  %14 = icmp slt i32 %13, 0, !dbg !6906
  br i1 %14, label %21, label %15, !dbg !6907

15:                                               ; preds = %2
  %16 = load i32, i32* %5, align 4, !dbg !6908
  %17 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !6909
  %18 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %17, i32 0, i32 15, !dbg !6910
  %19 = load i32, i32* %18, align 8, !dbg !6910
  %20 = icmp sge i32 %16, %19, !dbg !6911
  br i1 %20, label %21, label %22, !dbg !6912

21:                                               ; preds = %15, %2
  store i32 1, i32* %3, align 4, !dbg !6913
  br label %196, !dbg !6913

22:                                               ; preds = %15
  %23 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !6914
  %24 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %23, i32 0, i32 17, !dbg !6915
  %25 = load %struct.atom_t*, %struct.atom_t** %24, align 8, !dbg !6915
  %26 = load i32, i32* %5, align 4, !dbg !6916
  %27 = sext i32 %26 to i64, !dbg !6914
  %28 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %25, i64 %27, !dbg !6914
  store %struct.atom_t* %28, %struct.atom_t** %11, align 8, !dbg !6917
  store i32 0, i32* %8, align 4, !dbg !6918
  br label %29, !dbg !6920

29:                                               ; preds = %114, %22
  %30 = load i32, i32* %8, align 4, !dbg !6921
  %31 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !6923
  %32 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %31, i32 0, i32 3, !dbg !6924
  %33 = load i32, i32* %32, align 4, !dbg !6924
  %34 = icmp slt i32 %30, %33, !dbg !6925
  br i1 %34, label %35, label %117, !dbg !6926

35:                                               ; preds = %29
  %36 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !6927
  %37 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %36, i32 0, i32 4, !dbg !6929
  %38 = load i32, i32* %8, align 4, !dbg !6930
  %39 = sext i32 %38 to i64, !dbg !6927
  %40 = getelementptr inbounds [8 x i32], [8 x i32]* %37, i64 0, i64 %39, !dbg !6927
  %41 = load i32, i32* %40, align 4, !dbg !6927
  store i32 %41, i32* %7, align 4, !dbg !6931
  %42 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !6932
  %43 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %42, i32 0, i32 17, !dbg !6933
  %44 = load %struct.atom_t*, %struct.atom_t** %43, align 8, !dbg !6933
  %45 = load i32, i32* %7, align 4, !dbg !6934
  %46 = sext i32 %45 to i64, !dbg !6932
  %47 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %44, i64 %46, !dbg !6932
  store %struct.atom_t* %47, %struct.atom_t** %12, align 8, !dbg !6935
  store i32 0, i32* %9, align 4, !dbg !6936
  br label %48, !dbg !6938

48:                                               ; preds = %110, %35
  %49 = load i32, i32* %9, align 4, !dbg !6939
  %50 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6941
  %51 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %50, i32 0, i32 3, !dbg !6942
  %52 = load i32, i32* %51, align 4, !dbg !6942
  %53 = icmp slt i32 %49, %52, !dbg !6943
  br i1 %53, label %54, label %113, !dbg !6944

54:                                               ; preds = %48
  %55 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6945
  %56 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %55, i32 0, i32 4, !dbg !6948
  %57 = load i32, i32* %9, align 4, !dbg !6949
  %58 = sext i32 %57 to i64, !dbg !6945
  %59 = getelementptr inbounds [8 x i32], [8 x i32]* %56, i64 0, i64 %58, !dbg !6945
  %60 = load i32, i32* %59, align 4, !dbg !6945
  %61 = load i32, i32* %5, align 4, !dbg !6950
  %62 = icmp eq i32 %60, %61, !dbg !6951
  br i1 %62, label %63, label %109, !dbg !6952

63:                                               ; preds = %54
  %64 = load i32, i32* %9, align 4, !dbg !6953
  store i32 %64, i32* %10, align 4, !dbg !6956
  br label %65, !dbg !6957

65:                                               ; preds = %85, %63
  %66 = load i32, i32* %10, align 4, !dbg !6958
  %67 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6960
  %68 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %67, i32 0, i32 3, !dbg !6961
  %69 = load i32, i32* %68, align 4, !dbg !6961
  %70 = sub nsw i32 %69, 1, !dbg !6962
  %71 = icmp slt i32 %66, %70, !dbg !6963
  br i1 %71, label %72, label %88, !dbg !6964

72:                                               ; preds = %65
  %73 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6965
  %74 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %73, i32 0, i32 4, !dbg !6967
  %75 = load i32, i32* %10, align 4, !dbg !6968
  %76 = add nsw i32 %75, 1, !dbg !6969
  %77 = sext i32 %76 to i64, !dbg !6965
  %78 = getelementptr inbounds [8 x i32], [8 x i32]* %74, i64 0, i64 %77, !dbg !6965
  %79 = load i32, i32* %78, align 4, !dbg !6965
  %80 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6970
  %81 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %80, i32 0, i32 4, !dbg !6971
  %82 = load i32, i32* %10, align 4, !dbg !6972
  %83 = sext i32 %82 to i64, !dbg !6970
  %84 = getelementptr inbounds [8 x i32], [8 x i32]* %81, i64 0, i64 %83, !dbg !6970
  store i32 %79, i32* %84, align 4, !dbg !6973
  br label %85, !dbg !6974

85:                                               ; preds = %72
  %86 = load i32, i32* %10, align 4, !dbg !6975
  %87 = add nsw i32 %86, 1, !dbg !6975
  store i32 %87, i32* %10, align 4, !dbg !6975
  br label %65, !dbg !6976, !llvm.loop !6977

88:                                               ; preds = %65
  %89 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6979
  %90 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %89, i32 0, i32 3, !dbg !6980
  %91 = load i32, i32* %90, align 4, !dbg !6981
  %92 = add nsw i32 %91, -1, !dbg !6981
  store i32 %92, i32* %90, align 4, !dbg !6981
  %93 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6982
  %94 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %93, i32 0, i32 3, !dbg !6984
  %95 = load i32, i32* %94, align 4, !dbg !6984
  store i32 %95, i32* %10, align 4, !dbg !6985
  br label %96, !dbg !6986

96:                                               ; preds = %105, %88
  %97 = load i32, i32* %10, align 4, !dbg !6987
  %98 = icmp slt i32 %97, 8, !dbg !6989
  br i1 %98, label %99, label %108, !dbg !6990

99:                                               ; preds = %96
  %100 = load %struct.atom_t*, %struct.atom_t** %12, align 8, !dbg !6991
  %101 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %100, i32 0, i32 4, !dbg !6992
  %102 = load i32, i32* %10, align 4, !dbg !6993
  %103 = sext i32 %102 to i64, !dbg !6991
  %104 = getelementptr inbounds [8 x i32], [8 x i32]* %101, i64 0, i64 %103, !dbg !6991
  store i32 -1, i32* %104, align 4, !dbg !6994
  br label %105, !dbg !6991

105:                                              ; preds = %99
  %106 = load i32, i32* %10, align 4, !dbg !6995
  %107 = add nsw i32 %106, 1, !dbg !6995
  store i32 %107, i32* %10, align 4, !dbg !6995
  br label %96, !dbg !6996, !llvm.loop !6997

108:                                              ; preds = %96
  br label %113, !dbg !6999

109:                                              ; preds = %54
  br label %110, !dbg !7000

110:                                              ; preds = %109
  %111 = load i32, i32* %9, align 4, !dbg !7001
  %112 = add nsw i32 %111, 1, !dbg !7001
  store i32 %112, i32* %9, align 4, !dbg !7001
  br label %48, !dbg !7002, !llvm.loop !7003

113:                                              ; preds = %108, %48
  br label %114, !dbg !7005

114:                                              ; preds = %113
  %115 = load i32, i32* %8, align 4, !dbg !7006
  %116 = add nsw i32 %115, 1, !dbg !7006
  store i32 %116, i32* %8, align 4, !dbg !7006
  br label %29, !dbg !7007, !llvm.loop !7008

117:                                              ; preds = %29
  %118 = load i32, i32* %5, align 4, !dbg !7010
  store i32 %118, i32* %6, align 4, !dbg !7012
  br label %119, !dbg !7013

119:                                              ; preds = %142, %117
  %120 = load i32, i32* %6, align 4, !dbg !7014
  %121 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7016
  %122 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %121, i32 0, i32 15, !dbg !7017
  %123 = load i32, i32* %122, align 8, !dbg !7017
  %124 = sub nsw i32 %123, 1, !dbg !7018
  %125 = icmp slt i32 %120, %124, !dbg !7019
  br i1 %125, label %126, label %145, !dbg !7020

126:                                              ; preds = %119
  %127 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7021
  %128 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %127, i32 0, i32 17, !dbg !7022
  %129 = load %struct.atom_t*, %struct.atom_t** %128, align 8, !dbg !7022
  %130 = load i32, i32* %6, align 4, !dbg !7023
  %131 = sext i32 %130 to i64, !dbg !7021
  %132 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %129, i64 %131, !dbg !7021
  %133 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7024
  %134 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %133, i32 0, i32 17, !dbg !7025
  %135 = load %struct.atom_t*, %struct.atom_t** %134, align 8, !dbg !7025
  %136 = load i32, i32* %6, align 4, !dbg !7026
  %137 = add nsw i32 %136, 1, !dbg !7027
  %138 = sext i32 %137 to i64, !dbg !7024
  %139 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %135, i64 %138, !dbg !7024
  %140 = bitcast %struct.atom_t* %132 to i8*, !dbg !7024
  %141 = bitcast %struct.atom_t* %139 to i8*, !dbg !7024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %141, i64 176, i1 false), !dbg !7024
  br label %142, !dbg !7021

142:                                              ; preds = %126
  %143 = load i32, i32* %6, align 4, !dbg !7028
  %144 = add nsw i32 %143, 1, !dbg !7028
  store i32 %144, i32* %6, align 4, !dbg !7028
  br label %119, !dbg !7029, !llvm.loop !7030

145:                                              ; preds = %119
  %146 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7032
  %147 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %146, i32 0, i32 15, !dbg !7033
  %148 = load i32, i32* %147, align 8, !dbg !7034
  %149 = add nsw i32 %148, -1, !dbg !7034
  store i32 %149, i32* %147, align 8, !dbg !7034
  store i32 0, i32* %6, align 4, !dbg !7035
  br label %150, !dbg !7037

150:                                              ; preds = %192, %145
  %151 = load i32, i32* %6, align 4, !dbg !7038
  %152 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7040
  %153 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %152, i32 0, i32 15, !dbg !7041
  %154 = load i32, i32* %153, align 8, !dbg !7041
  %155 = sub nsw i32 %154, 1, !dbg !7042
  %156 = icmp slt i32 %151, %155, !dbg !7043
  br i1 %156, label %157, label %195, !dbg !7044

157:                                              ; preds = %150
  %158 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7045
  %159 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %158, i32 0, i32 17, !dbg !7047
  %160 = load %struct.atom_t*, %struct.atom_t** %159, align 8, !dbg !7047
  %161 = load i32, i32* %6, align 4, !dbg !7048
  %162 = sext i32 %161 to i64, !dbg !7045
  %163 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %160, i64 %162, !dbg !7045
  store %struct.atom_t* %163, %struct.atom_t** %11, align 8, !dbg !7049
  store i32 0, i32* %8, align 4, !dbg !7050
  br label %164, !dbg !7052

164:                                              ; preds = %188, %157
  %165 = load i32, i32* %8, align 4, !dbg !7053
  %166 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !7055
  %167 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %166, i32 0, i32 3, !dbg !7056
  %168 = load i32, i32* %167, align 4, !dbg !7056
  %169 = icmp slt i32 %165, %168, !dbg !7057
  br i1 %169, label %170, label %191, !dbg !7058

170:                                              ; preds = %164
  %171 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !7059
  %172 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %171, i32 0, i32 4, !dbg !7062
  %173 = load i32, i32* %8, align 4, !dbg !7063
  %174 = sext i32 %173 to i64, !dbg !7059
  %175 = getelementptr inbounds [8 x i32], [8 x i32]* %172, i64 0, i64 %174, !dbg !7059
  %176 = load i32, i32* %175, align 4, !dbg !7059
  %177 = load i32, i32* %5, align 4, !dbg !7064
  %178 = icmp sgt i32 %176, %177, !dbg !7065
  br i1 %178, label %179, label %187, !dbg !7066

179:                                              ; preds = %170
  %180 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !7067
  %181 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %180, i32 0, i32 4, !dbg !7068
  %182 = load i32, i32* %8, align 4, !dbg !7069
  %183 = sext i32 %182 to i64, !dbg !7067
  %184 = getelementptr inbounds [8 x i32], [8 x i32]* %181, i64 0, i64 %183, !dbg !7067
  %185 = load i32, i32* %184, align 4, !dbg !7070
  %186 = add nsw i32 %185, -1, !dbg !7070
  store i32 %186, i32* %184, align 4, !dbg !7070
  br label %187, !dbg !7067

187:                                              ; preds = %179, %170
  br label %188, !dbg !7071

188:                                              ; preds = %187
  %189 = load i32, i32* %8, align 4, !dbg !7072
  %190 = add nsw i32 %189, 1, !dbg !7072
  store i32 %190, i32* %8, align 4, !dbg !7072
  br label %164, !dbg !7073, !llvm.loop !7074

191:                                              ; preds = %164
  br label %192, !dbg !7076

192:                                              ; preds = %191
  %193 = load i32, i32* %6, align 4, !dbg !7077
  %194 = add nsw i32 %193, 1, !dbg !7077
  store i32 %194, i32* %6, align 4, !dbg !7077
  br label %150, !dbg !7078, !llvm.loop !7079

195:                                              ; preds = %150
  store i32 0, i32* %3, align 4, !dbg !7081
  br label %196, !dbg !7081

196:                                              ; preds = %195, %21
  %197 = load i32, i32* %3, align 4, !dbg !7082
  ret i32 %197, !dbg !7082
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @add_atom(%struct.residue_t* %0, i8* %1) #0 !dbg !7083 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.residue_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.atom_t*, align 8
  %10 = alloca %struct.atom_t*, align 8
  %11 = alloca %struct.atom_t*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i8*, align 8
  store %struct.residue_t* %0, %struct.residue_t** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.residue_t** %4, metadata !7084, metadata !DIExpression()), !dbg !7085
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !7086, metadata !DIExpression()), !dbg !7087
  call void @llvm.dbg.declare(metadata i32* %6, metadata !7088, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.declare(metadata i32* %7, metadata !7090, metadata !DIExpression()), !dbg !7091
  call void @llvm.dbg.declare(metadata i32* %8, metadata !7092, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.declare(metadata %struct.atom_t** %9, metadata !7094, metadata !DIExpression()), !dbg !7095
  call void @llvm.dbg.declare(metadata %struct.atom_t** %10, metadata !7096, metadata !DIExpression()), !dbg !7097
  call void @llvm.dbg.declare(metadata %struct.atom_t** %11, metadata !7098, metadata !DIExpression()), !dbg !7099
  call void @llvm.dbg.declare(metadata i32** %12, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata i32** %13, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata i8** %14, metadata !7104, metadata !DIExpression()), !dbg !7105
  %15 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7106
  %16 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %15, i32 0, i32 15, !dbg !7107
  %17 = load i32, i32* %16, align 8, !dbg !7107
  %18 = add nsw i32 %17, 1, !dbg !7108
  store i32 %18, i32* %6, align 4, !dbg !7109
  %19 = load i32, i32* %6, align 4, !dbg !7110
  %20 = sext i32 %19 to i64, !dbg !7110
  %21 = mul i64 %20, 176, !dbg !7112
  %22 = call noalias i8* @malloc(i64 %21) #8, !dbg !7113
  %23 = bitcast i8* %22 to %struct.atom_t*, !dbg !7114
  store %struct.atom_t* %23, %struct.atom_t** %10, align 8, !dbg !7115
  %24 = icmp eq %struct.atom_t* %23, null, !dbg !7116
  br i1 %24, label %25, label %28, !dbg !7117

25:                                               ; preds = %2
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7118
  %27 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.67, i64 0, i64 0)), !dbg !7120
  store i32 1, i32* %3, align 4, !dbg !7121
  br label %190, !dbg !7121

28:                                               ; preds = %2
  %29 = load i32, i32* %6, align 4, !dbg !7122
  %30 = sext i32 %29 to i64, !dbg !7122
  %31 = mul i64 %30, 4, !dbg !7124
  %32 = call noalias i8* @malloc(i64 %31) #8, !dbg !7125
  %33 = bitcast i8* %32 to i32*, !dbg !7126
  store i32* %33, i32** %12, align 8, !dbg !7127
  %34 = icmp eq i32* %33, null, !dbg !7128
  br i1 %34, label %35, label %38, !dbg !7129

35:                                               ; preds = %28
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7130
  %37 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.68, i64 0, i64 0)), !dbg !7132
  store i32 1, i32* %3, align 4, !dbg !7133
  br label %190, !dbg !7133

38:                                               ; preds = %28
  %39 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7134
  %40 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %39, i32 0, i32 17, !dbg !7135
  %41 = load %struct.atom_t*, %struct.atom_t** %40, align 8, !dbg !7135
  store %struct.atom_t* %41, %struct.atom_t** %11, align 8, !dbg !7136
  store i32 0, i32* %7, align 4, !dbg !7137
  br label %42, !dbg !7139

42:                                               ; preds = %58, %38
  %43 = load i32, i32* %7, align 4, !dbg !7140
  %44 = load i32, i32* %6, align 4, !dbg !7142
  %45 = sub nsw i32 %44, 1, !dbg !7143
  %46 = icmp slt i32 %43, %45, !dbg !7144
  br i1 %46, label %47, label %61, !dbg !7145

47:                                               ; preds = %42
  %48 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !7146
  %49 = load i32, i32* %7, align 4, !dbg !7147
  %50 = sext i32 %49 to i64, !dbg !7146
  %51 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %48, i64 %50, !dbg !7146
  %52 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !7148
  %53 = load i32, i32* %7, align 4, !dbg !7149
  %54 = sext i32 %53 to i64, !dbg !7148
  %55 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %52, i64 %54, !dbg !7148
  %56 = bitcast %struct.atom_t* %51 to i8*, !dbg !7148
  %57 = bitcast %struct.atom_t* %55 to i8*, !dbg !7148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 176, i1 false), !dbg !7148
  br label %58, !dbg !7146

58:                                               ; preds = %47
  %59 = load i32, i32* %7, align 4, !dbg !7150
  %60 = add nsw i32 %59, 1, !dbg !7150
  store i32 %60, i32* %7, align 4, !dbg !7150
  br label %42, !dbg !7151, !llvm.loop !7152

61:                                               ; preds = %42
  %62 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !7154
  %63 = load i32, i32* %6, align 4, !dbg !7155
  %64 = sub nsw i32 %63, 1, !dbg !7156
  %65 = sext i32 %64 to i64, !dbg !7154
  %66 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %62, i64 %65, !dbg !7154
  store %struct.atom_t* %66, %struct.atom_t** %9, align 8, !dbg !7157
  %67 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7158
  %68 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %67, i32 0, i32 0, !dbg !7159
  %69 = load i8*, i8** %68, align 8, !dbg !7159
  %70 = call i64 @strlen(i8* %69) #9, !dbg !7160
  %71 = add i64 %70, 1, !dbg !7161
  %72 = call noalias i8* @malloc(i64 %71) #8, !dbg !7162
  store i8* %72, i8** %14, align 8, !dbg !7163
  %73 = load i8*, i8** %14, align 8, !dbg !7164
  %74 = icmp eq i8* %73, null, !dbg !7166
  br i1 %74, label %75, label %78, !dbg !7167

75:                                               ; preds = %61
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !7168
  %77 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.69, i64 0, i64 0)), !dbg !7170
  call void @exit(i32 1) #11, !dbg !7171
  unreachable, !dbg !7171

78:                                               ; preds = %61
  %79 = load i8*, i8** %14, align 8, !dbg !7172
  %80 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7173
  %81 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %80, i32 0, i32 0, !dbg !7174
  store i8* %79, i8** %81, align 8, !dbg !7175
  %82 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7176
  %83 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %82, i32 0, i32 0, !dbg !7177
  %84 = load i8*, i8** %83, align 8, !dbg !7177
  %85 = load i8*, i8** %5, align 8, !dbg !7178
  %86 = call i8* @strcpy(i8* %84, i8* %85) #8, !dbg !7179
  %87 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7180
  %88 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %87, i32 0, i32 2, !dbg !7181
  store i32 0, i32* %88, align 8, !dbg !7182
  %89 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7183
  %90 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %89, i32 0, i32 3, !dbg !7184
  store i32 0, i32* %90, align 4, !dbg !7185
  store i32 0, i32* %8, align 4, !dbg !7186
  br label %91, !dbg !7188

91:                                               ; preds = %100, %78
  %92 = load i32, i32* %8, align 4, !dbg !7189
  %93 = icmp slt i32 %92, 8, !dbg !7191
  br i1 %93, label %94, label %103, !dbg !7192

94:                                               ; preds = %91
  %95 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7193
  %96 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %95, i32 0, i32 4, !dbg !7194
  %97 = load i32, i32* %8, align 4, !dbg !7195
  %98 = sext i32 %97 to i64, !dbg !7193
  %99 = getelementptr inbounds [8 x i32], [8 x i32]* %96, i64 0, i64 %98, !dbg !7193
  store i32 -1, i32* %99, align 4, !dbg !7196
  br label %100, !dbg !7193

100:                                              ; preds = %94
  %101 = load i32, i32* %8, align 4, !dbg !7197
  %102 = add nsw i32 %101, 1, !dbg !7197
  store i32 %102, i32* %8, align 4, !dbg !7197
  br label %91, !dbg !7198, !llvm.loop !7199

103:                                              ; preds = %91
  %104 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !7201
  %105 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %104, i64 0, !dbg !7201
  %106 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %105, i32 0, i32 5, !dbg !7202
  %107 = load %struct.residue_t*, %struct.residue_t** %106, align 8, !dbg !7202
  %108 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7203
  %109 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %108, i32 0, i32 5, !dbg !7204
  store %struct.residue_t* %107, %struct.residue_t** %109, align 8, !dbg !7205
  %110 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7206
  %111 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %110, i32 0, i32 6, !dbg !7207
  store double 0.000000e+00, double* %111, align 8, !dbg !7208
  %112 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7209
  %113 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %112, i32 0, i32 7, !dbg !7210
  store double 1.000000e+00, double* %113, align 8, !dbg !7211
  %114 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7212
  %115 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %114, i32 0, i32 17, !dbg !7213
  %116 = getelementptr inbounds [3 x double], [3 x double]* %115, i64 0, i64 0, !dbg !7212
  store double 0.000000e+00, double* %116, align 8, !dbg !7214
  %117 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7215
  %118 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %117, i32 0, i32 17, !dbg !7216
  %119 = getelementptr inbounds [3 x double], [3 x double]* %118, i64 0, i64 1, !dbg !7215
  store double 0.000000e+00, double* %119, align 8, !dbg !7217
  %120 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7218
  %121 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %120, i32 0, i32 17, !dbg !7219
  %122 = getelementptr inbounds [3 x double], [3 x double]* %121, i64 0, i64 2, !dbg !7218
  store double 0.000000e+00, double* %122, align 8, !dbg !7220
  %123 = load %struct.atom_t*, %struct.atom_t** %9, align 8, !dbg !7221
  %124 = getelementptr inbounds %struct.atom_t, %struct.atom_t* %123, i32 0, i32 18, !dbg !7222
  store double 0.000000e+00, double* %124, align 8, !dbg !7223
  %125 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7224
  %126 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %125, i32 0, i32 16, !dbg !7226
  %127 = load i32*, i32** %126, align 8, !dbg !7226
  store i32* %127, i32** %13, align 8, !dbg !7227
  %128 = icmp ne i32* %127, null, !dbg !7227
  br i1 %128, label %129, label %156, !dbg !7228

129:                                              ; preds = %103
  store i32 0, i32* %7, align 4, !dbg !7229
  br label %130, !dbg !7232

130:                                              ; preds = %145, %129
  %131 = load i32, i32* %7, align 4, !dbg !7233
  %132 = load i32, i32* %6, align 4, !dbg !7235
  %133 = sub nsw i32 %132, 1, !dbg !7236
  %134 = icmp slt i32 %131, %133, !dbg !7237
  br i1 %134, label %135, label %148, !dbg !7238

135:                                              ; preds = %130
  %136 = load i32*, i32** %13, align 8, !dbg !7239
  %137 = load i32, i32* %7, align 4, !dbg !7240
  %138 = sext i32 %137 to i64, !dbg !7239
  %139 = getelementptr inbounds i32, i32* %136, i64 %138, !dbg !7239
  %140 = load i32, i32* %139, align 4, !dbg !7239
  %141 = load i32*, i32** %12, align 8, !dbg !7241
  %142 = load i32, i32* %7, align 4, !dbg !7242
  %143 = sext i32 %142 to i64, !dbg !7241
  %144 = getelementptr inbounds i32, i32* %141, i64 %143, !dbg !7241
  store i32 %140, i32* %144, align 4, !dbg !7243
  br label %145, !dbg !7241

145:                                              ; preds = %135
  %146 = load i32, i32* %7, align 4, !dbg !7244
  %147 = add nsw i32 %146, 1, !dbg !7244
  store i32 %147, i32* %7, align 4, !dbg !7244
  br label %130, !dbg !7245, !llvm.loop !7246

148:                                              ; preds = %130
  %149 = load i32, i32* %6, align 4, !dbg !7248
  %150 = sub nsw i32 %149, 1, !dbg !7249
  %151 = load i32*, i32** %12, align 8, !dbg !7250
  %152 = load i32, i32* %6, align 4, !dbg !7251
  %153 = sub nsw i32 %152, 1, !dbg !7252
  %154 = sext i32 %153 to i64, !dbg !7250
  %155 = getelementptr inbounds i32, i32* %151, i64 %154, !dbg !7250
  store i32 %150, i32* %155, align 4, !dbg !7253
  br label %171, !dbg !7254

156:                                              ; preds = %103
  store i32 0, i32* %7, align 4, !dbg !7255
  br label %157, !dbg !7258

157:                                              ; preds = %167, %156
  %158 = load i32, i32* %7, align 4, !dbg !7259
  %159 = load i32, i32* %6, align 4, !dbg !7261
  %160 = icmp slt i32 %158, %159, !dbg !7262
  br i1 %160, label %161, label %170, !dbg !7263

161:                                              ; preds = %157
  %162 = load i32, i32* %7, align 4, !dbg !7264
  %163 = load i32*, i32** %12, align 8, !dbg !7265
  %164 = load i32, i32* %7, align 4, !dbg !7266
  %165 = sext i32 %164 to i64, !dbg !7265
  %166 = getelementptr inbounds i32, i32* %163, i64 %165, !dbg !7265
  store i32 %162, i32* %166, align 4, !dbg !7267
  br label %167, !dbg !7265

167:                                              ; preds = %161
  %168 = load i32, i32* %7, align 4, !dbg !7268
  %169 = add nsw i32 %168, 1, !dbg !7268
  store i32 %169, i32* %7, align 4, !dbg !7268
  br label %157, !dbg !7269, !llvm.loop !7270

170:                                              ; preds = %157
  br label %171

171:                                              ; preds = %170, %148
  %172 = load i32*, i32** %12, align 8, !dbg !7272
  %173 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7273
  %174 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %173, i32 0, i32 16, !dbg !7274
  store i32* %172, i32** %174, align 8, !dbg !7275
  %175 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7276
  %176 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %175, i32 0, i32 15, !dbg !7277
  %177 = load i32, i32* %176, align 8, !dbg !7278
  %178 = add nsw i32 %177, 1, !dbg !7278
  store i32 %178, i32* %176, align 8, !dbg !7278
  %179 = load %struct.atom_t*, %struct.atom_t** %10, align 8, !dbg !7279
  %180 = load %struct.residue_t*, %struct.residue_t** %4, align 8, !dbg !7280
  %181 = getelementptr inbounds %struct.residue_t, %struct.residue_t* %180, i32 0, i32 17, !dbg !7281
  store %struct.atom_t* %179, %struct.atom_t** %181, align 8, !dbg !7282
  %182 = load i32*, i32** %13, align 8, !dbg !7283
  %183 = icmp ne i32* %182, null, !dbg !7283
  br i1 %183, label %184, label %187, !dbg !7285

184:                                              ; preds = %171
  %185 = load i32*, i32** %13, align 8, !dbg !7286
  %186 = bitcast i32* %185 to i8*, !dbg !7286
  call void @free(i8* %186) #8, !dbg !7287
  br label %187, !dbg !7287

187:                                              ; preds = %184, %171
  %188 = load %struct.atom_t*, %struct.atom_t** %11, align 8, !dbg !7288
  %189 = bitcast %struct.atom_t* %188 to i8*, !dbg !7288
  call void @free(i8* %189) #8, !dbg !7289
  store i32 0, i32* %3, align 4, !dbg !7290
  br label %190, !dbg !7290

190:                                              ; preds = %187, %35, %25
  %191 = load i32, i32* %3, align 4, !dbg !7291
  ret i32 %191, !dbg !7291
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #7

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

declare dso_local void @perror(i8*) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind willreturn }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!291, !292, !293}
!llvm.ident = !{!294}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "e_msg", scope: !2, file: !3, line: 25, type: !288, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.0-4ubuntu1 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !21, globals: !246, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "molutil.c", directory: "/home/rouzbeh/Graduate/Research/SPEC/installation/benchspec/CPU/544.nab_r/src")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 46, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20}
!9 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!10 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!11 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!12 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!13 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!14 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!15 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!16 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!17 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!20 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!21 = !{!22, !237, !38, !238, !55, !72, !36, !239, !240, !244, !102, !245}
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "MOLECULE_T", file: !24, line: 126, baseType: !25)
!24 = !DIFile(filename: "./nabtypes.h", directory: "/home/rouzbeh/Graduate/Research/SPEC/installation/benchspec/CPU/544.nab_r/src")
!25 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "molecule_t", file: !24, line: 118, size: 1088, elements: !26)
!26 = !{!27, !34, !37, !131, !132, !133, !134}
!27 = !DIDerivedType(tag: DW_TAG_member, name: "m_frame", scope: !25, file: !24, line: 119, baseType: !28, size: 768)
!28 = !DIDerivedType(tag: DW_TAG_typedef, name: "FRAME_T", file: !24, line: 13, baseType: !29)
!29 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 768, elements: !31)
!30 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!31 = !{!32, !33}
!32 = !DISubrange(count: 4)
!33 = !DISubrange(count: 3)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "m_nstrands", scope: !25, file: !24, line: 120, baseType: !35, size: 32, offset: 768)
!35 = !DIDerivedType(tag: DW_TAG_typedef, name: "INT_T", file: !24, line: 6, baseType: !36)
!36 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "m_strands", scope: !25, file: !24, line: 121, baseType: !38, size: 64, offset: 832)
!38 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!39 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRAND_T", file: !24, line: 93, baseType: !40)
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "strand_t", file: !24, line: 84, size: 384, elements: !41)
!41 = !{!42, !46, !47, !48, !50, !52, !53, !54}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "s_strandname", scope: !40, file: !24, line: 85, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "STRING_T", file: !24, line: 17, baseType: !45)
!45 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "s_strandnum", scope: !40, file: !24, line: 86, baseType: !35, size: 32, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "s_attr", scope: !40, file: !24, line: 87, baseType: !35, size: 32, offset: 96)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "s_molecule", scope: !40, file: !24, line: 88, baseType: !49, size: 64, offset: 128)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !25, size: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "s_next", scope: !40, file: !24, line: 89, baseType: !51, size: 64, offset: 192)
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "s_nresidues", scope: !40, file: !24, line: 90, baseType: !35, size: 32, offset: 256)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "s_res_size", scope: !40, file: !24, line: 91, baseType: !35, size: 32, offset: 288)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "s_residues", scope: !40, file: !24, line: 92, baseType: !55, size: 64, offset: 320)
!55 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !56, size: 64)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DIDerivedType(tag: DW_TAG_typedef, name: "RESIDUE_T", file: !24, line: 82, baseType: !58)
!58 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "residue_t", file: !24, line: 63, size: 1024, elements: !59)
!59 = !{!60, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !81, !82, !88, !89, !98, !99, !101}
!60 = !DIDerivedType(tag: DW_TAG_member, name: "r_next", scope: !58, file: !24, line: 64, baseType: !61, size: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "r_num", scope: !58, file: !24, line: 65, baseType: !35, size: 32, offset: 64)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "r_tresnum", scope: !58, file: !24, line: 66, baseType: !35, size: 32, offset: 96)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "r_resnum", scope: !58, file: !24, line: 67, baseType: !35, size: 32, offset: 128)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "r_resname", scope: !58, file: !24, line: 68, baseType: !43, size: 64, offset: 192)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "r_resid", scope: !58, file: !24, line: 69, baseType: !43, size: 64, offset: 256)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "r_attr", scope: !58, file: !24, line: 70, baseType: !35, size: 32, offset: 320)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "r_kind", scope: !58, file: !24, line: 71, baseType: !35, size: 32, offset: 352)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "r_atomkind", scope: !58, file: !24, line: 72, baseType: !35, size: 32, offset: 384)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "r_strand", scope: !58, file: !24, line: 73, baseType: !51, size: 64, offset: 448)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "r_extbonds", scope: !58, file: !24, line: 74, baseType: !72, size: 64, offset: 512)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTBOND_T", file: !24, line: 52, baseType: !74)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extbond_t", file: !24, line: 47, size: 192, elements: !75)
!75 = !{!76, !78, !79, !80}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "eb_next", scope: !74, file: !24, line: 48, baseType: !77, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !74, size: 64)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "eb_anum", scope: !74, file: !24, line: 49, baseType: !35, size: 32, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "eb_rnum", scope: !74, file: !24, line: 50, baseType: !35, size: 32, offset: 96)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "eb_ranum", scope: !74, file: !24, line: 51, baseType: !35, size: 32, offset: 128)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "r_nintbonds", scope: !58, file: !24, line: 75, baseType: !35, size: 32, offset: 576)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "r_intbonds", scope: !58, file: !24, line: 76, baseType: !83, size: 64, offset: 640)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "INTBOND_T", file: !24, line: 54, baseType: !85)
!85 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 64, elements: !86)
!86 = !{!87}
!87 = !DISubrange(count: 2)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "r_nchiral", scope: !58, file: !24, line: 77, baseType: !35, size: 32, offset: 704)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "r_chiral", scope: !58, file: !24, line: 78, baseType: !90, size: 64, offset: 768)
!90 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !91, size: 64)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "CHIRAL_T", file: !24, line: 61, baseType: !92)
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "chiral_t", file: !24, line: 58, size: 192, elements: !93)
!93 = !{!94, !97}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "c_anum", scope: !92, file: !24, line: 59, baseType: !95, size: 128)
!95 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 128, elements: !96)
!96 = !{!32}
!97 = !DIDerivedType(tag: DW_TAG_member, name: "c_dist", scope: !92, file: !24, line: 60, baseType: !30, size: 64, offset: 128)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "r_natoms", scope: !58, file: !24, line: 79, baseType: !35, size: 32, offset: 832)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "r_aindex", scope: !58, file: !24, line: 80, baseType: !100, size: 64, offset: 896)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "r_atoms", scope: !58, file: !24, line: 81, baseType: !102, size: 64, offset: 960)
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "ATOM_T", file: !24, line: 45, baseType: !104)
!104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atom_t", file: !24, line: 25, size: 1408, elements: !105)
!105 = !{!106, !107, !108, !109, !110, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !130}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "a_atomname", scope: !104, file: !24, line: 26, baseType: !43, size: 64)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "a_atomtype", scope: !104, file: !24, line: 27, baseType: !43, size: 64, offset: 64)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "a_attr", scope: !104, file: !24, line: 28, baseType: !35, size: 32, offset: 128)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "a_nconnect", scope: !104, file: !24, line: 29, baseType: !35, size: 32, offset: 160)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "a_connect", scope: !104, file: !24, line: 30, baseType: !111, size: 256, offset: 192)
!111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 256, elements: !112)
!112 = !{!113}
!113 = !DISubrange(count: 8)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "a_residue", scope: !104, file: !24, line: 31, baseType: !61, size: 64, offset: 448)
!115 = !DIDerivedType(tag: DW_TAG_member, name: "a_charge", scope: !104, file: !24, line: 32, baseType: !30, size: 64, offset: 512)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "a_radius", scope: !104, file: !24, line: 33, baseType: !30, size: 64, offset: 576)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "a_bfact", scope: !104, file: !24, line: 34, baseType: !30, size: 64, offset: 640)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "a_occ", scope: !104, file: !24, line: 35, baseType: !30, size: 64, offset: 704)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "a_element", scope: !104, file: !24, line: 36, baseType: !43, size: 64, offset: 768)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "a_int1", scope: !104, file: !24, line: 37, baseType: !35, size: 32, offset: 832)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "a_float1", scope: !104, file: !24, line: 38, baseType: !30, size: 64, offset: 896)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "a_float2", scope: !104, file: !24, line: 39, baseType: !30, size: 64, offset: 960)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "a_tatomnum", scope: !104, file: !24, line: 40, baseType: !35, size: 32, offset: 1024)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "a_atomnum", scope: !104, file: !24, line: 41, baseType: !35, size: 32, offset: 1056)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "a_fullname", scope: !104, file: !24, line: 42, baseType: !43, size: 64, offset: 1088)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "a_pos", scope: !104, file: !24, line: 43, baseType: !127, size: 192, offset: 1152)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "POINT_T", file: !24, line: 12, baseType: !128)
!128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 192, elements: !129)
!129 = !{!33}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "a_w", scope: !104, file: !24, line: 44, baseType: !30, size: 64, offset: 1344)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "m_nresidues", scope: !25, file: !24, line: 122, baseType: !35, size: 32, offset: 896)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "m_natoms", scope: !25, file: !24, line: 123, baseType: !35, size: 32, offset: 928)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "m_nvalid", scope: !25, file: !24, line: 124, baseType: !35, size: 32, offset: 960)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "m_prm", scope: !25, file: !24, line: 125, baseType: !135, size: 64, offset: 1024)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PARMSTRUCT_T", file: !24, line: 115, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "parm", file: !24, line: 95, size: 5760, elements: !138)
!138 = !{!139, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "ititl", scope: !137, file: !24, line: 96, baseType: !140, size: 648)
!140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 648, elements: !141)
!141 = !{!142}
!142 = !DISubrange(count: 81)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "IfBox", scope: !137, file: !24, line: 97, baseType: !35, size: 32, offset: 672)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "Nmxrs", scope: !137, file: !24, line: 97, baseType: !35, size: 32, offset: 704)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "IfCap", scope: !137, file: !24, line: 97, baseType: !35, size: 32, offset: 736)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "Natom", scope: !137, file: !24, line: 98, baseType: !35, size: 32, offset: 768)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "Ntypes", scope: !137, file: !24, line: 98, baseType: !35, size: 32, offset: 800)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "Nbonh", scope: !137, file: !24, line: 98, baseType: !35, size: 32, offset: 832)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "Mbona", scope: !137, file: !24, line: 98, baseType: !35, size: 32, offset: 864)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "Ntheth", scope: !137, file: !24, line: 98, baseType: !35, size: 32, offset: 896)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "Mtheta", scope: !137, file: !24, line: 98, baseType: !35, size: 32, offset: 928)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "Nphih", scope: !137, file: !24, line: 99, baseType: !35, size: 32, offset: 960)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "Mphia", scope: !137, file: !24, line: 99, baseType: !35, size: 32, offset: 992)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "Nhparm", scope: !137, file: !24, line: 99, baseType: !35, size: 32, offset: 1024)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "Nparm", scope: !137, file: !24, line: 99, baseType: !35, size: 32, offset: 1056)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "Nnb", scope: !137, file: !24, line: 99, baseType: !35, size: 32, offset: 1088)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "Nres", scope: !137, file: !24, line: 99, baseType: !35, size: 32, offset: 1120)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "Nbona", scope: !137, file: !24, line: 100, baseType: !35, size: 32, offset: 1152)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "Ntheta", scope: !137, file: !24, line: 100, baseType: !35, size: 32, offset: 1184)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "Nphia", scope: !137, file: !24, line: 100, baseType: !35, size: 32, offset: 1216)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "Numbnd", scope: !137, file: !24, line: 100, baseType: !35, size: 32, offset: 1248)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "Numang", scope: !137, file: !24, line: 100, baseType: !35, size: 32, offset: 1280)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "Nptra", scope: !137, file: !24, line: 100, baseType: !35, size: 32, offset: 1312)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "Natyp", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1344)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "Nphb", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1376)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "Nat3", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1408)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "Ntype2d", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1440)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "Nttyp", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1472)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "Nspm", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1504)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "Iptres", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1536)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "Nspsol", scope: !137, file: !24, line: 101, baseType: !35, size: 32, offset: 1568)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "Ipatm", scope: !137, file: !24, line: 102, baseType: !35, size: 32, offset: 1600)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "Natcap", scope: !137, file: !24, line: 102, baseType: !35, size: 32, offset: 1632)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "Numextra", scope: !137, file: !24, line: 102, baseType: !35, size: 32, offset: 1664)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "AtomNames", scope: !137, file: !24, line: 103, baseType: !43, size: 64, offset: 1728)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "ResNames", scope: !137, file: !24, line: 103, baseType: !43, size: 64, offset: 1792)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "AtomSym", scope: !137, file: !24, line: 103, baseType: !43, size: 64, offset: 1856)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "AtomTree", scope: !137, file: !24, line: 103, baseType: !43, size: 64, offset: 1920)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "Charges", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 1984)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "Masses", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2048)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "Rk", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2112)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "Req", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2176)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "Tk", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2240)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "Teq", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2304)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "Pk", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2368)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "Pn", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2432)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "Phase", scope: !137, file: !24, line: 104, baseType: !180, size: 64, offset: 2496)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "Solty", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2560)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "Cn1", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2624)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "Cn2", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2688)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "HB12", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2752)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "HB10", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2816)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "Rborn", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2880)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "Fs", scope: !137, file: !24, line: 105, baseType: !180, size: 64, offset: 2944)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "Box", scope: !137, file: !24, line: 106, baseType: !128, size: 192, offset: 3008)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "Cutcap", scope: !137, file: !24, line: 106, baseType: !30, size: 64, offset: 3200)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "Xcap", scope: !137, file: !24, line: 106, baseType: !30, size: 64, offset: 3264)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "Ycap", scope: !137, file: !24, line: 106, baseType: !30, size: 64, offset: 3328)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "Zcap", scope: !137, file: !24, line: 106, baseType: !30, size: 64, offset: 3392)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "Fsmax", scope: !137, file: !24, line: 106, baseType: !30, size: 64, offset: 3456)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "Iac", scope: !137, file: !24, line: 107, baseType: !100, size: 64, offset: 3520)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "Iblo", scope: !137, file: !24, line: 107, baseType: !100, size: 64, offset: 3584)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "Cno", scope: !137, file: !24, line: 107, baseType: !100, size: 64, offset: 3648)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "Ipres", scope: !137, file: !24, line: 107, baseType: !100, size: 64, offset: 3712)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ExclAt", scope: !137, file: !24, line: 107, baseType: !100, size: 64, offset: 3776)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "TreeJoin", scope: !137, file: !24, line: 107, baseType: !100, size: 64, offset: 3840)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "AtomRes", scope: !137, file: !24, line: 108, baseType: !100, size: 64, offset: 3904)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "BondHAt1", scope: !137, file: !24, line: 108, baseType: !100, size: 64, offset: 3968)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "BondHAt2", scope: !137, file: !24, line: 108, baseType: !100, size: 64, offset: 4032)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "BondHNum", scope: !137, file: !24, line: 108, baseType: !100, size: 64, offset: 4096)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "BondAt1", scope: !137, file: !24, line: 108, baseType: !100, size: 64, offset: 4160)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "BondAt2", scope: !137, file: !24, line: 108, baseType: !100, size: 64, offset: 4224)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "BondNum", scope: !137, file: !24, line: 109, baseType: !100, size: 64, offset: 4288)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "AngleHAt1", scope: !137, file: !24, line: 109, baseType: !100, size: 64, offset: 4352)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "AngleHAt2", scope: !137, file: !24, line: 109, baseType: !100, size: 64, offset: 4416)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "AngleHAt3", scope: !137, file: !24, line: 109, baseType: !100, size: 64, offset: 4480)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "AngleHNum", scope: !137, file: !24, line: 109, baseType: !100, size: 64, offset: 4544)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "AngleAt1", scope: !137, file: !24, line: 110, baseType: !100, size: 64, offset: 4608)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "AngleAt2", scope: !137, file: !24, line: 110, baseType: !100, size: 64, offset: 4672)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "AngleAt3", scope: !137, file: !24, line: 110, baseType: !100, size: 64, offset: 4736)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "AngleNum", scope: !137, file: !24, line: 110, baseType: !100, size: 64, offset: 4800)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "DihHAt1", scope: !137, file: !24, line: 110, baseType: !100, size: 64, offset: 4864)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "DihHAt2", scope: !137, file: !24, line: 111, baseType: !100, size: 64, offset: 4928)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "DihHAt3", scope: !137, file: !24, line: 111, baseType: !100, size: 64, offset: 4992)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "DihHAt4", scope: !137, file: !24, line: 111, baseType: !100, size: 64, offset: 5056)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "DihHNum", scope: !137, file: !24, line: 111, baseType: !100, size: 64, offset: 5120)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "DihAt1", scope: !137, file: !24, line: 111, baseType: !100, size: 64, offset: 5184)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "DihAt2", scope: !137, file: !24, line: 111, baseType: !100, size: 64, offset: 5248)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "DihAt3", scope: !137, file: !24, line: 112, baseType: !100, size: 64, offset: 5312)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "DihAt4", scope: !137, file: !24, line: 112, baseType: !100, size: 64, offset: 5376)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "DihNum", scope: !137, file: !24, line: 112, baseType: !100, size: 64, offset: 5440)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "Boundary", scope: !137, file: !24, line: 112, baseType: !100, size: 64, offset: 5504)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "N14pairs", scope: !137, file: !24, line: 113, baseType: !100, size: 64, offset: 5568)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "N14pairlist", scope: !137, file: !24, line: 113, baseType: !100, size: 64, offset: 5632)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "Gvdw", scope: !137, file: !24, line: 114, baseType: !180, size: 64, offset: 5696)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!239 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "MATRIX_T", file: !24, line: 14, baseType: !242)
!242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 1024, elements: !243)
!243 = !{!32, !32}
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 64)
!245 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!246 = !{!247, !253, !258, !263, !268, !273, !280, !285, !0}
!247 = !DIGlobalVariableExpression(var: !248, expr: !DIExpression())
!248 = distinct !DIGlobalVariable(name: "rname", scope: !249, file: !3, line: 733, type: !238, isLocal: true, isDefinition: true)
!249 = distinct !DISubprogram(name: "getresname", scope: !3, file: !3, line: 731, type: !250, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!250 = !DISubroutineType(types: !251)
!251 = !{!238, !56}
!252 = !{}
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "rv_err", scope: !255, file: !3, line: 1117, type: !36, isLocal: true, isDefinition: true)
!255 = distinct !DISubprogram(name: "NAB_rri", scope: !3, file: !3, line: 1113, type: !256, scopeLine: 1114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!256 = !DISubroutineType(types: !257)
!257 = !{!244, !56, !238}
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "rv_err", scope: !260, file: !3, line: 1162, type: !36, isLocal: true, isDefinition: true)
!260 = distinct !DISubprogram(name: "NAB_ari", scope: !3, file: !3, line: 1160, type: !261, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!261 = !DISubroutineType(types: !262)
!262 = !{!244, !102, !238}
!263 = !DIGlobalVariableExpression(var: !264, expr: !DIExpression())
!264 = distinct !DIGlobalVariable(name: "f", scope: !265, file: !3, line: 1212, type: !30, isLocal: true, isDefinition: true)
!265 = distinct !DISubprogram(name: "NAB_arf", scope: !3, file: !3, line: 1210, type: !266, scopeLine: 1211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!266 = !DISubroutineType(types: !267)
!267 = !{!180, !102, !238}
!268 = !DIGlobalVariableExpression(var: !269, expr: !DIExpression())
!269 = distinct !DIGlobalVariable(name: "mp", scope: !270, file: !3, line: 1318, type: !241, isLocal: true, isDefinition: true)
!270 = distinct !DISubprogram(name: "newtransform", scope: !3, file: !3, line: 1315, type: !271, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!271 = !DISubroutineType(types: !272)
!272 = !{!240, !30, !30, !30, !30, !30, !30}
!273 = !DIGlobalVariableExpression(var: !274, expr: !DIExpression())
!274 = distinct !DIGlobalVariable(name: "mr", scope: !275, file: !3, line: 1431, type: !241, isLocal: true, isDefinition: true)
!275 = distinct !DISubprogram(name: "updtransform", scope: !3, file: !3, line: 1428, type: !276, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!276 = !DISubroutineType(types: !277)
!277 = !{!240, !278, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 256, elements: !96)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "mat", scope: !282, file: !3, line: 1443, type: !241, isLocal: true, isDefinition: true)
!282 = distinct !DISubprogram(name: "trans4p", scope: !3, file: !3, line: 1439, type: !283, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!283 = !DISubroutineType(types: !284)
!284 = !{!240, !180, !180, !30}
!285 = !DIGlobalVariableExpression(var: !286, expr: !DIExpression())
!286 = distinct !DIGlobalVariable(name: "mat5", scope: !287, file: !3, line: 1474, type: !241, isLocal: true, isDefinition: true)
!287 = distinct !DISubprogram(name: "rot4p", scope: !3, file: !3, line: 1470, type: !283, scopeLine: 1471, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 2048, elements: !289)
!289 = !{!290}
!290 = !DISubrange(count: 256)
!291 = !{i32 7, !"Dwarf Version", i32 4}
!292 = !{i32 2, !"Debug Info Version", i32 3}
!293 = !{i32 1, !"wchar_size", i32 4}
!294 = !{!"clang version 10.0.0-4ubuntu1 "}
!295 = distinct !DISubprogram(name: "newmolecule", scope: !3, file: !3, line: 119, type: !296, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!296 = !DISubroutineType(types: !297)
!297 = !{!22}
!298 = !DILocalVariable(name: "mp", scope: !295, file: !3, line: 121, type: !22)
!299 = !DILocation(line: 121, column: 14, scope: !295)
!300 = !DILocation(line: 123, column: 26, scope: !301)
!301 = distinct !DILexicalBlock(scope: !295, file: !3, line: 123, column: 5)
!302 = !DILocation(line: 123, column: 12, scope: !301)
!303 = !DILocation(line: 123, column: 10, scope: !301)
!304 = !DILocation(line: 123, column: 54, scope: !301)
!305 = !DILocation(line: 123, column: 5, scope: !295)
!306 = !DILocation(line: 124, column: 3, scope: !307)
!307 = distinct !DILexicalBlock(scope: !301, file: !3, line: 123, column: 63)
!308 = !DILocation(line: 125, column: 3, scope: !307)
!309 = !DILocation(line: 130, column: 2, scope: !295)
!310 = !DILocation(line: 130, column: 6, scope: !295)
!311 = !DILocation(line: 130, column: 24, scope: !295)
!312 = !DILocation(line: 131, column: 2, scope: !295)
!313 = !DILocation(line: 131, column: 6, scope: !295)
!314 = !DILocation(line: 131, column: 24, scope: !295)
!315 = !DILocation(line: 132, column: 2, scope: !295)
!316 = !DILocation(line: 132, column: 6, scope: !295)
!317 = !DILocation(line: 132, column: 24, scope: !295)
!318 = !DILocation(line: 134, column: 2, scope: !295)
!319 = !DILocation(line: 134, column: 6, scope: !295)
!320 = !DILocation(line: 134, column: 24, scope: !295)
!321 = !DILocation(line: 135, column: 2, scope: !295)
!322 = !DILocation(line: 135, column: 6, scope: !295)
!323 = !DILocation(line: 135, column: 24, scope: !295)
!324 = !DILocation(line: 136, column: 2, scope: !295)
!325 = !DILocation(line: 136, column: 6, scope: !295)
!326 = !DILocation(line: 136, column: 24, scope: !295)
!327 = !DILocation(line: 138, column: 2, scope: !295)
!328 = !DILocation(line: 138, column: 6, scope: !295)
!329 = !DILocation(line: 138, column: 24, scope: !295)
!330 = !DILocation(line: 139, column: 2, scope: !295)
!331 = !DILocation(line: 139, column: 6, scope: !295)
!332 = !DILocation(line: 139, column: 24, scope: !295)
!333 = !DILocation(line: 140, column: 2, scope: !295)
!334 = !DILocation(line: 140, column: 6, scope: !295)
!335 = !DILocation(line: 140, column: 24, scope: !295)
!336 = !DILocation(line: 142, column: 2, scope: !295)
!337 = !DILocation(line: 142, column: 6, scope: !295)
!338 = !DILocation(line: 142, column: 24, scope: !295)
!339 = !DILocation(line: 143, column: 2, scope: !295)
!340 = !DILocation(line: 143, column: 6, scope: !295)
!341 = !DILocation(line: 143, column: 24, scope: !295)
!342 = !DILocation(line: 144, column: 2, scope: !295)
!343 = !DILocation(line: 144, column: 6, scope: !295)
!344 = !DILocation(line: 144, column: 24, scope: !295)
!345 = !DILocation(line: 146, column: 2, scope: !295)
!346 = !DILocation(line: 146, column: 6, scope: !295)
!347 = !DILocation(line: 146, column: 17, scope: !295)
!348 = !DILocation(line: 147, column: 2, scope: !295)
!349 = !DILocation(line: 147, column: 6, scope: !295)
!350 = !DILocation(line: 147, column: 16, scope: !295)
!351 = !DILocation(line: 150, column: 2, scope: !295)
!352 = !DILocation(line: 150, column: 6, scope: !295)
!353 = !DILocation(line: 150, column: 18, scope: !295)
!354 = !DILocation(line: 152, column: 2, scope: !295)
!355 = !DILocation(line: 152, column: 6, scope: !295)
!356 = !DILocation(line: 152, column: 15, scope: !295)
!357 = !DILocation(line: 154, column: 2, scope: !295)
!358 = !DILocation(line: 154, column: 6, scope: !295)
!359 = !DILocation(line: 154, column: 12, scope: !295)
!360 = !DILocation(line: 156, column: 10, scope: !295)
!361 = !DILocation(line: 156, column: 2, scope: !295)
!362 = !DILocation(line: 157, column: 1, scope: !295)
!363 = distinct !DISubprogram(name: "freeresidue", scope: !3, file: !3, line: 159, type: !364, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!364 = !DISubroutineType(types: !365)
!365 = !{!36, !56}
!366 = !DILocalVariable(name: "res", arg: 1, scope: !363, file: !3, line: 159, type: !56)
!367 = !DILocation(line: 159, column: 29, scope: !363)
!368 = !DILocalVariable(name: "a", scope: !363, file: !3, line: 161, type: !36)
!369 = !DILocation(line: 161, column: 7, scope: !363)
!370 = !DILocalVariable(name: "ap", scope: !363, file: !3, line: 162, type: !102)
!371 = !DILocation(line: 162, column: 11, scope: !363)
!372 = !DILocalVariable(name: "ep", scope: !363, file: !3, line: 163, type: !72)
!373 = !DILocation(line: 163, column: 13, scope: !363)
!374 = !DILocalVariable(name: "epn", scope: !363, file: !3, line: 163, type: !72)
!375 = !DILocation(line: 163, column: 18, scope: !363)
!376 = !DILocation(line: 165, column: 8, scope: !377)
!377 = distinct !DILexicalBlock(scope: !363, file: !3, line: 165, column: 7)
!378 = !DILocation(line: 165, column: 7, scope: !363)
!379 = !DILocation(line: 166, column: 3, scope: !377)
!380 = !DILocation(line: 168, column: 6, scope: !381)
!381 = distinct !DILexicalBlock(scope: !363, file: !3, line: 168, column: 6)
!382 = !DILocation(line: 168, column: 11, scope: !381)
!383 = !DILocation(line: 168, column: 6, scope: !363)
!384 = !DILocation(line: 169, column: 20, scope: !381)
!385 = !DILocation(line: 169, column: 25, scope: !381)
!386 = !DILocation(line: 169, column: 3, scope: !381)
!387 = !DILocation(line: 170, column: 6, scope: !388)
!388 = distinct !DILexicalBlock(scope: !363, file: !3, line: 170, column: 6)
!389 = !DILocation(line: 170, column: 11, scope: !388)
!390 = !DILocation(line: 170, column: 6, scope: !363)
!391 = !DILocation(line: 171, column: 20, scope: !388)
!392 = !DILocation(line: 171, column: 25, scope: !388)
!393 = !DILocation(line: 171, column: 3, scope: !388)
!394 = !DILocation(line: 172, column: 12, scope: !395)
!395 = distinct !DILexicalBlock(scope: !363, file: !3, line: 172, column: 2)
!396 = !DILocation(line: 172, column: 17, scope: !395)
!397 = !DILocation(line: 172, column: 10, scope: !395)
!398 = !DILocation(line: 172, column: 7, scope: !395)
!399 = !DILocation(line: 172, column: 29, scope: !400)
!400 = distinct !DILexicalBlock(scope: !395, file: !3, line: 172, column: 2)
!401 = !DILocation(line: 172, column: 2, scope: !395)
!402 = !DILocation(line: 173, column: 9, scope: !403)
!403 = distinct !DILexicalBlock(scope: !400, file: !3, line: 172, column: 43)
!404 = !DILocation(line: 173, column: 13, scope: !403)
!405 = !DILocation(line: 173, column: 7, scope: !403)
!406 = !DILocation(line: 174, column: 20, scope: !403)
!407 = !DILocation(line: 174, column: 9, scope: !403)
!408 = !DILocation(line: 174, column: 3, scope: !403)
!409 = !DILocation(line: 175, column: 2, scope: !403)
!410 = !DILocation(line: 172, column: 38, scope: !400)
!411 = !DILocation(line: 172, column: 36, scope: !400)
!412 = !DILocation(line: 172, column: 2, scope: !400)
!413 = distinct !{!413, !401, !414}
!414 = !DILocation(line: 175, column: 2, scope: !395)
!415 = !DILocation(line: 176, column: 6, scope: !416)
!416 = distinct !DILexicalBlock(scope: !363, file: !3, line: 176, column: 6)
!417 = !DILocation(line: 176, column: 11, scope: !416)
!418 = !DILocation(line: 176, column: 6, scope: !363)
!419 = !DILocation(line: 177, column: 20, scope: !416)
!420 = !DILocation(line: 177, column: 25, scope: !416)
!421 = !DILocation(line: 177, column: 9, scope: !416)
!422 = !DILocation(line: 177, column: 3, scope: !416)
!423 = !DILocation(line: 178, column: 6, scope: !424)
!424 = distinct !DILexicalBlock(scope: !363, file: !3, line: 178, column: 6)
!425 = !DILocation(line: 178, column: 11, scope: !424)
!426 = !DILocation(line: 178, column: 6, scope: !363)
!427 = !DILocation(line: 179, column: 20, scope: !424)
!428 = !DILocation(line: 179, column: 25, scope: !424)
!429 = !DILocation(line: 179, column: 9, scope: !424)
!430 = !DILocation(line: 179, column: 3, scope: !424)
!431 = !DILocation(line: 180, column: 6, scope: !432)
!432 = distinct !DILexicalBlock(scope: !363, file: !3, line: 180, column: 6)
!433 = !DILocation(line: 180, column: 11, scope: !432)
!434 = !DILocation(line: 180, column: 6, scope: !363)
!435 = !DILocation(line: 181, column: 20, scope: !432)
!436 = !DILocation(line: 181, column: 25, scope: !432)
!437 = !DILocation(line: 181, column: 9, scope: !432)
!438 = !DILocation(line: 181, column: 3, scope: !432)
!439 = !DILocation(line: 182, column: 10, scope: !440)
!440 = distinct !DILexicalBlock(scope: !363, file: !3, line: 182, column: 2)
!441 = !DILocation(line: 182, column: 15, scope: !440)
!442 = !DILocation(line: 182, column: 9, scope: !440)
!443 = !DILocation(line: 182, column: 25, scope: !440)
!444 = !DILocation(line: 182, column: 7, scope: !440)
!445 = !DILocation(line: 182, column: 29, scope: !446)
!446 = distinct !DILexicalBlock(scope: !440, file: !3, line: 182, column: 2)
!447 = !DILocation(line: 182, column: 31, scope: !446)
!448 = !DILocation(line: 182, column: 36, scope: !446)
!449 = !DILocation(line: 182, column: 30, scope: !446)
!450 = !DILocation(line: 182, column: 2, scope: !440)
!451 = !DILocation(line: 183, column: 7, scope: !452)
!452 = distinct !DILexicalBlock(scope: !453, file: !3, line: 183, column: 7)
!453 = distinct !DILexicalBlock(scope: !446, file: !3, line: 182, column: 57)
!454 = !DILocation(line: 183, column: 11, scope: !452)
!455 = !DILocation(line: 183, column: 7, scope: !453)
!456 = !DILocation(line: 184, column: 20, scope: !452)
!457 = !DILocation(line: 184, column: 24, scope: !452)
!458 = !DILocation(line: 184, column: 4, scope: !452)
!459 = !DILocation(line: 185, column: 7, scope: !460)
!460 = distinct !DILexicalBlock(scope: !453, file: !3, line: 185, column: 7)
!461 = !DILocation(line: 185, column: 11, scope: !460)
!462 = !DILocation(line: 185, column: 7, scope: !453)
!463 = !DILocation(line: 186, column: 20, scope: !460)
!464 = !DILocation(line: 186, column: 24, scope: !460)
!465 = !DILocation(line: 186, column: 4, scope: !460)
!466 = !DILocation(line: 187, column: 7, scope: !467)
!467 = distinct !DILexicalBlock(scope: !453, file: !3, line: 187, column: 7)
!468 = !DILocation(line: 187, column: 11, scope: !467)
!469 = !DILocation(line: 187, column: 7, scope: !453)
!470 = !DILocation(line: 188, column: 20, scope: !467)
!471 = !DILocation(line: 188, column: 24, scope: !467)
!472 = !DILocation(line: 188, column: 4, scope: !467)
!473 = !DILocation(line: 189, column: 7, scope: !474)
!474 = distinct !DILexicalBlock(scope: !453, file: !3, line: 189, column: 7)
!475 = !DILocation(line: 189, column: 11, scope: !474)
!476 = !DILocation(line: 189, column: 7, scope: !453)
!477 = !DILocation(line: 190, column: 21, scope: !474)
!478 = !DILocation(line: 190, column: 25, scope: !474)
!479 = !DILocation(line: 190, column: 4, scope: !474)
!480 = !DILocation(line: 191, column: 2, scope: !453)
!481 = !DILocation(line: 182, column: 47, scope: !446)
!482 = !DILocation(line: 182, column: 53, scope: !446)
!483 = !DILocation(line: 182, column: 2, scope: !446)
!484 = distinct !{!484, !450, !485}
!485 = !DILocation(line: 191, column: 2, scope: !440)
!486 = !DILocation(line: 192, column: 6, scope: !487)
!487 = distinct !DILexicalBlock(scope: !363, file: !3, line: 192, column: 6)
!488 = !DILocation(line: 192, column: 11, scope: !487)
!489 = !DILocation(line: 192, column: 6, scope: !363)
!490 = !DILocation(line: 193, column: 20, scope: !487)
!491 = !DILocation(line: 193, column: 25, scope: !487)
!492 = !DILocation(line: 193, column: 9, scope: !487)
!493 = !DILocation(line: 193, column: 3, scope: !487)
!494 = !DILocation(line: 195, column: 19, scope: !363)
!495 = !DILocation(line: 195, column: 8, scope: !363)
!496 = !DILocation(line: 195, column: 2, scope: !363)
!497 = !DILocation(line: 197, column: 2, scope: !363)
!498 = !DILocation(line: 198, column: 1, scope: !363)
!499 = distinct !DISubprogram(name: "freemolecule", scope: !3, file: !3, line: 200, type: !500, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!500 = !DISubroutineType(types: !501)
!501 = !{!36, !22}
!502 = !DILocalVariable(name: "mol", arg: 1, scope: !499, file: !3, line: 200, type: !22)
!503 = !DILocation(line: 200, column: 31, scope: !499)
!504 = !DILocalVariable(name: "sp", scope: !499, file: !3, line: 202, type: !38)
!505 = !DILocation(line: 202, column: 12, scope: !499)
!506 = !DILocalVariable(name: "spn", scope: !499, file: !3, line: 202, type: !38)
!507 = !DILocation(line: 202, column: 17, scope: !499)
!508 = !DILocalVariable(name: "pp", scope: !499, file: !3, line: 203, type: !135)
!509 = !DILocation(line: 203, column: 16, scope: !499)
!510 = !DILocalVariable(name: "r", scope: !499, file: !3, line: 204, type: !36)
!511 = !DILocation(line: 204, column: 7, scope: !499)
!512 = !DILocation(line: 206, column: 7, scope: !513)
!513 = distinct !DILexicalBlock(scope: !499, file: !3, line: 206, column: 6)
!514 = !DILocation(line: 206, column: 6, scope: !499)
!515 = !DILocation(line: 207, column: 3, scope: !513)
!516 = !DILocation(line: 209, column: 12, scope: !517)
!517 = distinct !DILexicalBlock(scope: !499, file: !3, line: 209, column: 2)
!518 = !DILocation(line: 209, column: 17, scope: !517)
!519 = !DILocation(line: 209, column: 10, scope: !517)
!520 = !DILocation(line: 209, column: 7, scope: !517)
!521 = !DILocation(line: 209, column: 28, scope: !522)
!522 = distinct !DILexicalBlock(scope: !517, file: !3, line: 209, column: 2)
!523 = !DILocation(line: 209, column: 2, scope: !517)
!524 = !DILocation(line: 210, column: 9, scope: !525)
!525 = distinct !DILexicalBlock(scope: !522, file: !3, line: 209, column: 42)
!526 = !DILocation(line: 210, column: 13, scope: !525)
!527 = !DILocation(line: 210, column: 7, scope: !525)
!528 = !DILocation(line: 211, column: 7, scope: !529)
!529 = distinct !DILexicalBlock(scope: !525, file: !3, line: 211, column: 7)
!530 = !DILocation(line: 211, column: 11, scope: !529)
!531 = !DILocation(line: 211, column: 7, scope: !525)
!532 = !DILocation(line: 212, column: 21, scope: !529)
!533 = !DILocation(line: 212, column: 25, scope: !529)
!534 = !DILocation(line: 212, column: 4, scope: !529)
!535 = !DILocation(line: 213, column: 10, scope: !536)
!536 = distinct !DILexicalBlock(scope: !525, file: !3, line: 213, column: 3)
!537 = !DILocation(line: 213, column: 8, scope: !536)
!538 = !DILocation(line: 213, column: 15, scope: !539)
!539 = distinct !DILexicalBlock(scope: !536, file: !3, line: 213, column: 3)
!540 = !DILocation(line: 213, column: 19, scope: !539)
!541 = !DILocation(line: 213, column: 23, scope: !539)
!542 = !DILocation(line: 213, column: 17, scope: !539)
!543 = !DILocation(line: 213, column: 3, scope: !536)
!544 = !DILocation(line: 214, column: 17, scope: !539)
!545 = !DILocation(line: 214, column: 21, scope: !539)
!546 = !DILocation(line: 214, column: 33, scope: !539)
!547 = !DILocation(line: 214, column: 4, scope: !539)
!548 = !DILocation(line: 213, column: 37, scope: !539)
!549 = !DILocation(line: 213, column: 3, scope: !539)
!550 = distinct !{!550, !543, !551}
!551 = !DILocation(line: 214, column: 37, scope: !536)
!552 = !DILocation(line: 215, column: 7, scope: !553)
!553 = distinct !DILexicalBlock(scope: !525, file: !3, line: 215, column: 7)
!554 = !DILocation(line: 215, column: 11, scope: !553)
!555 = !DILocation(line: 215, column: 7, scope: !525)
!556 = !DILocation(line: 216, column: 21, scope: !553)
!557 = !DILocation(line: 216, column: 25, scope: !553)
!558 = !DILocation(line: 216, column: 10, scope: !553)
!559 = !DILocation(line: 216, column: 4, scope: !553)
!560 = !DILocation(line: 217, column: 2, scope: !525)
!561 = !DILocation(line: 209, column: 37, scope: !522)
!562 = !DILocation(line: 209, column: 35, scope: !522)
!563 = !DILocation(line: 209, column: 2, scope: !522)
!564 = distinct !{!564, !523, !565}
!565 = !DILocation(line: 217, column: 2, scope: !517)
!566 = !DILocation(line: 218, column: 6, scope: !567)
!567 = distinct !DILexicalBlock(scope: !499, file: !3, line: 218, column: 6)
!568 = !DILocation(line: 218, column: 11, scope: !567)
!569 = !DILocation(line: 218, column: 6, scope: !499)
!570 = !DILocation(line: 219, column: 8, scope: !571)
!571 = distinct !DILexicalBlock(scope: !567, file: !3, line: 218, column: 18)
!572 = !DILocation(line: 219, column: 13, scope: !571)
!573 = !DILocation(line: 219, column: 6, scope: !571)
!574 = !DILocation(line: 220, column: 7, scope: !575)
!575 = distinct !DILexicalBlock(scope: !571, file: !3, line: 220, column: 7)
!576 = !DILocation(line: 220, column: 11, scope: !575)
!577 = !DILocation(line: 220, column: 7, scope: !571)
!578 = !DILocation(line: 221, column: 21, scope: !575)
!579 = !DILocation(line: 221, column: 25, scope: !575)
!580 = !DILocation(line: 221, column: 4, scope: !575)
!581 = !DILocation(line: 222, column: 7, scope: !582)
!582 = distinct !DILexicalBlock(scope: !571, file: !3, line: 222, column: 7)
!583 = !DILocation(line: 222, column: 11, scope: !582)
!584 = !DILocation(line: 222, column: 7, scope: !571)
!585 = !DILocation(line: 223, column: 21, scope: !582)
!586 = !DILocation(line: 223, column: 25, scope: !582)
!587 = !DILocation(line: 223, column: 4, scope: !582)
!588 = !DILocation(line: 224, column: 7, scope: !589)
!589 = distinct !DILexicalBlock(scope: !571, file: !3, line: 224, column: 7)
!590 = !DILocation(line: 224, column: 11, scope: !589)
!591 = !DILocation(line: 224, column: 7, scope: !571)
!592 = !DILocation(line: 225, column: 21, scope: !589)
!593 = !DILocation(line: 225, column: 25, scope: !589)
!594 = !DILocation(line: 225, column: 4, scope: !589)
!595 = !DILocation(line: 226, column: 7, scope: !596)
!596 = distinct !DILexicalBlock(scope: !571, file: !3, line: 226, column: 7)
!597 = !DILocation(line: 226, column: 11, scope: !596)
!598 = !DILocation(line: 226, column: 7, scope: !571)
!599 = !DILocation(line: 227, column: 21, scope: !596)
!600 = !DILocation(line: 227, column: 25, scope: !596)
!601 = !DILocation(line: 227, column: 4, scope: !596)
!602 = !DILocation(line: 228, column: 20, scope: !571)
!603 = !DILocation(line: 228, column: 25, scope: !571)
!604 = !DILocation(line: 228, column: 9, scope: !571)
!605 = !DILocation(line: 228, column: 3, scope: !571)
!606 = !DILocation(line: 229, column: 2, scope: !571)
!607 = !DILocation(line: 231, column: 19, scope: !499)
!608 = !DILocation(line: 231, column: 8, scope: !499)
!609 = !DILocation(line: 231, column: 2, scope: !499)
!610 = !DILocation(line: 232, column: 2, scope: !499)
!611 = !DILocation(line: 233, column: 1, scope: !499)
!612 = distinct !DISubprogram(name: "addstrand", scope: !3, file: !3, line: 235, type: !613, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!613 = !DISubroutineType(types: !614)
!614 = !{!36, !22, !238}
!615 = !DILocalVariable(name: "mp", arg: 1, scope: !612, file: !3, line: 235, type: !22)
!616 = !DILocation(line: 235, column: 28, scope: !612)
!617 = !DILocalVariable(name: "sname", arg: 2, scope: !612, file: !3, line: 235, type: !238)
!618 = !DILocation(line: 235, column: 37, scope: !612)
!619 = !DILocalVariable(name: "sp", scope: !612, file: !3, line: 237, type: !38)
!620 = !DILocation(line: 237, column: 12, scope: !612)
!621 = !DILocalVariable(name: "spl", scope: !612, file: !3, line: 237, type: !38)
!622 = !DILocation(line: 237, column: 17, scope: !612)
!623 = !DILocalVariable(name: "nsize", scope: !612, file: !3, line: 238, type: !36)
!624 = !DILocation(line: 238, column: 6, scope: !612)
!625 = !DILocalVariable(name: "np", scope: !612, file: !3, line: 239, type: !238)
!626 = !DILocation(line: 239, column: 8, scope: !612)
!627 = !DILocation(line: 241, column: 12, scope: !628)
!628 = distinct !DILexicalBlock(scope: !612, file: !3, line: 241, column: 2)
!629 = !DILocation(line: 241, column: 16, scope: !628)
!630 = !DILocation(line: 241, column: 10, scope: !628)
!631 = !DILocation(line: 241, column: 7, scope: !628)
!632 = !DILocation(line: 241, column: 27, scope: !633)
!633 = distinct !DILexicalBlock(scope: !628, file: !3, line: 241, column: 2)
!634 = !DILocation(line: 241, column: 2, scope: !628)
!635 = !DILocation(line: 242, column: 16, scope: !636)
!636 = distinct !DILexicalBlock(scope: !637, file: !3, line: 242, column: 7)
!637 = distinct !DILexicalBlock(scope: !633, file: !3, line: 241, column: 48)
!638 = !DILocation(line: 242, column: 20, scope: !636)
!639 = !DILocation(line: 242, column: 34, scope: !636)
!640 = !DILocation(line: 242, column: 8, scope: !636)
!641 = !DILocation(line: 242, column: 7, scope: !637)
!642 = !DILocation(line: 243, column: 13, scope: !643)
!643 = distinct !DILexicalBlock(scope: !636, file: !3, line: 242, column: 43)
!644 = !DILocation(line: 245, column: 5, scope: !643)
!645 = !DILocation(line: 243, column: 4, scope: !643)
!646 = !DILocation(line: 246, column: 4, scope: !643)
!647 = !DILocation(line: 248, column: 2, scope: !637)
!648 = !DILocation(line: 241, column: 36, scope: !633)
!649 = !DILocation(line: 241, column: 40, scope: !633)
!650 = !DILocation(line: 241, column: 34, scope: !633)
!651 = !DILocation(line: 241, column: 2, scope: !633)
!652 = distinct !{!652, !634, !653}
!653 = !DILocation(line: 248, column: 2, scope: !628)
!654 = !DILocation(line: 250, column: 21, scope: !655)
!655 = distinct !DILexicalBlock(scope: !612, file: !3, line: 250, column: 5)
!656 = !DILocation(line: 250, column: 9, scope: !655)
!657 = !DILocation(line: 250, column: 8, scope: !655)
!658 = !DILocation(line: 250, column: 47, scope: !655)
!659 = !DILocation(line: 250, column: 5, scope: !612)
!660 = !DILocation(line: 251, column: 36, scope: !661)
!661 = distinct !DILexicalBlock(scope: !655, file: !3, line: 250, column: 56)
!662 = !DILocation(line: 251, column: 3, scope: !661)
!663 = !DILocation(line: 252, column: 3, scope: !661)
!664 = !DILocation(line: 253, column: 3, scope: !661)
!665 = !DILocation(line: 255, column: 18, scope: !612)
!666 = !DILocation(line: 255, column: 10, scope: !612)
!667 = !DILocation(line: 255, column: 26, scope: !612)
!668 = !DILocation(line: 255, column: 8, scope: !612)
!669 = !DILocation(line: 256, column: 24, scope: !670)
!670 = distinct !DILexicalBlock(scope: !612, file: !3, line: 256, column: 5)
!671 = !DILocation(line: 256, column: 29, scope: !670)
!672 = !DILocation(line: 256, column: 17, scope: !670)
!673 = !DILocation(line: 256, column: 8, scope: !670)
!674 = !DILocation(line: 256, column: 46, scope: !670)
!675 = !DILocation(line: 256, column: 5, scope: !612)
!676 = !DILocation(line: 257, column: 45, scope: !677)
!677 = distinct !DILexicalBlock(scope: !670, file: !3, line: 256, column: 55)
!678 = !DILocation(line: 257, column: 3, scope: !677)
!679 = !DILocation(line: 258, column: 3, scope: !677)
!680 = !DILocation(line: 259, column: 3, scope: !677)
!681 = !DILocation(line: 261, column: 22, scope: !670)
!682 = !DILocation(line: 261, column: 3, scope: !670)
!683 = !DILocation(line: 261, column: 7, scope: !670)
!684 = !DILocation(line: 261, column: 20, scope: !670)
!685 = !DILocation(line: 263, column: 10, scope: !612)
!686 = !DILocation(line: 263, column: 14, scope: !612)
!687 = !DILocation(line: 263, column: 28, scope: !612)
!688 = !DILocation(line: 263, column: 2, scope: !612)
!689 = !DILocation(line: 264, column: 2, scope: !612)
!690 = !DILocation(line: 264, column: 6, scope: !612)
!691 = !DILocation(line: 264, column: 18, scope: !612)
!692 = !DILocation(line: 265, column: 2, scope: !612)
!693 = !DILocation(line: 265, column: 6, scope: !612)
!694 = !DILocation(line: 265, column: 13, scope: !612)
!695 = !DILocation(line: 266, column: 19, scope: !612)
!696 = !DILocation(line: 266, column: 2, scope: !612)
!697 = !DILocation(line: 266, column: 6, scope: !612)
!698 = !DILocation(line: 266, column: 17, scope: !612)
!699 = !DILocation(line: 267, column: 2, scope: !612)
!700 = !DILocation(line: 267, column: 6, scope: !612)
!701 = !DILocation(line: 267, column: 13, scope: !612)
!702 = !DILocation(line: 268, column: 2, scope: !612)
!703 = !DILocation(line: 268, column: 6, scope: !612)
!704 = !DILocation(line: 268, column: 18, scope: !612)
!705 = !DILocation(line: 269, column: 2, scope: !612)
!706 = !DILocation(line: 269, column: 6, scope: !612)
!707 = !DILocation(line: 269, column: 17, scope: !612)
!708 = !DILocation(line: 270, column: 2, scope: !612)
!709 = !DILocation(line: 270, column: 6, scope: !612)
!710 = !DILocation(line: 270, column: 17, scope: !612)
!711 = !DILocation(line: 272, column: 6, scope: !712)
!712 = distinct !DILexicalBlock(scope: !612, file: !3, line: 272, column: 6)
!713 = !DILocation(line: 272, column: 10, scope: !712)
!714 = !DILocation(line: 272, column: 21, scope: !712)
!715 = !DILocation(line: 272, column: 6, scope: !612)
!716 = !DILocation(line: 273, column: 19, scope: !712)
!717 = !DILocation(line: 273, column: 3, scope: !712)
!718 = !DILocation(line: 273, column: 7, scope: !712)
!719 = !DILocation(line: 273, column: 17, scope: !712)
!720 = !DILocation(line: 275, column: 9, scope: !721)
!721 = distinct !DILexicalBlock(scope: !712, file: !3, line: 274, column: 6)
!722 = !DILocation(line: 275, column: 13, scope: !721)
!723 = !DILocation(line: 275, column: 7, scope: !721)
!724 = !DILocation(line: 276, column: 3, scope: !721)
!725 = !DILocation(line: 276, column: 10, scope: !726)
!726 = distinct !DILexicalBlock(scope: !727, file: !3, line: 276, column: 3)
!727 = distinct !DILexicalBlock(scope: !721, file: !3, line: 276, column: 3)
!728 = !DILocation(line: 276, column: 15, scope: !726)
!729 = !DILocation(line: 276, column: 3, scope: !727)
!730 = !DILocation(line: 276, column: 29, scope: !726)
!731 = !DILocation(line: 276, column: 34, scope: !726)
!732 = !DILocation(line: 276, column: 27, scope: !726)
!733 = !DILocation(line: 276, column: 3, scope: !726)
!734 = distinct !{!734, !729, !735}
!735 = !DILocation(line: 277, column: 4, scope: !727)
!736 = !DILocation(line: 278, column: 17, scope: !721)
!737 = !DILocation(line: 278, column: 3, scope: !721)
!738 = !DILocation(line: 278, column: 8, scope: !721)
!739 = !DILocation(line: 278, column: 15, scope: !721)
!740 = !DILocation(line: 280, column: 2, scope: !612)
!741 = !DILocation(line: 280, column: 6, scope: !612)
!742 = !DILocation(line: 280, column: 16, scope: !612)
!743 = !DILocation(line: 284, column: 2, scope: !612)
!744 = !DILocation(line: 284, column: 6, scope: !612)
!745 = !DILocation(line: 284, column: 15, scope: !612)
!746 = !DILocation(line: 285, column: 2, scope: !612)
!747 = !DILocation(line: 286, column: 1, scope: !612)
!748 = distinct !DISubprogram(name: "addresidue", scope: !3, file: !3, line: 288, type: !749, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!749 = !DISubroutineType(types: !750)
!750 = !{!36, !22, !238, !56}
!751 = !DILocalVariable(name: "mp", arg: 1, scope: !748, file: !3, line: 288, type: !22)
!752 = !DILocation(line: 288, column: 29, scope: !748)
!753 = !DILocalVariable(name: "sname", arg: 2, scope: !748, file: !3, line: 288, type: !238)
!754 = !DILocation(line: 288, column: 38, scope: !748)
!755 = !DILocalVariable(name: "res", arg: 3, scope: !748, file: !3, line: 288, type: !56)
!756 = !DILocation(line: 288, column: 58, scope: !748)
!757 = !DILocalVariable(name: "spl", scope: !748, file: !3, line: 290, type: !38)
!758 = !DILocation(line: 290, column: 12, scope: !748)
!759 = !DILocalVariable(name: "sp", scope: !748, file: !3, line: 290, type: !38)
!760 = !DILocation(line: 290, column: 18, scope: !748)
!761 = !DILocalVariable(name: "rap", scope: !748, file: !3, line: 291, type: !55)
!762 = !DILocation(line: 291, column: 14, scope: !748)
!763 = !DILocalVariable(name: "nres", scope: !748, file: !3, line: 291, type: !56)
!764 = !DILocation(line: 291, column: 20, scope: !748)
!765 = !DILocalVariable(name: "r", scope: !748, file: !3, line: 292, type: !36)
!766 = !DILocation(line: 292, column: 6, scope: !748)
!767 = !DILocalVariable(name: "rsize", scope: !748, file: !3, line: 292, type: !36)
!768 = !DILocation(line: 292, column: 9, scope: !748)
!769 = !DILocation(line: 294, column: 10, scope: !770)
!770 = distinct !DILexicalBlock(scope: !748, file: !3, line: 294, column: 2)
!771 = !DILocation(line: 294, column: 24, scope: !770)
!772 = !DILocation(line: 294, column: 28, scope: !770)
!773 = !DILocation(line: 294, column: 22, scope: !770)
!774 = !DILocation(line: 294, column: 7, scope: !770)
!775 = !DILocation(line: 294, column: 39, scope: !776)
!776 = distinct !DILexicalBlock(scope: !770, file: !3, line: 294, column: 2)
!777 = !DILocation(line: 294, column: 2, scope: !770)
!778 = !DILocation(line: 295, column: 15, scope: !779)
!779 = distinct !DILexicalBlock(scope: !780, file: !3, line: 295, column: 7)
!780 = distinct !DILexicalBlock(scope: !776, file: !3, line: 294, column: 63)
!781 = !DILocation(line: 295, column: 20, scope: !779)
!782 = !DILocation(line: 295, column: 34, scope: !779)
!783 = !DILocation(line: 295, column: 7, scope: !779)
!784 = !DILocation(line: 295, column: 42, scope: !779)
!785 = !DILocation(line: 295, column: 7, scope: !780)
!786 = !DILocation(line: 296, column: 9, scope: !787)
!787 = distinct !DILexicalBlock(scope: !779, file: !3, line: 295, column: 48)
!788 = !DILocation(line: 296, column: 7, scope: !787)
!789 = !DILocation(line: 297, column: 4, scope: !787)
!790 = !DILocation(line: 299, column: 2, scope: !780)
!791 = !DILocation(line: 294, column: 50, scope: !776)
!792 = !DILocation(line: 294, column: 55, scope: !776)
!793 = !DILocation(line: 294, column: 48, scope: !776)
!794 = !DILocation(line: 294, column: 2, scope: !776)
!795 = distinct !{!795, !777, !796}
!796 = !DILocation(line: 299, column: 2, scope: !770)
!797 = !DILocation(line: 301, column: 6, scope: !798)
!798 = distinct !DILexicalBlock(scope: !748, file: !3, line: 301, column: 6)
!799 = !DILocation(line: 301, column: 9, scope: !798)
!800 = !DILocation(line: 301, column: 6, scope: !748)
!801 = !DILocation(line: 302, column: 43, scope: !802)
!802 = distinct !DILexicalBlock(scope: !798, file: !3, line: 301, column: 18)
!803 = !DILocation(line: 302, column: 3, scope: !802)
!804 = !DILocation(line: 303, column: 3, scope: !802)
!805 = !DILocation(line: 306, column: 6, scope: !806)
!806 = distinct !DILexicalBlock(scope: !748, file: !3, line: 306, column: 6)
!807 = !DILocation(line: 306, column: 10, scope: !806)
!808 = !DILocation(line: 306, column: 25, scope: !806)
!809 = !DILocation(line: 306, column: 29, scope: !806)
!810 = !DILocation(line: 306, column: 22, scope: !806)
!811 = !DILocation(line: 306, column: 6, scope: !748)
!812 = !DILocation(line: 307, column: 11, scope: !813)
!813 = distinct !DILexicalBlock(scope: !806, file: !3, line: 306, column: 41)
!814 = !DILocation(line: 307, column: 15, scope: !813)
!815 = !DILocation(line: 307, column: 26, scope: !813)
!816 = !DILocation(line: 307, column: 9, scope: !813)
!817 = !DILocation(line: 308, column: 38, scope: !818)
!818 = distinct !DILexicalBlock(scope: !813, file: !3, line: 308, column: 7)
!819 = !DILocation(line: 308, column: 43, scope: !818)
!820 = !DILocation(line: 308, column: 31, scope: !818)
!821 = !DILocation(line: 308, column: 15, scope: !818)
!822 = !DILocation(line: 308, column: 13, scope: !818)
!823 = !DILocation(line: 309, column: 4, scope: !818)
!824 = !DILocation(line: 308, column: 7, scope: !813)
!825 = !DILocation(line: 312, column: 5, scope: !826)
!826 = distinct !DILexicalBlock(scope: !818, file: !3, line: 310, column: 3)
!827 = !DILocation(line: 312, column: 9, scope: !826)
!828 = !DILocation(line: 311, column: 4, scope: !826)
!829 = !DILocation(line: 313, column: 4, scope: !826)
!830 = !DILocation(line: 314, column: 4, scope: !826)
!831 = !DILocation(line: 316, column: 10, scope: !832)
!832 = distinct !DILexicalBlock(scope: !813, file: !3, line: 316, column: 3)
!833 = !DILocation(line: 316, column: 8, scope: !832)
!834 = !DILocation(line: 316, column: 15, scope: !835)
!835 = distinct !DILexicalBlock(scope: !832, file: !3, line: 316, column: 3)
!836 = !DILocation(line: 316, column: 19, scope: !835)
!837 = !DILocation(line: 316, column: 23, scope: !835)
!838 = !DILocation(line: 316, column: 17, scope: !835)
!839 = !DILocation(line: 316, column: 3, scope: !832)
!840 = !DILocation(line: 317, column: 15, scope: !835)
!841 = !DILocation(line: 317, column: 19, scope: !835)
!842 = !DILocation(line: 317, column: 31, scope: !835)
!843 = !DILocation(line: 317, column: 4, scope: !835)
!844 = !DILocation(line: 317, column: 9, scope: !835)
!845 = !DILocation(line: 317, column: 13, scope: !835)
!846 = !DILocation(line: 316, column: 37, scope: !835)
!847 = !DILocation(line: 316, column: 3, scope: !835)
!848 = distinct !{!848, !839, !849}
!849 = !DILocation(line: 317, column: 33, scope: !832)
!850 = !DILocation(line: 318, column: 8, scope: !851)
!851 = distinct !DILexicalBlock(scope: !813, file: !3, line: 318, column: 8)
!852 = !DILocation(line: 318, column: 12, scope: !851)
!853 = !DILocation(line: 318, column: 23, scope: !851)
!854 = !DILocation(line: 318, column: 8, scope: !813)
!855 = !DILocation(line: 319, column: 10, scope: !851)
!856 = !DILocation(line: 319, column: 14, scope: !851)
!857 = !DILocation(line: 319, column: 4, scope: !851)
!858 = !DILocation(line: 320, column: 20, scope: !813)
!859 = !DILocation(line: 320, column: 3, scope: !813)
!860 = !DILocation(line: 320, column: 7, scope: !813)
!861 = !DILocation(line: 320, column: 18, scope: !813)
!862 = !DILocation(line: 321, column: 20, scope: !813)
!863 = !DILocation(line: 321, column: 3, scope: !813)
!864 = !DILocation(line: 321, column: 7, scope: !813)
!865 = !DILocation(line: 321, column: 18, scope: !813)
!866 = !DILocation(line: 322, column: 2, scope: !813)
!867 = !DILocation(line: 324, column: 58, scope: !748)
!868 = !DILocation(line: 324, column: 45, scope: !748)
!869 = !DILocation(line: 324, column: 43, scope: !748)
!870 = !DILocation(line: 324, column: 2, scope: !748)
!871 = !DILocation(line: 324, column: 6, scope: !748)
!872 = !DILocation(line: 324, column: 18, scope: !748)
!873 = !DILocation(line: 324, column: 22, scope: !748)
!874 = !DILocation(line: 324, column: 36, scope: !748)
!875 = !DILocation(line: 325, column: 19, scope: !748)
!876 = !DILocation(line: 325, column: 2, scope: !748)
!877 = !DILocation(line: 325, column: 8, scope: !748)
!878 = !DILocation(line: 325, column: 17, scope: !748)
!879 = !DILocation(line: 326, column: 2, scope: !748)
!880 = !DILocation(line: 326, column: 6, scope: !748)
!881 = !DILocation(line: 326, column: 17, scope: !748)
!882 = !DILocation(line: 330, column: 2, scope: !748)
!883 = !DILocation(line: 330, column: 6, scope: !748)
!884 = !DILocation(line: 330, column: 15, scope: !748)
!885 = !DILocation(line: 331, column: 2, scope: !748)
!886 = !DILocation(line: 332, column: 1, scope: !748)
!887 = distinct !DISubprogram(name: "connectres", scope: !3, file: !3, line: 334, type: !888, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!888 = !DISubroutineType(types: !889)
!889 = !{!36, !22, !238, !36, !238, !36, !238}
!890 = !DILocalVariable(name: "mol", arg: 1, scope: !887, file: !3, line: 334, type: !22)
!891 = !DILocation(line: 334, column: 29, scope: !887)
!892 = !DILocalVariable(name: "sname", arg: 2, scope: !887, file: !3, line: 334, type: !238)
!893 = !DILocation(line: 334, column: 39, scope: !887)
!894 = !DILocalVariable(name: "ri", arg: 3, scope: !887, file: !3, line: 334, type: !36)
!895 = !DILocation(line: 334, column: 52, scope: !887)
!896 = !DILocalVariable(name: "ainame", arg: 4, scope: !887, file: !3, line: 334, type: !238)
!897 = !DILocation(line: 334, column: 61, scope: !887)
!898 = !DILocalVariable(name: "rj", arg: 5, scope: !887, file: !3, line: 334, type: !36)
!899 = !DILocation(line: 334, column: 75, scope: !887)
!900 = !DILocalVariable(name: "ajname", arg: 6, scope: !887, file: !3, line: 334, type: !238)
!901 = !DILocation(line: 334, column: 84, scope: !887)
!902 = !DILocalVariable(name: "sp", scope: !887, file: !3, line: 336, type: !38)
!903 = !DILocation(line: 336, column: 12, scope: !887)
!904 = !DILocalVariable(name: "ebi", scope: !887, file: !3, line: 337, type: !72)
!905 = !DILocation(line: 337, column: 13, scope: !887)
!906 = !DILocalVariable(name: "ebj", scope: !887, file: !3, line: 337, type: !72)
!907 = !DILocation(line: 337, column: 19, scope: !887)
!908 = !DILocalVariable(name: "resi", scope: !887, file: !3, line: 338, type: !56)
!909 = !DILocation(line: 338, column: 13, scope: !887)
!910 = !DILocalVariable(name: "resj", scope: !887, file: !3, line: 338, type: !56)
!911 = !DILocation(line: 338, column: 20, scope: !887)
!912 = !DILocalVariable(name: "ap", scope: !887, file: !3, line: 339, type: !102)
!913 = !DILocation(line: 339, column: 10, scope: !887)
!914 = !DILocalVariable(name: "a", scope: !887, file: !3, line: 340, type: !36)
!915 = !DILocation(line: 340, column: 6, scope: !887)
!916 = !DILocalVariable(name: "ai", scope: !887, file: !3, line: 340, type: !36)
!917 = !DILocation(line: 340, column: 9, scope: !887)
!918 = !DILocalVariable(name: "aj", scope: !887, file: !3, line: 340, type: !36)
!919 = !DILocation(line: 340, column: 13, scope: !887)
!920 = !DILocation(line: 342, column: 12, scope: !921)
!921 = distinct !DILexicalBlock(scope: !887, file: !3, line: 342, column: 2)
!922 = !DILocation(line: 342, column: 17, scope: !921)
!923 = !DILocation(line: 342, column: 10, scope: !921)
!924 = !DILocation(line: 342, column: 7, scope: !921)
!925 = !DILocation(line: 342, column: 28, scope: !926)
!926 = distinct !DILexicalBlock(scope: !921, file: !3, line: 342, column: 2)
!927 = !DILocation(line: 342, column: 2, scope: !921)
!928 = !DILocation(line: 343, column: 15, scope: !929)
!929 = distinct !DILexicalBlock(scope: !930, file: !3, line: 343, column: 7)
!930 = distinct !DILexicalBlock(scope: !926, file: !3, line: 342, column: 49)
!931 = !DILocation(line: 343, column: 19, scope: !929)
!932 = !DILocation(line: 343, column: 33, scope: !929)
!933 = !DILocation(line: 343, column: 7, scope: !929)
!934 = !DILocation(line: 343, column: 41, scope: !929)
!935 = !DILocation(line: 343, column: 7, scope: !930)
!936 = !DILocation(line: 344, column: 4, scope: !929)
!937 = !DILocation(line: 345, column: 2, scope: !930)
!938 = !DILocation(line: 342, column: 37, scope: !926)
!939 = !DILocation(line: 342, column: 41, scope: !926)
!940 = !DILocation(line: 342, column: 35, scope: !926)
!941 = !DILocation(line: 342, column: 2, scope: !926)
!942 = distinct !{!942, !927, !943}
!943 = !DILocation(line: 345, column: 2, scope: !921)
!944 = !DILocation(line: 346, column: 6, scope: !945)
!945 = distinct !DILexicalBlock(scope: !887, file: !3, line: 346, column: 6)
!946 = !DILocation(line: 346, column: 9, scope: !945)
!947 = !DILocation(line: 346, column: 6, scope: !887)
!948 = !DILocation(line: 347, column: 43, scope: !949)
!949 = distinct !DILexicalBlock(scope: !945, file: !3, line: 346, column: 18)
!950 = !DILocation(line: 347, column: 3, scope: !949)
!951 = !DILocation(line: 348, column: 3, scope: !949)
!952 = !DILocation(line: 350, column: 6, scope: !953)
!953 = distinct !DILexicalBlock(scope: !887, file: !3, line: 350, column: 6)
!954 = !DILocation(line: 350, column: 9, scope: !953)
!955 = !DILocation(line: 350, column: 13, scope: !953)
!956 = !DILocation(line: 350, column: 16, scope: !953)
!957 = !DILocation(line: 350, column: 21, scope: !953)
!958 = !DILocation(line: 350, column: 25, scope: !953)
!959 = !DILocation(line: 350, column: 19, scope: !953)
!960 = !DILocation(line: 350, column: 6, scope: !887)
!961 = !DILocation(line: 351, column: 44, scope: !962)
!962 = distinct !DILexicalBlock(scope: !953, file: !3, line: 350, column: 38)
!963 = !DILocation(line: 351, column: 48, scope: !962)
!964 = !DILocation(line: 351, column: 3, scope: !962)
!965 = !DILocation(line: 352, column: 3, scope: !962)
!966 = !DILocation(line: 353, column: 3, scope: !962)
!967 = !DILocation(line: 355, column: 10, scope: !953)
!968 = !DILocation(line: 355, column: 14, scope: !953)
!969 = !DILocation(line: 355, column: 26, scope: !953)
!970 = !DILocation(line: 355, column: 29, scope: !953)
!971 = !DILocation(line: 355, column: 8, scope: !953)
!972 = !DILocation(line: 357, column: 10, scope: !973)
!973 = distinct !DILexicalBlock(scope: !887, file: !3, line: 357, column: 2)
!974 = !DILocation(line: 357, column: 21, scope: !973)
!975 = !DILocation(line: 357, column: 7, scope: !973)
!976 = !DILocation(line: 357, column: 26, scope: !977)
!977 = distinct !DILexicalBlock(scope: !973, file: !3, line: 357, column: 2)
!978 = !DILocation(line: 357, column: 30, scope: !977)
!979 = !DILocation(line: 357, column: 36, scope: !977)
!980 = !DILocation(line: 357, column: 28, scope: !977)
!981 = !DILocation(line: 357, column: 2, scope: !973)
!982 = !DILocation(line: 358, column: 9, scope: !983)
!983 = distinct !DILexicalBlock(scope: !977, file: !3, line: 357, column: 51)
!984 = !DILocation(line: 358, column: 15, scope: !983)
!985 = !DILocation(line: 358, column: 24, scope: !983)
!986 = !DILocation(line: 358, column: 6, scope: !983)
!987 = !DILocation(line: 359, column: 15, scope: !988)
!988 = distinct !DILexicalBlock(scope: !983, file: !3, line: 359, column: 7)
!989 = !DILocation(line: 359, column: 19, scope: !988)
!990 = !DILocation(line: 359, column: 31, scope: !988)
!991 = !DILocation(line: 359, column: 7, scope: !988)
!992 = !DILocation(line: 359, column: 40, scope: !988)
!993 = !DILocation(line: 359, column: 7, scope: !983)
!994 = !DILocation(line: 360, column: 9, scope: !995)
!995 = distinct !DILexicalBlock(scope: !988, file: !3, line: 359, column: 46)
!996 = !DILocation(line: 360, column: 7, scope: !995)
!997 = !DILocation(line: 361, column: 4, scope: !995)
!998 = !DILocation(line: 363, column: 2, scope: !983)
!999 = !DILocation(line: 357, column: 47, scope: !977)
!1000 = !DILocation(line: 357, column: 2, scope: !977)
!1001 = distinct !{!1001, !981, !1002}
!1002 = !DILocation(line: 363, column: 2, scope: !973)
!1003 = !DILocation(line: 364, column: 6, scope: !1004)
!1004 = distinct !DILexicalBlock(scope: !887, file: !3, line: 364, column: 6)
!1005 = !DILocation(line: 364, column: 9, scope: !1004)
!1006 = !DILocation(line: 364, column: 6, scope: !887)
!1007 = !DILocation(line: 366, column: 4, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !1004, file: !3, line: 364, column: 19)
!1009 = !DILocation(line: 366, column: 12, scope: !1008)
!1010 = !DILocation(line: 366, column: 18, scope: !1008)
!1011 = !DILocation(line: 365, column: 3, scope: !1008)
!1012 = !DILocation(line: 367, column: 3, scope: !1008)
!1013 = !DILocation(line: 368, column: 3, scope: !1008)
!1014 = !DILocation(line: 371, column: 6, scope: !1015)
!1015 = distinct !DILexicalBlock(scope: !887, file: !3, line: 371, column: 6)
!1016 = !DILocation(line: 371, column: 9, scope: !1015)
!1017 = !DILocation(line: 371, column: 13, scope: !1015)
!1018 = !DILocation(line: 371, column: 16, scope: !1015)
!1019 = !DILocation(line: 371, column: 21, scope: !1015)
!1020 = !DILocation(line: 371, column: 25, scope: !1015)
!1021 = !DILocation(line: 371, column: 19, scope: !1015)
!1022 = !DILocation(line: 371, column: 6, scope: !887)
!1023 = !DILocation(line: 372, column: 46, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !1015, file: !3, line: 371, column: 38)
!1025 = !DILocation(line: 372, column: 50, scope: !1024)
!1026 = !DILocation(line: 372, column: 3, scope: !1024)
!1027 = !DILocation(line: 373, column: 3, scope: !1024)
!1028 = !DILocation(line: 374, column: 3, scope: !1024)
!1029 = !DILocation(line: 376, column: 10, scope: !1015)
!1030 = !DILocation(line: 376, column: 14, scope: !1015)
!1031 = !DILocation(line: 376, column: 26, scope: !1015)
!1032 = !DILocation(line: 376, column: 29, scope: !1015)
!1033 = !DILocation(line: 376, column: 8, scope: !1015)
!1034 = !DILocation(line: 378, column: 10, scope: !1035)
!1035 = distinct !DILexicalBlock(scope: !887, file: !3, line: 378, column: 2)
!1036 = !DILocation(line: 378, column: 21, scope: !1035)
!1037 = !DILocation(line: 378, column: 7, scope: !1035)
!1038 = !DILocation(line: 378, column: 26, scope: !1039)
!1039 = distinct !DILexicalBlock(scope: !1035, file: !3, line: 378, column: 2)
!1040 = !DILocation(line: 378, column: 30, scope: !1039)
!1041 = !DILocation(line: 378, column: 36, scope: !1039)
!1042 = !DILocation(line: 378, column: 28, scope: !1039)
!1043 = !DILocation(line: 378, column: 2, scope: !1035)
!1044 = !DILocation(line: 379, column: 9, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1039, file: !3, line: 378, column: 51)
!1046 = !DILocation(line: 379, column: 15, scope: !1045)
!1047 = !DILocation(line: 379, column: 24, scope: !1045)
!1048 = !DILocation(line: 379, column: 6, scope: !1045)
!1049 = !DILocation(line: 380, column: 15, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1045, file: !3, line: 380, column: 7)
!1051 = !DILocation(line: 380, column: 19, scope: !1050)
!1052 = !DILocation(line: 380, column: 31, scope: !1050)
!1053 = !DILocation(line: 380, column: 7, scope: !1050)
!1054 = !DILocation(line: 380, column: 40, scope: !1050)
!1055 = !DILocation(line: 380, column: 7, scope: !1045)
!1056 = !DILocation(line: 381, column: 9, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1050, file: !3, line: 380, column: 46)
!1058 = !DILocation(line: 381, column: 7, scope: !1057)
!1059 = !DILocation(line: 382, column: 4, scope: !1057)
!1060 = !DILocation(line: 384, column: 2, scope: !1045)
!1061 = !DILocation(line: 378, column: 47, scope: !1039)
!1062 = !DILocation(line: 378, column: 2, scope: !1039)
!1063 = distinct !{!1063, !1043, !1064}
!1064 = !DILocation(line: 384, column: 2, scope: !1035)
!1065 = !DILocation(line: 385, column: 6, scope: !1066)
!1066 = distinct !DILexicalBlock(scope: !887, file: !3, line: 385, column: 6)
!1067 = !DILocation(line: 385, column: 9, scope: !1066)
!1068 = !DILocation(line: 385, column: 6, scope: !887)
!1069 = !DILocation(line: 387, column: 4, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1066, file: !3, line: 385, column: 19)
!1071 = !DILocation(line: 387, column: 12, scope: !1070)
!1072 = !DILocation(line: 387, column: 18, scope: !1070)
!1073 = !DILocation(line: 386, column: 3, scope: !1070)
!1074 = !DILocation(line: 388, column: 3, scope: !1070)
!1075 = !DILocation(line: 389, column: 3, scope: !1070)
!1076 = !DILocation(line: 392, column: 29, scope: !1077)
!1077 = distinct !DILexicalBlock(scope: !887, file: !3, line: 392, column: 6)
!1078 = !DILocation(line: 392, column: 14, scope: !1077)
!1079 = !DILocation(line: 392, column: 12, scope: !1077)
!1080 = !DILocation(line: 392, column: 61, scope: !1077)
!1081 = !DILocation(line: 392, column: 6, scope: !887)
!1082 = !DILocation(line: 394, column: 4, scope: !1083)
!1083 = distinct !DILexicalBlock(scope: !1077, file: !3, line: 392, column: 70)
!1084 = !DILocation(line: 394, column: 10, scope: !1083)
!1085 = !DILocation(line: 394, column: 21, scope: !1083)
!1086 = !DILocation(line: 394, column: 25, scope: !1083)
!1087 = !DILocation(line: 395, column: 4, scope: !1083)
!1088 = !DILocation(line: 395, column: 10, scope: !1083)
!1089 = !DILocation(line: 395, column: 21, scope: !1083)
!1090 = !DILocation(line: 395, column: 25, scope: !1083)
!1091 = !DILocation(line: 393, column: 3, scope: !1083)
!1092 = !DILocation(line: 396, column: 3, scope: !1083)
!1093 = !DILocation(line: 397, column: 3, scope: !1083)
!1094 = !DILocation(line: 399, column: 18, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1077, file: !3, line: 398, column: 7)
!1096 = !DILocation(line: 399, column: 24, scope: !1095)
!1097 = !DILocation(line: 399, column: 3, scope: !1095)
!1098 = !DILocation(line: 399, column: 8, scope: !1095)
!1099 = !DILocation(line: 399, column: 16, scope: !1095)
!1100 = !DILocation(line: 400, column: 22, scope: !1095)
!1101 = !DILocation(line: 400, column: 3, scope: !1095)
!1102 = !DILocation(line: 400, column: 9, scope: !1095)
!1103 = !DILocation(line: 400, column: 20, scope: !1095)
!1104 = !DILocation(line: 401, column: 18, scope: !1095)
!1105 = !DILocation(line: 401, column: 21, scope: !1095)
!1106 = !DILocation(line: 401, column: 3, scope: !1095)
!1107 = !DILocation(line: 401, column: 8, scope: !1095)
!1108 = !DILocation(line: 401, column: 16, scope: !1095)
!1109 = !DILocation(line: 402, column: 18, scope: !1095)
!1110 = !DILocation(line: 402, column: 3, scope: !1095)
!1111 = !DILocation(line: 402, column: 8, scope: !1095)
!1112 = !DILocation(line: 402, column: 16, scope: !1095)
!1113 = !DILocation(line: 403, column: 19, scope: !1095)
!1114 = !DILocation(line: 403, column: 22, scope: !1095)
!1115 = !DILocation(line: 403, column: 3, scope: !1095)
!1116 = !DILocation(line: 403, column: 8, scope: !1095)
!1117 = !DILocation(line: 403, column: 17, scope: !1095)
!1118 = !DILocation(line: 406, column: 29, scope: !1119)
!1119 = distinct !DILexicalBlock(scope: !887, file: !3, line: 406, column: 6)
!1120 = !DILocation(line: 406, column: 14, scope: !1119)
!1121 = !DILocation(line: 406, column: 12, scope: !1119)
!1122 = !DILocation(line: 406, column: 61, scope: !1119)
!1123 = !DILocation(line: 406, column: 6, scope: !887)
!1124 = !DILocation(line: 408, column: 4, scope: !1125)
!1125 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 406, column: 70)
!1126 = !DILocation(line: 408, column: 10, scope: !1125)
!1127 = !DILocation(line: 408, column: 21, scope: !1125)
!1128 = !DILocation(line: 408, column: 25, scope: !1125)
!1129 = !DILocation(line: 409, column: 4, scope: !1125)
!1130 = !DILocation(line: 409, column: 10, scope: !1125)
!1131 = !DILocation(line: 409, column: 21, scope: !1125)
!1132 = !DILocation(line: 409, column: 25, scope: !1125)
!1133 = !DILocation(line: 407, column: 3, scope: !1125)
!1134 = !DILocation(line: 410, column: 3, scope: !1125)
!1135 = !DILocation(line: 411, column: 3, scope: !1125)
!1136 = !DILocation(line: 413, column: 18, scope: !1137)
!1137 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 412, column: 7)
!1138 = !DILocation(line: 413, column: 24, scope: !1137)
!1139 = !DILocation(line: 413, column: 3, scope: !1137)
!1140 = !DILocation(line: 413, column: 8, scope: !1137)
!1141 = !DILocation(line: 413, column: 16, scope: !1137)
!1142 = !DILocation(line: 414, column: 22, scope: !1137)
!1143 = !DILocation(line: 414, column: 3, scope: !1137)
!1144 = !DILocation(line: 414, column: 9, scope: !1137)
!1145 = !DILocation(line: 414, column: 20, scope: !1137)
!1146 = !DILocation(line: 415, column: 18, scope: !1137)
!1147 = !DILocation(line: 415, column: 21, scope: !1137)
!1148 = !DILocation(line: 415, column: 3, scope: !1137)
!1149 = !DILocation(line: 415, column: 8, scope: !1137)
!1150 = !DILocation(line: 415, column: 16, scope: !1137)
!1151 = !DILocation(line: 416, column: 18, scope: !1137)
!1152 = !DILocation(line: 416, column: 3, scope: !1137)
!1153 = !DILocation(line: 416, column: 8, scope: !1137)
!1154 = !DILocation(line: 416, column: 16, scope: !1137)
!1155 = !DILocation(line: 417, column: 19, scope: !1137)
!1156 = !DILocation(line: 417, column: 22, scope: !1137)
!1157 = !DILocation(line: 417, column: 3, scope: !1137)
!1158 = !DILocation(line: 417, column: 8, scope: !1137)
!1159 = !DILocation(line: 417, column: 17, scope: !1137)
!1160 = !DILocation(line: 420, column: 2, scope: !887)
!1161 = !DILocation(line: 421, column: 1, scope: !887)
!1162 = distinct !DISubprogram(name: "mergestr", scope: !3, file: !3, line: 441, type: !1163, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{!36, !22, !238, !238, !22, !238, !238}
!1165 = !DILocalVariable(name: "mol1", arg: 1, scope: !1162, file: !3, line: 441, type: !22)
!1166 = !DILocation(line: 441, column: 27, scope: !1162)
!1167 = !DILocalVariable(name: "strand1", arg: 2, scope: !1162, file: !3, line: 441, type: !238)
!1168 = !DILocation(line: 441, column: 38, scope: !1162)
!1169 = !DILocalVariable(name: "end1", arg: 3, scope: !1162, file: !3, line: 441, type: !238)
!1170 = !DILocation(line: 441, column: 54, scope: !1162)
!1171 = !DILocalVariable(name: "mol2", arg: 4, scope: !1162, file: !3, line: 442, type: !22)
!1172 = !DILocation(line: 442, column: 14, scope: !1162)
!1173 = !DILocalVariable(name: "strand2", arg: 5, scope: !1162, file: !3, line: 442, type: !238)
!1174 = !DILocation(line: 442, column: 25, scope: !1162)
!1175 = !DILocalVariable(name: "end2", arg: 6, scope: !1162, file: !3, line: 442, type: !238)
!1176 = !DILocation(line: 442, column: 41, scope: !1162)
!1177 = !DILocalVariable(name: "after", scope: !1162, file: !3, line: 444, type: !36)
!1178 = !DILocation(line: 444, column: 6, scope: !1162)
!1179 = !DILocalVariable(name: "nres", scope: !1162, file: !3, line: 445, type: !36)
!1180 = !DILocation(line: 445, column: 6, scope: !1162)
!1181 = !DILocalVariable(name: "nsize", scope: !1162, file: !3, line: 445, type: !36)
!1182 = !DILocation(line: 445, column: 12, scope: !1162)
!1183 = !DILocalVariable(name: "r1", scope: !1162, file: !3, line: 446, type: !36)
!1184 = !DILocation(line: 446, column: 6, scope: !1162)
!1185 = !DILocalVariable(name: "r2", scope: !1162, file: !3, line: 446, type: !36)
!1186 = !DILocation(line: 446, column: 10, scope: !1162)
!1187 = !DILocalVariable(name: "copy", scope: !1162, file: !3, line: 447, type: !36)
!1188 = !DILocation(line: 447, column: 6, scope: !1162)
!1189 = !DILocalVariable(name: "sp", scope: !1162, file: !3, line: 448, type: !38)
!1190 = !DILocation(line: 448, column: 12, scope: !1162)
!1191 = !DILocalVariable(name: "sp1", scope: !1162, file: !3, line: 448, type: !38)
!1192 = !DILocation(line: 448, column: 17, scope: !1162)
!1193 = !DILocalVariable(name: "sp2", scope: !1162, file: !3, line: 448, type: !38)
!1194 = !DILocation(line: 448, column: 23, scope: !1162)
!1195 = !DILocalVariable(name: "rap", scope: !1162, file: !3, line: 449, type: !55)
!1196 = !DILocation(line: 449, column: 14, scope: !1162)
!1197 = !DILocation(line: 451, column: 14, scope: !1198)
!1198 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 451, column: 6)
!1199 = !DILocation(line: 451, column: 6, scope: !1198)
!1200 = !DILocation(line: 451, column: 29, scope: !1198)
!1201 = !DILocation(line: 451, column: 34, scope: !1198)
!1202 = !DILocation(line: 451, column: 45, scope: !1198)
!1203 = !DILocation(line: 451, column: 37, scope: !1198)
!1204 = !DILocation(line: 451, column: 61, scope: !1198)
!1205 = !DILocation(line: 451, column: 6, scope: !1162)
!1206 = !DILocation(line: 452, column: 9, scope: !1198)
!1207 = !DILocation(line: 452, column: 3, scope: !1198)
!1208 = !DILocation(line: 453, column: 19, scope: !1209)
!1209 = distinct !DILexicalBlock(scope: !1198, file: !3, line: 453, column: 11)
!1210 = !DILocation(line: 453, column: 11, scope: !1209)
!1211 = !DILocation(line: 453, column: 35, scope: !1209)
!1212 = !DILocation(line: 453, column: 40, scope: !1209)
!1213 = !DILocation(line: 453, column: 51, scope: !1209)
!1214 = !DILocation(line: 453, column: 43, scope: !1209)
!1215 = !DILocation(line: 453, column: 66, scope: !1209)
!1216 = !DILocation(line: 453, column: 11, scope: !1198)
!1217 = !DILocation(line: 454, column: 9, scope: !1209)
!1218 = !DILocation(line: 454, column: 3, scope: !1209)
!1219 = !DILocation(line: 456, column: 28, scope: !1220)
!1220 = distinct !DILexicalBlock(scope: !1209, file: !3, line: 455, column: 6)
!1221 = !DILocation(line: 456, column: 34, scope: !1220)
!1222 = !DILocation(line: 456, column: 3, scope: !1220)
!1223 = !DILocation(line: 457, column: 3, scope: !1220)
!1224 = !DILocation(line: 458, column: 3, scope: !1220)
!1225 = !DILocation(line: 461, column: 11, scope: !1226)
!1226 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 461, column: 2)
!1227 = !DILocation(line: 461, column: 24, scope: !1226)
!1228 = !DILocation(line: 461, column: 30, scope: !1226)
!1229 = !DILocation(line: 461, column: 22, scope: !1226)
!1230 = !DILocation(line: 461, column: 7, scope: !1226)
!1231 = !DILocation(line: 461, column: 41, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1226, file: !3, line: 461, column: 2)
!1233 = !DILocation(line: 461, column: 2, scope: !1226)
!1234 = !DILocation(line: 462, column: 15, scope: !1235)
!1235 = distinct !DILexicalBlock(scope: !1236, file: !3, line: 462, column: 7)
!1236 = distinct !DILexicalBlock(scope: !1232, file: !3, line: 461, column: 62)
!1237 = !DILocation(line: 462, column: 19, scope: !1235)
!1238 = !DILocation(line: 462, column: 33, scope: !1235)
!1239 = !DILocation(line: 462, column: 7, scope: !1235)
!1240 = !DILocation(line: 462, column: 43, scope: !1235)
!1241 = !DILocation(line: 462, column: 7, scope: !1236)
!1242 = !DILocation(line: 463, column: 10, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1235, file: !3, line: 462, column: 49)
!1244 = !DILocation(line: 463, column: 8, scope: !1243)
!1245 = !DILocation(line: 464, column: 4, scope: !1243)
!1246 = !DILocation(line: 466, column: 2, scope: !1236)
!1247 = !DILocation(line: 461, column: 50, scope: !1232)
!1248 = !DILocation(line: 461, column: 54, scope: !1232)
!1249 = !DILocation(line: 461, column: 48, scope: !1232)
!1250 = !DILocation(line: 461, column: 2, scope: !1232)
!1251 = distinct !{!1251, !1233, !1252}
!1252 = !DILocation(line: 466, column: 2, scope: !1226)
!1253 = !DILocation(line: 467, column: 6, scope: !1254)
!1254 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 467, column: 6)
!1255 = !DILocation(line: 467, column: 10, scope: !1254)
!1256 = !DILocation(line: 467, column: 6, scope: !1162)
!1257 = !DILocation(line: 468, column: 43, scope: !1258)
!1258 = distinct !DILexicalBlock(scope: !1254, file: !3, line: 467, column: 19)
!1259 = !DILocation(line: 468, column: 3, scope: !1258)
!1260 = !DILocation(line: 469, column: 3, scope: !1258)
!1261 = !DILocation(line: 472, column: 11, scope: !1262)
!1262 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 472, column: 2)
!1263 = !DILocation(line: 472, column: 24, scope: !1262)
!1264 = !DILocation(line: 472, column: 30, scope: !1262)
!1265 = !DILocation(line: 472, column: 22, scope: !1262)
!1266 = !DILocation(line: 472, column: 7, scope: !1262)
!1267 = !DILocation(line: 472, column: 41, scope: !1268)
!1268 = distinct !DILexicalBlock(scope: !1262, file: !3, line: 472, column: 2)
!1269 = !DILocation(line: 472, column: 2, scope: !1262)
!1270 = !DILocation(line: 473, column: 15, scope: !1271)
!1271 = distinct !DILexicalBlock(scope: !1272, file: !3, line: 473, column: 7)
!1272 = distinct !DILexicalBlock(scope: !1268, file: !3, line: 472, column: 62)
!1273 = !DILocation(line: 473, column: 19, scope: !1271)
!1274 = !DILocation(line: 473, column: 33, scope: !1271)
!1275 = !DILocation(line: 473, column: 7, scope: !1271)
!1276 = !DILocation(line: 473, column: 43, scope: !1271)
!1277 = !DILocation(line: 473, column: 7, scope: !1272)
!1278 = !DILocation(line: 474, column: 10, scope: !1279)
!1279 = distinct !DILexicalBlock(scope: !1271, file: !3, line: 473, column: 49)
!1280 = !DILocation(line: 474, column: 8, scope: !1279)
!1281 = !DILocation(line: 475, column: 4, scope: !1279)
!1282 = !DILocation(line: 477, column: 2, scope: !1272)
!1283 = !DILocation(line: 472, column: 50, scope: !1268)
!1284 = !DILocation(line: 472, column: 54, scope: !1268)
!1285 = !DILocation(line: 472, column: 48, scope: !1268)
!1286 = !DILocation(line: 472, column: 2, scope: !1268)
!1287 = distinct !{!1287, !1269, !1288}
!1288 = !DILocation(line: 477, column: 2, scope: !1262)
!1289 = !DILocation(line: 478, column: 6, scope: !1290)
!1290 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 478, column: 6)
!1291 = !DILocation(line: 478, column: 10, scope: !1290)
!1292 = !DILocation(line: 478, column: 6, scope: !1162)
!1293 = !DILocation(line: 479, column: 43, scope: !1294)
!1294 = distinct !DILexicalBlock(scope: !1290, file: !3, line: 478, column: 19)
!1295 = !DILocation(line: 479, column: 3, scope: !1294)
!1296 = !DILocation(line: 480, column: 3, scope: !1294)
!1297 = !DILocation(line: 483, column: 9, scope: !1162)
!1298 = !DILocation(line: 483, column: 14, scope: !1162)
!1299 = !DILocation(line: 483, column: 28, scope: !1162)
!1300 = !DILocation(line: 483, column: 33, scope: !1162)
!1301 = !DILocation(line: 483, column: 26, scope: !1162)
!1302 = !DILocation(line: 483, column: 7, scope: !1162)
!1303 = !DILocation(line: 484, column: 6, scope: !1304)
!1304 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 484, column: 6)
!1305 = !DILocation(line: 484, column: 13, scope: !1304)
!1306 = !DILocation(line: 484, column: 18, scope: !1304)
!1307 = !DILocation(line: 484, column: 11, scope: !1304)
!1308 = !DILocation(line: 484, column: 6, scope: !1162)
!1309 = !DILocation(line: 486, column: 11, scope: !1310)
!1310 = distinct !DILexicalBlock(scope: !1304, file: !3, line: 484, column: 30)
!1311 = !DILocation(line: 486, column: 16, scope: !1310)
!1312 = !DILocation(line: 486, column: 9, scope: !1310)
!1313 = !DILocation(line: 488, column: 12, scope: !1314)
!1314 = distinct !DILexicalBlock(scope: !1310, file: !3, line: 487, column: 7)
!1315 = !DILocation(line: 488, column: 18, scope: !1314)
!1316 = !DILocation(line: 488, column: 4, scope: !1314)
!1317 = !DILocation(line: 487, column: 15, scope: !1314)
!1318 = !DILocation(line: 487, column: 13, scope: !1314)
!1319 = !DILocation(line: 488, column: 46, scope: !1314)
!1320 = !DILocation(line: 487, column: 7, scope: !1310)
!1321 = !DILocation(line: 489, column: 4, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1314, file: !3, line: 488, column: 55)
!1323 = !DILocation(line: 491, column: 4, scope: !1322)
!1324 = !DILocation(line: 493, column: 11, scope: !1325)
!1325 = distinct !DILexicalBlock(scope: !1310, file: !3, line: 493, column: 3)
!1326 = !DILocation(line: 493, column: 8, scope: !1325)
!1327 = !DILocation(line: 493, column: 16, scope: !1328)
!1328 = distinct !DILexicalBlock(scope: !1325, file: !3, line: 493, column: 3)
!1329 = !DILocation(line: 493, column: 21, scope: !1328)
!1330 = !DILocation(line: 493, column: 26, scope: !1328)
!1331 = !DILocation(line: 493, column: 19, scope: !1328)
!1332 = !DILocation(line: 493, column: 3, scope: !1325)
!1333 = !DILocation(line: 494, column: 16, scope: !1328)
!1334 = !DILocation(line: 494, column: 21, scope: !1328)
!1335 = !DILocation(line: 494, column: 33, scope: !1328)
!1336 = !DILocation(line: 494, column: 4, scope: !1328)
!1337 = !DILocation(line: 494, column: 9, scope: !1328)
!1338 = !DILocation(line: 494, column: 14, scope: !1328)
!1339 = !DILocation(line: 493, column: 41, scope: !1328)
!1340 = !DILocation(line: 493, column: 3, scope: !1328)
!1341 = distinct !{!1341, !1332, !1342}
!1342 = !DILocation(line: 494, column: 36, scope: !1325)
!1343 = !DILocation(line: 495, column: 7, scope: !1344)
!1344 = distinct !DILexicalBlock(scope: !1310, file: !3, line: 495, column: 7)
!1345 = !DILocation(line: 495, column: 12, scope: !1344)
!1346 = !DILocation(line: 495, column: 23, scope: !1344)
!1347 = !DILocation(line: 495, column: 7, scope: !1310)
!1348 = !DILocation(line: 496, column: 10, scope: !1344)
!1349 = !DILocation(line: 496, column: 15, scope: !1344)
!1350 = !DILocation(line: 496, column: 4, scope: !1344)
!1351 = !DILocation(line: 497, column: 21, scope: !1310)
!1352 = !DILocation(line: 497, column: 3, scope: !1310)
!1353 = !DILocation(line: 497, column: 8, scope: !1310)
!1354 = !DILocation(line: 497, column: 19, scope: !1310)
!1355 = !DILocation(line: 498, column: 21, scope: !1310)
!1356 = !DILocation(line: 498, column: 3, scope: !1310)
!1357 = !DILocation(line: 498, column: 8, scope: !1310)
!1358 = !DILocation(line: 498, column: 19, scope: !1310)
!1359 = !DILocation(line: 499, column: 2, scope: !1310)
!1360 = !DILocation(line: 501, column: 9, scope: !1162)
!1361 = !DILocation(line: 501, column: 17, scope: !1162)
!1362 = !DILocation(line: 501, column: 14, scope: !1162)
!1363 = !DILocation(line: 501, column: 7, scope: !1162)
!1364 = !DILocation(line: 504, column: 6, scope: !1365)
!1365 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 504, column: 6)
!1366 = !DILocation(line: 504, column: 6, scope: !1162)
!1367 = !DILocation(line: 505, column: 8, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1365, file: !3, line: 504, column: 13)
!1369 = !DILocation(line: 505, column: 13, scope: !1368)
!1370 = !DILocation(line: 505, column: 6, scope: !1368)
!1371 = !DILocation(line: 506, column: 7, scope: !1372)
!1372 = distinct !DILexicalBlock(scope: !1368, file: !3, line: 506, column: 7)
!1373 = !DILocation(line: 506, column: 7, scope: !1368)
!1374 = !DILocation(line: 507, column: 12, scope: !1375)
!1375 = distinct !DILexicalBlock(scope: !1376, file: !3, line: 507, column: 4)
!1376 = distinct !DILexicalBlock(scope: !1372, file: !3, line: 506, column: 13)
!1377 = !DILocation(line: 507, column: 9, scope: !1375)
!1378 = !DILocation(line: 507, column: 17, scope: !1379)
!1379 = distinct !DILexicalBlock(scope: !1375, file: !3, line: 507, column: 4)
!1380 = !DILocation(line: 507, column: 22, scope: !1379)
!1381 = !DILocation(line: 507, column: 27, scope: !1379)
!1382 = !DILocation(line: 507, column: 20, scope: !1379)
!1383 = !DILocation(line: 507, column: 4, scope: !1375)
!1384 = !DILocation(line: 509, column: 19, scope: !1385)
!1385 = distinct !DILexicalBlock(scope: !1379, file: !3, line: 507, column: 46)
!1386 = !DILocation(line: 509, column: 24, scope: !1385)
!1387 = !DILocation(line: 509, column: 36, scope: !1385)
!1388 = !DILocation(line: 509, column: 6, scope: !1385)
!1389 = !DILocation(line: 508, column: 5, scope: !1385)
!1390 = !DILocation(line: 508, column: 10, scope: !1385)
!1391 = !DILocation(line: 508, column: 22, scope: !1385)
!1392 = !DILocation(line: 508, column: 27, scope: !1385)
!1393 = !DILocation(line: 508, column: 25, scope: !1385)
!1394 = !DILocation(line: 508, column: 32, scope: !1385)
!1395 = !DILocation(line: 510, column: 44, scope: !1385)
!1396 = !DILocation(line: 510, column: 5, scope: !1385)
!1397 = !DILocation(line: 510, column: 10, scope: !1385)
!1398 = !DILocation(line: 510, column: 22, scope: !1385)
!1399 = !DILocation(line: 510, column: 27, scope: !1385)
!1400 = !DILocation(line: 510, column: 25, scope: !1385)
!1401 = !DILocation(line: 510, column: 33, scope: !1385)
!1402 = !DILocation(line: 510, column: 42, scope: !1385)
!1403 = !DILocation(line: 511, column: 4, scope: !1385)
!1404 = !DILocation(line: 507, column: 42, scope: !1379)
!1405 = !DILocation(line: 507, column: 4, scope: !1379)
!1406 = distinct !{!1406, !1383, !1407}
!1407 = !DILocation(line: 511, column: 4, scope: !1375)
!1408 = !DILocation(line: 512, column: 3, scope: !1376)
!1409 = !DILocation(line: 513, column: 12, scope: !1410)
!1410 = distinct !DILexicalBlock(scope: !1411, file: !3, line: 513, column: 4)
!1411 = distinct !DILexicalBlock(scope: !1372, file: !3, line: 512, column: 8)
!1412 = !DILocation(line: 513, column: 9, scope: !1410)
!1413 = !DILocation(line: 513, column: 17, scope: !1414)
!1414 = distinct !DILexicalBlock(scope: !1410, file: !3, line: 513, column: 4)
!1415 = !DILocation(line: 513, column: 22, scope: !1414)
!1416 = !DILocation(line: 513, column: 27, scope: !1414)
!1417 = !DILocation(line: 513, column: 20, scope: !1414)
!1418 = !DILocation(line: 513, column: 4, scope: !1410)
!1419 = !DILocation(line: 515, column: 6, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1414, file: !3, line: 513, column: 46)
!1421 = !DILocation(line: 515, column: 11, scope: !1420)
!1422 = !DILocation(line: 515, column: 23, scope: !1420)
!1423 = !DILocation(line: 514, column: 5, scope: !1420)
!1424 = !DILocation(line: 514, column: 10, scope: !1420)
!1425 = !DILocation(line: 514, column: 22, scope: !1420)
!1426 = !DILocation(line: 514, column: 27, scope: !1420)
!1427 = !DILocation(line: 514, column: 25, scope: !1420)
!1428 = !DILocation(line: 514, column: 32, scope: !1420)
!1429 = !DILocation(line: 516, column: 44, scope: !1420)
!1430 = !DILocation(line: 516, column: 5, scope: !1420)
!1431 = !DILocation(line: 516, column: 10, scope: !1420)
!1432 = !DILocation(line: 516, column: 22, scope: !1420)
!1433 = !DILocation(line: 516, column: 27, scope: !1420)
!1434 = !DILocation(line: 516, column: 25, scope: !1420)
!1435 = !DILocation(line: 516, column: 33, scope: !1420)
!1436 = !DILocation(line: 516, column: 42, scope: !1420)
!1437 = !DILocation(line: 517, column: 4, scope: !1420)
!1438 = !DILocation(line: 513, column: 42, scope: !1414)
!1439 = !DILocation(line: 513, column: 4, scope: !1414)
!1440 = distinct !{!1440, !1418, !1441}
!1441 = !DILocation(line: 517, column: 4, scope: !1410)
!1442 = !DILocation(line: 519, column: 11, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1368, file: !3, line: 519, column: 3)
!1444 = !DILocation(line: 519, column: 8, scope: !1443)
!1445 = !DILocation(line: 519, column: 16, scope: !1446)
!1446 = distinct !DILexicalBlock(scope: !1443, file: !3, line: 519, column: 3)
!1447 = !DILocation(line: 519, column: 21, scope: !1446)
!1448 = !DILocation(line: 519, column: 26, scope: !1446)
!1449 = !DILocation(line: 519, column: 19, scope: !1446)
!1450 = !DILocation(line: 519, column: 3, scope: !1443)
!1451 = !DILocation(line: 520, column: 17, scope: !1446)
!1452 = !DILocation(line: 520, column: 22, scope: !1446)
!1453 = !DILocation(line: 520, column: 34, scope: !1446)
!1454 = !DILocation(line: 520, column: 39, scope: !1446)
!1455 = !DILocation(line: 520, column: 37, scope: !1446)
!1456 = !DILocation(line: 520, column: 45, scope: !1446)
!1457 = !DILocation(line: 520, column: 4, scope: !1446)
!1458 = !DILocation(line: 519, column: 41, scope: !1446)
!1459 = !DILocation(line: 519, column: 3, scope: !1446)
!1460 = distinct !{!1460, !1450, !1461}
!1461 = !DILocation(line: 520, column: 48, scope: !1443)
!1462 = !DILocation(line: 521, column: 2, scope: !1368)
!1463 = !DILocation(line: 522, column: 8, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1365, file: !3, line: 521, column: 7)
!1465 = !DILocation(line: 522, column: 13, scope: !1464)
!1466 = !DILocation(line: 522, column: 6, scope: !1464)
!1467 = !DILocation(line: 523, column: 13, scope: !1468)
!1468 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 523, column: 3)
!1469 = !DILocation(line: 523, column: 18, scope: !1468)
!1470 = !DILocation(line: 523, column: 30, scope: !1468)
!1471 = !DILocation(line: 523, column: 11, scope: !1468)
!1472 = !DILocation(line: 523, column: 8, scope: !1468)
!1473 = !DILocation(line: 523, column: 35, scope: !1474)
!1474 = distinct !DILexicalBlock(scope: !1468, file: !3, line: 523, column: 3)
!1475 = !DILocation(line: 523, column: 38, scope: !1474)
!1476 = !DILocation(line: 523, column: 3, scope: !1468)
!1477 = !DILocation(line: 524, column: 33, scope: !1474)
!1478 = !DILocation(line: 524, column: 38, scope: !1474)
!1479 = !DILocation(line: 524, column: 50, scope: !1474)
!1480 = !DILocation(line: 524, column: 4, scope: !1474)
!1481 = !DILocation(line: 524, column: 9, scope: !1474)
!1482 = !DILocation(line: 524, column: 21, scope: !1474)
!1483 = !DILocation(line: 524, column: 26, scope: !1474)
!1484 = !DILocation(line: 524, column: 24, scope: !1474)
!1485 = !DILocation(line: 524, column: 31, scope: !1474)
!1486 = !DILocation(line: 523, column: 46, scope: !1474)
!1487 = !DILocation(line: 523, column: 3, scope: !1474)
!1488 = distinct !{!1488, !1476, !1489}
!1489 = !DILocation(line: 524, column: 53, scope: !1468)
!1490 = !DILocation(line: 525, column: 7, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 525, column: 7)
!1492 = !DILocation(line: 525, column: 7, scope: !1464)
!1493 = !DILocation(line: 526, column: 12, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 526, column: 4)
!1495 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 525, column: 13)
!1496 = !DILocation(line: 526, column: 9, scope: !1494)
!1497 = !DILocation(line: 526, column: 17, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1494, file: !3, line: 526, column: 4)
!1499 = !DILocation(line: 526, column: 22, scope: !1498)
!1500 = !DILocation(line: 526, column: 27, scope: !1498)
!1501 = !DILocation(line: 526, column: 20, scope: !1498)
!1502 = !DILocation(line: 526, column: 4, scope: !1494)
!1503 = !DILocation(line: 528, column: 19, scope: !1504)
!1504 = distinct !DILexicalBlock(scope: !1498, file: !3, line: 526, column: 46)
!1505 = !DILocation(line: 528, column: 24, scope: !1504)
!1506 = !DILocation(line: 528, column: 36, scope: !1504)
!1507 = !DILocation(line: 528, column: 6, scope: !1504)
!1508 = !DILocation(line: 527, column: 5, scope: !1504)
!1509 = !DILocation(line: 527, column: 10, scope: !1504)
!1510 = !DILocation(line: 527, column: 22, scope: !1504)
!1511 = !DILocation(line: 527, column: 27, scope: !1504)
!1512 = !DILocation(line: 529, column: 39, scope: !1504)
!1513 = !DILocation(line: 529, column: 5, scope: !1504)
!1514 = !DILocation(line: 529, column: 10, scope: !1504)
!1515 = !DILocation(line: 529, column: 22, scope: !1504)
!1516 = !DILocation(line: 529, column: 28, scope: !1504)
!1517 = !DILocation(line: 529, column: 37, scope: !1504)
!1518 = !DILocation(line: 530, column: 4, scope: !1504)
!1519 = !DILocation(line: 526, column: 42, scope: !1498)
!1520 = !DILocation(line: 526, column: 4, scope: !1498)
!1521 = distinct !{!1521, !1502, !1522}
!1522 = !DILocation(line: 530, column: 4, scope: !1494)
!1523 = !DILocation(line: 531, column: 3, scope: !1495)
!1524 = !DILocation(line: 532, column: 12, scope: !1525)
!1525 = distinct !DILexicalBlock(scope: !1526, file: !3, line: 532, column: 4)
!1526 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 531, column: 8)
!1527 = !DILocation(line: 532, column: 9, scope: !1525)
!1528 = !DILocation(line: 532, column: 17, scope: !1529)
!1529 = distinct !DILexicalBlock(scope: !1525, file: !3, line: 532, column: 4)
!1530 = !DILocation(line: 532, column: 22, scope: !1529)
!1531 = !DILocation(line: 532, column: 27, scope: !1529)
!1532 = !DILocation(line: 532, column: 20, scope: !1529)
!1533 = !DILocation(line: 532, column: 4, scope: !1525)
!1534 = !DILocation(line: 533, column: 29, scope: !1535)
!1535 = distinct !DILexicalBlock(scope: !1529, file: !3, line: 532, column: 46)
!1536 = !DILocation(line: 533, column: 34, scope: !1535)
!1537 = !DILocation(line: 533, column: 46, scope: !1535)
!1538 = !DILocation(line: 533, column: 5, scope: !1535)
!1539 = !DILocation(line: 533, column: 10, scope: !1535)
!1540 = !DILocation(line: 533, column: 22, scope: !1535)
!1541 = !DILocation(line: 533, column: 27, scope: !1535)
!1542 = !DILocation(line: 534, column: 39, scope: !1535)
!1543 = !DILocation(line: 534, column: 5, scope: !1535)
!1544 = !DILocation(line: 534, column: 10, scope: !1535)
!1545 = !DILocation(line: 534, column: 22, scope: !1535)
!1546 = !DILocation(line: 534, column: 28, scope: !1535)
!1547 = !DILocation(line: 534, column: 37, scope: !1535)
!1548 = !DILocation(line: 535, column: 4, scope: !1535)
!1549 = !DILocation(line: 532, column: 42, scope: !1529)
!1550 = !DILocation(line: 532, column: 4, scope: !1529)
!1551 = distinct !{!1551, !1533, !1552}
!1552 = !DILocation(line: 535, column: 4, scope: !1525)
!1553 = !DILocation(line: 537, column: 11, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1464, file: !3, line: 537, column: 3)
!1555 = !DILocation(line: 537, column: 8, scope: !1554)
!1556 = !DILocation(line: 537, column: 16, scope: !1557)
!1557 = distinct !DILexicalBlock(scope: !1554, file: !3, line: 537, column: 3)
!1558 = !DILocation(line: 537, column: 21, scope: !1557)
!1559 = !DILocation(line: 537, column: 26, scope: !1557)
!1560 = !DILocation(line: 537, column: 19, scope: !1557)
!1561 = !DILocation(line: 537, column: 3, scope: !1554)
!1562 = !DILocation(line: 538, column: 17, scope: !1563)
!1563 = distinct !DILexicalBlock(scope: !1557, file: !3, line: 537, column: 45)
!1564 = !DILocation(line: 538, column: 22, scope: !1563)
!1565 = !DILocation(line: 538, column: 34, scope: !1563)
!1566 = !DILocation(line: 538, column: 39, scope: !1563)
!1567 = !DILocation(line: 538, column: 37, scope: !1563)
!1568 = !DILocation(line: 538, column: 45, scope: !1563)
!1569 = !DILocation(line: 538, column: 4, scope: !1563)
!1570 = !DILocation(line: 539, column: 3, scope: !1563)
!1571 = !DILocation(line: 537, column: 41, scope: !1557)
!1572 = !DILocation(line: 537, column: 3, scope: !1557)
!1573 = distinct !{!1573, !1561, !1574}
!1574 = !DILocation(line: 539, column: 3, scope: !1554)
!1575 = !DILocation(line: 541, column: 21, scope: !1162)
!1576 = !DILocation(line: 541, column: 2, scope: !1162)
!1577 = !DILocation(line: 541, column: 7, scope: !1162)
!1578 = !DILocation(line: 541, column: 19, scope: !1162)
!1579 = !DILocation(line: 543, column: 7, scope: !1580)
!1580 = distinct !DILexicalBlock(scope: !1162, file: !3, line: 543, column: 6)
!1581 = !DILocation(line: 543, column: 6, scope: !1162)
!1582 = !DILocation(line: 544, column: 15, scope: !1580)
!1583 = !DILocation(line: 544, column: 21, scope: !1580)
!1584 = !DILocation(line: 544, column: 3, scope: !1580)
!1585 = !DILocation(line: 546, column: 2, scope: !1162)
!1586 = !DILocation(line: 546, column: 8, scope: !1162)
!1587 = !DILocation(line: 546, column: 17, scope: !1162)
!1588 = !DILocation(line: 547, column: 18, scope: !1162)
!1589 = !DILocation(line: 547, column: 2, scope: !1162)
!1590 = !DILocation(line: 549, column: 2, scope: !1162)
!1591 = !DILocation(line: 550, column: 1, scope: !1162)
!1592 = distinct !DISubprogram(name: "fixextbonds", scope: !3, file: !3, line: 1618, type: !1593, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{null, !56, !36}
!1595 = !DILocalVariable(name: "res", arg: 1, scope: !1592, file: !3, line: 1618, type: !56)
!1596 = !DILocation(line: 1618, column: 37, scope: !1592)
!1597 = !DILocalVariable(name: "roff", arg: 2, scope: !1592, file: !3, line: 1618, type: !36)
!1598 = !DILocation(line: 1618, column: 46, scope: !1592)
!1599 = !DILocalVariable(name: "ep", scope: !1592, file: !3, line: 1620, type: !72)
!1600 = !DILocation(line: 1620, column: 13, scope: !1592)
!1601 = !DILocation(line: 1622, column: 12, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1592, file: !3, line: 1622, column: 2)
!1603 = !DILocation(line: 1622, column: 17, scope: !1602)
!1604 = !DILocation(line: 1622, column: 10, scope: !1602)
!1605 = !DILocation(line: 1622, column: 7, scope: !1602)
!1606 = !DILocation(line: 1622, column: 29, scope: !1607)
!1607 = distinct !DILexicalBlock(scope: !1602, file: !3, line: 1622, column: 2)
!1608 = !DILocation(line: 1622, column: 2, scope: !1602)
!1609 = !DILocation(line: 1623, column: 18, scope: !1607)
!1610 = !DILocation(line: 1623, column: 3, scope: !1607)
!1611 = !DILocation(line: 1623, column: 7, scope: !1607)
!1612 = !DILocation(line: 1623, column: 15, scope: !1607)
!1613 = !DILocation(line: 1622, column: 38, scope: !1607)
!1614 = !DILocation(line: 1622, column: 42, scope: !1607)
!1615 = !DILocation(line: 1622, column: 36, scope: !1607)
!1616 = !DILocation(line: 1622, column: 2, scope: !1607)
!1617 = distinct !{!1617, !1608, !1618}
!1618 = !DILocation(line: 1623, column: 18, scope: !1602)
!1619 = !DILocation(line: 1624, column: 1, scope: !1592)
!1620 = distinct !DISubprogram(name: "freestrand", scope: !3, file: !3, line: 1626, type: !1621, scopeLine: 1627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !22, !238}
!1623 = !DILocalVariable(name: "mol", arg: 1, scope: !1620, file: !3, line: 1626, type: !22)
!1624 = !DILocation(line: 1626, column: 37, scope: !1620)
!1625 = !DILocalVariable(name: "sname", arg: 2, scope: !1620, file: !3, line: 1626, type: !238)
!1626 = !DILocation(line: 1626, column: 47, scope: !1620)
!1627 = !DILocalVariable(name: "sp", scope: !1620, file: !3, line: 1628, type: !38)
!1628 = !DILocation(line: 1628, column: 12, scope: !1620)
!1629 = !DILocalVariable(name: "spl", scope: !1620, file: !3, line: 1628, type: !38)
!1630 = !DILocation(line: 1628, column: 17, scope: !1620)
!1631 = !DILocalVariable(name: "sprm", scope: !1620, file: !3, line: 1628, type: !38)
!1632 = !DILocation(line: 1628, column: 23, scope: !1620)
!1633 = !DILocation(line: 1630, column: 18, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1620, file: !3, line: 1630, column: 2)
!1635 = !DILocation(line: 1630, column: 11, scope: !1634)
!1636 = !DILocation(line: 1630, column: 31, scope: !1634)
!1637 = !DILocation(line: 1630, column: 36, scope: !1634)
!1638 = !DILocation(line: 1630, column: 29, scope: !1634)
!1639 = !DILocation(line: 1630, column: 7, scope: !1634)
!1640 = !DILocation(line: 1630, column: 47, scope: !1641)
!1641 = distinct !DILexicalBlock(scope: !1634, file: !3, line: 1630, column: 2)
!1642 = !DILocation(line: 1630, column: 2, scope: !1634)
!1643 = !DILocation(line: 1631, column: 15, scope: !1644)
!1644 = distinct !DILexicalBlock(scope: !1645, file: !3, line: 1631, column: 7)
!1645 = distinct !DILexicalBlock(scope: !1641, file: !3, line: 1630, column: 68)
!1646 = !DILocation(line: 1631, column: 19, scope: !1644)
!1647 = !DILocation(line: 1631, column: 33, scope: !1644)
!1648 = !DILocation(line: 1631, column: 7, scope: !1644)
!1649 = !DILocation(line: 1631, column: 41, scope: !1644)
!1650 = !DILocation(line: 1631, column: 7, scope: !1645)
!1651 = !DILocation(line: 1632, column: 11, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1644, file: !3, line: 1631, column: 47)
!1653 = !DILocation(line: 1632, column: 9, scope: !1652)
!1654 = !DILocation(line: 1633, column: 4, scope: !1652)
!1655 = !DILocation(line: 1635, column: 9, scope: !1645)
!1656 = !DILocation(line: 1635, column: 7, scope: !1645)
!1657 = !DILocation(line: 1636, column: 2, scope: !1645)
!1658 = !DILocation(line: 1630, column: 56, scope: !1641)
!1659 = !DILocation(line: 1630, column: 60, scope: !1641)
!1660 = !DILocation(line: 1630, column: 54, scope: !1641)
!1661 = !DILocation(line: 1630, column: 2, scope: !1641)
!1662 = distinct !{!1662, !1642, !1663}
!1663 = !DILocation(line: 1636, column: 2, scope: !1634)
!1664 = !DILocation(line: 1638, column: 6, scope: !1665)
!1665 = distinct !DILexicalBlock(scope: !1620, file: !3, line: 1638, column: 6)
!1666 = !DILocation(line: 1638, column: 11, scope: !1665)
!1667 = !DILocation(line: 1638, column: 6, scope: !1620)
!1668 = !DILocation(line: 1639, column: 43, scope: !1669)
!1669 = distinct !DILexicalBlock(scope: !1665, file: !3, line: 1638, column: 20)
!1670 = !DILocation(line: 1639, column: 3, scope: !1669)
!1671 = !DILocation(line: 1640, column: 3, scope: !1669)
!1672 = !DILocation(line: 1643, column: 6, scope: !1673)
!1673 = distinct !DILexicalBlock(scope: !1620, file: !3, line: 1643, column: 6)
!1674 = !DILocation(line: 1643, column: 10, scope: !1673)
!1675 = !DILocation(line: 1643, column: 6, scope: !1620)
!1676 = !DILocation(line: 1644, column: 20, scope: !1673)
!1677 = !DILocation(line: 1644, column: 26, scope: !1673)
!1678 = !DILocation(line: 1644, column: 3, scope: !1673)
!1679 = !DILocation(line: 1644, column: 8, scope: !1673)
!1680 = !DILocation(line: 1644, column: 18, scope: !1673)
!1681 = !DILocation(line: 1646, column: 17, scope: !1673)
!1682 = !DILocation(line: 1646, column: 23, scope: !1673)
!1683 = !DILocation(line: 1646, column: 3, scope: !1673)
!1684 = !DILocation(line: 1646, column: 8, scope: !1673)
!1685 = !DILocation(line: 1646, column: 15, scope: !1673)
!1686 = !DILocation(line: 1647, column: 2, scope: !1620)
!1687 = !DILocation(line: 1647, column: 7, scope: !1620)
!1688 = !DILocation(line: 1647, column: 17, scope: !1620)
!1689 = !DILocation(line: 1648, column: 1, scope: !1620)
!1690 = distinct !DISubprogram(name: "upd_molnumbers", scope: !3, file: !3, line: 1288, type: !1691, scopeLine: 1289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1691 = !DISubroutineType(types: !1692)
!1692 = !{null, !22}
!1693 = !DILocalVariable(name: "mp", arg: 1, scope: !1690, file: !3, line: 1288, type: !22)
!1694 = !DILocation(line: 1288, column: 34, scope: !1690)
!1695 = !DILocalVariable(name: "s", scope: !1690, file: !3, line: 1290, type: !36)
!1696 = !DILocation(line: 1290, column: 6, scope: !1690)
!1697 = !DILocalVariable(name: "r", scope: !1690, file: !3, line: 1290, type: !36)
!1698 = !DILocation(line: 1290, column: 9, scope: !1690)
!1699 = !DILocalVariable(name: "a", scope: !1690, file: !3, line: 1290, type: !36)
!1700 = !DILocation(line: 1290, column: 12, scope: !1690)
!1701 = !DILocalVariable(name: "a1", scope: !1690, file: !3, line: 1290, type: !36)
!1702 = !DILocation(line: 1290, column: 15, scope: !1690)
!1703 = !DILocalVariable(name: "ta", scope: !1690, file: !3, line: 1291, type: !36)
!1704 = !DILocation(line: 1291, column: 6, scope: !1690)
!1705 = !DILocalVariable(name: "tr", scope: !1690, file: !3, line: 1291, type: !36)
!1706 = !DILocation(line: 1291, column: 10, scope: !1690)
!1707 = !DILocalVariable(name: "sp", scope: !1690, file: !3, line: 1292, type: !38)
!1708 = !DILocation(line: 1292, column: 12, scope: !1690)
!1709 = !DILocalVariable(name: "res", scope: !1690, file: !3, line: 1293, type: !56)
!1710 = !DILocation(line: 1293, column: 13, scope: !1690)
!1711 = !DILocalVariable(name: "ap", scope: !1690, file: !3, line: 1294, type: !102)
!1712 = !DILocation(line: 1294, column: 11, scope: !1690)
!1713 = !DILocation(line: 1296, column: 19, scope: !1714)
!1714 = distinct !DILexicalBlock(scope: !1690, file: !3, line: 1296, column: 2)
!1715 = !DILocation(line: 1296, column: 15, scope: !1714)
!1716 = !DILocation(line: 1296, column: 10, scope: !1714)
!1717 = !DILocation(line: 1296, column: 29, scope: !1714)
!1718 = !DILocation(line: 1296, column: 33, scope: !1714)
!1719 = !DILocation(line: 1296, column: 27, scope: !1714)
!1720 = !DILocation(line: 1296, column: 7, scope: !1714)
!1721 = !DILocation(line: 1296, column: 44, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1714, file: !3, line: 1296, column: 2)
!1723 = !DILocation(line: 1296, column: 2, scope: !1714)
!1724 = !DILocation(line: 1297, column: 21, scope: !1725)
!1725 = distinct !DILexicalBlock(scope: !1722, file: !3, line: 1296, column: 70)
!1726 = !DILocation(line: 1297, column: 23, scope: !1725)
!1727 = !DILocation(line: 1297, column: 3, scope: !1725)
!1728 = !DILocation(line: 1297, column: 7, scope: !1725)
!1729 = !DILocation(line: 1297, column: 19, scope: !1725)
!1730 = !DILocation(line: 1298, column: 14, scope: !1731)
!1731 = distinct !DILexicalBlock(scope: !1725, file: !3, line: 1298, column: 3)
!1732 = !DILocation(line: 1298, column: 10, scope: !1731)
!1733 = !DILocation(line: 1298, column: 8, scope: !1731)
!1734 = !DILocation(line: 1298, column: 19, scope: !1735)
!1735 = distinct !DILexicalBlock(scope: !1731, file: !3, line: 1298, column: 3)
!1736 = !DILocation(line: 1298, column: 23, scope: !1735)
!1737 = !DILocation(line: 1298, column: 27, scope: !1735)
!1738 = !DILocation(line: 1298, column: 21, scope: !1735)
!1739 = !DILocation(line: 1298, column: 3, scope: !1731)
!1740 = !DILocation(line: 1299, column: 10, scope: !1741)
!1741 = distinct !DILexicalBlock(scope: !1735, file: !3, line: 1298, column: 51)
!1742 = !DILocation(line: 1299, column: 14, scope: !1741)
!1743 = !DILocation(line: 1299, column: 26, scope: !1741)
!1744 = !DILocation(line: 1299, column: 8, scope: !1741)
!1745 = !DILocation(line: 1300, column: 21, scope: !1741)
!1746 = !DILocation(line: 1300, column: 24, scope: !1741)
!1747 = !DILocation(line: 1300, column: 4, scope: !1741)
!1748 = !DILocation(line: 1300, column: 9, scope: !1741)
!1749 = !DILocation(line: 1300, column: 19, scope: !1741)
!1750 = !DILocation(line: 1301, column: 20, scope: !1741)
!1751 = !DILocation(line: 1301, column: 22, scope: !1741)
!1752 = !DILocation(line: 1301, column: 4, scope: !1741)
!1753 = !DILocation(line: 1301, column: 9, scope: !1741)
!1754 = !DILocation(line: 1301, column: 18, scope: !1741)
!1755 = !DILocation(line: 1302, column: 12, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1741, file: !3, line: 1302, column: 4)
!1757 = !DILocation(line: 1302, column: 9, scope: !1756)
!1758 = !DILocation(line: 1302, column: 17, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1756, file: !3, line: 1302, column: 4)
!1760 = !DILocation(line: 1302, column: 22, scope: !1759)
!1761 = !DILocation(line: 1302, column: 27, scope: !1759)
!1762 = !DILocation(line: 1302, column: 20, scope: !1759)
!1763 = !DILocation(line: 1302, column: 4, scope: !1756)
!1764 = !DILocation(line: 1303, column: 11, scope: !1765)
!1765 = distinct !DILexicalBlock(scope: !1759, file: !3, line: 1302, column: 54)
!1766 = !DILocation(line: 1303, column: 16, scope: !1765)
!1767 = !DILocation(line: 1303, column: 25, scope: !1765)
!1768 = !DILocation(line: 1303, column: 8, scope: !1765)
!1769 = !DILocation(line: 1304, column: 21, scope: !1765)
!1770 = !DILocation(line: 1304, column: 23, scope: !1765)
!1771 = !DILocation(line: 1304, column: 5, scope: !1765)
!1772 = !DILocation(line: 1304, column: 9, scope: !1765)
!1773 = !DILocation(line: 1304, column: 19, scope: !1765)
!1774 = !DILocation(line: 1305, column: 22, scope: !1765)
!1775 = !DILocation(line: 1305, column: 25, scope: !1765)
!1776 = !DILocation(line: 1305, column: 5, scope: !1765)
!1777 = !DILocation(line: 1305, column: 9, scope: !1765)
!1778 = !DILocation(line: 1305, column: 20, scope: !1765)
!1779 = !DILocation(line: 1306, column: 4, scope: !1765)
!1780 = !DILocation(line: 1302, column: 39, scope: !1759)
!1781 = !DILocation(line: 1302, column: 45, scope: !1759)
!1782 = !DILocation(line: 1302, column: 50, scope: !1759)
!1783 = !DILocation(line: 1302, column: 4, scope: !1759)
!1784 = distinct !{!1784, !1763, !1785}
!1785 = !DILocation(line: 1306, column: 4, scope: !1756)
!1786 = !DILocation(line: 1307, column: 3, scope: !1741)
!1787 = !DILocation(line: 1298, column: 42, scope: !1735)
!1788 = !DILocation(line: 1298, column: 47, scope: !1735)
!1789 = !DILocation(line: 1298, column: 3, scope: !1735)
!1790 = distinct !{!1790, !1739, !1791}
!1791 = !DILocation(line: 1307, column: 3, scope: !1731)
!1792 = !DILocation(line: 1308, column: 2, scope: !1725)
!1793 = !DILocation(line: 1296, column: 49, scope: !1722)
!1794 = !DILocation(line: 1296, column: 58, scope: !1722)
!1795 = !DILocation(line: 1296, column: 62, scope: !1722)
!1796 = !DILocation(line: 1296, column: 56, scope: !1722)
!1797 = !DILocation(line: 1296, column: 2, scope: !1722)
!1798 = distinct !{!1798, !1723, !1799}
!1799 = !DILocation(line: 1308, column: 2, scope: !1714)
!1800 = !DILocation(line: 1309, column: 19, scope: !1690)
!1801 = !DILocation(line: 1309, column: 2, scope: !1690)
!1802 = !DILocation(line: 1309, column: 6, scope: !1690)
!1803 = !DILocation(line: 1309, column: 17, scope: !1690)
!1804 = !DILocation(line: 1310, column: 20, scope: !1690)
!1805 = !DILocation(line: 1310, column: 2, scope: !1690)
!1806 = !DILocation(line: 1310, column: 6, scope: !1690)
!1807 = !DILocation(line: 1310, column: 18, scope: !1690)
!1808 = !DILocation(line: 1311, column: 17, scope: !1690)
!1809 = !DILocation(line: 1311, column: 2, scope: !1690)
!1810 = !DILocation(line: 1311, column: 6, scope: !1690)
!1811 = !DILocation(line: 1311, column: 15, scope: !1690)
!1812 = !DILocation(line: 1312, column: 2, scope: !1690)
!1813 = !DILocation(line: 1312, column: 6, scope: !1690)
!1814 = !DILocation(line: 1312, column: 15, scope: !1690)
!1815 = !DILocation(line: 1313, column: 1, scope: !1690)
!1816 = distinct !DISubprogram(name: "countmolstrands", scope: !3, file: !3, line: 552, type: !613, scopeLine: 553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1817 = !DILocalVariable(name: "m", arg: 1, scope: !1816, file: !3, line: 552, type: !22)
!1818 = !DILocation(line: 552, column: 34, scope: !1816)
!1819 = !DILocalVariable(name: "aex", arg: 2, scope: !1816, file: !3, line: 552, type: !238)
!1820 = !DILocation(line: 552, column: 43, scope: !1816)
!1821 = !DILocalVariable(name: "n", scope: !1816, file: !3, line: 554, type: !36)
!1822 = !DILocation(line: 554, column: 6, scope: !1816)
!1823 = !DILocalVariable(name: "sp", scope: !1816, file: !3, line: 555, type: !38)
!1824 = !DILocation(line: 555, column: 12, scope: !1816)
!1825 = !DILocation(line: 557, column: 16, scope: !1816)
!1826 = !DILocation(line: 557, column: 19, scope: !1816)
!1827 = !DILocation(line: 557, column: 2, scope: !1816)
!1828 = !DILocation(line: 558, column: 9, scope: !1829)
!1829 = distinct !DILexicalBlock(scope: !1816, file: !3, line: 558, column: 2)
!1830 = !DILocation(line: 558, column: 19, scope: !1829)
!1831 = !DILocation(line: 558, column: 22, scope: !1829)
!1832 = !DILocation(line: 558, column: 17, scope: !1829)
!1833 = !DILocation(line: 558, column: 7, scope: !1829)
!1834 = !DILocation(line: 558, column: 33, scope: !1835)
!1835 = distinct !DILexicalBlock(scope: !1829, file: !3, line: 558, column: 2)
!1836 = !DILocation(line: 558, column: 2, scope: !1829)
!1837 = !DILocation(line: 559, column: 7, scope: !1838)
!1838 = distinct !DILexicalBlock(scope: !1839, file: !3, line: 559, column: 7)
!1839 = distinct !DILexicalBlock(scope: !1835, file: !3, line: 558, column: 54)
!1840 = !DILocation(line: 559, column: 11, scope: !1838)
!1841 = !DILocation(line: 559, column: 18, scope: !1838)
!1842 = !DILocation(line: 559, column: 7, scope: !1839)
!1843 = !DILocation(line: 560, column: 5, scope: !1838)
!1844 = !DILocation(line: 560, column: 4, scope: !1838)
!1845 = !DILocation(line: 561, column: 2, scope: !1839)
!1846 = !DILocation(line: 558, column: 42, scope: !1835)
!1847 = !DILocation(line: 558, column: 46, scope: !1835)
!1848 = !DILocation(line: 558, column: 40, scope: !1835)
!1849 = !DILocation(line: 558, column: 2, scope: !1835)
!1850 = distinct !{!1850, !1836, !1851}
!1851 = !DILocation(line: 561, column: 2, scope: !1829)
!1852 = !DILocation(line: 562, column: 10, scope: !1816)
!1853 = !DILocation(line: 562, column: 2, scope: !1816)
!1854 = distinct !DISubprogram(name: "countstrandresidues", scope: !3, file: !3, line: 565, type: !1855, scopeLine: 566, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!36, !22, !36}
!1857 = !DILocalVariable(name: "m", arg: 1, scope: !1854, file: !3, line: 565, type: !22)
!1858 = !DILocation(line: 565, column: 38, scope: !1854)
!1859 = !DILocalVariable(name: "strandnum", arg: 2, scope: !1854, file: !3, line: 565, type: !36)
!1860 = !DILocation(line: 565, column: 45, scope: !1854)
!1861 = !DILocalVariable(name: "sp", scope: !1854, file: !3, line: 567, type: !38)
!1862 = !DILocation(line: 567, column: 12, scope: !1854)
!1863 = !DILocalVariable(name: "i", scope: !1854, file: !3, line: 568, type: !36)
!1864 = !DILocation(line: 568, column: 6, scope: !1854)
!1865 = !DILocation(line: 569, column: 9, scope: !1866)
!1866 = distinct !DILexicalBlock(scope: !1854, file: !3, line: 569, column: 2)
!1867 = !DILocation(line: 569, column: 19, scope: !1866)
!1868 = !DILocation(line: 569, column: 22, scope: !1866)
!1869 = !DILocation(line: 569, column: 17, scope: !1866)
!1870 = !DILocation(line: 569, column: 7, scope: !1866)
!1871 = !DILocation(line: 569, column: 34, scope: !1872)
!1872 = distinct !DILexicalBlock(scope: !1866, file: !3, line: 569, column: 2)
!1873 = !DILocation(line: 569, column: 33, scope: !1872)
!1874 = !DILocation(line: 569, column: 38, scope: !1872)
!1875 = !DILocation(line: 569, column: 42, scope: !1872)
!1876 = !DILocation(line: 569, column: 46, scope: !1872)
!1877 = !DILocation(line: 569, column: 44, scope: !1872)
!1878 = !DILocation(line: 0, scope: !1872)
!1879 = !DILocation(line: 569, column: 2, scope: !1866)
!1880 = !DILocation(line: 570, column: 4, scope: !1881)
!1881 = distinct !DILexicalBlock(scope: !1872, file: !3, line: 569, column: 75)
!1882 = !DILocation(line: 571, column: 2, scope: !1881)
!1883 = !DILocation(line: 569, column: 63, scope: !1872)
!1884 = !DILocation(line: 569, column: 67, scope: !1872)
!1885 = !DILocation(line: 569, column: 61, scope: !1872)
!1886 = !DILocation(line: 569, column: 2, scope: !1872)
!1887 = distinct !{!1887, !1879, !1888}
!1888 = !DILocation(line: 571, column: 2, scope: !1866)
!1889 = !DILocation(line: 572, column: 10, scope: !1854)
!1890 = !DILocation(line: 572, column: 14, scope: !1854)
!1891 = !DILocation(line: 572, column: 2, scope: !1854)
!1892 = distinct !DISubprogram(name: "countmolres", scope: !3, file: !3, line: 575, type: !613, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1893 = !DILocalVariable(name: "m", arg: 1, scope: !1892, file: !3, line: 575, type: !22)
!1894 = !DILocation(line: 575, column: 30, scope: !1892)
!1895 = !DILocalVariable(name: "aex", arg: 2, scope: !1892, file: !3, line: 575, type: !238)
!1896 = !DILocation(line: 575, column: 39, scope: !1892)
!1897 = !DILocalVariable(name: "r", scope: !1892, file: !3, line: 577, type: !36)
!1898 = !DILocation(line: 577, column: 6, scope: !1892)
!1899 = !DILocalVariable(name: "n", scope: !1892, file: !3, line: 577, type: !36)
!1900 = !DILocation(line: 577, column: 9, scope: !1892)
!1901 = !DILocalVariable(name: "sp", scope: !1892, file: !3, line: 578, type: !38)
!1902 = !DILocation(line: 578, column: 12, scope: !1892)
!1903 = !DILocalVariable(name: "res", scope: !1892, file: !3, line: 579, type: !56)
!1904 = !DILocation(line: 579, column: 13, scope: !1892)
!1905 = !DILocation(line: 581, column: 16, scope: !1892)
!1906 = !DILocation(line: 581, column: 19, scope: !1892)
!1907 = !DILocation(line: 581, column: 2, scope: !1892)
!1908 = !DILocation(line: 582, column: 9, scope: !1909)
!1909 = distinct !DILexicalBlock(scope: !1892, file: !3, line: 582, column: 2)
!1910 = !DILocation(line: 582, column: 19, scope: !1909)
!1911 = !DILocation(line: 582, column: 22, scope: !1909)
!1912 = !DILocation(line: 582, column: 17, scope: !1909)
!1913 = !DILocation(line: 582, column: 7, scope: !1909)
!1914 = !DILocation(line: 582, column: 33, scope: !1915)
!1915 = distinct !DILexicalBlock(scope: !1909, file: !3, line: 582, column: 2)
!1916 = !DILocation(line: 582, column: 2, scope: !1909)
!1917 = !DILocation(line: 583, column: 10, scope: !1918)
!1918 = distinct !DILexicalBlock(scope: !1919, file: !3, line: 583, column: 3)
!1919 = distinct !DILexicalBlock(scope: !1915, file: !3, line: 582, column: 54)
!1920 = !DILocation(line: 583, column: 8, scope: !1918)
!1921 = !DILocation(line: 583, column: 15, scope: !1922)
!1922 = distinct !DILexicalBlock(scope: !1918, file: !3, line: 583, column: 3)
!1923 = !DILocation(line: 583, column: 19, scope: !1922)
!1924 = !DILocation(line: 583, column: 23, scope: !1922)
!1925 = !DILocation(line: 583, column: 17, scope: !1922)
!1926 = !DILocation(line: 583, column: 3, scope: !1918)
!1927 = !DILocation(line: 584, column: 10, scope: !1928)
!1928 = distinct !DILexicalBlock(scope: !1922, file: !3, line: 583, column: 41)
!1929 = !DILocation(line: 584, column: 14, scope: !1928)
!1930 = !DILocation(line: 584, column: 26, scope: !1928)
!1931 = !DILocation(line: 584, column: 8, scope: !1928)
!1932 = !DILocation(line: 585, column: 8, scope: !1933)
!1933 = distinct !DILexicalBlock(scope: !1928, file: !3, line: 585, column: 8)
!1934 = !DILocation(line: 585, column: 13, scope: !1933)
!1935 = !DILocation(line: 585, column: 20, scope: !1933)
!1936 = !DILocation(line: 585, column: 8, scope: !1928)
!1937 = !DILocation(line: 586, column: 6, scope: !1933)
!1938 = !DILocation(line: 586, column: 5, scope: !1933)
!1939 = !DILocation(line: 587, column: 3, scope: !1928)
!1940 = !DILocation(line: 583, column: 37, scope: !1922)
!1941 = !DILocation(line: 583, column: 3, scope: !1922)
!1942 = distinct !{!1942, !1926, !1943}
!1943 = !DILocation(line: 587, column: 3, scope: !1918)
!1944 = !DILocation(line: 588, column: 2, scope: !1919)
!1945 = !DILocation(line: 582, column: 42, scope: !1915)
!1946 = !DILocation(line: 582, column: 46, scope: !1915)
!1947 = !DILocation(line: 582, column: 40, scope: !1915)
!1948 = !DILocation(line: 582, column: 2, scope: !1915)
!1949 = distinct !{!1949, !1916, !1950}
!1950 = !DILocation(line: 588, column: 2, scope: !1909)
!1951 = !DILocation(line: 589, column: 10, scope: !1892)
!1952 = !DILocation(line: 589, column: 2, scope: !1892)
!1953 = distinct !DISubprogram(name: "countmolatoms", scope: !3, file: !3, line: 592, type: !613, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!1954 = !DILocalVariable(name: "m", arg: 1, scope: !1953, file: !3, line: 592, type: !22)
!1955 = !DILocation(line: 592, column: 32, scope: !1953)
!1956 = !DILocalVariable(name: "aex", arg: 2, scope: !1953, file: !3, line: 592, type: !238)
!1957 = !DILocation(line: 592, column: 41, scope: !1953)
!1958 = !DILocalVariable(name: "r", scope: !1953, file: !3, line: 594, type: !36)
!1959 = !DILocation(line: 594, column: 6, scope: !1953)
!1960 = !DILocalVariable(name: "a", scope: !1953, file: !3, line: 594, type: !36)
!1961 = !DILocation(line: 594, column: 9, scope: !1953)
!1962 = !DILocalVariable(name: "n", scope: !1953, file: !3, line: 594, type: !36)
!1963 = !DILocation(line: 594, column: 12, scope: !1953)
!1964 = !DILocalVariable(name: "sp", scope: !1953, file: !3, line: 595, type: !38)
!1965 = !DILocation(line: 595, column: 12, scope: !1953)
!1966 = !DILocalVariable(name: "res", scope: !1953, file: !3, line: 596, type: !56)
!1967 = !DILocation(line: 596, column: 13, scope: !1953)
!1968 = !DILocalVariable(name: "ap", scope: !1953, file: !3, line: 597, type: !102)
!1969 = !DILocation(line: 597, column: 11, scope: !1953)
!1970 = !DILocation(line: 599, column: 16, scope: !1953)
!1971 = !DILocation(line: 599, column: 19, scope: !1953)
!1972 = !DILocation(line: 599, column: 2, scope: !1953)
!1973 = !DILocation(line: 600, column: 9, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1953, file: !3, line: 600, column: 2)
!1975 = !DILocation(line: 600, column: 19, scope: !1974)
!1976 = !DILocation(line: 600, column: 22, scope: !1974)
!1977 = !DILocation(line: 600, column: 17, scope: !1974)
!1978 = !DILocation(line: 600, column: 7, scope: !1974)
!1979 = !DILocation(line: 600, column: 33, scope: !1980)
!1980 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 600, column: 2)
!1981 = !DILocation(line: 600, column: 2, scope: !1974)
!1982 = !DILocation(line: 601, column: 10, scope: !1983)
!1983 = distinct !DILexicalBlock(scope: !1984, file: !3, line: 601, column: 3)
!1984 = distinct !DILexicalBlock(scope: !1980, file: !3, line: 600, column: 54)
!1985 = !DILocation(line: 601, column: 8, scope: !1983)
!1986 = !DILocation(line: 601, column: 15, scope: !1987)
!1987 = distinct !DILexicalBlock(scope: !1983, file: !3, line: 601, column: 3)
!1988 = !DILocation(line: 601, column: 19, scope: !1987)
!1989 = !DILocation(line: 601, column: 23, scope: !1987)
!1990 = !DILocation(line: 601, column: 17, scope: !1987)
!1991 = !DILocation(line: 601, column: 3, scope: !1983)
!1992 = !DILocation(line: 602, column: 10, scope: !1993)
!1993 = distinct !DILexicalBlock(scope: !1987, file: !3, line: 601, column: 41)
!1994 = !DILocation(line: 602, column: 14, scope: !1993)
!1995 = !DILocation(line: 602, column: 26, scope: !1993)
!1996 = !DILocation(line: 602, column: 8, scope: !1993)
!1997 = !DILocation(line: 603, column: 11, scope: !1998)
!1998 = distinct !DILexicalBlock(scope: !1993, file: !3, line: 603, column: 4)
!1999 = !DILocation(line: 603, column: 9, scope: !1998)
!2000 = !DILocation(line: 603, column: 16, scope: !2001)
!2001 = distinct !DILexicalBlock(scope: !1998, file: !3, line: 603, column: 4)
!2002 = !DILocation(line: 603, column: 20, scope: !2001)
!2003 = !DILocation(line: 603, column: 25, scope: !2001)
!2004 = !DILocation(line: 603, column: 18, scope: !2001)
!2005 = !DILocation(line: 603, column: 4, scope: !1998)
!2006 = !DILocation(line: 604, column: 11, scope: !2007)
!2007 = distinct !DILexicalBlock(scope: !2001, file: !3, line: 603, column: 40)
!2008 = !DILocation(line: 604, column: 16, scope: !2007)
!2009 = !DILocation(line: 604, column: 25, scope: !2007)
!2010 = !DILocation(line: 604, column: 8, scope: !2007)
!2011 = !DILocation(line: 605, column: 9, scope: !2012)
!2012 = distinct !DILexicalBlock(scope: !2007, file: !3, line: 605, column: 9)
!2013 = !DILocation(line: 605, column: 13, scope: !2012)
!2014 = !DILocation(line: 605, column: 20, scope: !2012)
!2015 = !DILocation(line: 605, column: 9, scope: !2007)
!2016 = !DILocation(line: 606, column: 7, scope: !2012)
!2017 = !DILocation(line: 606, column: 6, scope: !2012)
!2018 = !DILocation(line: 607, column: 4, scope: !2007)
!2019 = !DILocation(line: 603, column: 36, scope: !2001)
!2020 = !DILocation(line: 603, column: 4, scope: !2001)
!2021 = distinct !{!2021, !2005, !2022}
!2022 = !DILocation(line: 607, column: 4, scope: !1998)
!2023 = !DILocation(line: 608, column: 3, scope: !1993)
!2024 = !DILocation(line: 601, column: 37, scope: !1987)
!2025 = !DILocation(line: 601, column: 3, scope: !1987)
!2026 = distinct !{!2026, !1991, !2027}
!2027 = !DILocation(line: 608, column: 3, scope: !1983)
!2028 = !DILocation(line: 609, column: 2, scope: !1984)
!2029 = !DILocation(line: 600, column: 42, scope: !1980)
!2030 = !DILocation(line: 600, column: 46, scope: !1980)
!2031 = !DILocation(line: 600, column: 40, scope: !1980)
!2032 = !DILocation(line: 600, column: 2, scope: !1980)
!2033 = distinct !{!2033, !1981, !2034}
!2034 = !DILocation(line: 609, column: 2, scope: !1974)
!2035 = !DILocation(line: 610, column: 10, scope: !1953)
!2036 = !DILocation(line: 610, column: 2, scope: !1953)
!2037 = distinct !DISubprogram(name: "dist", scope: !3, file: !3, line: 613, type: !2038, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!30, !22, !238, !238}
!2040 = !DILocalVariable(name: "m", arg: 1, scope: !2037, file: !3, line: 613, type: !22)
!2041 = !DILocation(line: 613, column: 26, scope: !2037)
!2042 = !DILocalVariable(name: "aex1", arg: 2, scope: !2037, file: !3, line: 613, type: !238)
!2043 = !DILocation(line: 613, column: 34, scope: !2037)
!2044 = !DILocalVariable(name: "aex2", arg: 3, scope: !2037, file: !3, line: 613, type: !238)
!2045 = !DILocation(line: 613, column: 47, scope: !2037)
!2046 = !DILocalVariable(name: "p1", scope: !2037, file: !3, line: 615, type: !127)
!2047 = !DILocation(line: 615, column: 10, scope: !2037)
!2048 = !DILocalVariable(name: "p2", scope: !2037, file: !3, line: 615, type: !127)
!2049 = !DILocation(line: 615, column: 14, scope: !2037)
!2050 = !DILocation(line: 617, column: 12, scope: !2037)
!2051 = !DILocation(line: 617, column: 15, scope: !2037)
!2052 = !DILocation(line: 617, column: 21, scope: !2037)
!2053 = !DILocation(line: 617, column: 2, scope: !2037)
!2054 = !DILocation(line: 618, column: 12, scope: !2037)
!2055 = !DILocation(line: 618, column: 15, scope: !2037)
!2056 = !DILocation(line: 618, column: 21, scope: !2037)
!2057 = !DILocation(line: 618, column: 2, scope: !2037)
!2058 = !DILocation(line: 619, column: 17, scope: !2037)
!2059 = !DILocation(line: 619, column: 21, scope: !2037)
!2060 = !DILocation(line: 619, column: 10, scope: !2037)
!2061 = !DILocation(line: 619, column: 2, scope: !2037)
!2062 = distinct !DISubprogram(name: "distp", scope: !3, file: !3, line: 622, type: !2063, scopeLine: 623, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!30, !180, !180}
!2065 = !DILocalVariable(name: "pi", arg: 1, scope: !2062, file: !3, line: 622, type: !180)
!2066 = !DILocation(line: 622, column: 23, scope: !2062)
!2067 = !DILocalVariable(name: "pj", arg: 2, scope: !2062, file: !3, line: 622, type: !180)
!2068 = !DILocation(line: 622, column: 35, scope: !2062)
!2069 = !DILocalVariable(name: "dx", scope: !2062, file: !3, line: 624, type: !30)
!2070 = !DILocation(line: 624, column: 9, scope: !2062)
!2071 = !DILocalVariable(name: "dy", scope: !2062, file: !3, line: 624, type: !30)
!2072 = !DILocation(line: 624, column: 13, scope: !2062)
!2073 = !DILocalVariable(name: "dz", scope: !2062, file: !3, line: 624, type: !30)
!2074 = !DILocation(line: 624, column: 17, scope: !2062)
!2075 = !DILocation(line: 626, column: 7, scope: !2062)
!2076 = !DILocation(line: 626, column: 17, scope: !2062)
!2077 = !DILocation(line: 626, column: 15, scope: !2062)
!2078 = !DILocation(line: 626, column: 5, scope: !2062)
!2079 = !DILocation(line: 627, column: 7, scope: !2062)
!2080 = !DILocation(line: 627, column: 17, scope: !2062)
!2081 = !DILocation(line: 627, column: 15, scope: !2062)
!2082 = !DILocation(line: 627, column: 5, scope: !2062)
!2083 = !DILocation(line: 628, column: 7, scope: !2062)
!2084 = !DILocation(line: 628, column: 17, scope: !2062)
!2085 = !DILocation(line: 628, column: 15, scope: !2062)
!2086 = !DILocation(line: 628, column: 5, scope: !2062)
!2087 = !DILocation(line: 629, column: 16, scope: !2062)
!2088 = !DILocation(line: 629, column: 21, scope: !2062)
!2089 = !DILocation(line: 629, column: 19, scope: !2062)
!2090 = !DILocation(line: 629, column: 26, scope: !2062)
!2091 = !DILocation(line: 629, column: 31, scope: !2062)
!2092 = !DILocation(line: 629, column: 29, scope: !2062)
!2093 = !DILocation(line: 629, column: 24, scope: !2062)
!2094 = !DILocation(line: 629, column: 36, scope: !2062)
!2095 = !DILocation(line: 629, column: 41, scope: !2062)
!2096 = !DILocation(line: 629, column: 39, scope: !2062)
!2097 = !DILocation(line: 629, column: 34, scope: !2062)
!2098 = !DILocation(line: 629, column: 10, scope: !2062)
!2099 = !DILocation(line: 629, column: 2, scope: !2062)
!2100 = distinct !DISubprogram(name: "angle", scope: !3, file: !3, line: 632, type: !2101, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!30, !22, !238, !238, !238}
!2103 = !DILocalVariable(name: "m", arg: 1, scope: !2100, file: !3, line: 632, type: !22)
!2104 = !DILocation(line: 632, column: 27, scope: !2100)
!2105 = !DILocalVariable(name: "aex1", arg: 2, scope: !2100, file: !3, line: 632, type: !238)
!2106 = !DILocation(line: 632, column: 35, scope: !2100)
!2107 = !DILocalVariable(name: "aex2", arg: 3, scope: !2100, file: !3, line: 632, type: !238)
!2108 = !DILocation(line: 632, column: 48, scope: !2100)
!2109 = !DILocalVariable(name: "aex3", arg: 4, scope: !2100, file: !3, line: 632, type: !238)
!2110 = !DILocation(line: 632, column: 61, scope: !2100)
!2111 = !DILocalVariable(name: "p1", scope: !2100, file: !3, line: 634, type: !127)
!2112 = !DILocation(line: 634, column: 10, scope: !2100)
!2113 = !DILocalVariable(name: "p2", scope: !2100, file: !3, line: 634, type: !127)
!2114 = !DILocation(line: 634, column: 14, scope: !2100)
!2115 = !DILocalVariable(name: "p3", scope: !2100, file: !3, line: 634, type: !127)
!2116 = !DILocation(line: 634, column: 18, scope: !2100)
!2117 = !DILocation(line: 636, column: 12, scope: !2100)
!2118 = !DILocation(line: 636, column: 15, scope: !2100)
!2119 = !DILocation(line: 636, column: 21, scope: !2100)
!2120 = !DILocation(line: 636, column: 2, scope: !2100)
!2121 = !DILocation(line: 637, column: 12, scope: !2100)
!2122 = !DILocation(line: 637, column: 15, scope: !2100)
!2123 = !DILocation(line: 637, column: 21, scope: !2100)
!2124 = !DILocation(line: 637, column: 2, scope: !2100)
!2125 = !DILocation(line: 638, column: 12, scope: !2100)
!2126 = !DILocation(line: 638, column: 15, scope: !2100)
!2127 = !DILocation(line: 638, column: 21, scope: !2100)
!2128 = !DILocation(line: 638, column: 2, scope: !2100)
!2129 = !DILocation(line: 639, column: 18, scope: !2100)
!2130 = !DILocation(line: 639, column: 22, scope: !2100)
!2131 = !DILocation(line: 639, column: 26, scope: !2100)
!2132 = !DILocation(line: 639, column: 10, scope: !2100)
!2133 = !DILocation(line: 639, column: 2, scope: !2100)
!2134 = distinct !DISubprogram(name: "anglep", scope: !3, file: !3, line: 642, type: !2135, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!30, !180, !180, !180}
!2137 = !DILocalVariable(name: "p1", arg: 1, scope: !2134, file: !3, line: 642, type: !180)
!2138 = !DILocation(line: 642, column: 24, scope: !2134)
!2139 = !DILocalVariable(name: "p2", arg: 2, scope: !2134, file: !3, line: 642, type: !180)
!2140 = !DILocation(line: 642, column: 36, scope: !2134)
!2141 = !DILocalVariable(name: "p3", arg: 3, scope: !2134, file: !3, line: 642, type: !180)
!2142 = !DILocation(line: 642, column: 48, scope: !2134)
!2143 = !DILocalVariable(name: "x12", scope: !2134, file: !3, line: 644, type: !30)
!2144 = !DILocation(line: 644, column: 9, scope: !2134)
!2145 = !DILocalVariable(name: "x32", scope: !2134, file: !3, line: 644, type: !30)
!2146 = !DILocation(line: 644, column: 14, scope: !2134)
!2147 = !DILocalVariable(name: "y12", scope: !2134, file: !3, line: 645, type: !30)
!2148 = !DILocation(line: 645, column: 9, scope: !2134)
!2149 = !DILocalVariable(name: "y32", scope: !2134, file: !3, line: 645, type: !30)
!2150 = !DILocation(line: 645, column: 14, scope: !2134)
!2151 = !DILocalVariable(name: "z12", scope: !2134, file: !3, line: 646, type: !30)
!2152 = !DILocation(line: 646, column: 9, scope: !2134)
!2153 = !DILocalVariable(name: "z32", scope: !2134, file: !3, line: 646, type: !30)
!2154 = !DILocation(line: 646, column: 14, scope: !2134)
!2155 = !DILocalVariable(name: "l12", scope: !2134, file: !3, line: 647, type: !30)
!2156 = !DILocation(line: 647, column: 9, scope: !2134)
!2157 = !DILocalVariable(name: "l32", scope: !2134, file: !3, line: 647, type: !30)
!2158 = !DILocation(line: 647, column: 14, scope: !2134)
!2159 = !DILocalVariable(name: "dp", scope: !2134, file: !3, line: 647, type: !30)
!2160 = !DILocation(line: 647, column: 19, scope: !2134)
!2161 = !DILocation(line: 649, column: 8, scope: !2134)
!2162 = !DILocation(line: 649, column: 18, scope: !2134)
!2163 = !DILocation(line: 649, column: 16, scope: !2134)
!2164 = !DILocation(line: 649, column: 6, scope: !2134)
!2165 = !DILocation(line: 650, column: 8, scope: !2134)
!2166 = !DILocation(line: 650, column: 18, scope: !2134)
!2167 = !DILocation(line: 650, column: 16, scope: !2134)
!2168 = !DILocation(line: 650, column: 6, scope: !2134)
!2169 = !DILocation(line: 651, column: 8, scope: !2134)
!2170 = !DILocation(line: 651, column: 18, scope: !2134)
!2171 = !DILocation(line: 651, column: 16, scope: !2134)
!2172 = !DILocation(line: 651, column: 6, scope: !2134)
!2173 = !DILocation(line: 652, column: 8, scope: !2134)
!2174 = !DILocation(line: 652, column: 18, scope: !2134)
!2175 = !DILocation(line: 652, column: 16, scope: !2134)
!2176 = !DILocation(line: 652, column: 6, scope: !2134)
!2177 = !DILocation(line: 653, column: 8, scope: !2134)
!2178 = !DILocation(line: 653, column: 18, scope: !2134)
!2179 = !DILocation(line: 653, column: 16, scope: !2134)
!2180 = !DILocation(line: 653, column: 6, scope: !2134)
!2181 = !DILocation(line: 654, column: 8, scope: !2134)
!2182 = !DILocation(line: 654, column: 18, scope: !2134)
!2183 = !DILocation(line: 654, column: 16, scope: !2134)
!2184 = !DILocation(line: 654, column: 6, scope: !2134)
!2185 = !DILocation(line: 655, column: 14, scope: !2134)
!2186 = !DILocation(line: 655, column: 20, scope: !2134)
!2187 = !DILocation(line: 655, column: 18, scope: !2134)
!2188 = !DILocation(line: 655, column: 26, scope: !2134)
!2189 = !DILocation(line: 655, column: 32, scope: !2134)
!2190 = !DILocation(line: 655, column: 30, scope: !2134)
!2191 = !DILocation(line: 655, column: 24, scope: !2134)
!2192 = !DILocation(line: 655, column: 38, scope: !2134)
!2193 = !DILocation(line: 655, column: 44, scope: !2134)
!2194 = !DILocation(line: 655, column: 42, scope: !2134)
!2195 = !DILocation(line: 655, column: 36, scope: !2134)
!2196 = !DILocation(line: 655, column: 8, scope: !2134)
!2197 = !DILocation(line: 655, column: 6, scope: !2134)
!2198 = !DILocation(line: 656, column: 14, scope: !2134)
!2199 = !DILocation(line: 656, column: 20, scope: !2134)
!2200 = !DILocation(line: 656, column: 18, scope: !2134)
!2201 = !DILocation(line: 656, column: 26, scope: !2134)
!2202 = !DILocation(line: 656, column: 32, scope: !2134)
!2203 = !DILocation(line: 656, column: 30, scope: !2134)
!2204 = !DILocation(line: 656, column: 24, scope: !2134)
!2205 = !DILocation(line: 656, column: 38, scope: !2134)
!2206 = !DILocation(line: 656, column: 44, scope: !2134)
!2207 = !DILocation(line: 656, column: 42, scope: !2134)
!2208 = !DILocation(line: 656, column: 36, scope: !2134)
!2209 = !DILocation(line: 656, column: 8, scope: !2134)
!2210 = !DILocation(line: 656, column: 6, scope: !2134)
!2211 = !DILocation(line: 657, column: 6, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2134, file: !3, line: 657, column: 6)
!2213 = !DILocation(line: 657, column: 10, scope: !2212)
!2214 = !DILocation(line: 657, column: 6, scope: !2134)
!2215 = !DILocation(line: 658, column: 12, scope: !2216)
!2216 = distinct !DILexicalBlock(scope: !2212, file: !3, line: 657, column: 18)
!2217 = !DILocation(line: 658, column: 3, scope: !2216)
!2218 = !DILocation(line: 660, column: 3, scope: !2216)
!2219 = !DILocation(line: 662, column: 6, scope: !2220)
!2220 = distinct !DILexicalBlock(scope: !2134, file: !3, line: 662, column: 6)
!2221 = !DILocation(line: 662, column: 10, scope: !2220)
!2222 = !DILocation(line: 662, column: 6, scope: !2134)
!2223 = !DILocation(line: 663, column: 12, scope: !2224)
!2224 = distinct !DILexicalBlock(scope: !2220, file: !3, line: 662, column: 18)
!2225 = !DILocation(line: 663, column: 3, scope: !2224)
!2226 = !DILocation(line: 665, column: 3, scope: !2224)
!2227 = !DILocation(line: 667, column: 7, scope: !2134)
!2228 = !DILocation(line: 667, column: 13, scope: !2134)
!2229 = !DILocation(line: 667, column: 11, scope: !2134)
!2230 = !DILocation(line: 667, column: 19, scope: !2134)
!2231 = !DILocation(line: 667, column: 25, scope: !2134)
!2232 = !DILocation(line: 667, column: 23, scope: !2134)
!2233 = !DILocation(line: 667, column: 17, scope: !2134)
!2234 = !DILocation(line: 667, column: 31, scope: !2134)
!2235 = !DILocation(line: 667, column: 37, scope: !2134)
!2236 = !DILocation(line: 667, column: 35, scope: !2134)
!2237 = !DILocation(line: 667, column: 29, scope: !2134)
!2238 = !DILocation(line: 667, column: 5, scope: !2134)
!2239 = !DILocation(line: 668, column: 22, scope: !2134)
!2240 = !DILocation(line: 668, column: 29, scope: !2134)
!2241 = !DILocation(line: 668, column: 35, scope: !2134)
!2242 = !DILocation(line: 668, column: 33, scope: !2134)
!2243 = !DILocation(line: 668, column: 25, scope: !2134)
!2244 = !DILocation(line: 668, column: 16, scope: !2134)
!2245 = !DILocation(line: 668, column: 14, scope: !2134)
!2246 = !DILocation(line: 668, column: 2, scope: !2134)
!2247 = !DILocation(line: 669, column: 1, scope: !2134)
!2248 = distinct !DISubprogram(name: "torsion", scope: !3, file: !3, line: 671, type: !2249, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!30, !22, !238, !238, !238, !238}
!2251 = !DILocalVariable(name: "mol", arg: 1, scope: !2248, file: !3, line: 671, type: !22)
!2252 = !DILocation(line: 671, column: 29, scope: !2248)
!2253 = !DILocalVariable(name: "aei", arg: 2, scope: !2248, file: !3, line: 671, type: !238)
!2254 = !DILocation(line: 671, column: 39, scope: !2248)
!2255 = !DILocalVariable(name: "aej", arg: 3, scope: !2248, file: !3, line: 671, type: !238)
!2256 = !DILocation(line: 671, column: 51, scope: !2248)
!2257 = !DILocalVariable(name: "aek", arg: 4, scope: !2248, file: !3, line: 671, type: !238)
!2258 = !DILocation(line: 671, column: 63, scope: !2248)
!2259 = !DILocalVariable(name: "ael", arg: 5, scope: !2248, file: !3, line: 671, type: !238)
!2260 = !DILocation(line: 671, column: 75, scope: !2248)
!2261 = !DILocalVariable(name: "pi", scope: !2248, file: !3, line: 673, type: !127)
!2262 = !DILocation(line: 673, column: 10, scope: !2248)
!2263 = !DILocalVariable(name: "pj", scope: !2248, file: !3, line: 673, type: !127)
!2264 = !DILocation(line: 673, column: 14, scope: !2248)
!2265 = !DILocalVariable(name: "pk", scope: !2248, file: !3, line: 673, type: !127)
!2266 = !DILocation(line: 673, column: 18, scope: !2248)
!2267 = !DILocalVariable(name: "pl", scope: !2248, file: !3, line: 673, type: !127)
!2268 = !DILocation(line: 673, column: 22, scope: !2248)
!2269 = !DILocation(line: 675, column: 12, scope: !2248)
!2270 = !DILocation(line: 675, column: 17, scope: !2248)
!2271 = !DILocation(line: 675, column: 22, scope: !2248)
!2272 = !DILocation(line: 675, column: 2, scope: !2248)
!2273 = !DILocation(line: 676, column: 12, scope: !2248)
!2274 = !DILocation(line: 676, column: 17, scope: !2248)
!2275 = !DILocation(line: 676, column: 22, scope: !2248)
!2276 = !DILocation(line: 676, column: 2, scope: !2248)
!2277 = !DILocation(line: 677, column: 12, scope: !2248)
!2278 = !DILocation(line: 677, column: 17, scope: !2248)
!2279 = !DILocation(line: 677, column: 22, scope: !2248)
!2280 = !DILocation(line: 677, column: 2, scope: !2248)
!2281 = !DILocation(line: 678, column: 12, scope: !2248)
!2282 = !DILocation(line: 678, column: 17, scope: !2248)
!2283 = !DILocation(line: 678, column: 22, scope: !2248)
!2284 = !DILocation(line: 678, column: 2, scope: !2248)
!2285 = !DILocation(line: 680, column: 20, scope: !2248)
!2286 = !DILocation(line: 680, column: 24, scope: !2248)
!2287 = !DILocation(line: 680, column: 28, scope: !2248)
!2288 = !DILocation(line: 680, column: 32, scope: !2248)
!2289 = !DILocation(line: 680, column: 10, scope: !2248)
!2290 = !DILocation(line: 680, column: 2, scope: !2248)
!2291 = distinct !DISubprogram(name: "torsionp", scope: !3, file: !3, line: 683, type: !2292, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!30, !180, !180, !180, !180}
!2294 = !DILocalVariable(name: "pi", arg: 1, scope: !2291, file: !3, line: 683, type: !180)
!2295 = !DILocation(line: 683, column: 26, scope: !2291)
!2296 = !DILocalVariable(name: "pj", arg: 2, scope: !2291, file: !3, line: 683, type: !180)
!2297 = !DILocation(line: 683, column: 38, scope: !2291)
!2298 = !DILocalVariable(name: "pk", arg: 3, scope: !2291, file: !3, line: 683, type: !180)
!2299 = !DILocation(line: 683, column: 50, scope: !2291)
!2300 = !DILocalVariable(name: "pl", arg: 4, scope: !2291, file: !3, line: 683, type: !180)
!2301 = !DILocation(line: 683, column: 62, scope: !2291)
!2302 = !DILocalVariable(name: "xij", scope: !2291, file: !3, line: 685, type: !30)
!2303 = !DILocation(line: 685, column: 9, scope: !2291)
!2304 = !DILocalVariable(name: "yij", scope: !2291, file: !3, line: 685, type: !30)
!2305 = !DILocation(line: 685, column: 14, scope: !2291)
!2306 = !DILocalVariable(name: "zij", scope: !2291, file: !3, line: 685, type: !30)
!2307 = !DILocation(line: 685, column: 19, scope: !2291)
!2308 = !DILocalVariable(name: "xkj", scope: !2291, file: !3, line: 686, type: !30)
!2309 = !DILocation(line: 686, column: 9, scope: !2291)
!2310 = !DILocalVariable(name: "ykj", scope: !2291, file: !3, line: 686, type: !30)
!2311 = !DILocation(line: 686, column: 14, scope: !2291)
!2312 = !DILocalVariable(name: "zkj", scope: !2291, file: !3, line: 686, type: !30)
!2313 = !DILocation(line: 686, column: 19, scope: !2291)
!2314 = !DILocalVariable(name: "xkl", scope: !2291, file: !3, line: 687, type: !30)
!2315 = !DILocation(line: 687, column: 9, scope: !2291)
!2316 = !DILocalVariable(name: "ykl", scope: !2291, file: !3, line: 687, type: !30)
!2317 = !DILocation(line: 687, column: 14, scope: !2291)
!2318 = !DILocalVariable(name: "zkl", scope: !2291, file: !3, line: 687, type: !30)
!2319 = !DILocation(line: 687, column: 19, scope: !2291)
!2320 = !DILocalVariable(name: "dx", scope: !2291, file: !3, line: 688, type: !30)
!2321 = !DILocation(line: 688, column: 9, scope: !2291)
!2322 = !DILocalVariable(name: "dy", scope: !2291, file: !3, line: 688, type: !30)
!2323 = !DILocation(line: 688, column: 13, scope: !2291)
!2324 = !DILocalVariable(name: "dz", scope: !2291, file: !3, line: 688, type: !30)
!2325 = !DILocation(line: 688, column: 17, scope: !2291)
!2326 = !DILocalVariable(name: "gx", scope: !2291, file: !3, line: 689, type: !30)
!2327 = !DILocation(line: 689, column: 9, scope: !2291)
!2328 = !DILocalVariable(name: "gy", scope: !2291, file: !3, line: 689, type: !30)
!2329 = !DILocation(line: 689, column: 13, scope: !2291)
!2330 = !DILocalVariable(name: "gz", scope: !2291, file: !3, line: 689, type: !30)
!2331 = !DILocation(line: 689, column: 17, scope: !2291)
!2332 = !DILocalVariable(name: "bi", scope: !2291, file: !3, line: 690, type: !30)
!2333 = !DILocation(line: 690, column: 9, scope: !2291)
!2334 = !DILocalVariable(name: "bk", scope: !2291, file: !3, line: 690, type: !30)
!2335 = !DILocation(line: 690, column: 13, scope: !2291)
!2336 = !DILocalVariable(name: "ct", scope: !2291, file: !3, line: 691, type: !30)
!2337 = !DILocation(line: 691, column: 9, scope: !2291)
!2338 = !DILocalVariable(name: "d", scope: !2291, file: !3, line: 691, type: !30)
!2339 = !DILocation(line: 691, column: 13, scope: !2291)
!2340 = !DILocalVariable(name: "ap", scope: !2291, file: !3, line: 691, type: !30)
!2341 = !DILocation(line: 691, column: 16, scope: !2291)
!2342 = !DILocalVariable(name: "app", scope: !2291, file: !3, line: 691, type: !30)
!2343 = !DILocation(line: 691, column: 20, scope: !2291)
!2344 = !DILocation(line: 693, column: 8, scope: !2291)
!2345 = !DILocation(line: 693, column: 18, scope: !2291)
!2346 = !DILocation(line: 693, column: 16, scope: !2291)
!2347 = !DILocation(line: 693, column: 6, scope: !2291)
!2348 = !DILocation(line: 694, column: 8, scope: !2291)
!2349 = !DILocation(line: 694, column: 18, scope: !2291)
!2350 = !DILocation(line: 694, column: 16, scope: !2291)
!2351 = !DILocation(line: 694, column: 6, scope: !2291)
!2352 = !DILocation(line: 695, column: 8, scope: !2291)
!2353 = !DILocation(line: 695, column: 18, scope: !2291)
!2354 = !DILocation(line: 695, column: 16, scope: !2291)
!2355 = !DILocation(line: 695, column: 6, scope: !2291)
!2356 = !DILocation(line: 696, column: 8, scope: !2291)
!2357 = !DILocation(line: 696, column: 18, scope: !2291)
!2358 = !DILocation(line: 696, column: 16, scope: !2291)
!2359 = !DILocation(line: 696, column: 6, scope: !2291)
!2360 = !DILocation(line: 697, column: 8, scope: !2291)
!2361 = !DILocation(line: 697, column: 18, scope: !2291)
!2362 = !DILocation(line: 697, column: 16, scope: !2291)
!2363 = !DILocation(line: 697, column: 6, scope: !2291)
!2364 = !DILocation(line: 698, column: 8, scope: !2291)
!2365 = !DILocation(line: 698, column: 18, scope: !2291)
!2366 = !DILocation(line: 698, column: 16, scope: !2291)
!2367 = !DILocation(line: 698, column: 6, scope: !2291)
!2368 = !DILocation(line: 699, column: 8, scope: !2291)
!2369 = !DILocation(line: 699, column: 18, scope: !2291)
!2370 = !DILocation(line: 699, column: 16, scope: !2291)
!2371 = !DILocation(line: 699, column: 6, scope: !2291)
!2372 = !DILocation(line: 700, column: 8, scope: !2291)
!2373 = !DILocation(line: 700, column: 18, scope: !2291)
!2374 = !DILocation(line: 700, column: 16, scope: !2291)
!2375 = !DILocation(line: 700, column: 6, scope: !2291)
!2376 = !DILocation(line: 701, column: 8, scope: !2291)
!2377 = !DILocation(line: 701, column: 18, scope: !2291)
!2378 = !DILocation(line: 701, column: 16, scope: !2291)
!2379 = !DILocation(line: 701, column: 6, scope: !2291)
!2380 = !DILocation(line: 703, column: 7, scope: !2291)
!2381 = !DILocation(line: 703, column: 13, scope: !2291)
!2382 = !DILocation(line: 703, column: 11, scope: !2291)
!2383 = !DILocation(line: 703, column: 19, scope: !2291)
!2384 = !DILocation(line: 703, column: 25, scope: !2291)
!2385 = !DILocation(line: 703, column: 23, scope: !2291)
!2386 = !DILocation(line: 703, column: 17, scope: !2291)
!2387 = !DILocation(line: 703, column: 5, scope: !2291)
!2388 = !DILocation(line: 704, column: 14, scope: !2291)
!2389 = !DILocation(line: 704, column: 20, scope: !2291)
!2390 = !DILocation(line: 704, column: 18, scope: !2291)
!2391 = !DILocation(line: 704, column: 26, scope: !2291)
!2392 = !DILocation(line: 704, column: 32, scope: !2291)
!2393 = !DILocation(line: 704, column: 30, scope: !2291)
!2394 = !DILocation(line: 704, column: 24, scope: !2291)
!2395 = !DILocation(line: 704, column: 12, scope: !2291)
!2396 = !DILocation(line: 705, column: 14, scope: !2291)
!2397 = !DILocation(line: 705, column: 20, scope: !2291)
!2398 = !DILocation(line: 705, column: 18, scope: !2291)
!2399 = !DILocation(line: 705, column: 26, scope: !2291)
!2400 = !DILocation(line: 705, column: 32, scope: !2291)
!2401 = !DILocation(line: 705, column: 30, scope: !2291)
!2402 = !DILocation(line: 705, column: 24, scope: !2291)
!2403 = !DILocation(line: 705, column: 12, scope: !2291)
!2404 = !DILocation(line: 706, column: 14, scope: !2291)
!2405 = !DILocation(line: 706, column: 20, scope: !2291)
!2406 = !DILocation(line: 706, column: 18, scope: !2291)
!2407 = !DILocation(line: 706, column: 26, scope: !2291)
!2408 = !DILocation(line: 706, column: 32, scope: !2291)
!2409 = !DILocation(line: 706, column: 30, scope: !2291)
!2410 = !DILocation(line: 706, column: 24, scope: !2291)
!2411 = !DILocation(line: 706, column: 12, scope: !2291)
!2412 = !DILocation(line: 707, column: 14, scope: !2291)
!2413 = !DILocation(line: 707, column: 20, scope: !2291)
!2414 = !DILocation(line: 707, column: 18, scope: !2291)
!2415 = !DILocation(line: 707, column: 26, scope: !2291)
!2416 = !DILocation(line: 707, column: 32, scope: !2291)
!2417 = !DILocation(line: 707, column: 30, scope: !2291)
!2418 = !DILocation(line: 707, column: 24, scope: !2291)
!2419 = !DILocation(line: 707, column: 12, scope: !2291)
!2420 = !DILocation(line: 708, column: 14, scope: !2291)
!2421 = !DILocation(line: 708, column: 20, scope: !2291)
!2422 = !DILocation(line: 708, column: 18, scope: !2291)
!2423 = !DILocation(line: 708, column: 26, scope: !2291)
!2424 = !DILocation(line: 708, column: 32, scope: !2291)
!2425 = !DILocation(line: 708, column: 30, scope: !2291)
!2426 = !DILocation(line: 708, column: 24, scope: !2291)
!2427 = !DILocation(line: 708, column: 12, scope: !2291)
!2428 = !DILocation(line: 710, column: 14, scope: !2291)
!2429 = !DILocation(line: 710, column: 19, scope: !2291)
!2430 = !DILocation(line: 710, column: 17, scope: !2291)
!2431 = !DILocation(line: 710, column: 24, scope: !2291)
!2432 = !DILocation(line: 710, column: 29, scope: !2291)
!2433 = !DILocation(line: 710, column: 27, scope: !2291)
!2434 = !DILocation(line: 710, column: 22, scope: !2291)
!2435 = !DILocation(line: 710, column: 34, scope: !2291)
!2436 = !DILocation(line: 710, column: 39, scope: !2291)
!2437 = !DILocation(line: 710, column: 37, scope: !2291)
!2438 = !DILocation(line: 710, column: 32, scope: !2291)
!2439 = !DILocation(line: 710, column: 12, scope: !2291)
!2440 = !DILocation(line: 711, column: 14, scope: !2291)
!2441 = !DILocation(line: 711, column: 19, scope: !2291)
!2442 = !DILocation(line: 711, column: 17, scope: !2291)
!2443 = !DILocation(line: 711, column: 24, scope: !2291)
!2444 = !DILocation(line: 711, column: 29, scope: !2291)
!2445 = !DILocation(line: 711, column: 27, scope: !2291)
!2446 = !DILocation(line: 711, column: 22, scope: !2291)
!2447 = !DILocation(line: 711, column: 34, scope: !2291)
!2448 = !DILocation(line: 711, column: 39, scope: !2291)
!2449 = !DILocation(line: 711, column: 37, scope: !2291)
!2450 = !DILocation(line: 711, column: 32, scope: !2291)
!2451 = !DILocation(line: 711, column: 12, scope: !2291)
!2452 = !DILocation(line: 712, column: 14, scope: !2291)
!2453 = !DILocation(line: 712, column: 19, scope: !2291)
!2454 = !DILocation(line: 712, column: 17, scope: !2291)
!2455 = !DILocation(line: 712, column: 24, scope: !2291)
!2456 = !DILocation(line: 712, column: 29, scope: !2291)
!2457 = !DILocation(line: 712, column: 27, scope: !2291)
!2458 = !DILocation(line: 712, column: 22, scope: !2291)
!2459 = !DILocation(line: 712, column: 34, scope: !2291)
!2460 = !DILocation(line: 712, column: 39, scope: !2291)
!2461 = !DILocation(line: 712, column: 37, scope: !2291)
!2462 = !DILocation(line: 712, column: 32, scope: !2291)
!2463 = !DILocation(line: 712, column: 12, scope: !2291)
!2464 = !DILocation(line: 713, column: 14, scope: !2291)
!2465 = !DILocation(line: 713, column: 25, scope: !2291)
!2466 = !DILocation(line: 713, column: 30, scope: !2291)
!2467 = !DILocation(line: 713, column: 28, scope: !2291)
!2468 = !DILocation(line: 713, column: 19, scope: !2291)
!2469 = !DILocation(line: 713, column: 17, scope: !2291)
!2470 = !DILocation(line: 713, column: 12, scope: !2291)
!2471 = !DILocation(line: 714, column: 13, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 714, column: 13)
!2473 = !DILocation(line: 714, column: 16, scope: !2472)
!2474 = !DILocation(line: 714, column: 13, scope: !2291)
!2475 = !DILocation(line: 715, column: 6, scope: !2472)
!2476 = !DILocation(line: 715, column: 3, scope: !2472)
!2477 = !DILocation(line: 716, column: 18, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 716, column: 18)
!2479 = !DILocation(line: 716, column: 21, scope: !2478)
!2480 = !DILocation(line: 716, column: 18, scope: !2472)
!2481 = !DILocation(line: 717, column: 6, scope: !2478)
!2482 = !DILocation(line: 717, column: 3, scope: !2478)
!2483 = !DILocation(line: 719, column: 13, scope: !2291)
!2484 = !DILocation(line: 719, column: 7, scope: !2291)
!2485 = !DILocation(line: 719, column: 5, scope: !2291)
!2486 = !DILocation(line: 720, column: 7, scope: !2291)
!2487 = !DILocation(line: 720, column: 12, scope: !2291)
!2488 = !DILocation(line: 720, column: 15, scope: !2291)
!2489 = !DILocation(line: 720, column: 14, scope: !2291)
!2490 = !DILocation(line: 720, column: 18, scope: !2291)
!2491 = !DILocation(line: 720, column: 21, scope: !2291)
!2492 = !DILocation(line: 720, column: 20, scope: !2291)
!2493 = !DILocation(line: 720, column: 17, scope: !2291)
!2494 = !DILocation(line: 720, column: 10, scope: !2291)
!2495 = !DILocation(line: 720, column: 27, scope: !2291)
!2496 = !DILocation(line: 720, column: 32, scope: !2291)
!2497 = !DILocation(line: 720, column: 35, scope: !2291)
!2498 = !DILocation(line: 720, column: 34, scope: !2291)
!2499 = !DILocation(line: 720, column: 38, scope: !2291)
!2500 = !DILocation(line: 720, column: 41, scope: !2291)
!2501 = !DILocation(line: 720, column: 40, scope: !2291)
!2502 = !DILocation(line: 720, column: 37, scope: !2291)
!2503 = !DILocation(line: 720, column: 30, scope: !2291)
!2504 = !DILocation(line: 720, column: 25, scope: !2291)
!2505 = !DILocation(line: 720, column: 47, scope: !2291)
!2506 = !DILocation(line: 720, column: 52, scope: !2291)
!2507 = !DILocation(line: 720, column: 55, scope: !2291)
!2508 = !DILocation(line: 720, column: 54, scope: !2291)
!2509 = !DILocation(line: 720, column: 58, scope: !2291)
!2510 = !DILocation(line: 720, column: 61, scope: !2291)
!2511 = !DILocation(line: 720, column: 60, scope: !2291)
!2512 = !DILocation(line: 720, column: 57, scope: !2291)
!2513 = !DILocation(line: 720, column: 50, scope: !2291)
!2514 = !DILocation(line: 720, column: 45, scope: !2291)
!2515 = !DILocation(line: 720, column: 5, scope: !2291)
!2516 = !DILocation(line: 721, column: 13, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 721, column: 13)
!2518 = !DILocation(line: 721, column: 15, scope: !2517)
!2519 = !DILocation(line: 721, column: 13, scope: !2291)
!2520 = !DILocation(line: 722, column: 9, scope: !2517)
!2521 = !DILocation(line: 722, column: 8, scope: !2517)
!2522 = !DILocation(line: 722, column: 6, scope: !2517)
!2523 = !DILocation(line: 722, column: 3, scope: !2517)
!2524 = !DILocation(line: 723, column: 19, scope: !2291)
!2525 = !DILocation(line: 723, column: 17, scope: !2291)
!2526 = !DILocation(line: 723, column: 12, scope: !2291)
!2527 = !DILocation(line: 724, column: 16, scope: !2291)
!2528 = !DILocation(line: 724, column: 14, scope: !2291)
!2529 = !DILocation(line: 724, column: 19, scope: !2291)
!2530 = !DILocation(line: 724, column: 6, scope: !2291)
!2531 = !DILocation(line: 725, column: 6, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2291, file: !3, line: 725, column: 6)
!2533 = !DILocation(line: 725, column: 10, scope: !2532)
!2534 = !DILocation(line: 725, column: 6, scope: !2291)
!2535 = !DILocation(line: 726, column: 9, scope: !2532)
!2536 = !DILocation(line: 726, column: 13, scope: !2532)
!2537 = !DILocation(line: 726, column: 7, scope: !2532)
!2538 = !DILocation(line: 726, column: 3, scope: !2532)
!2539 = !DILocation(line: 728, column: 10, scope: !2291)
!2540 = !DILocation(line: 728, column: 2, scope: !2291)
!2541 = !DILocalVariable(name: "res", arg: 1, scope: !249, file: !3, line: 731, type: !56)
!2542 = !DILocation(line: 731, column: 30, scope: !249)
!2543 = !DILocation(line: 735, column: 26, scope: !2544)
!2544 = distinct !DILexicalBlock(scope: !249, file: !3, line: 735, column: 6)
!2545 = !DILocation(line: 735, column: 14, scope: !2544)
!2546 = !DILocation(line: 735, column: 63, scope: !2544)
!2547 = !DILocation(line: 735, column: 6, scope: !249)
!2548 = !DILocation(line: 736, column: 3, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2544, file: !3, line: 735, column: 72)
!2550 = !DILocation(line: 738, column: 10, scope: !249)
!2551 = !DILocation(line: 738, column: 17, scope: !249)
!2552 = !DILocation(line: 738, column: 22, scope: !249)
!2553 = !DILocation(line: 738, column: 2, scope: !249)
!2554 = !DILocation(line: 739, column: 10, scope: !249)
!2555 = !DILocation(line: 739, column: 2, scope: !249)
!2556 = !DILocation(line: 740, column: 1, scope: !249)
!2557 = distinct !DISubprogram(name: "cap", scope: !3, file: !3, line: 742, type: !2558, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!36, !22, !238, !36, !36}
!2560 = !DILocalVariable(name: "mol", arg: 1, scope: !2557, file: !3, line: 742, type: !22)
!2561 = !DILocation(line: 742, column: 22, scope: !2557)
!2562 = !DILocalVariable(name: "aex", arg: 2, scope: !2557, file: !3, line: 742, type: !238)
!2563 = !DILocation(line: 742, column: 33, scope: !2557)
!2564 = !DILocalVariable(name: "five", arg: 3, scope: !2557, file: !3, line: 742, type: !36)
!2565 = !DILocation(line: 742, column: 42, scope: !2557)
!2566 = !DILocalVariable(name: "three", arg: 4, scope: !2557, file: !3, line: 742, type: !36)
!2567 = !DILocation(line: 742, column: 52, scope: !2557)
!2568 = !DILocalVariable(name: "sp", scope: !2557, file: !3, line: 744, type: !38)
!2569 = !DILocation(line: 744, column: 12, scope: !2557)
!2570 = !DILocation(line: 746, column: 16, scope: !2557)
!2571 = !DILocation(line: 746, column: 21, scope: !2557)
!2572 = !DILocation(line: 746, column: 2, scope: !2557)
!2573 = !DILocation(line: 747, column: 12, scope: !2574)
!2574 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 747, column: 2)
!2575 = !DILocation(line: 747, column: 17, scope: !2574)
!2576 = !DILocation(line: 747, column: 10, scope: !2574)
!2577 = !DILocation(line: 747, column: 7, scope: !2574)
!2578 = !DILocation(line: 747, column: 28, scope: !2579)
!2579 = distinct !DILexicalBlock(scope: !2574, file: !3, line: 747, column: 2)
!2580 = !DILocation(line: 747, column: 2, scope: !2574)
!2581 = !DILocation(line: 748, column: 7, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2583, file: !3, line: 748, column: 7)
!2583 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 747, column: 49)
!2584 = !DILocation(line: 748, column: 11, scope: !2582)
!2585 = !DILocation(line: 748, column: 23, scope: !2582)
!2586 = !DILocation(line: 748, column: 27, scope: !2582)
!2587 = !DILocation(line: 748, column: 32, scope: !2582)
!2588 = !DILocation(line: 748, column: 36, scope: !2582)
!2589 = !DILocation(line: 748, column: 43, scope: !2582)
!2590 = !DILocation(line: 748, column: 7, scope: !2583)
!2591 = !DILocation(line: 749, column: 8, scope: !2592)
!2592 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 749, column: 8)
!2593 = distinct !DILexicalBlock(scope: !2582, file: !3, line: 748, column: 58)
!2594 = !DILocation(line: 749, column: 8, scope: !2593)
!2595 = !DILocation(line: 750, column: 15, scope: !2592)
!2596 = !DILocation(line: 750, column: 19, scope: !2592)
!2597 = !DILocation(line: 750, column: 5, scope: !2592)
!2598 = !DILocation(line: 751, column: 8, scope: !2599)
!2599 = distinct !DILexicalBlock(scope: !2593, file: !3, line: 751, column: 8)
!2600 = !DILocation(line: 751, column: 8, scope: !2593)
!2601 = !DILocation(line: 752, column: 16, scope: !2599)
!2602 = !DILocation(line: 752, column: 20, scope: !2599)
!2603 = !DILocation(line: 752, column: 31, scope: !2599)
!2604 = !DILocation(line: 752, column: 35, scope: !2599)
!2605 = !DILocation(line: 752, column: 46, scope: !2599)
!2606 = !DILocation(line: 752, column: 5, scope: !2599)
!2607 = !DILocation(line: 753, column: 3, scope: !2593)
!2608 = !DILocation(line: 754, column: 2, scope: !2583)
!2609 = !DILocation(line: 747, column: 37, scope: !2579)
!2610 = !DILocation(line: 747, column: 41, scope: !2579)
!2611 = !DILocation(line: 747, column: 35, scope: !2579)
!2612 = !DILocation(line: 747, column: 2, scope: !2579)
!2613 = distinct !{!2613, !2580, !2614}
!2614 = !DILocation(line: 754, column: 2, scope: !2574)
!2615 = !DILocation(line: 755, column: 2, scope: !2557)
!2616 = !DILocation(line: 755, column: 7, scope: !2557)
!2617 = !DILocation(line: 755, column: 16, scope: !2557)
!2618 = !DILocation(line: 756, column: 2, scope: !2557)
!2619 = distinct !DISubprogram(name: "cvt_p2hb", scope: !3, file: !3, line: 1650, type: !2620, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{null, !56}
!2622 = !DILocalVariable(name: "res", arg: 1, scope: !2619, file: !3, line: 1650, type: !56)
!2623 = !DILocation(line: 1650, column: 34, scope: !2619)
!2624 = !DILocalVariable(name: "p", scope: !2619, file: !3, line: 1652, type: !36)
!2625 = !DILocation(line: 1652, column: 6, scope: !2619)
!2626 = !DILocalVariable(name: "o5", scope: !2619, file: !3, line: 1652, type: !36)
!2627 = !DILocation(line: 1652, column: 9, scope: !2619)
!2628 = !DILocalVariable(name: "oxp", scope: !2619, file: !3, line: 1652, type: !36)
!2629 = !DILocation(line: 1652, column: 13, scope: !2619)
!2630 = !DILocalVariable(name: "dx", scope: !2619, file: !3, line: 1653, type: !30)
!2631 = !DILocation(line: 1653, column: 9, scope: !2619)
!2632 = !DILocalVariable(name: "dy", scope: !2619, file: !3, line: 1653, type: !30)
!2633 = !DILocation(line: 1653, column: 13, scope: !2619)
!2634 = !DILocalVariable(name: "dz", scope: !2619, file: !3, line: 1653, type: !30)
!2635 = !DILocation(line: 1653, column: 17, scope: !2619)
!2636 = !DILocalVariable(name: "f", scope: !2619, file: !3, line: 1653, type: !30)
!2637 = !DILocation(line: 1653, column: 21, scope: !2619)
!2638 = !DILocalVariable(name: "ap", scope: !2619, file: !3, line: 1654, type: !102)
!2639 = !DILocation(line: 1654, column: 10, scope: !2619)
!2640 = !DILocation(line: 1656, column: 17, scope: !2619)
!2641 = !DILocation(line: 1656, column: 6, scope: !2619)
!2642 = !DILocation(line: 1656, column: 4, scope: !2619)
!2643 = !DILocation(line: 1657, column: 24, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 1657, column: 6)
!2645 = !DILocation(line: 1657, column: 13, scope: !2644)
!2646 = !DILocation(line: 1657, column: 11, scope: !2644)
!2647 = !DILocation(line: 1657, column: 39, scope: !2644)
!2648 = !DILocation(line: 1657, column: 6, scope: !2619)
!2649 = !DILocation(line: 1658, column: 19, scope: !2644)
!2650 = !DILocation(line: 1658, column: 8, scope: !2644)
!2651 = !DILocation(line: 1658, column: 6, scope: !2644)
!2652 = !DILocation(line: 1658, column: 3, scope: !2644)
!2653 = !DILocation(line: 1660, column: 6, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 1660, column: 6)
!2655 = !DILocation(line: 1660, column: 9, scope: !2654)
!2656 = !DILocation(line: 1660, column: 6, scope: !2619)
!2657 = !DILocation(line: 1661, column: 3, scope: !2654)
!2658 = !DILocation(line: 1662, column: 11, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2654, file: !3, line: 1662, column: 11)
!2660 = !DILocation(line: 1662, column: 13, scope: !2659)
!2661 = !DILocation(line: 1662, column: 11, scope: !2654)
!2662 = !DILocation(line: 1663, column: 26, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1663, column: 7)
!2664 = distinct !DILexicalBlock(scope: !2659, file: !3, line: 1662, column: 23)
!2665 = !DILocation(line: 1663, column: 15, scope: !2663)
!2666 = !DILocation(line: 1663, column: 13, scope: !2663)
!2667 = !DILocation(line: 1663, column: 41, scope: !2663)
!2668 = !DILocation(line: 1663, column: 7, scope: !2664)
!2669 = !DILocation(line: 1664, column: 27, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 1664, column: 8)
!2671 = distinct !DILexicalBlock(scope: !2663, file: !3, line: 1663, column: 51)
!2672 = !DILocation(line: 1664, column: 16, scope: !2670)
!2673 = !DILocation(line: 1664, column: 14, scope: !2670)
!2674 = !DILocation(line: 1664, column: 42, scope: !2670)
!2675 = !DILocation(line: 1664, column: 8, scope: !2671)
!2676 = !DILocation(line: 1665, column: 18, scope: !2670)
!2677 = !DILocation(line: 1665, column: 23, scope: !2670)
!2678 = !DILocation(line: 1665, column: 5, scope: !2670)
!2679 = !DILocation(line: 1666, column: 3, scope: !2671)
!2680 = !DILocation(line: 1667, column: 17, scope: !2663)
!2681 = !DILocation(line: 1667, column: 22, scope: !2663)
!2682 = !DILocation(line: 1667, column: 4, scope: !2663)
!2683 = !DILocation(line: 1668, column: 26, scope: !2684)
!2684 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1668, column: 7)
!2685 = !DILocation(line: 1668, column: 15, scope: !2684)
!2686 = !DILocation(line: 1668, column: 13, scope: !2684)
!2687 = !DILocation(line: 1668, column: 41, scope: !2684)
!2688 = !DILocation(line: 1668, column: 7, scope: !2664)
!2689 = !DILocation(line: 1669, column: 27, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2691, file: !3, line: 1669, column: 8)
!2691 = distinct !DILexicalBlock(scope: !2684, file: !3, line: 1668, column: 51)
!2692 = !DILocation(line: 1669, column: 16, scope: !2690)
!2693 = !DILocation(line: 1669, column: 14, scope: !2690)
!2694 = !DILocation(line: 1669, column: 42, scope: !2690)
!2695 = !DILocation(line: 1669, column: 8, scope: !2691)
!2696 = !DILocation(line: 1670, column: 18, scope: !2690)
!2697 = !DILocation(line: 1670, column: 23, scope: !2690)
!2698 = !DILocation(line: 1670, column: 5, scope: !2690)
!2699 = !DILocation(line: 1671, column: 3, scope: !2691)
!2700 = !DILocation(line: 1672, column: 17, scope: !2684)
!2701 = !DILocation(line: 1672, column: 22, scope: !2684)
!2702 = !DILocation(line: 1672, column: 4, scope: !2684)
!2703 = !DILocation(line: 1673, column: 9, scope: !2664)
!2704 = !DILocation(line: 1673, column: 14, scope: !2664)
!2705 = !DILocation(line: 1673, column: 23, scope: !2664)
!2706 = !DILocation(line: 1673, column: 6, scope: !2664)
!2707 = !DILocation(line: 1674, column: 11, scope: !2664)
!2708 = !DILocation(line: 1674, column: 15, scope: !2664)
!2709 = !DILocation(line: 1674, column: 3, scope: !2664)
!2710 = !DILocation(line: 1675, column: 25, scope: !2711)
!2711 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 1675, column: 7)
!2712 = !DILocation(line: 1675, column: 14, scope: !2711)
!2713 = !DILocation(line: 1675, column: 12, scope: !2711)
!2714 = !DILocation(line: 1675, column: 40, scope: !2711)
!2715 = !DILocation(line: 1675, column: 7, scope: !2664)
!2716 = !DILocation(line: 1676, column: 20, scope: !2711)
!2717 = !DILocation(line: 1676, column: 9, scope: !2711)
!2718 = !DILocation(line: 1676, column: 7, scope: !2711)
!2719 = !DILocation(line: 1676, column: 4, scope: !2711)
!2720 = !DILocation(line: 1678, column: 8, scope: !2664)
!2721 = !DILocation(line: 1678, column: 13, scope: !2664)
!2722 = !DILocation(line: 1678, column: 22, scope: !2664)
!2723 = !DILocation(line: 1678, column: 26, scope: !2664)
!2724 = !DILocation(line: 1679, column: 4, scope: !2664)
!2725 = !DILocation(line: 1679, column: 9, scope: !2664)
!2726 = !DILocation(line: 1679, column: 18, scope: !2664)
!2727 = !DILocation(line: 1679, column: 23, scope: !2664)
!2728 = !DILocation(line: 1678, column: 37, scope: !2664)
!2729 = !DILocation(line: 1678, column: 6, scope: !2664)
!2730 = !DILocation(line: 1680, column: 8, scope: !2664)
!2731 = !DILocation(line: 1680, column: 13, scope: !2664)
!2732 = !DILocation(line: 1680, column: 22, scope: !2664)
!2733 = !DILocation(line: 1680, column: 26, scope: !2664)
!2734 = !DILocation(line: 1681, column: 4, scope: !2664)
!2735 = !DILocation(line: 1681, column: 9, scope: !2664)
!2736 = !DILocation(line: 1681, column: 18, scope: !2664)
!2737 = !DILocation(line: 1681, column: 23, scope: !2664)
!2738 = !DILocation(line: 1680, column: 37, scope: !2664)
!2739 = !DILocation(line: 1680, column: 6, scope: !2664)
!2740 = !DILocation(line: 1682, column: 8, scope: !2664)
!2741 = !DILocation(line: 1682, column: 13, scope: !2664)
!2742 = !DILocation(line: 1682, column: 22, scope: !2664)
!2743 = !DILocation(line: 1682, column: 26, scope: !2664)
!2744 = !DILocation(line: 1683, column: 4, scope: !2664)
!2745 = !DILocation(line: 1683, column: 9, scope: !2664)
!2746 = !DILocation(line: 1683, column: 18, scope: !2664)
!2747 = !DILocation(line: 1683, column: 23, scope: !2664)
!2748 = !DILocation(line: 1682, column: 37, scope: !2664)
!2749 = !DILocation(line: 1682, column: 6, scope: !2664)
!2750 = !DILocation(line: 1684, column: 24, scope: !2664)
!2751 = !DILocation(line: 1684, column: 29, scope: !2664)
!2752 = !DILocation(line: 1684, column: 27, scope: !2664)
!2753 = !DILocation(line: 1684, column: 34, scope: !2664)
!2754 = !DILocation(line: 1684, column: 39, scope: !2664)
!2755 = !DILocation(line: 1684, column: 37, scope: !2664)
!2756 = !DILocation(line: 1684, column: 32, scope: !2664)
!2757 = !DILocation(line: 1684, column: 44, scope: !2664)
!2758 = !DILocation(line: 1684, column: 49, scope: !2664)
!2759 = !DILocation(line: 1684, column: 47, scope: !2664)
!2760 = !DILocation(line: 1684, column: 42, scope: !2664)
!2761 = !DILocation(line: 1684, column: 18, scope: !2664)
!2762 = !DILocation(line: 1684, column: 16, scope: !2664)
!2763 = !DILocation(line: 1684, column: 5, scope: !2664)
!2764 = !DILocation(line: 1685, column: 34, scope: !2664)
!2765 = !DILocation(line: 1685, column: 38, scope: !2664)
!2766 = !DILocation(line: 1685, column: 36, scope: !2664)
!2767 = !DILocation(line: 1686, column: 4, scope: !2664)
!2768 = !DILocation(line: 1686, column: 9, scope: !2664)
!2769 = !DILocation(line: 1686, column: 18, scope: !2664)
!2770 = !DILocation(line: 1686, column: 23, scope: !2664)
!2771 = !DILocation(line: 1685, column: 41, scope: !2664)
!2772 = !DILocation(line: 1685, column: 3, scope: !2664)
!2773 = !DILocation(line: 1685, column: 8, scope: !2664)
!2774 = !DILocation(line: 1685, column: 17, scope: !2664)
!2775 = !DILocation(line: 1685, column: 21, scope: !2664)
!2776 = !DILocation(line: 1685, column: 32, scope: !2664)
!2777 = !DILocation(line: 1687, column: 34, scope: !2664)
!2778 = !DILocation(line: 1687, column: 38, scope: !2664)
!2779 = !DILocation(line: 1687, column: 36, scope: !2664)
!2780 = !DILocation(line: 1688, column: 4, scope: !2664)
!2781 = !DILocation(line: 1688, column: 9, scope: !2664)
!2782 = !DILocation(line: 1688, column: 18, scope: !2664)
!2783 = !DILocation(line: 1688, column: 23, scope: !2664)
!2784 = !DILocation(line: 1687, column: 41, scope: !2664)
!2785 = !DILocation(line: 1687, column: 3, scope: !2664)
!2786 = !DILocation(line: 1687, column: 8, scope: !2664)
!2787 = !DILocation(line: 1687, column: 17, scope: !2664)
!2788 = !DILocation(line: 1687, column: 21, scope: !2664)
!2789 = !DILocation(line: 1687, column: 32, scope: !2664)
!2790 = !DILocation(line: 1689, column: 34, scope: !2664)
!2791 = !DILocation(line: 1689, column: 38, scope: !2664)
!2792 = !DILocation(line: 1689, column: 36, scope: !2664)
!2793 = !DILocation(line: 1690, column: 4, scope: !2664)
!2794 = !DILocation(line: 1690, column: 9, scope: !2664)
!2795 = !DILocation(line: 1690, column: 18, scope: !2664)
!2796 = !DILocation(line: 1690, column: 23, scope: !2664)
!2797 = !DILocation(line: 1689, column: 41, scope: !2664)
!2798 = !DILocation(line: 1689, column: 3, scope: !2664)
!2799 = !DILocation(line: 1689, column: 8, scope: !2664)
!2800 = !DILocation(line: 1689, column: 17, scope: !2664)
!2801 = !DILocation(line: 1689, column: 21, scope: !2664)
!2802 = !DILocation(line: 1689, column: 32, scope: !2664)
!2803 = !DILocation(line: 1691, column: 2, scope: !2664)
!2804 = !DILocation(line: 1692, column: 1, scope: !2619)
!2805 = distinct !DISubprogram(name: "add_he2o3", scope: !3, file: !3, line: 1694, type: !2620, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!2806 = !DILocalVariable(name: "res", arg: 1, scope: !2805, file: !3, line: 1694, type: !56)
!2807 = !DILocation(line: 1694, column: 35, scope: !2805)
!2808 = !DILocalVariable(name: "c3", scope: !2805, file: !3, line: 1696, type: !36)
!2809 = !DILocation(line: 1696, column: 6, scope: !2805)
!2810 = !DILocalVariable(name: "o3", scope: !2805, file: !3, line: 1696, type: !36)
!2811 = !DILocation(line: 1696, column: 10, scope: !2805)
!2812 = !DILocalVariable(name: "he", scope: !2805, file: !3, line: 1696, type: !36)
!2813 = !DILocation(line: 1696, column: 14, scope: !2805)
!2814 = !DILocalVariable(name: "dx", scope: !2805, file: !3, line: 1697, type: !30)
!2815 = !DILocation(line: 1697, column: 9, scope: !2805)
!2816 = !DILocalVariable(name: "dy", scope: !2805, file: !3, line: 1697, type: !30)
!2817 = !DILocation(line: 1697, column: 13, scope: !2805)
!2818 = !DILocalVariable(name: "dz", scope: !2805, file: !3, line: 1697, type: !30)
!2819 = !DILocation(line: 1697, column: 17, scope: !2805)
!2820 = !DILocalVariable(name: "dist", scope: !2805, file: !3, line: 1697, type: !30)
!2821 = !DILocation(line: 1697, column: 21, scope: !2805)
!2822 = !DILocalVariable(name: "cx", scope: !2805, file: !3, line: 1698, type: !30)
!2823 = !DILocation(line: 1698, column: 9, scope: !2805)
!2824 = !DILocalVariable(name: "cy", scope: !2805, file: !3, line: 1698, type: !30)
!2825 = !DILocation(line: 1698, column: 13, scope: !2805)
!2826 = !DILocalVariable(name: "cz", scope: !2805, file: !3, line: 1698, type: !30)
!2827 = !DILocation(line: 1698, column: 17, scope: !2805)
!2828 = !DILocalVariable(name: "sx", scope: !2805, file: !3, line: 1699, type: !30)
!2829 = !DILocation(line: 1699, column: 9, scope: !2805)
!2830 = !DILocalVariable(name: "sy", scope: !2805, file: !3, line: 1699, type: !30)
!2831 = !DILocation(line: 1699, column: 13, scope: !2805)
!2832 = !DILocalVariable(name: "sz", scope: !2805, file: !3, line: 1699, type: !30)
!2833 = !DILocation(line: 1699, column: 17, scope: !2805)
!2834 = !DILocalVariable(name: "f", scope: !2805, file: !3, line: 1700, type: !30)
!2835 = !DILocation(line: 1700, column: 9, scope: !2805)
!2836 = !DILocalVariable(name: "aph", scope: !2805, file: !3, line: 1701, type: !102)
!2837 = !DILocation(line: 1701, column: 10, scope: !2805)
!2838 = !DILocalVariable(name: "apo", scope: !2805, file: !3, line: 1701, type: !102)
!2839 = !DILocation(line: 1701, column: 16, scope: !2805)
!2840 = !DILocation(line: 1703, column: 17, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1703, column: 6)
!2842 = !DILocation(line: 1703, column: 6, scope: !2841)
!2843 = !DILocation(line: 1703, column: 29, scope: !2841)
!2844 = !DILocation(line: 1703, column: 6, scope: !2805)
!2845 = !DILocation(line: 1704, column: 3, scope: !2841)
!2846 = !DILocation(line: 1705, column: 24, scope: !2847)
!2847 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1705, column: 6)
!2848 = !DILocation(line: 1705, column: 13, scope: !2847)
!2849 = !DILocation(line: 1705, column: 11, scope: !2847)
!2850 = !DILocation(line: 1705, column: 39, scope: !2847)
!2851 = !DILocation(line: 1705, column: 6, scope: !2805)
!2852 = !DILocation(line: 1706, column: 19, scope: !2847)
!2853 = !DILocation(line: 1706, column: 8, scope: !2847)
!2854 = !DILocation(line: 1706, column: 6, scope: !2847)
!2855 = !DILocation(line: 1706, column: 3, scope: !2847)
!2856 = !DILocation(line: 1707, column: 24, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1707, column: 6)
!2858 = !DILocation(line: 1707, column: 13, scope: !2857)
!2859 = !DILocation(line: 1707, column: 11, scope: !2857)
!2860 = !DILocation(line: 1707, column: 39, scope: !2857)
!2861 = !DILocation(line: 1707, column: 6, scope: !2805)
!2862 = !DILocation(line: 1708, column: 19, scope: !2857)
!2863 = !DILocation(line: 1708, column: 8, scope: !2857)
!2864 = !DILocation(line: 1708, column: 6, scope: !2857)
!2865 = !DILocation(line: 1708, column: 3, scope: !2857)
!2866 = !DILocation(line: 1710, column: 6, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1710, column: 6)
!2868 = !DILocation(line: 1710, column: 9, scope: !2867)
!2869 = !DILocation(line: 1710, column: 18, scope: !2867)
!2870 = !DILocation(line: 1710, column: 21, scope: !2867)
!2871 = !DILocation(line: 1710, column: 24, scope: !2867)
!2872 = !DILocation(line: 1710, column: 6, scope: !2805)
!2873 = !DILocation(line: 1711, column: 3, scope: !2867)
!2874 = !DILocation(line: 1713, column: 12, scope: !2805)
!2875 = !DILocation(line: 1713, column: 2, scope: !2805)
!2876 = !DILocation(line: 1714, column: 18, scope: !2805)
!2877 = !DILocation(line: 1714, column: 7, scope: !2805)
!2878 = !DILocation(line: 1714, column: 5, scope: !2805)
!2879 = !DILocation(line: 1715, column: 7, scope: !2805)
!2880 = !DILocation(line: 1715, column: 12, scope: !2805)
!2881 = !DILocation(line: 1715, column: 21, scope: !2805)
!2882 = !DILocation(line: 1715, column: 26, scope: !2805)
!2883 = !DILocation(line: 1716, column: 3, scope: !2805)
!2884 = !DILocation(line: 1716, column: 8, scope: !2805)
!2885 = !DILocation(line: 1716, column: 17, scope: !2805)
!2886 = !DILocation(line: 1716, column: 22, scope: !2805)
!2887 = !DILocation(line: 1715, column: 37, scope: !2805)
!2888 = !DILocation(line: 1715, column: 5, scope: !2805)
!2889 = !DILocation(line: 1717, column: 7, scope: !2805)
!2890 = !DILocation(line: 1717, column: 12, scope: !2805)
!2891 = !DILocation(line: 1717, column: 21, scope: !2805)
!2892 = !DILocation(line: 1717, column: 26, scope: !2805)
!2893 = !DILocation(line: 1718, column: 3, scope: !2805)
!2894 = !DILocation(line: 1718, column: 8, scope: !2805)
!2895 = !DILocation(line: 1718, column: 17, scope: !2805)
!2896 = !DILocation(line: 1718, column: 22, scope: !2805)
!2897 = !DILocation(line: 1717, column: 37, scope: !2805)
!2898 = !DILocation(line: 1717, column: 5, scope: !2805)
!2899 = !DILocation(line: 1719, column: 7, scope: !2805)
!2900 = !DILocation(line: 1719, column: 12, scope: !2805)
!2901 = !DILocation(line: 1719, column: 21, scope: !2805)
!2902 = !DILocation(line: 1719, column: 26, scope: !2805)
!2903 = !DILocation(line: 1720, column: 3, scope: !2805)
!2904 = !DILocation(line: 1720, column: 8, scope: !2805)
!2905 = !DILocation(line: 1720, column: 17, scope: !2805)
!2906 = !DILocation(line: 1720, column: 22, scope: !2805)
!2907 = !DILocation(line: 1719, column: 37, scope: !2805)
!2908 = !DILocation(line: 1719, column: 5, scope: !2805)
!2909 = !DILocation(line: 1721, column: 15, scope: !2805)
!2910 = !DILocation(line: 1721, column: 20, scope: !2805)
!2911 = !DILocation(line: 1721, column: 18, scope: !2805)
!2912 = !DILocation(line: 1721, column: 25, scope: !2805)
!2913 = !DILocation(line: 1721, column: 30, scope: !2805)
!2914 = !DILocation(line: 1721, column: 28, scope: !2805)
!2915 = !DILocation(line: 1721, column: 23, scope: !2805)
!2916 = !DILocation(line: 1721, column: 35, scope: !2805)
!2917 = !DILocation(line: 1721, column: 40, scope: !2805)
!2918 = !DILocation(line: 1721, column: 38, scope: !2805)
!2919 = !DILocation(line: 1721, column: 33, scope: !2805)
!2920 = !DILocation(line: 1721, column: 9, scope: !2805)
!2921 = !DILocation(line: 1721, column: 7, scope: !2805)
!2922 = !DILocation(line: 1722, column: 17, scope: !2805)
!2923 = !DILocation(line: 1722, column: 15, scope: !2805)
!2924 = !DILocation(line: 1722, column: 54, scope: !2805)
!2925 = !DILocation(line: 1722, column: 52, scope: !2805)
!2926 = !DILocation(line: 1722, column: 4, scope: !2805)
!2927 = !DILocation(line: 1723, column: 7, scope: !2805)
!2928 = !DILocation(line: 1723, column: 11, scope: !2805)
!2929 = !DILocation(line: 1723, column: 9, scope: !2805)
!2930 = !DILocation(line: 1723, column: 5, scope: !2805)
!2931 = !DILocation(line: 1724, column: 7, scope: !2805)
!2932 = !DILocation(line: 1724, column: 11, scope: !2805)
!2933 = !DILocation(line: 1724, column: 9, scope: !2805)
!2934 = !DILocation(line: 1724, column: 5, scope: !2805)
!2935 = !DILocation(line: 1725, column: 7, scope: !2805)
!2936 = !DILocation(line: 1725, column: 11, scope: !2805)
!2937 = !DILocation(line: 1725, column: 9, scope: !2805)
!2938 = !DILocation(line: 1725, column: 5, scope: !2805)
!2939 = !DILocation(line: 1726, column: 6, scope: !2940)
!2940 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 1726, column: 6)
!2941 = !DILocation(line: 1726, column: 9, scope: !2940)
!2942 = !DILocation(line: 1726, column: 6, scope: !2805)
!2943 = !DILocation(line: 1727, column: 6, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 1726, column: 17)
!2945 = !DILocation(line: 1728, column: 9, scope: !2944)
!2946 = !DILocation(line: 1728, column: 8, scope: !2944)
!2947 = !DILocation(line: 1728, column: 14, scope: !2944)
!2948 = !DILocation(line: 1728, column: 12, scope: !2944)
!2949 = !DILocation(line: 1728, column: 6, scope: !2944)
!2950 = !DILocation(line: 1729, column: 6, scope: !2944)
!2951 = !DILocation(line: 1730, column: 2, scope: !2944)
!2952 = !DILocation(line: 1731, column: 6, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2940, file: !3, line: 1730, column: 7)
!2954 = !DILocation(line: 1732, column: 6, scope: !2953)
!2955 = !DILocation(line: 1733, column: 6, scope: !2953)
!2956 = !DILocation(line: 1735, column: 15, scope: !2805)
!2957 = !DILocation(line: 1735, column: 20, scope: !2805)
!2958 = !DILocation(line: 1735, column: 18, scope: !2805)
!2959 = !DILocation(line: 1735, column: 25, scope: !2805)
!2960 = !DILocation(line: 1735, column: 30, scope: !2805)
!2961 = !DILocation(line: 1735, column: 28, scope: !2805)
!2962 = !DILocation(line: 1735, column: 23, scope: !2805)
!2963 = !DILocation(line: 1735, column: 35, scope: !2805)
!2964 = !DILocation(line: 1735, column: 40, scope: !2805)
!2965 = !DILocation(line: 1735, column: 38, scope: !2805)
!2966 = !DILocation(line: 1735, column: 33, scope: !2805)
!2967 = !DILocation(line: 1735, column: 9, scope: !2805)
!2968 = !DILocation(line: 1735, column: 7, scope: !2805)
!2969 = !DILocation(line: 1736, column: 17, scope: !2805)
!2970 = !DILocation(line: 1736, column: 15, scope: !2805)
!2971 = !DILocation(line: 1736, column: 54, scope: !2805)
!2972 = !DILocation(line: 1736, column: 52, scope: !2805)
!2973 = !DILocation(line: 1736, column: 4, scope: !2805)
!2974 = !DILocation(line: 1737, column: 7, scope: !2805)
!2975 = !DILocation(line: 1737, column: 11, scope: !2805)
!2976 = !DILocation(line: 1737, column: 9, scope: !2805)
!2977 = !DILocation(line: 1737, column: 5, scope: !2805)
!2978 = !DILocation(line: 1738, column: 7, scope: !2805)
!2979 = !DILocation(line: 1738, column: 11, scope: !2805)
!2980 = !DILocation(line: 1738, column: 9, scope: !2805)
!2981 = !DILocation(line: 1738, column: 5, scope: !2805)
!2982 = !DILocation(line: 1739, column: 7, scope: !2805)
!2983 = !DILocation(line: 1739, column: 11, scope: !2805)
!2984 = !DILocation(line: 1739, column: 9, scope: !2805)
!2985 = !DILocation(line: 1739, column: 5, scope: !2805)
!2986 = !DILocation(line: 1741, column: 9, scope: !2805)
!2987 = !DILocation(line: 1741, column: 14, scope: !2805)
!2988 = !DILocation(line: 1741, column: 23, scope: !2805)
!2989 = !DILocation(line: 1741, column: 6, scope: !2805)
!2990 = !DILocation(line: 1742, column: 9, scope: !2805)
!2991 = !DILocation(line: 1742, column: 14, scope: !2805)
!2992 = !DILocation(line: 1742, column: 23, scope: !2805)
!2993 = !DILocation(line: 1742, column: 6, scope: !2805)
!2994 = !DILocation(line: 1743, column: 20, scope: !2805)
!2995 = !DILocation(line: 1743, column: 25, scope: !2805)
!2996 = !DILocation(line: 1743, column: 38, scope: !2805)
!2997 = !DILocation(line: 1743, column: 36, scope: !2805)
!2998 = !DILocation(line: 1743, column: 43, scope: !2805)
!2999 = !DILocation(line: 1743, column: 41, scope: !2805)
!3000 = !DILocation(line: 1743, column: 2, scope: !2805)
!3001 = !DILocation(line: 1743, column: 7, scope: !2805)
!3002 = !DILocation(line: 1743, column: 18, scope: !2805)
!3003 = !DILocation(line: 1744, column: 20, scope: !2805)
!3004 = !DILocation(line: 1744, column: 25, scope: !2805)
!3005 = !DILocation(line: 1744, column: 38, scope: !2805)
!3006 = !DILocation(line: 1744, column: 36, scope: !2805)
!3007 = !DILocation(line: 1744, column: 43, scope: !2805)
!3008 = !DILocation(line: 1744, column: 41, scope: !2805)
!3009 = !DILocation(line: 1744, column: 2, scope: !2805)
!3010 = !DILocation(line: 1744, column: 7, scope: !2805)
!3011 = !DILocation(line: 1744, column: 18, scope: !2805)
!3012 = !DILocation(line: 1745, column: 20, scope: !2805)
!3013 = !DILocation(line: 1745, column: 25, scope: !2805)
!3014 = !DILocation(line: 1745, column: 38, scope: !2805)
!3015 = !DILocation(line: 1745, column: 36, scope: !2805)
!3016 = !DILocation(line: 1745, column: 43, scope: !2805)
!3017 = !DILocation(line: 1745, column: 41, scope: !2805)
!3018 = !DILocation(line: 1745, column: 2, scope: !2805)
!3019 = !DILocation(line: 1745, column: 7, scope: !2805)
!3020 = !DILocation(line: 1745, column: 18, scope: !2805)
!3021 = !DILocation(line: 1746, column: 1, scope: !2805)
!3022 = distinct !DISubprogram(name: "copyextbonds", scope: !3, file: !3, line: 759, type: !3023, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!72, !56}
!3025 = !DILocalVariable(name: "res", arg: 1, scope: !3022, file: !3, line: 759, type: !56)
!3026 = !DILocation(line: 759, column: 37, scope: !3022)
!3027 = !DILocalVariable(name: "ep", scope: !3022, file: !3, line: 761, type: !72)
!3028 = !DILocation(line: 761, column: 13, scope: !3022)
!3029 = !DILocalVariable(name: "ep1", scope: !3022, file: !3, line: 761, type: !72)
!3030 = !DILocation(line: 761, column: 18, scope: !3022)
!3031 = !DILocalVariable(name: "epo", scope: !3022, file: !3, line: 761, type: !72)
!3032 = !DILocation(line: 761, column: 24, scope: !3022)
!3033 = !DILocalVariable(name: "epn", scope: !3022, file: !3, line: 761, type: !72)
!3034 = !DILocation(line: 761, column: 30, scope: !3022)
!3035 = !DILocation(line: 763, column: 17, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 763, column: 2)
!3037 = !DILocation(line: 763, column: 11, scope: !3036)
!3038 = !DILocation(line: 763, column: 31, scope: !3036)
!3039 = !DILocation(line: 763, column: 36, scope: !3036)
!3040 = !DILocation(line: 763, column: 29, scope: !3036)
!3041 = !DILocation(line: 763, column: 7, scope: !3036)
!3042 = !DILocation(line: 763, column: 48, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 763, column: 2)
!3044 = !DILocation(line: 763, column: 2, scope: !3036)
!3045 = !DILocation(line: 764, column: 29, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 764, column: 7)
!3047 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 763, column: 73)
!3048 = !DILocation(line: 764, column: 14, scope: !3046)
!3049 = !DILocation(line: 764, column: 12, scope: !3046)
!3050 = !DILocation(line: 764, column: 61, scope: !3046)
!3051 = !DILocation(line: 764, column: 7, scope: !3047)
!3052 = !DILocation(line: 766, column: 4, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3046, file: !3, line: 765, column: 10)
!3054 = !DILocation(line: 767, column: 4, scope: !3053)
!3055 = !DILocation(line: 768, column: 4, scope: !3053)
!3056 = !DILocation(line: 770, column: 3, scope: !3047)
!3057 = !DILocation(line: 770, column: 7, scope: !3047)
!3058 = !DILocation(line: 770, column: 15, scope: !3047)
!3059 = !DILocation(line: 771, column: 17, scope: !3047)
!3060 = !DILocation(line: 771, column: 22, scope: !3047)
!3061 = !DILocation(line: 771, column: 3, scope: !3047)
!3062 = !DILocation(line: 771, column: 7, scope: !3047)
!3063 = !DILocation(line: 771, column: 15, scope: !3047)
!3064 = !DILocation(line: 772, column: 17, scope: !3047)
!3065 = !DILocation(line: 772, column: 22, scope: !3047)
!3066 = !DILocation(line: 772, column: 3, scope: !3047)
!3067 = !DILocation(line: 772, column: 7, scope: !3047)
!3068 = !DILocation(line: 772, column: 15, scope: !3047)
!3069 = !DILocation(line: 773, column: 18, scope: !3047)
!3070 = !DILocation(line: 773, column: 23, scope: !3047)
!3071 = !DILocation(line: 773, column: 3, scope: !3047)
!3072 = !DILocation(line: 773, column: 7, scope: !3047)
!3073 = !DILocation(line: 773, column: 16, scope: !3047)
!3074 = !DILocation(line: 774, column: 7, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 774, column: 7)
!3076 = !DILocation(line: 774, column: 11, scope: !3075)
!3077 = !DILocation(line: 774, column: 7, scope: !3047)
!3078 = !DILocation(line: 775, column: 10, scope: !3075)
!3079 = !DILocation(line: 775, column: 8, scope: !3075)
!3080 = !DILocation(line: 775, column: 4, scope: !3075)
!3081 = !DILocation(line: 776, column: 7, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 776, column: 7)
!3083 = !DILocation(line: 776, column: 11, scope: !3082)
!3084 = !DILocation(line: 776, column: 7, scope: !3047)
!3085 = !DILocation(line: 777, column: 19, scope: !3082)
!3086 = !DILocation(line: 777, column: 4, scope: !3082)
!3087 = !DILocation(line: 777, column: 9, scope: !3082)
!3088 = !DILocation(line: 777, column: 17, scope: !3082)
!3089 = !DILocation(line: 778, column: 9, scope: !3047)
!3090 = !DILocation(line: 778, column: 7, scope: !3047)
!3091 = !DILocation(line: 779, column: 2, scope: !3047)
!3092 = !DILocation(line: 763, column: 59, scope: !3043)
!3093 = !DILocation(line: 763, column: 64, scope: !3043)
!3094 = !DILocation(line: 763, column: 57, scope: !3043)
!3095 = !DILocation(line: 763, column: 2, scope: !3043)
!3096 = distinct !{!3096, !3044, !3097}
!3097 = !DILocation(line: 779, column: 2, scope: !3036)
!3098 = !DILocation(line: 781, column: 10, scope: !3022)
!3099 = !DILocation(line: 781, column: 2, scope: !3022)
!3100 = !DILocation(line: 782, column: 1, scope: !3022)
!3101 = distinct !DISubprogram(name: "setreskind", scope: !3, file: !3, line: 784, type: !3102, scopeLine: 785, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3102 = !DISubroutineType(types: !3103)
!3103 = !{!36, !22, !238, !238}
!3104 = !DILocalVariable(name: "m", arg: 1, scope: !3101, file: !3, line: 784, type: !22)
!3105 = !DILocation(line: 784, column: 29, scope: !3101)
!3106 = !DILocalVariable(name: "aexp", arg: 2, scope: !3101, file: !3, line: 784, type: !238)
!3107 = !DILocation(line: 784, column: 37, scope: !3101)
!3108 = !DILocalVariable(name: "rkind", arg: 3, scope: !3101, file: !3, line: 784, type: !238)
!3109 = !DILocation(line: 784, column: 50, scope: !3101)
!3110 = !DILocalVariable(name: "sp", scope: !3101, file: !3, line: 786, type: !38)
!3111 = !DILocation(line: 786, column: 12, scope: !3101)
!3112 = !DILocalVariable(name: "res", scope: !3101, file: !3, line: 787, type: !56)
!3113 = !DILocation(line: 787, column: 13, scope: !3101)
!3114 = !DILocalVariable(name: "r", scope: !3101, file: !3, line: 788, type: !36)
!3115 = !DILocation(line: 788, column: 6, scope: !3101)
!3116 = !DILocalVariable(name: "rk", scope: !3101, file: !3, line: 789, type: !36)
!3117 = !DILocation(line: 789, column: 6, scope: !3101)
!3118 = !DILocalVariable(name: "rp", scope: !3101, file: !3, line: 790, type: !238)
!3119 = !DILocation(line: 790, column: 8, scope: !3101)
!3120 = !DILocalVariable(name: "tp", scope: !3101, file: !3, line: 790, type: !238)
!3121 = !DILocation(line: 790, column: 13, scope: !3101)
!3122 = !DILocalVariable(name: "trkind", scope: !3101, file: !3, line: 790, type: !3123)
!3123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 80, elements: !3124)
!3124 = !{!3125}
!3125 = !DISubrange(count: 10)
!3126 = !DILocation(line: 790, column: 17, scope: !3101)
!3127 = !DILocation(line: 792, column: 12, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 792, column: 2)
!3129 = !DILocation(line: 792, column: 10, scope: !3128)
!3130 = !DILocation(line: 792, column: 25, scope: !3128)
!3131 = !DILocation(line: 792, column: 23, scope: !3128)
!3132 = !DILocation(line: 792, column: 7, scope: !3128)
!3133 = !DILocation(line: 792, column: 33, scope: !3134)
!3134 = distinct !DILexicalBlock(scope: !3128, file: !3, line: 792, column: 2)
!3135 = !DILocation(line: 792, column: 32, scope: !3134)
!3136 = !DILocation(line: 792, column: 2, scope: !3128)
!3137 = !DILocation(line: 793, column: 11, scope: !3134)
!3138 = !DILocation(line: 793, column: 38, scope: !3134)
!3139 = !DILocation(line: 793, column: 37, scope: !3134)
!3140 = !DILocation(line: 793, column: 28, scope: !3134)
!3141 = !DILocation(line: 793, column: 46, scope: !3134)
!3142 = !DILocation(line: 793, column: 45, scope: !3134)
!3143 = !DILocation(line: 793, column: 6, scope: !3134)
!3144 = !DILocation(line: 793, column: 9, scope: !3134)
!3145 = !DILocation(line: 793, column: 3, scope: !3134)
!3146 = !DILocation(line: 792, column: 39, scope: !3134)
!3147 = !DILocation(line: 792, column: 2, scope: !3134)
!3148 = distinct !{!3148, !3136, !3149}
!3149 = !DILocation(line: 793, column: 46, scope: !3128)
!3150 = !DILocation(line: 794, column: 3, scope: !3101)
!3151 = !DILocation(line: 794, column: 6, scope: !3101)
!3152 = !DILocation(line: 796, column: 15, scope: !3153)
!3153 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 796, column: 6)
!3154 = !DILocation(line: 796, column: 7, scope: !3153)
!3155 = !DILocation(line: 796, column: 6, scope: !3101)
!3156 = !DILocation(line: 797, column: 6, scope: !3153)
!3157 = !DILocation(line: 797, column: 3, scope: !3153)
!3158 = !DILocation(line: 798, column: 20, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 798, column: 11)
!3160 = !DILocation(line: 798, column: 12, scope: !3159)
!3161 = !DILocation(line: 798, column: 11, scope: !3153)
!3162 = !DILocation(line: 799, column: 6, scope: !3159)
!3163 = !DILocation(line: 799, column: 3, scope: !3159)
!3164 = !DILocation(line: 800, column: 20, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 800, column: 11)
!3166 = !DILocation(line: 800, column: 12, scope: !3165)
!3167 = !DILocation(line: 800, column: 11, scope: !3159)
!3168 = !DILocation(line: 801, column: 6, scope: !3165)
!3169 = !DILocation(line: 801, column: 3, scope: !3165)
!3170 = !DILocation(line: 803, column: 12, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 802, column: 6)
!3172 = !DILocation(line: 804, column: 45, scope: !3171)
!3173 = !DILocation(line: 803, column: 3, scope: !3171)
!3174 = !DILocation(line: 805, column: 6, scope: !3171)
!3175 = !DILocation(line: 808, column: 16, scope: !3101)
!3176 = !DILocation(line: 808, column: 19, scope: !3101)
!3177 = !DILocation(line: 808, column: 2, scope: !3101)
!3178 = !DILocation(line: 809, column: 12, scope: !3179)
!3179 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 809, column: 2)
!3180 = !DILocation(line: 809, column: 15, scope: !3179)
!3181 = !DILocation(line: 809, column: 10, scope: !3179)
!3182 = !DILocation(line: 809, column: 7, scope: !3179)
!3183 = !DILocation(line: 809, column: 26, scope: !3184)
!3184 = distinct !DILexicalBlock(scope: !3179, file: !3, line: 809, column: 2)
!3185 = !DILocation(line: 809, column: 2, scope: !3179)
!3186 = !DILocation(line: 810, column: 10, scope: !3187)
!3187 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 810, column: 3)
!3188 = distinct !DILexicalBlock(scope: !3184, file: !3, line: 809, column: 47)
!3189 = !DILocation(line: 810, column: 8, scope: !3187)
!3190 = !DILocation(line: 810, column: 15, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3187, file: !3, line: 810, column: 3)
!3192 = !DILocation(line: 810, column: 19, scope: !3191)
!3193 = !DILocation(line: 810, column: 23, scope: !3191)
!3194 = !DILocation(line: 810, column: 17, scope: !3191)
!3195 = !DILocation(line: 810, column: 3, scope: !3187)
!3196 = !DILocation(line: 811, column: 10, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 810, column: 41)
!3198 = !DILocation(line: 811, column: 14, scope: !3197)
!3199 = !DILocation(line: 811, column: 26, scope: !3197)
!3200 = !DILocation(line: 811, column: 8, scope: !3197)
!3201 = !DILocation(line: 812, column: 8, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 812, column: 8)
!3203 = !DILocation(line: 812, column: 13, scope: !3202)
!3204 = !DILocation(line: 812, column: 20, scope: !3202)
!3205 = !DILocation(line: 812, column: 8, scope: !3197)
!3206 = !DILocation(line: 813, column: 19, scope: !3202)
!3207 = !DILocation(line: 813, column: 5, scope: !3202)
!3208 = !DILocation(line: 813, column: 10, scope: !3202)
!3209 = !DILocation(line: 813, column: 17, scope: !3202)
!3210 = !DILocation(line: 814, column: 3, scope: !3197)
!3211 = !DILocation(line: 810, column: 37, scope: !3191)
!3212 = !DILocation(line: 810, column: 3, scope: !3191)
!3213 = distinct !{!3213, !3195, !3214}
!3214 = !DILocation(line: 814, column: 3, scope: !3187)
!3215 = !DILocation(line: 815, column: 2, scope: !3188)
!3216 = !DILocation(line: 809, column: 35, scope: !3184)
!3217 = !DILocation(line: 809, column: 39, scope: !3184)
!3218 = !DILocation(line: 809, column: 33, scope: !3184)
!3219 = !DILocation(line: 809, column: 2, scope: !3184)
!3220 = distinct !{!3220, !3185, !3221}
!3221 = !DILocation(line: 815, column: 2, scope: !3179)
!3222 = !DILocation(line: 816, column: 2, scope: !3101)
!3223 = distinct !DISubprogram(name: "setxyz_from_mol", scope: !3, file: !3, line: 819, type: !3224, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3224 = !DISubroutineType(types: !3225)
!3225 = !{!36, !3226, !3227, !3228}
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 64)
!3229 = !DILocalVariable(name: "m", arg: 1, scope: !3223, file: !3, line: 819, type: !3226)
!3230 = !DILocation(line: 819, column: 35, scope: !3223)
!3231 = !DILocalVariable(name: "aex", arg: 2, scope: !3223, file: !3, line: 819, type: !3227)
!3232 = !DILocation(line: 819, column: 45, scope: !3223)
!3233 = !DILocalVariable(name: "xyz", arg: 3, scope: !3223, file: !3, line: 819, type: !3228)
!3234 = !DILocation(line: 819, column: 58, scope: !3223)
!3235 = !DILocalVariable(name: "r", scope: !3223, file: !3, line: 821, type: !36)
!3236 = !DILocation(line: 821, column: 7, scope: !3223)
!3237 = !DILocalVariable(name: "a", scope: !3223, file: !3, line: 821, type: !36)
!3238 = !DILocation(line: 821, column: 10, scope: !3223)
!3239 = !DILocalVariable(name: "n", scope: !3223, file: !3, line: 821, type: !36)
!3240 = !DILocation(line: 821, column: 13, scope: !3223)
!3241 = !DILocalVariable(name: "sp", scope: !3223, file: !3, line: 822, type: !38)
!3242 = !DILocation(line: 822, column: 12, scope: !3223)
!3243 = !DILocalVariable(name: "res", scope: !3223, file: !3, line: 823, type: !56)
!3244 = !DILocation(line: 823, column: 13, scope: !3223)
!3245 = !DILocalVariable(name: "ap", scope: !3223, file: !3, line: 824, type: !102)
!3246 = !DILocation(line: 824, column: 11, scope: !3223)
!3247 = !DILocation(line: 826, column: 17, scope: !3223)
!3248 = !DILocation(line: 826, column: 16, scope: !3223)
!3249 = !DILocation(line: 826, column: 20, scope: !3223)
!3250 = !DILocation(line: 826, column: 27, scope: !3223)
!3251 = !DILocation(line: 826, column: 26, scope: !3223)
!3252 = !DILocation(line: 826, column: 2, scope: !3223)
!3253 = !DILocation(line: 827, column: 9, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3223, file: !3, line: 827, column: 2)
!3255 = !DILocation(line: 827, column: 21, scope: !3254)
!3256 = !DILocation(line: 827, column: 20, scope: !3254)
!3257 = !DILocation(line: 827, column: 25, scope: !3254)
!3258 = !DILocation(line: 827, column: 17, scope: !3254)
!3259 = !DILocation(line: 827, column: 7, scope: !3254)
!3260 = !DILocation(line: 827, column: 36, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 827, column: 2)
!3262 = !DILocation(line: 827, column: 2, scope: !3254)
!3263 = !DILocation(line: 828, column: 10, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !3, line: 828, column: 3)
!3265 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 827, column: 57)
!3266 = !DILocation(line: 828, column: 8, scope: !3264)
!3267 = !DILocation(line: 828, column: 15, scope: !3268)
!3268 = distinct !DILexicalBlock(scope: !3264, file: !3, line: 828, column: 3)
!3269 = !DILocation(line: 828, column: 19, scope: !3268)
!3270 = !DILocation(line: 828, column: 23, scope: !3268)
!3271 = !DILocation(line: 828, column: 17, scope: !3268)
!3272 = !DILocation(line: 828, column: 3, scope: !3264)
!3273 = !DILocation(line: 829, column: 10, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 828, column: 41)
!3275 = !DILocation(line: 829, column: 14, scope: !3274)
!3276 = !DILocation(line: 829, column: 26, scope: !3274)
!3277 = !DILocation(line: 829, column: 8, scope: !3274)
!3278 = !DILocation(line: 830, column: 11, scope: !3279)
!3279 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 830, column: 4)
!3280 = !DILocation(line: 830, column: 9, scope: !3279)
!3281 = !DILocation(line: 830, column: 16, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3279, file: !3, line: 830, column: 4)
!3283 = !DILocation(line: 830, column: 20, scope: !3282)
!3284 = !DILocation(line: 830, column: 25, scope: !3282)
!3285 = !DILocation(line: 830, column: 18, scope: !3282)
!3286 = !DILocation(line: 830, column: 4, scope: !3279)
!3287 = !DILocation(line: 831, column: 11, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3282, file: !3, line: 830, column: 40)
!3289 = !DILocation(line: 831, column: 16, scope: !3288)
!3290 = !DILocation(line: 831, column: 25, scope: !3288)
!3291 = !DILocation(line: 831, column: 8, scope: !3288)
!3292 = !DILocation(line: 832, column: 9, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3288, file: !3, line: 832, column: 9)
!3294 = !DILocation(line: 832, column: 13, scope: !3293)
!3295 = !DILocation(line: 832, column: 20, scope: !3293)
!3296 = !DILocation(line: 832, column: 9, scope: !3288)
!3297 = !DILocation(line: 833, column: 22, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 832, column: 33)
!3299 = !DILocation(line: 833, column: 26, scope: !3298)
!3300 = !DILocation(line: 833, column: 6, scope: !3298)
!3301 = !DILocation(line: 833, column: 11, scope: !3298)
!3302 = !DILocation(line: 833, column: 20, scope: !3298)
!3303 = !DILocation(line: 834, column: 22, scope: !3298)
!3304 = !DILocation(line: 834, column: 26, scope: !3298)
!3305 = !DILocation(line: 834, column: 6, scope: !3298)
!3306 = !DILocation(line: 834, column: 11, scope: !3298)
!3307 = !DILocation(line: 834, column: 20, scope: !3298)
!3308 = !DILocation(line: 835, column: 22, scope: !3298)
!3309 = !DILocation(line: 835, column: 26, scope: !3298)
!3310 = !DILocation(line: 835, column: 6, scope: !3298)
!3311 = !DILocation(line: 835, column: 11, scope: !3298)
!3312 = !DILocation(line: 835, column: 20, scope: !3298)
!3313 = !DILocation(line: 836, column: 7, scope: !3298)
!3314 = !DILocation(line: 837, column: 5, scope: !3298)
!3315 = !DILocation(line: 838, column: 4, scope: !3288)
!3316 = !DILocation(line: 830, column: 36, scope: !3282)
!3317 = !DILocation(line: 830, column: 4, scope: !3282)
!3318 = distinct !{!3318, !3286, !3319}
!3319 = !DILocation(line: 838, column: 4, scope: !3279)
!3320 = !DILocation(line: 839, column: 3, scope: !3274)
!3321 = !DILocation(line: 828, column: 37, scope: !3268)
!3322 = !DILocation(line: 828, column: 3, scope: !3268)
!3323 = distinct !{!3323, !3272, !3324}
!3324 = !DILocation(line: 839, column: 3, scope: !3264)
!3325 = !DILocation(line: 840, column: 2, scope: !3265)
!3326 = !DILocation(line: 827, column: 45, scope: !3261)
!3327 = !DILocation(line: 827, column: 49, scope: !3261)
!3328 = !DILocation(line: 827, column: 43, scope: !3261)
!3329 = !DILocation(line: 827, column: 2, scope: !3261)
!3330 = distinct !{!3330, !3262, !3331}
!3331 = !DILocation(line: 840, column: 2, scope: !3254)
!3332 = !DILocation(line: 841, column: 10, scope: !3223)
!3333 = !DILocation(line: 841, column: 2, scope: !3223)
!3334 = distinct !DISubprogram(name: "setxyzw_from_mol", scope: !3, file: !3, line: 844, type: !3335, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{!36, !3226, !3227, !180}
!3337 = !DILocalVariable(name: "m", arg: 1, scope: !3334, file: !3, line: 844, type: !3226)
!3338 = !DILocation(line: 844, column: 36, scope: !3334)
!3339 = !DILocalVariable(name: "aex", arg: 2, scope: !3334, file: !3, line: 844, type: !3227)
!3340 = !DILocation(line: 844, column: 46, scope: !3334)
!3341 = !DILocalVariable(name: "xyzw", arg: 3, scope: !3334, file: !3, line: 844, type: !180)
!3342 = !DILocation(line: 844, column: 58, scope: !3334)
!3343 = !DILocalVariable(name: "r", scope: !3334, file: !3, line: 846, type: !36)
!3344 = !DILocation(line: 846, column: 7, scope: !3334)
!3345 = !DILocalVariable(name: "a", scope: !3334, file: !3, line: 846, type: !36)
!3346 = !DILocation(line: 846, column: 10, scope: !3334)
!3347 = !DILocalVariable(name: "n", scope: !3334, file: !3, line: 846, type: !36)
!3348 = !DILocation(line: 846, column: 13, scope: !3334)
!3349 = !DILocalVariable(name: "sp", scope: !3334, file: !3, line: 847, type: !38)
!3350 = !DILocation(line: 847, column: 12, scope: !3334)
!3351 = !DILocalVariable(name: "res", scope: !3334, file: !3, line: 848, type: !56)
!3352 = !DILocation(line: 848, column: 13, scope: !3334)
!3353 = !DILocalVariable(name: "ap", scope: !3334, file: !3, line: 849, type: !102)
!3354 = !DILocation(line: 849, column: 11, scope: !3334)
!3355 = !DILocation(line: 851, column: 17, scope: !3334)
!3356 = !DILocation(line: 851, column: 16, scope: !3334)
!3357 = !DILocation(line: 851, column: 20, scope: !3334)
!3358 = !DILocation(line: 851, column: 27, scope: !3334)
!3359 = !DILocation(line: 851, column: 26, scope: !3334)
!3360 = !DILocation(line: 851, column: 2, scope: !3334)
!3361 = !DILocation(line: 852, column: 9, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 852, column: 2)
!3363 = !DILocation(line: 852, column: 21, scope: !3362)
!3364 = !DILocation(line: 852, column: 20, scope: !3362)
!3365 = !DILocation(line: 852, column: 25, scope: !3362)
!3366 = !DILocation(line: 852, column: 17, scope: !3362)
!3367 = !DILocation(line: 852, column: 7, scope: !3362)
!3368 = !DILocation(line: 852, column: 36, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3362, file: !3, line: 852, column: 2)
!3370 = !DILocation(line: 852, column: 2, scope: !3362)
!3371 = !DILocation(line: 853, column: 10, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3373, file: !3, line: 853, column: 3)
!3373 = distinct !DILexicalBlock(scope: !3369, file: !3, line: 852, column: 57)
!3374 = !DILocation(line: 853, column: 8, scope: !3372)
!3375 = !DILocation(line: 853, column: 15, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3372, file: !3, line: 853, column: 3)
!3377 = !DILocation(line: 853, column: 19, scope: !3376)
!3378 = !DILocation(line: 853, column: 23, scope: !3376)
!3379 = !DILocation(line: 853, column: 17, scope: !3376)
!3380 = !DILocation(line: 853, column: 3, scope: !3372)
!3381 = !DILocation(line: 854, column: 10, scope: !3382)
!3382 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 853, column: 41)
!3383 = !DILocation(line: 854, column: 14, scope: !3382)
!3384 = !DILocation(line: 854, column: 26, scope: !3382)
!3385 = !DILocation(line: 854, column: 8, scope: !3382)
!3386 = !DILocation(line: 855, column: 11, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 855, column: 4)
!3388 = !DILocation(line: 855, column: 9, scope: !3387)
!3389 = !DILocation(line: 855, column: 16, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 855, column: 4)
!3391 = !DILocation(line: 855, column: 20, scope: !3390)
!3392 = !DILocation(line: 855, column: 25, scope: !3390)
!3393 = !DILocation(line: 855, column: 18, scope: !3390)
!3394 = !DILocation(line: 855, column: 4, scope: !3387)
!3395 = !DILocation(line: 856, column: 11, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 855, column: 40)
!3397 = !DILocation(line: 856, column: 16, scope: !3396)
!3398 = !DILocation(line: 856, column: 25, scope: !3396)
!3399 = !DILocation(line: 856, column: 8, scope: !3396)
!3400 = !DILocation(line: 857, column: 9, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 857, column: 9)
!3402 = !DILocation(line: 857, column: 13, scope: !3401)
!3403 = !DILocation(line: 857, column: 20, scope: !3401)
!3404 = !DILocation(line: 857, column: 9, scope: !3396)
!3405 = !DILocation(line: 858, column: 24, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 857, column: 33)
!3407 = !DILocation(line: 858, column: 28, scope: !3406)
!3408 = !DILocation(line: 858, column: 6, scope: !3406)
!3409 = !DILocation(line: 858, column: 14, scope: !3406)
!3410 = !DILocation(line: 858, column: 13, scope: !3406)
!3411 = !DILocation(line: 858, column: 16, scope: !3406)
!3412 = !DILocation(line: 858, column: 22, scope: !3406)
!3413 = !DILocation(line: 859, column: 24, scope: !3406)
!3414 = !DILocation(line: 859, column: 28, scope: !3406)
!3415 = !DILocation(line: 859, column: 6, scope: !3406)
!3416 = !DILocation(line: 859, column: 14, scope: !3406)
!3417 = !DILocation(line: 859, column: 13, scope: !3406)
!3418 = !DILocation(line: 859, column: 16, scope: !3406)
!3419 = !DILocation(line: 859, column: 22, scope: !3406)
!3420 = !DILocation(line: 860, column: 24, scope: !3406)
!3421 = !DILocation(line: 860, column: 28, scope: !3406)
!3422 = !DILocation(line: 860, column: 6, scope: !3406)
!3423 = !DILocation(line: 860, column: 14, scope: !3406)
!3424 = !DILocation(line: 860, column: 13, scope: !3406)
!3425 = !DILocation(line: 860, column: 16, scope: !3406)
!3426 = !DILocation(line: 860, column: 22, scope: !3406)
!3427 = !DILocation(line: 861, column: 24, scope: !3406)
!3428 = !DILocation(line: 861, column: 28, scope: !3406)
!3429 = !DILocation(line: 861, column: 6, scope: !3406)
!3430 = !DILocation(line: 861, column: 14, scope: !3406)
!3431 = !DILocation(line: 861, column: 13, scope: !3406)
!3432 = !DILocation(line: 861, column: 16, scope: !3406)
!3433 = !DILocation(line: 861, column: 22, scope: !3406)
!3434 = !DILocation(line: 862, column: 7, scope: !3406)
!3435 = !DILocation(line: 863, column: 5, scope: !3406)
!3436 = !DILocation(line: 864, column: 4, scope: !3396)
!3437 = !DILocation(line: 855, column: 36, scope: !3390)
!3438 = !DILocation(line: 855, column: 4, scope: !3390)
!3439 = distinct !{!3439, !3394, !3440}
!3440 = !DILocation(line: 864, column: 4, scope: !3387)
!3441 = !DILocation(line: 865, column: 3, scope: !3382)
!3442 = !DILocation(line: 853, column: 37, scope: !3376)
!3443 = !DILocation(line: 853, column: 3, scope: !3376)
!3444 = distinct !{!3444, !3380, !3445}
!3445 = !DILocation(line: 865, column: 3, scope: !3372)
!3446 = !DILocation(line: 866, column: 2, scope: !3373)
!3447 = !DILocation(line: 852, column: 45, scope: !3369)
!3448 = !DILocation(line: 852, column: 49, scope: !3369)
!3449 = !DILocation(line: 852, column: 43, scope: !3369)
!3450 = !DILocation(line: 852, column: 2, scope: !3369)
!3451 = distinct !{!3451, !3370, !3452}
!3452 = !DILocation(line: 866, column: 2, scope: !3362)
!3453 = !DILocation(line: 867, column: 10, scope: !3334)
!3454 = !DILocation(line: 867, column: 2, scope: !3334)
!3455 = distinct !DISubprogram(name: "setmol_from_xyz", scope: !3, file: !3, line: 870, type: !3335, scopeLine: 871, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3456 = !DILocalVariable(name: "m", arg: 1, scope: !3455, file: !3, line: 870, type: !3226)
!3457 = !DILocation(line: 870, column: 35, scope: !3455)
!3458 = !DILocalVariable(name: "aex", arg: 2, scope: !3455, file: !3, line: 870, type: !3227)
!3459 = !DILocation(line: 870, column: 45, scope: !3455)
!3460 = !DILocalVariable(name: "xyz", arg: 3, scope: !3455, file: !3, line: 870, type: !180)
!3461 = !DILocation(line: 870, column: 57, scope: !3455)
!3462 = !DILocalVariable(name: "r", scope: !3455, file: !3, line: 872, type: !36)
!3463 = !DILocation(line: 872, column: 7, scope: !3455)
!3464 = !DILocalVariable(name: "a", scope: !3455, file: !3, line: 872, type: !36)
!3465 = !DILocation(line: 872, column: 10, scope: !3455)
!3466 = !DILocalVariable(name: "n", scope: !3455, file: !3, line: 872, type: !36)
!3467 = !DILocation(line: 872, column: 13, scope: !3455)
!3468 = !DILocalVariable(name: "sp", scope: !3455, file: !3, line: 873, type: !38)
!3469 = !DILocation(line: 873, column: 12, scope: !3455)
!3470 = !DILocalVariable(name: "res", scope: !3455, file: !3, line: 874, type: !56)
!3471 = !DILocation(line: 874, column: 13, scope: !3455)
!3472 = !DILocalVariable(name: "ap", scope: !3455, file: !3, line: 875, type: !102)
!3473 = !DILocation(line: 875, column: 11, scope: !3455)
!3474 = !DILocation(line: 877, column: 17, scope: !3455)
!3475 = !DILocation(line: 877, column: 16, scope: !3455)
!3476 = !DILocation(line: 877, column: 20, scope: !3455)
!3477 = !DILocation(line: 877, column: 27, scope: !3455)
!3478 = !DILocation(line: 877, column: 26, scope: !3455)
!3479 = !DILocation(line: 877, column: 2, scope: !3455)
!3480 = !DILocation(line: 878, column: 9, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3455, file: !3, line: 878, column: 2)
!3482 = !DILocation(line: 878, column: 21, scope: !3481)
!3483 = !DILocation(line: 878, column: 20, scope: !3481)
!3484 = !DILocation(line: 878, column: 25, scope: !3481)
!3485 = !DILocation(line: 878, column: 17, scope: !3481)
!3486 = !DILocation(line: 878, column: 7, scope: !3481)
!3487 = !DILocation(line: 878, column: 36, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3481, file: !3, line: 878, column: 2)
!3489 = !DILocation(line: 878, column: 2, scope: !3481)
!3490 = !DILocation(line: 879, column: 10, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 879, column: 3)
!3492 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 878, column: 57)
!3493 = !DILocation(line: 879, column: 8, scope: !3491)
!3494 = !DILocation(line: 879, column: 15, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 879, column: 3)
!3496 = !DILocation(line: 879, column: 19, scope: !3495)
!3497 = !DILocation(line: 879, column: 23, scope: !3495)
!3498 = !DILocation(line: 879, column: 17, scope: !3495)
!3499 = !DILocation(line: 879, column: 3, scope: !3491)
!3500 = !DILocation(line: 880, column: 10, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3495, file: !3, line: 879, column: 41)
!3502 = !DILocation(line: 880, column: 14, scope: !3501)
!3503 = !DILocation(line: 880, column: 26, scope: !3501)
!3504 = !DILocation(line: 880, column: 8, scope: !3501)
!3505 = !DILocation(line: 881, column: 11, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3501, file: !3, line: 881, column: 4)
!3507 = !DILocation(line: 881, column: 9, scope: !3506)
!3508 = !DILocation(line: 881, column: 16, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 881, column: 4)
!3510 = !DILocation(line: 881, column: 20, scope: !3509)
!3511 = !DILocation(line: 881, column: 25, scope: !3509)
!3512 = !DILocation(line: 881, column: 18, scope: !3509)
!3513 = !DILocation(line: 881, column: 4, scope: !3506)
!3514 = !DILocation(line: 882, column: 11, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3509, file: !3, line: 881, column: 40)
!3516 = !DILocation(line: 882, column: 16, scope: !3515)
!3517 = !DILocation(line: 882, column: 25, scope: !3515)
!3518 = !DILocation(line: 882, column: 8, scope: !3515)
!3519 = !DILocation(line: 883, column: 9, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3515, file: !3, line: 883, column: 9)
!3521 = !DILocation(line: 883, column: 13, scope: !3520)
!3522 = !DILocation(line: 883, column: 20, scope: !3520)
!3523 = !DILocation(line: 883, column: 9, scope: !3515)
!3524 = !DILocation(line: 884, column: 23, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3520, file: !3, line: 883, column: 33)
!3526 = !DILocation(line: 884, column: 30, scope: !3525)
!3527 = !DILocation(line: 884, column: 29, scope: !3525)
!3528 = !DILocation(line: 884, column: 32, scope: !3525)
!3529 = !DILocation(line: 884, column: 6, scope: !3525)
!3530 = !DILocation(line: 884, column: 10, scope: !3525)
!3531 = !DILocation(line: 884, column: 21, scope: !3525)
!3532 = !DILocation(line: 885, column: 23, scope: !3525)
!3533 = !DILocation(line: 885, column: 30, scope: !3525)
!3534 = !DILocation(line: 885, column: 29, scope: !3525)
!3535 = !DILocation(line: 885, column: 32, scope: !3525)
!3536 = !DILocation(line: 885, column: 6, scope: !3525)
!3537 = !DILocation(line: 885, column: 10, scope: !3525)
!3538 = !DILocation(line: 885, column: 21, scope: !3525)
!3539 = !DILocation(line: 886, column: 23, scope: !3525)
!3540 = !DILocation(line: 886, column: 30, scope: !3525)
!3541 = !DILocation(line: 886, column: 29, scope: !3525)
!3542 = !DILocation(line: 886, column: 32, scope: !3525)
!3543 = !DILocation(line: 886, column: 6, scope: !3525)
!3544 = !DILocation(line: 886, column: 10, scope: !3525)
!3545 = !DILocation(line: 886, column: 21, scope: !3525)
!3546 = !DILocation(line: 887, column: 7, scope: !3525)
!3547 = !DILocation(line: 888, column: 5, scope: !3525)
!3548 = !DILocation(line: 889, column: 4, scope: !3515)
!3549 = !DILocation(line: 881, column: 36, scope: !3509)
!3550 = !DILocation(line: 881, column: 4, scope: !3509)
!3551 = distinct !{!3551, !3513, !3552}
!3552 = !DILocation(line: 889, column: 4, scope: !3506)
!3553 = !DILocation(line: 890, column: 3, scope: !3501)
!3554 = !DILocation(line: 879, column: 37, scope: !3495)
!3555 = !DILocation(line: 879, column: 3, scope: !3495)
!3556 = distinct !{!3556, !3499, !3557}
!3557 = !DILocation(line: 890, column: 3, scope: !3491)
!3558 = !DILocation(line: 891, column: 2, scope: !3492)
!3559 = !DILocation(line: 878, column: 45, scope: !3488)
!3560 = !DILocation(line: 878, column: 49, scope: !3488)
!3561 = !DILocation(line: 878, column: 43, scope: !3488)
!3562 = !DILocation(line: 878, column: 2, scope: !3488)
!3563 = distinct !{!3563, !3489, !3564}
!3564 = !DILocation(line: 891, column: 2, scope: !3481)
!3565 = !DILocation(line: 892, column: 10, scope: !3455)
!3566 = !DILocation(line: 892, column: 2, scope: !3455)
!3567 = distinct !DISubprogram(name: "setmol_from_xyzw", scope: !3, file: !3, line: 895, type: !3335, scopeLine: 896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3568 = !DILocalVariable(name: "m", arg: 1, scope: !3567, file: !3, line: 895, type: !3226)
!3569 = !DILocation(line: 895, column: 36, scope: !3567)
!3570 = !DILocalVariable(name: "aex", arg: 2, scope: !3567, file: !3, line: 895, type: !3227)
!3571 = !DILocation(line: 895, column: 46, scope: !3567)
!3572 = !DILocalVariable(name: "xyzw", arg: 3, scope: !3567, file: !3, line: 895, type: !180)
!3573 = !DILocation(line: 895, column: 58, scope: !3567)
!3574 = !DILocalVariable(name: "r", scope: !3567, file: !3, line: 897, type: !36)
!3575 = !DILocation(line: 897, column: 7, scope: !3567)
!3576 = !DILocalVariable(name: "a", scope: !3567, file: !3, line: 897, type: !36)
!3577 = !DILocation(line: 897, column: 10, scope: !3567)
!3578 = !DILocalVariable(name: "n", scope: !3567, file: !3, line: 897, type: !36)
!3579 = !DILocation(line: 897, column: 13, scope: !3567)
!3580 = !DILocalVariable(name: "sp", scope: !3567, file: !3, line: 898, type: !38)
!3581 = !DILocation(line: 898, column: 12, scope: !3567)
!3582 = !DILocalVariable(name: "res", scope: !3567, file: !3, line: 899, type: !56)
!3583 = !DILocation(line: 899, column: 13, scope: !3567)
!3584 = !DILocalVariable(name: "ap", scope: !3567, file: !3, line: 900, type: !102)
!3585 = !DILocation(line: 900, column: 11, scope: !3567)
!3586 = !DILocation(line: 902, column: 17, scope: !3567)
!3587 = !DILocation(line: 902, column: 16, scope: !3567)
!3588 = !DILocation(line: 902, column: 20, scope: !3567)
!3589 = !DILocation(line: 902, column: 27, scope: !3567)
!3590 = !DILocation(line: 902, column: 26, scope: !3567)
!3591 = !DILocation(line: 902, column: 2, scope: !3567)
!3592 = !DILocation(line: 903, column: 9, scope: !3593)
!3593 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 903, column: 2)
!3594 = !DILocation(line: 903, column: 21, scope: !3593)
!3595 = !DILocation(line: 903, column: 20, scope: !3593)
!3596 = !DILocation(line: 903, column: 25, scope: !3593)
!3597 = !DILocation(line: 903, column: 17, scope: !3593)
!3598 = !DILocation(line: 903, column: 7, scope: !3593)
!3599 = !DILocation(line: 903, column: 36, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3593, file: !3, line: 903, column: 2)
!3601 = !DILocation(line: 903, column: 2, scope: !3593)
!3602 = !DILocation(line: 904, column: 10, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !3, line: 904, column: 3)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 903, column: 57)
!3605 = !DILocation(line: 904, column: 8, scope: !3603)
!3606 = !DILocation(line: 904, column: 15, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 904, column: 3)
!3608 = !DILocation(line: 904, column: 19, scope: !3607)
!3609 = !DILocation(line: 904, column: 23, scope: !3607)
!3610 = !DILocation(line: 904, column: 17, scope: !3607)
!3611 = !DILocation(line: 904, column: 3, scope: !3603)
!3612 = !DILocation(line: 905, column: 10, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 904, column: 41)
!3614 = !DILocation(line: 905, column: 14, scope: !3613)
!3615 = !DILocation(line: 905, column: 26, scope: !3613)
!3616 = !DILocation(line: 905, column: 8, scope: !3613)
!3617 = !DILocation(line: 906, column: 11, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 906, column: 4)
!3619 = !DILocation(line: 906, column: 9, scope: !3618)
!3620 = !DILocation(line: 906, column: 16, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3618, file: !3, line: 906, column: 4)
!3622 = !DILocation(line: 906, column: 20, scope: !3621)
!3623 = !DILocation(line: 906, column: 25, scope: !3621)
!3624 = !DILocation(line: 906, column: 18, scope: !3621)
!3625 = !DILocation(line: 906, column: 4, scope: !3618)
!3626 = !DILocation(line: 907, column: 11, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3621, file: !3, line: 906, column: 40)
!3628 = !DILocation(line: 907, column: 16, scope: !3627)
!3629 = !DILocation(line: 907, column: 25, scope: !3627)
!3630 = !DILocation(line: 907, column: 8, scope: !3627)
!3631 = !DILocation(line: 908, column: 9, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3627, file: !3, line: 908, column: 9)
!3633 = !DILocation(line: 908, column: 13, scope: !3632)
!3634 = !DILocation(line: 908, column: 20, scope: !3632)
!3635 = !DILocation(line: 908, column: 9, scope: !3627)
!3636 = !DILocation(line: 909, column: 23, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 908, column: 33)
!3638 = !DILocation(line: 909, column: 31, scope: !3637)
!3639 = !DILocation(line: 909, column: 30, scope: !3637)
!3640 = !DILocation(line: 909, column: 33, scope: !3637)
!3641 = !DILocation(line: 909, column: 6, scope: !3637)
!3642 = !DILocation(line: 909, column: 10, scope: !3637)
!3643 = !DILocation(line: 909, column: 21, scope: !3637)
!3644 = !DILocation(line: 910, column: 23, scope: !3637)
!3645 = !DILocation(line: 910, column: 31, scope: !3637)
!3646 = !DILocation(line: 910, column: 30, scope: !3637)
!3647 = !DILocation(line: 910, column: 33, scope: !3637)
!3648 = !DILocation(line: 910, column: 6, scope: !3637)
!3649 = !DILocation(line: 910, column: 10, scope: !3637)
!3650 = !DILocation(line: 910, column: 21, scope: !3637)
!3651 = !DILocation(line: 911, column: 23, scope: !3637)
!3652 = !DILocation(line: 911, column: 31, scope: !3637)
!3653 = !DILocation(line: 911, column: 30, scope: !3637)
!3654 = !DILocation(line: 911, column: 33, scope: !3637)
!3655 = !DILocation(line: 911, column: 6, scope: !3637)
!3656 = !DILocation(line: 911, column: 10, scope: !3637)
!3657 = !DILocation(line: 911, column: 21, scope: !3637)
!3658 = !DILocation(line: 912, column: 23, scope: !3637)
!3659 = !DILocation(line: 912, column: 31, scope: !3637)
!3660 = !DILocation(line: 912, column: 30, scope: !3637)
!3661 = !DILocation(line: 912, column: 33, scope: !3637)
!3662 = !DILocation(line: 912, column: 6, scope: !3637)
!3663 = !DILocation(line: 912, column: 10, scope: !3637)
!3664 = !DILocation(line: 912, column: 21, scope: !3637)
!3665 = !DILocation(line: 913, column: 7, scope: !3637)
!3666 = !DILocation(line: 914, column: 5, scope: !3637)
!3667 = !DILocation(line: 915, column: 4, scope: !3627)
!3668 = !DILocation(line: 906, column: 36, scope: !3621)
!3669 = !DILocation(line: 906, column: 4, scope: !3621)
!3670 = distinct !{!3670, !3625, !3671}
!3671 = !DILocation(line: 915, column: 4, scope: !3618)
!3672 = !DILocation(line: 916, column: 3, scope: !3613)
!3673 = !DILocation(line: 904, column: 37, scope: !3607)
!3674 = !DILocation(line: 904, column: 3, scope: !3607)
!3675 = distinct !{!3675, !3611, !3676}
!3676 = !DILocation(line: 916, column: 3, scope: !3603)
!3677 = !DILocation(line: 917, column: 2, scope: !3604)
!3678 = !DILocation(line: 903, column: 45, scope: !3600)
!3679 = !DILocation(line: 903, column: 49, scope: !3600)
!3680 = !DILocation(line: 903, column: 43, scope: !3600)
!3681 = !DILocation(line: 903, column: 2, scope: !3600)
!3682 = distinct !{!3682, !3601, !3683}
!3683 = !DILocation(line: 917, column: 2, scope: !3593)
!3684 = !DILocation(line: 918, column: 10, scope: !3567)
!3685 = !DILocation(line: 918, column: 2, scope: !3567)
!3686 = distinct !DISubprogram(name: "NAB_ainit", scope: !3, file: !3, line: 921, type: !3687, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{!36, !3227, !36}
!3689 = !DILocalVariable(name: "a", arg: 1, scope: !3686, file: !3, line: 921, type: !3227)
!3690 = !DILocation(line: 921, column: 22, scope: !3686)
!3691 = !DILocalVariable(name: "s", arg: 2, scope: !3686, file: !3, line: 921, type: !36)
!3692 = !DILocation(line: 921, column: 31, scope: !3686)
!3693 = !DILocalVariable(name: "i", scope: !3686, file: !3, line: 923, type: !36)
!3694 = !DILocation(line: 923, column: 6, scope: !3686)
!3695 = !DILocation(line: 925, column: 9, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 925, column: 2)
!3697 = !DILocation(line: 925, column: 7, scope: !3696)
!3698 = !DILocation(line: 925, column: 14, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 925, column: 2)
!3700 = !DILocation(line: 925, column: 18, scope: !3699)
!3701 = !DILocation(line: 925, column: 16, scope: !3699)
!3702 = !DILocation(line: 925, column: 2, scope: !3696)
!3703 = !DILocation(line: 926, column: 3, scope: !3699)
!3704 = !DILocation(line: 926, column: 6, scope: !3699)
!3705 = !DILocation(line: 926, column: 10, scope: !3699)
!3706 = !DILocation(line: 925, column: 22, scope: !3699)
!3707 = !DILocation(line: 925, column: 2, scope: !3699)
!3708 = distinct !{!3708, !3702, !3709}
!3709 = !DILocation(line: 926, column: 12, scope: !3696)
!3710 = !DILocation(line: 927, column: 2, scope: !3686)
!3711 = distinct !DISubprogram(name: "NAB_initres", scope: !3, file: !3, line: 930, type: !1593, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3712 = !DILocalVariable(name: "res", arg: 1, scope: !3711, file: !3, line: 930, type: !56)
!3713 = !DILocation(line: 930, column: 30, scope: !3711)
!3714 = !DILocalVariable(name: "init_str", arg: 2, scope: !3711, file: !3, line: 930, type: !36)
!3715 = !DILocation(line: 930, column: 39, scope: !3711)
!3716 = !DILocation(line: 933, column: 2, scope: !3711)
!3717 = !DILocation(line: 933, column: 7, scope: !3711)
!3718 = !DILocation(line: 933, column: 14, scope: !3711)
!3719 = !DILocation(line: 934, column: 2, scope: !3711)
!3720 = !DILocation(line: 934, column: 7, scope: !3711)
!3721 = !DILocation(line: 934, column: 13, scope: !3711)
!3722 = !DILocation(line: 935, column: 2, scope: !3711)
!3723 = !DILocation(line: 935, column: 7, scope: !3711)
!3724 = !DILocation(line: 935, column: 17, scope: !3711)
!3725 = !DILocation(line: 936, column: 2, scope: !3711)
!3726 = !DILocation(line: 936, column: 7, scope: !3711)
!3727 = !DILocation(line: 936, column: 16, scope: !3711)
!3728 = !DILocation(line: 937, column: 6, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3711, file: !3, line: 937, column: 6)
!3730 = !DILocation(line: 937, column: 6, scope: !3711)
!3731 = !DILocation(line: 938, column: 3, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 937, column: 16)
!3733 = !DILocation(line: 938, column: 8, scope: !3732)
!3734 = !DILocation(line: 938, column: 18, scope: !3732)
!3735 = !DILocation(line: 939, column: 3, scope: !3732)
!3736 = !DILocation(line: 939, column: 8, scope: !3732)
!3737 = !DILocation(line: 939, column: 16, scope: !3732)
!3738 = !DILocation(line: 940, column: 2, scope: !3732)
!3739 = !DILocation(line: 941, column: 2, scope: !3711)
!3740 = !DILocation(line: 941, column: 7, scope: !3711)
!3741 = !DILocation(line: 941, column: 14, scope: !3711)
!3742 = !DILocation(line: 942, column: 2, scope: !3711)
!3743 = !DILocation(line: 942, column: 7, scope: !3711)
!3744 = !DILocation(line: 942, column: 14, scope: !3711)
!3745 = !DILocation(line: 943, column: 2, scope: !3711)
!3746 = !DILocation(line: 943, column: 7, scope: !3711)
!3747 = !DILocation(line: 943, column: 18, scope: !3711)
!3748 = !DILocation(line: 944, column: 2, scope: !3711)
!3749 = !DILocation(line: 944, column: 7, scope: !3711)
!3750 = !DILocation(line: 944, column: 16, scope: !3711)
!3751 = !DILocation(line: 945, column: 2, scope: !3711)
!3752 = !DILocation(line: 945, column: 7, scope: !3711)
!3753 = !DILocation(line: 945, column: 18, scope: !3711)
!3754 = !DILocation(line: 946, column: 2, scope: !3711)
!3755 = !DILocation(line: 946, column: 7, scope: !3711)
!3756 = !DILocation(line: 946, column: 19, scope: !3711)
!3757 = !DILocation(line: 947, column: 2, scope: !3711)
!3758 = !DILocation(line: 947, column: 7, scope: !3711)
!3759 = !DILocation(line: 947, column: 18, scope: !3711)
!3760 = !DILocation(line: 948, column: 2, scope: !3711)
!3761 = !DILocation(line: 948, column: 7, scope: !3711)
!3762 = !DILocation(line: 948, column: 18, scope: !3711)
!3763 = !DILocation(line: 949, column: 2, scope: !3711)
!3764 = !DILocation(line: 949, column: 7, scope: !3711)
!3765 = !DILocation(line: 949, column: 17, scope: !3711)
!3766 = !DILocation(line: 950, column: 2, scope: !3711)
!3767 = !DILocation(line: 950, column: 7, scope: !3711)
!3768 = !DILocation(line: 950, column: 16, scope: !3711)
!3769 = !DILocation(line: 951, column: 2, scope: !3711)
!3770 = !DILocation(line: 951, column: 7, scope: !3711)
!3771 = !DILocation(line: 951, column: 16, scope: !3711)
!3772 = !DILocation(line: 952, column: 2, scope: !3711)
!3773 = !DILocation(line: 952, column: 7, scope: !3711)
!3774 = !DILocation(line: 952, column: 16, scope: !3711)
!3775 = !DILocation(line: 953, column: 2, scope: !3711)
!3776 = !DILocation(line: 953, column: 7, scope: !3711)
!3777 = !DILocation(line: 953, column: 15, scope: !3711)
!3778 = !DILocation(line: 954, column: 1, scope: !3711)
!3779 = distinct !DISubprogram(name: "NAB_initatom", scope: !3, file: !3, line: 956, type: !3780, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3780 = !DISubroutineType(types: !3781)
!3781 = !{null, !102, !36}
!3782 = !DILocalVariable(name: "ap", arg: 1, scope: !3779, file: !3, line: 956, type: !102)
!3783 = !DILocation(line: 956, column: 28, scope: !3779)
!3784 = !DILocalVariable(name: "init_str", arg: 2, scope: !3779, file: !3, line: 956, type: !36)
!3785 = !DILocation(line: 956, column: 36, scope: !3779)
!3786 = !DILocalVariable(name: "i", scope: !3779, file: !3, line: 958, type: !36)
!3787 = !DILocation(line: 958, column: 6, scope: !3779)
!3788 = !DILocation(line: 960, column: 6, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 960, column: 6)
!3790 = !DILocation(line: 960, column: 6, scope: !3779)
!3791 = !DILocation(line: 961, column: 3, scope: !3789)
!3792 = !DILocation(line: 961, column: 7, scope: !3789)
!3793 = !DILocation(line: 961, column: 18, scope: !3789)
!3794 = !DILocation(line: 962, column: 6, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 962, column: 6)
!3796 = !DILocation(line: 962, column: 6, scope: !3779)
!3797 = !DILocation(line: 963, column: 3, scope: !3795)
!3798 = !DILocation(line: 963, column: 7, scope: !3795)
!3799 = !DILocation(line: 963, column: 18, scope: !3795)
!3800 = !DILocation(line: 964, column: 2, scope: !3779)
!3801 = !DILocation(line: 964, column: 6, scope: !3779)
!3802 = !DILocation(line: 964, column: 17, scope: !3779)
!3803 = !DILocation(line: 965, column: 2, scope: !3779)
!3804 = !DILocation(line: 965, column: 6, scope: !3779)
!3805 = !DILocation(line: 965, column: 17, scope: !3779)
!3806 = !DILocation(line: 966, column: 9, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 966, column: 2)
!3808 = !DILocation(line: 966, column: 7, scope: !3807)
!3809 = !DILocation(line: 966, column: 14, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3807, file: !3, line: 966, column: 2)
!3811 = !DILocation(line: 966, column: 16, scope: !3810)
!3812 = !DILocation(line: 966, column: 2, scope: !3807)
!3813 = !DILocation(line: 967, column: 3, scope: !3810)
!3814 = !DILocation(line: 967, column: 7, scope: !3810)
!3815 = !DILocation(line: 967, column: 18, scope: !3810)
!3816 = !DILocation(line: 967, column: 22, scope: !3810)
!3817 = !DILocation(line: 966, column: 35, scope: !3810)
!3818 = !DILocation(line: 966, column: 2, scope: !3810)
!3819 = distinct !{!3819, !3812, !3820}
!3820 = !DILocation(line: 967, column: 24, scope: !3807)
!3821 = !DILocation(line: 968, column: 2, scope: !3779)
!3822 = !DILocation(line: 968, column: 6, scope: !3779)
!3823 = !DILocation(line: 968, column: 17, scope: !3779)
!3824 = !DILocation(line: 969, column: 2, scope: !3779)
!3825 = !DILocation(line: 969, column: 6, scope: !3779)
!3826 = !DILocation(line: 969, column: 17, scope: !3779)
!3827 = !DILocation(line: 970, column: 2, scope: !3779)
!3828 = !DILocation(line: 970, column: 6, scope: !3779)
!3829 = !DILocation(line: 970, column: 17, scope: !3779)
!3830 = !DILocation(line: 971, column: 2, scope: !3779)
!3831 = !DILocation(line: 971, column: 6, scope: !3779)
!3832 = !DILocation(line: 971, column: 17, scope: !3779)
!3833 = !DILocation(line: 972, column: 2, scope: !3779)
!3834 = !DILocation(line: 972, column: 6, scope: !3779)
!3835 = !DILocation(line: 972, column: 17, scope: !3779)
!3836 = !DILocation(line: 973, column: 6, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 973, column: 6)
!3838 = !DILocation(line: 973, column: 6, scope: !3779)
!3839 = !DILocation(line: 974, column: 3, scope: !3837)
!3840 = !DILocation(line: 974, column: 7, scope: !3837)
!3841 = !DILocation(line: 974, column: 17, scope: !3837)
!3842 = !DILocation(line: 975, column: 2, scope: !3779)
!3843 = !DILocation(line: 975, column: 6, scope: !3779)
!3844 = !DILocation(line: 975, column: 17, scope: !3779)
!3845 = !DILocation(line: 976, column: 2, scope: !3779)
!3846 = !DILocation(line: 976, column: 6, scope: !3779)
!3847 = !DILocation(line: 976, column: 17, scope: !3779)
!3848 = !DILocation(line: 977, column: 2, scope: !3779)
!3849 = !DILocation(line: 977, column: 6, scope: !3779)
!3850 = !DILocation(line: 977, column: 17, scope: !3779)
!3851 = !DILocation(line: 978, column: 2, scope: !3779)
!3852 = !DILocation(line: 978, column: 6, scope: !3779)
!3853 = !DILocation(line: 978, column: 17, scope: !3779)
!3854 = !DILocation(line: 979, column: 2, scope: !3779)
!3855 = !DILocation(line: 979, column: 6, scope: !3779)
!3856 = !DILocation(line: 979, column: 17, scope: !3779)
!3857 = !DILocation(line: 980, column: 6, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3779, file: !3, line: 980, column: 6)
!3859 = !DILocation(line: 980, column: 6, scope: !3779)
!3860 = !DILocation(line: 981, column: 3, scope: !3858)
!3861 = !DILocation(line: 981, column: 7, scope: !3858)
!3862 = !DILocation(line: 981, column: 18, scope: !3858)
!3863 = !DILocation(line: 982, column: 2, scope: !3779)
!3864 = !DILocation(line: 982, column: 6, scope: !3779)
!3865 = !DILocation(line: 982, column: 17, scope: !3779)
!3866 = !DILocation(line: 983, column: 2, scope: !3779)
!3867 = !DILocation(line: 983, column: 6, scope: !3779)
!3868 = !DILocation(line: 983, column: 17, scope: !3779)
!3869 = !DILocation(line: 984, column: 2, scope: !3779)
!3870 = !DILocation(line: 984, column: 6, scope: !3779)
!3871 = !DILocation(line: 984, column: 17, scope: !3779)
!3872 = !DILocation(line: 985, column: 2, scope: !3779)
!3873 = !DILocation(line: 985, column: 6, scope: !3779)
!3874 = !DILocation(line: 985, column: 17, scope: !3779)
!3875 = !DILocation(line: 986, column: 1, scope: !3779)
!3876 = distinct !DISubprogram(name: "NAB_mnext", scope: !3, file: !3, line: 988, type: !3877, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!3877 = !DISubroutineType(types: !3878)
!3878 = !{!102, !22, !102}
!3879 = !DILocalVariable(name: "mol", arg: 1, scope: !3876, file: !3, line: 988, type: !22)
!3880 = !DILocation(line: 988, column: 32, scope: !3876)
!3881 = !DILocalVariable(name: "cap", arg: 2, scope: !3876, file: !3, line: 988, type: !102)
!3882 = !DILocation(line: 988, column: 45, scope: !3876)
!3883 = !DILocalVariable(name: "sp", scope: !3876, file: !3, line: 990, type: !38)
!3884 = !DILocation(line: 990, column: 12, scope: !3876)
!3885 = !DILocalVariable(name: "res", scope: !3876, file: !3, line: 991, type: !56)
!3886 = !DILocation(line: 991, column: 13, scope: !3876)
!3887 = !DILocalVariable(name: "ap", scope: !3876, file: !3, line: 992, type: !102)
!3888 = !DILocation(line: 992, column: 11, scope: !3876)
!3889 = !DILocalVariable(name: "r", scope: !3876, file: !3, line: 993, type: !36)
!3890 = !DILocation(line: 993, column: 7, scope: !3876)
!3891 = !DILocalVariable(name: "nr", scope: !3876, file: !3, line: 993, type: !36)
!3892 = !DILocation(line: 993, column: 10, scope: !3876)
!3893 = !DILocalVariable(name: "a", scope: !3876, file: !3, line: 993, type: !36)
!3894 = !DILocation(line: 993, column: 14, scope: !3876)
!3895 = !DILocation(line: 995, column: 7, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3876, file: !3, line: 995, column: 6)
!3897 = !DILocation(line: 995, column: 6, scope: !3876)
!3898 = !DILocation(line: 996, column: 13, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 996, column: 3)
!3900 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 995, column: 12)
!3901 = !DILocation(line: 996, column: 18, scope: !3899)
!3902 = !DILocation(line: 996, column: 11, scope: !3899)
!3903 = !DILocation(line: 996, column: 8, scope: !3899)
!3904 = !DILocation(line: 997, column: 4, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 996, column: 3)
!3906 = !DILocation(line: 997, column: 7, scope: !3905)
!3907 = !DILocation(line: 997, column: 10, scope: !3905)
!3908 = !DILocation(line: 997, column: 14, scope: !3905)
!3909 = !DILocation(line: 997, column: 26, scope: !3905)
!3910 = !DILocation(line: 0, scope: !3905)
!3911 = !DILocation(line: 996, column: 3, scope: !3899)
!3912 = !DILocation(line: 997, column: 37, scope: !3905)
!3913 = !DILocation(line: 997, column: 41, scope: !3905)
!3914 = !DILocation(line: 997, column: 35, scope: !3905)
!3915 = !DILocation(line: 996, column: 3, scope: !3905)
!3916 = distinct !{!3916, !3911, !3917}
!3917 = !DILocation(line: 998, column: 4, scope: !3899)
!3918 = !DILocation(line: 999, column: 8, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3900, file: !3, line: 999, column: 7)
!3920 = !DILocation(line: 999, column: 7, scope: !3900)
!3921 = !DILocation(line: 1000, column: 4, scope: !3919)
!3922 = !DILocation(line: 1001, column: 9, scope: !3900)
!3923 = !DILocation(line: 1001, column: 13, scope: !3900)
!3924 = !DILocation(line: 1001, column: 7, scope: !3900)
!3925 = !DILocation(line: 1002, column: 9, scope: !3900)
!3926 = !DILocation(line: 1002, column: 14, scope: !3900)
!3927 = !DILocation(line: 1002, column: 6, scope: !3900)
!3928 = !DILocation(line: 1003, column: 11, scope: !3900)
!3929 = !DILocation(line: 1003, column: 3, scope: !3900)
!3930 = !DILocation(line: 1005, column: 9, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3896, file: !3, line: 1004, column: 7)
!3932 = !DILocation(line: 1005, column: 14, scope: !3931)
!3933 = !DILocation(line: 1005, column: 7, scope: !3931)
!3934 = !DILocation(line: 1006, column: 7, scope: !3931)
!3935 = !DILocation(line: 1006, column: 13, scope: !3931)
!3936 = !DILocation(line: 1006, column: 18, scope: !3931)
!3937 = !DILocation(line: 1006, column: 11, scope: !3931)
!3938 = !DILocation(line: 1006, column: 26, scope: !3931)
!3939 = !DILocation(line: 1006, column: 5, scope: !3931)
!3940 = !DILocation(line: 1007, column: 7, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1007, column: 7)
!3942 = !DILocation(line: 1007, column: 11, scope: !3941)
!3943 = !DILocation(line: 1007, column: 16, scope: !3941)
!3944 = !DILocation(line: 1007, column: 9, scope: !3941)
!3945 = !DILocation(line: 1007, column: 7, scope: !3931)
!3946 = !DILocation(line: 1008, column: 10, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 1007, column: 26)
!3948 = !DILocation(line: 1008, column: 15, scope: !3947)
!3949 = !DILocation(line: 1008, column: 24, scope: !3947)
!3950 = !DILocation(line: 1008, column: 7, scope: !3947)
!3951 = !DILocation(line: 1009, column: 12, scope: !3947)
!3952 = !DILocation(line: 1009, column: 4, scope: !3947)
!3953 = !DILocation(line: 1012, column: 8, scope: !3931)
!3954 = !DILocation(line: 1012, column: 13, scope: !3931)
!3955 = !DILocation(line: 1012, column: 6, scope: !3931)
!3956 = !DILocation(line: 1013, column: 13, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1013, column: 3)
!3958 = !DILocation(line: 1013, column: 17, scope: !3957)
!3959 = !DILocation(line: 1013, column: 11, scope: !3957)
!3960 = !DILocation(line: 1013, column: 32, scope: !3957)
!3961 = !DILocation(line: 1013, column: 8, scope: !3957)
!3962 = !DILocation(line: 1013, column: 37, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3957, file: !3, line: 1013, column: 3)
!3964 = !DILocation(line: 1013, column: 41, scope: !3963)
!3965 = !DILocation(line: 1013, column: 45, scope: !3963)
!3966 = !DILocation(line: 1013, column: 39, scope: !3963)
!3967 = !DILocation(line: 1013, column: 3, scope: !3957)
!3968 = !DILocation(line: 1014, column: 8, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3970, file: !3, line: 1014, column: 8)
!3970 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 1013, column: 63)
!3971 = !DILocation(line: 1014, column: 12, scope: !3969)
!3972 = !DILocation(line: 1014, column: 24, scope: !3969)
!3973 = !DILocation(line: 1014, column: 31, scope: !3969)
!3974 = !DILocation(line: 1014, column: 28, scope: !3969)
!3975 = !DILocation(line: 1014, column: 8, scope: !3970)
!3976 = !DILocation(line: 1015, column: 10, scope: !3977)
!3977 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 1014, column: 36)
!3978 = !DILocation(line: 1015, column: 12, scope: !3977)
!3979 = !DILocation(line: 1015, column: 8, scope: !3977)
!3980 = !DILocation(line: 1016, column: 5, scope: !3977)
!3981 = !DILocation(line: 1018, column: 3, scope: !3970)
!3982 = !DILocation(line: 1013, column: 59, scope: !3963)
!3983 = !DILocation(line: 1013, column: 3, scope: !3963)
!3984 = distinct !{!3984, !3967, !3985}
!3985 = !DILocation(line: 1018, column: 3, scope: !3957)
!3986 = !DILocation(line: 1019, column: 7, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1019, column: 7)
!3988 = !DILocation(line: 1019, column: 12, scope: !3987)
!3989 = !DILocation(line: 1019, column: 16, scope: !3987)
!3990 = !DILocation(line: 1019, column: 10, scope: !3987)
!3991 = !DILocation(line: 1019, column: 7, scope: !3931)
!3992 = !DILocation(line: 1020, column: 10, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3987, file: !3, line: 1019, column: 29)
!3994 = !DILocation(line: 1020, column: 14, scope: !3993)
!3995 = !DILocation(line: 1020, column: 26, scope: !3993)
!3996 = !DILocation(line: 1020, column: 8, scope: !3993)
!3997 = !DILocation(line: 1021, column: 10, scope: !3993)
!3998 = !DILocation(line: 1021, column: 15, scope: !3993)
!3999 = !DILocation(line: 1021, column: 7, scope: !3993)
!4000 = !DILocation(line: 1022, column: 12, scope: !3993)
!4001 = !DILocation(line: 1022, column: 4, scope: !3993)
!4002 = !DILocation(line: 1025, column: 13, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1025, column: 3)
!4004 = !DILocation(line: 1025, column: 17, scope: !4003)
!4005 = !DILocation(line: 1025, column: 11, scope: !4003)
!4006 = !DILocation(line: 1025, column: 8, scope: !4003)
!4007 = !DILocation(line: 1026, column: 4, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1025, column: 3)
!4009 = !DILocation(line: 1026, column: 7, scope: !4008)
!4010 = !DILocation(line: 1026, column: 10, scope: !4008)
!4011 = !DILocation(line: 1026, column: 14, scope: !4008)
!4012 = !DILocation(line: 1026, column: 26, scope: !4008)
!4013 = !DILocation(line: 0, scope: !4008)
!4014 = !DILocation(line: 1025, column: 3, scope: !4003)
!4015 = !DILocation(line: 1026, column: 37, scope: !4008)
!4016 = !DILocation(line: 1026, column: 41, scope: !4008)
!4017 = !DILocation(line: 1026, column: 35, scope: !4008)
!4018 = !DILocation(line: 1025, column: 3, scope: !4008)
!4019 = distinct !{!4019, !4014, !4020}
!4020 = !DILocation(line: 1027, column: 4, scope: !4003)
!4021 = !DILocation(line: 1028, column: 8, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1028, column: 7)
!4023 = !DILocation(line: 1028, column: 7, scope: !3931)
!4024 = !DILocation(line: 1029, column: 4, scope: !4022)
!4025 = !DILocation(line: 1030, column: 9, scope: !3931)
!4026 = !DILocation(line: 1030, column: 13, scope: !3931)
!4027 = !DILocation(line: 1030, column: 7, scope: !3931)
!4028 = !DILocation(line: 1031, column: 9, scope: !3931)
!4029 = !DILocation(line: 1031, column: 14, scope: !3931)
!4030 = !DILocation(line: 1031, column: 6, scope: !3931)
!4031 = !DILocation(line: 1032, column: 11, scope: !3931)
!4032 = !DILocation(line: 1032, column: 3, scope: !3931)
!4033 = !DILocation(line: 1034, column: 1, scope: !3876)
!4034 = distinct !DISubprogram(name: "NAB_rnext", scope: !3, file: !3, line: 1036, type: !4035, scopeLine: 1037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{!56, !22, !56}
!4037 = !DILocalVariable(name: "mol", arg: 1, scope: !4034, file: !3, line: 1036, type: !22)
!4038 = !DILocation(line: 1036, column: 35, scope: !4034)
!4039 = !DILocalVariable(name: "crp", arg: 2, scope: !4034, file: !3, line: 1036, type: !56)
!4040 = !DILocation(line: 1036, column: 51, scope: !4034)
!4041 = !DILocalVariable(name: "sp", scope: !4034, file: !3, line: 1038, type: !38)
!4042 = !DILocation(line: 1038, column: 12, scope: !4034)
!4043 = !DILocalVariable(name: "res", scope: !4034, file: !3, line: 1039, type: !56)
!4044 = !DILocation(line: 1039, column: 13, scope: !4034)
!4045 = !DILocalVariable(name: "r", scope: !4034, file: !3, line: 1040, type: !36)
!4046 = !DILocation(line: 1040, column: 7, scope: !4034)
!4047 = !DILocalVariable(name: "nr", scope: !4034, file: !3, line: 1040, type: !36)
!4048 = !DILocation(line: 1040, column: 10, scope: !4034)
!4049 = !DILocation(line: 1042, column: 7, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 1042, column: 6)
!4051 = !DILocation(line: 1042, column: 6, scope: !4034)
!4052 = !DILocation(line: 1043, column: 13, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1043, column: 3)
!4054 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 1042, column: 12)
!4055 = !DILocation(line: 1043, column: 18, scope: !4053)
!4056 = !DILocation(line: 1043, column: 11, scope: !4053)
!4057 = !DILocation(line: 1043, column: 8, scope: !4053)
!4058 = !DILocation(line: 1044, column: 4, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 1043, column: 3)
!4060 = !DILocation(line: 1044, column: 7, scope: !4059)
!4061 = !DILocation(line: 1044, column: 10, scope: !4059)
!4062 = !DILocation(line: 1044, column: 14, scope: !4059)
!4063 = !DILocation(line: 1044, column: 26, scope: !4059)
!4064 = !DILocation(line: 0, scope: !4059)
!4065 = !DILocation(line: 1043, column: 3, scope: !4053)
!4066 = !DILocation(line: 1044, column: 37, scope: !4059)
!4067 = !DILocation(line: 1044, column: 41, scope: !4059)
!4068 = !DILocation(line: 1044, column: 35, scope: !4059)
!4069 = !DILocation(line: 1043, column: 3, scope: !4059)
!4070 = distinct !{!4070, !4065, !4071}
!4071 = !DILocation(line: 1045, column: 4, scope: !4053)
!4072 = !DILocation(line: 1046, column: 8, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4054, file: !3, line: 1046, column: 7)
!4074 = !DILocation(line: 1046, column: 7, scope: !4054)
!4075 = !DILocation(line: 1047, column: 4, scope: !4073)
!4076 = !DILocation(line: 1048, column: 9, scope: !4054)
!4077 = !DILocation(line: 1048, column: 13, scope: !4054)
!4078 = !DILocation(line: 1048, column: 7, scope: !4054)
!4079 = !DILocation(line: 1049, column: 11, scope: !4054)
!4080 = !DILocation(line: 1049, column: 3, scope: !4054)
!4081 = !DILocation(line: 1052, column: 8, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 1050, column: 7)
!4083 = !DILocation(line: 1052, column: 13, scope: !4082)
!4084 = !DILocation(line: 1052, column: 6, scope: !4082)
!4085 = !DILocation(line: 1053, column: 13, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 1053, column: 3)
!4087 = !DILocation(line: 1053, column: 17, scope: !4086)
!4088 = !DILocation(line: 1053, column: 11, scope: !4086)
!4089 = !DILocation(line: 1053, column: 32, scope: !4086)
!4090 = !DILocation(line: 1053, column: 8, scope: !4086)
!4091 = !DILocation(line: 1053, column: 37, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4086, file: !3, line: 1053, column: 3)
!4093 = !DILocation(line: 1053, column: 41, scope: !4092)
!4094 = !DILocation(line: 1053, column: 45, scope: !4092)
!4095 = !DILocation(line: 1053, column: 39, scope: !4092)
!4096 = !DILocation(line: 1053, column: 3, scope: !4086)
!4097 = !DILocation(line: 1054, column: 8, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4099, file: !3, line: 1054, column: 8)
!4099 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 1053, column: 63)
!4100 = !DILocation(line: 1054, column: 12, scope: !4098)
!4101 = !DILocation(line: 1054, column: 24, scope: !4098)
!4102 = !DILocation(line: 1054, column: 31, scope: !4098)
!4103 = !DILocation(line: 1054, column: 28, scope: !4098)
!4104 = !DILocation(line: 1054, column: 8, scope: !4099)
!4105 = !DILocation(line: 1055, column: 10, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 1054, column: 36)
!4107 = !DILocation(line: 1055, column: 12, scope: !4106)
!4108 = !DILocation(line: 1055, column: 8, scope: !4106)
!4109 = !DILocation(line: 1056, column: 5, scope: !4106)
!4110 = !DILocation(line: 1058, column: 3, scope: !4099)
!4111 = !DILocation(line: 1053, column: 59, scope: !4092)
!4112 = !DILocation(line: 1053, column: 3, scope: !4092)
!4113 = distinct !{!4113, !4096, !4114}
!4114 = !DILocation(line: 1058, column: 3, scope: !4086)
!4115 = !DILocation(line: 1059, column: 7, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 1059, column: 7)
!4117 = !DILocation(line: 1059, column: 12, scope: !4116)
!4118 = !DILocation(line: 1059, column: 16, scope: !4116)
!4119 = !DILocation(line: 1059, column: 10, scope: !4116)
!4120 = !DILocation(line: 1059, column: 7, scope: !4082)
!4121 = !DILocation(line: 1060, column: 10, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4116, file: !3, line: 1059, column: 29)
!4123 = !DILocation(line: 1060, column: 14, scope: !4122)
!4124 = !DILocation(line: 1060, column: 26, scope: !4122)
!4125 = !DILocation(line: 1060, column: 8, scope: !4122)
!4126 = !DILocation(line: 1061, column: 12, scope: !4122)
!4127 = !DILocation(line: 1061, column: 4, scope: !4122)
!4128 = !DILocation(line: 1064, column: 13, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 1064, column: 3)
!4130 = !DILocation(line: 1064, column: 17, scope: !4129)
!4131 = !DILocation(line: 1064, column: 11, scope: !4129)
!4132 = !DILocation(line: 1064, column: 8, scope: !4129)
!4133 = !DILocation(line: 1065, column: 4, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 1064, column: 3)
!4135 = !DILocation(line: 1065, column: 7, scope: !4134)
!4136 = !DILocation(line: 1065, column: 10, scope: !4134)
!4137 = !DILocation(line: 1065, column: 14, scope: !4134)
!4138 = !DILocation(line: 1065, column: 26, scope: !4134)
!4139 = !DILocation(line: 0, scope: !4134)
!4140 = !DILocation(line: 1064, column: 3, scope: !4129)
!4141 = !DILocation(line: 1065, column: 37, scope: !4134)
!4142 = !DILocation(line: 1065, column: 41, scope: !4134)
!4143 = !DILocation(line: 1065, column: 35, scope: !4134)
!4144 = !DILocation(line: 1064, column: 3, scope: !4134)
!4145 = distinct !{!4145, !4140, !4146}
!4146 = !DILocation(line: 1066, column: 4, scope: !4129)
!4147 = !DILocation(line: 1067, column: 8, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 1067, column: 7)
!4149 = !DILocation(line: 1067, column: 7, scope: !4082)
!4150 = !DILocation(line: 1068, column: 4, scope: !4148)
!4151 = !DILocation(line: 1069, column: 9, scope: !4082)
!4152 = !DILocation(line: 1069, column: 13, scope: !4082)
!4153 = !DILocation(line: 1069, column: 7, scope: !4082)
!4154 = !DILocation(line: 1070, column: 11, scope: !4082)
!4155 = !DILocation(line: 1070, column: 3, scope: !4082)
!4156 = !DILocation(line: 1072, column: 1, scope: !4034)
!4157 = distinct !DISubprogram(name: "NAB_anext", scope: !3, file: !3, line: 1074, type: !4158, scopeLine: 1075, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!102, !56, !102}
!4160 = !DILocalVariable(name: "res", arg: 1, scope: !4157, file: !3, line: 1074, type: !56)
!4161 = !DILocation(line: 1074, column: 32, scope: !4157)
!4162 = !DILocalVariable(name: "cap", arg: 2, scope: !4157, file: !3, line: 1074, type: !102)
!4163 = !DILocation(line: 1074, column: 45, scope: !4157)
!4164 = !DILocalVariable(name: "ap", scope: !4157, file: !3, line: 1076, type: !102)
!4165 = !DILocation(line: 1076, column: 11, scope: !4157)
!4166 = !DILocalVariable(name: "na", scope: !4157, file: !3, line: 1077, type: !36)
!4167 = !DILocation(line: 1077, column: 7, scope: !4157)
!4168 = !DILocation(line: 1079, column: 7, scope: !4169)
!4169 = distinct !DILexicalBlock(scope: !4157, file: !3, line: 1079, column: 6)
!4170 = !DILocation(line: 1079, column: 6, scope: !4157)
!4171 = !DILocation(line: 1080, column: 8, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 1079, column: 12)
!4173 = !DILocation(line: 1080, column: 13, scope: !4172)
!4174 = !DILocation(line: 1080, column: 6, scope: !4172)
!4175 = !DILocation(line: 1081, column: 11, scope: !4172)
!4176 = !DILocation(line: 1081, column: 3, scope: !4172)
!4177 = !DILocation(line: 1084, column: 10, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4169, file: !3, line: 1082, column: 7)
!4179 = !DILocation(line: 1084, column: 16, scope: !4178)
!4180 = !DILocation(line: 1084, column: 21, scope: !4178)
!4181 = !DILocation(line: 1084, column: 14, scope: !4178)
!4182 = !DILocation(line: 1084, column: 31, scope: !4178)
!4183 = !DILocation(line: 1084, column: 8, scope: !4178)
!4184 = !DILocation(line: 1084, column: 6, scope: !4178)
!4185 = !DILocation(line: 1085, column: 7, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 1085, column: 7)
!4187 = !DILocation(line: 1085, column: 12, scope: !4186)
!4188 = !DILocation(line: 1085, column: 17, scope: !4186)
!4189 = !DILocation(line: 1085, column: 10, scope: !4186)
!4190 = !DILocation(line: 1085, column: 7, scope: !4178)
!4191 = !DILocation(line: 1086, column: 10, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4186, file: !3, line: 1085, column: 27)
!4193 = !DILocation(line: 1086, column: 15, scope: !4192)
!4194 = !DILocation(line: 1086, column: 24, scope: !4192)
!4195 = !DILocation(line: 1086, column: 7, scope: !4192)
!4196 = !DILocation(line: 1087, column: 12, scope: !4192)
!4197 = !DILocation(line: 1087, column: 4, scope: !4192)
!4198 = !DILocation(line: 1089, column: 4, scope: !4186)
!4199 = !DILocation(line: 1091, column: 1, scope: !4157)
!4200 = distinct !DISubprogram(name: "NAB_mri", scope: !3, file: !3, line: 1093, type: !4201, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!244, !22, !238}
!4203 = !DILocalVariable(name: "mol", arg: 1, scope: !4200, file: !3, line: 1093, type: !22)
!4204 = !DILocation(line: 1093, column: 27, scope: !4200)
!4205 = !DILocalVariable(name: "key", arg: 2, scope: !4200, file: !3, line: 1093, type: !238)
!4206 = !DILocation(line: 1093, column: 37, scope: !4200)
!4207 = !DILocation(line: 1096, column: 15, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 1096, column: 6)
!4209 = !DILocation(line: 1096, column: 7, scope: !4208)
!4210 = !DILocation(line: 1096, column: 6, scope: !4200)
!4211 = !DILocation(line: 1097, column: 8, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4213, file: !3, line: 1097, column: 7)
!4213 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 1096, column: 34)
!4214 = !DILocation(line: 1097, column: 13, scope: !4212)
!4215 = !DILocation(line: 1097, column: 7, scope: !4213)
!4216 = !DILocation(line: 1098, column: 20, scope: !4212)
!4217 = !DILocation(line: 1098, column: 4, scope: !4212)
!4218 = !DILocation(line: 1099, column: 12, scope: !4213)
!4219 = !DILocation(line: 1099, column: 17, scope: !4213)
!4220 = !DILocation(line: 1099, column: 3, scope: !4213)
!4221 = !DILocation(line: 1100, column: 21, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 1100, column: 12)
!4223 = !DILocation(line: 1100, column: 13, scope: !4222)
!4224 = !DILocation(line: 1100, column: 12, scope: !4208)
!4225 = !DILocation(line: 1101, column: 8, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4227, file: !3, line: 1101, column: 7)
!4227 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 1100, column: 41)
!4228 = !DILocation(line: 1101, column: 13, scope: !4226)
!4229 = !DILocation(line: 1101, column: 7, scope: !4227)
!4230 = !DILocation(line: 1102, column: 20, scope: !4226)
!4231 = !DILocation(line: 1102, column: 4, scope: !4226)
!4232 = !DILocation(line: 1103, column: 12, scope: !4227)
!4233 = !DILocation(line: 1103, column: 17, scope: !4227)
!4234 = !DILocation(line: 1103, column: 3, scope: !4227)
!4235 = !DILocation(line: 1104, column: 21, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4222, file: !3, line: 1104, column: 12)
!4237 = !DILocation(line: 1104, column: 13, scope: !4236)
!4238 = !DILocation(line: 1104, column: 12, scope: !4222)
!4239 = !DILocation(line: 1105, column: 8, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 1105, column: 7)
!4241 = distinct !DILexicalBlock(scope: !4236, file: !3, line: 1104, column: 38)
!4242 = !DILocation(line: 1105, column: 13, scope: !4240)
!4243 = !DILocation(line: 1105, column: 7, scope: !4241)
!4244 = !DILocation(line: 1106, column: 20, scope: !4240)
!4245 = !DILocation(line: 1106, column: 4, scope: !4240)
!4246 = !DILocation(line: 1107, column: 12, scope: !4241)
!4247 = !DILocation(line: 1107, column: 17, scope: !4241)
!4248 = !DILocation(line: 1107, column: 3, scope: !4241)
!4249 = !DILocation(line: 1109, column: 12, scope: !4236)
!4250 = !DILocation(line: 1109, column: 50, scope: !4236)
!4251 = !DILocation(line: 1109, column: 3, scope: !4236)
!4252 = !DILocation(line: 1110, column: 2, scope: !4200)
!4253 = !DILocation(line: 1111, column: 1, scope: !4200)
!4254 = !DILocalVariable(name: "res", arg: 1, scope: !255, file: !3, line: 1113, type: !56)
!4255 = !DILocation(line: 1113, column: 26, scope: !255)
!4256 = !DILocalVariable(name: "key", arg: 2, scope: !255, file: !3, line: 1113, type: !238)
!4257 = !DILocation(line: 1113, column: 36, scope: !255)
!4258 = !DILocalVariable(name: "sp", scope: !255, file: !3, line: 1115, type: !38)
!4259 = !DILocation(line: 1115, column: 12, scope: !255)
!4260 = !DILocalVariable(name: "mp", scope: !255, file: !3, line: 1116, type: !22)
!4261 = !DILocation(line: 1116, column: 14, scope: !255)
!4262 = !DILocation(line: 1119, column: 15, scope: !4263)
!4263 = distinct !DILexicalBlock(scope: !255, file: !3, line: 1119, column: 6)
!4264 = !DILocation(line: 1119, column: 7, scope: !4263)
!4265 = !DILocation(line: 1119, column: 6, scope: !255)
!4266 = !DILocation(line: 1120, column: 8, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 1119, column: 32)
!4268 = !DILocation(line: 1120, column: 13, scope: !4267)
!4269 = !DILocation(line: 1120, column: 6, scope: !4267)
!4270 = !DILocation(line: 1121, column: 8, scope: !4267)
!4271 = !DILocation(line: 1121, column: 12, scope: !4267)
!4272 = !DILocation(line: 1121, column: 6, scope: !4267)
!4273 = !DILocation(line: 1122, column: 8, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4267, file: !3, line: 1122, column: 7)
!4275 = !DILocation(line: 1122, column: 12, scope: !4274)
!4276 = !DILocation(line: 1122, column: 7, scope: !4267)
!4277 = !DILocation(line: 1123, column: 20, scope: !4274)
!4278 = !DILocation(line: 1123, column: 4, scope: !4274)
!4279 = !DILocation(line: 1124, column: 12, scope: !4267)
!4280 = !DILocation(line: 1124, column: 17, scope: !4267)
!4281 = !DILocation(line: 1124, column: 3, scope: !4267)
!4282 = !DILocation(line: 1125, column: 21, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 1125, column: 12)
!4284 = !DILocation(line: 1125, column: 13, scope: !4283)
!4285 = !DILocation(line: 1125, column: 12, scope: !4263)
!4286 = !DILocation(line: 1126, column: 8, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 1125, column: 39)
!4288 = !DILocation(line: 1126, column: 13, scope: !4287)
!4289 = !DILocation(line: 1126, column: 6, scope: !4287)
!4290 = !DILocation(line: 1127, column: 8, scope: !4287)
!4291 = !DILocation(line: 1127, column: 12, scope: !4287)
!4292 = !DILocation(line: 1127, column: 6, scope: !4287)
!4293 = !DILocation(line: 1128, column: 8, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 1128, column: 7)
!4295 = !DILocation(line: 1128, column: 12, scope: !4294)
!4296 = !DILocation(line: 1128, column: 7, scope: !4287)
!4297 = !DILocation(line: 1129, column: 20, scope: !4294)
!4298 = !DILocation(line: 1129, column: 4, scope: !4294)
!4299 = !DILocation(line: 1130, column: 12, scope: !4287)
!4300 = !DILocation(line: 1130, column: 17, scope: !4287)
!4301 = !DILocation(line: 1130, column: 3, scope: !4287)
!4302 = !DILocation(line: 1131, column: 21, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 1131, column: 12)
!4304 = !DILocation(line: 1131, column: 13, scope: !4303)
!4305 = !DILocation(line: 1131, column: 12, scope: !4283)
!4306 = !DILocation(line: 1132, column: 8, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 1131, column: 41)
!4308 = !DILocation(line: 1132, column: 13, scope: !4307)
!4309 = !DILocation(line: 1132, column: 6, scope: !4307)
!4310 = !DILocation(line: 1133, column: 8, scope: !4307)
!4311 = !DILocation(line: 1133, column: 12, scope: !4307)
!4312 = !DILocation(line: 1133, column: 6, scope: !4307)
!4313 = !DILocation(line: 1134, column: 8, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 1134, column: 7)
!4315 = !DILocation(line: 1134, column: 12, scope: !4314)
!4316 = !DILocation(line: 1134, column: 7, scope: !4307)
!4317 = !DILocation(line: 1135, column: 20, scope: !4314)
!4318 = !DILocation(line: 1135, column: 4, scope: !4314)
!4319 = !DILocation(line: 1136, column: 12, scope: !4307)
!4320 = !DILocation(line: 1136, column: 16, scope: !4307)
!4321 = !DILocation(line: 1136, column: 3, scope: !4307)
!4322 = !DILocation(line: 1138, column: 12, scope: !4303)
!4323 = !DILocation(line: 1138, column: 50, scope: !4303)
!4324 = !DILocation(line: 1138, column: 3, scope: !4303)
!4325 = !DILocation(line: 1139, column: 9, scope: !255)
!4326 = !DILocation(line: 1140, column: 2, scope: !255)
!4327 = !DILocation(line: 1141, column: 1, scope: !255)
!4328 = distinct !DISubprogram(name: "NAB_rrc", scope: !3, file: !3, line: 1143, type: !4329, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!3227, !56, !238}
!4331 = !DILocalVariable(name: "res", arg: 1, scope: !4328, file: !3, line: 1143, type: !56)
!4332 = !DILocation(line: 1143, column: 28, scope: !4328)
!4333 = !DILocalVariable(name: "key", arg: 2, scope: !4328, file: !3, line: 1143, type: !238)
!4334 = !DILocation(line: 1143, column: 38, scope: !4328)
!4335 = !DILocalVariable(name: "sp", scope: !4328, file: !3, line: 1145, type: !38)
!4336 = !DILocation(line: 1145, column: 12, scope: !4328)
!4337 = !DILocation(line: 1147, column: 15, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1147, column: 6)
!4339 = !DILocation(line: 1147, column: 7, scope: !4338)
!4340 = !DILocation(line: 1147, column: 6, scope: !4328)
!4341 = !DILocation(line: 1148, column: 12, scope: !4342)
!4342 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1147, column: 33)
!4343 = !DILocation(line: 1148, column: 17, scope: !4342)
!4344 = !DILocation(line: 1148, column: 3, scope: !4342)
!4345 = !DILocation(line: 1149, column: 21, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 1149, column: 12)
!4347 = !DILocation(line: 1149, column: 13, scope: !4346)
!4348 = !DILocation(line: 1149, column: 12, scope: !4338)
!4349 = !DILocation(line: 1150, column: 12, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1149, column: 37)
!4351 = !DILocation(line: 1150, column: 17, scope: !4350)
!4352 = !DILocation(line: 1150, column: 3, scope: !4350)
!4353 = !DILocation(line: 1151, column: 21, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4346, file: !3, line: 1151, column: 12)
!4355 = !DILocation(line: 1151, column: 13, scope: !4354)
!4356 = !DILocation(line: 1151, column: 12, scope: !4346)
!4357 = !DILocation(line: 1152, column: 8, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 1151, column: 42)
!4359 = !DILocation(line: 1152, column: 13, scope: !4358)
!4360 = !DILocation(line: 1152, column: 6, scope: !4358)
!4361 = !DILocation(line: 1153, column: 12, scope: !4358)
!4362 = !DILocation(line: 1153, column: 16, scope: !4358)
!4363 = !DILocation(line: 1153, column: 3, scope: !4358)
!4364 = !DILocation(line: 1155, column: 12, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 1154, column: 7)
!4366 = !DILocation(line: 1155, column: 50, scope: !4365)
!4367 = !DILocation(line: 1155, column: 3, scope: !4365)
!4368 = !DILocation(line: 1156, column: 3, scope: !4365)
!4369 = !DILocation(line: 1158, column: 1, scope: !4328)
!4370 = !DILocalVariable(name: "ap", arg: 1, scope: !260, file: !3, line: 1160, type: !102)
!4371 = !DILocation(line: 1160, column: 23, scope: !260)
!4372 = !DILocalVariable(name: "key", arg: 2, scope: !260, file: !3, line: 1160, type: !238)
!4373 = !DILocation(line: 1160, column: 32, scope: !260)
!4374 = !DILocalVariable(name: "res", scope: !260, file: !3, line: 1163, type: !56)
!4375 = !DILocation(line: 1163, column: 13, scope: !260)
!4376 = !DILocalVariable(name: "sp", scope: !260, file: !3, line: 1164, type: !38)
!4377 = !DILocation(line: 1164, column: 12, scope: !260)
!4378 = !DILocalVariable(name: "mp", scope: !260, file: !3, line: 1165, type: !22)
!4379 = !DILocation(line: 1165, column: 14, scope: !260)
!4380 = !DILocation(line: 1167, column: 15, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !260, file: !3, line: 1167, column: 6)
!4382 = !DILocation(line: 1167, column: 7, scope: !4381)
!4383 = !DILocation(line: 1167, column: 6, scope: !260)
!4384 = !DILocation(line: 1168, column: 9, scope: !4385)
!4385 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 1167, column: 35)
!4386 = !DILocation(line: 1168, column: 13, scope: !4385)
!4387 = !DILocation(line: 1168, column: 7, scope: !4385)
!4388 = !DILocation(line: 1169, column: 8, scope: !4385)
!4389 = !DILocation(line: 1169, column: 13, scope: !4385)
!4390 = !DILocation(line: 1169, column: 6, scope: !4385)
!4391 = !DILocation(line: 1170, column: 8, scope: !4385)
!4392 = !DILocation(line: 1170, column: 12, scope: !4385)
!4393 = !DILocation(line: 1170, column: 6, scope: !4385)
!4394 = !DILocation(line: 1171, column: 8, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1171, column: 7)
!4396 = !DILocation(line: 1171, column: 12, scope: !4395)
!4397 = !DILocation(line: 1171, column: 7, scope: !4385)
!4398 = !DILocation(line: 1172, column: 20, scope: !4395)
!4399 = !DILocation(line: 1172, column: 4, scope: !4395)
!4400 = !DILocation(line: 1173, column: 12, scope: !4385)
!4401 = !DILocation(line: 1173, column: 16, scope: !4385)
!4402 = !DILocation(line: 1173, column: 3, scope: !4385)
!4403 = !DILocation(line: 1174, column: 21, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 1174, column: 12)
!4405 = !DILocation(line: 1174, column: 13, scope: !4404)
!4406 = !DILocation(line: 1174, column: 12, scope: !4381)
!4407 = !DILocation(line: 1175, column: 9, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1174, column: 38)
!4409 = !DILocation(line: 1175, column: 13, scope: !4408)
!4410 = !DILocation(line: 1175, column: 7, scope: !4408)
!4411 = !DILocation(line: 1176, column: 8, scope: !4408)
!4412 = !DILocation(line: 1176, column: 13, scope: !4408)
!4413 = !DILocation(line: 1176, column: 6, scope: !4408)
!4414 = !DILocation(line: 1177, column: 8, scope: !4408)
!4415 = !DILocation(line: 1177, column: 12, scope: !4408)
!4416 = !DILocation(line: 1177, column: 6, scope: !4408)
!4417 = !DILocation(line: 1178, column: 8, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1178, column: 7)
!4419 = !DILocation(line: 1178, column: 12, scope: !4418)
!4420 = !DILocation(line: 1178, column: 7, scope: !4408)
!4421 = !DILocation(line: 1179, column: 20, scope: !4418)
!4422 = !DILocation(line: 1179, column: 4, scope: !4418)
!4423 = !DILocation(line: 1180, column: 12, scope: !4408)
!4424 = !DILocation(line: 1180, column: 17, scope: !4408)
!4425 = !DILocation(line: 1180, column: 3, scope: !4408)
!4426 = !DILocation(line: 1181, column: 21, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 1181, column: 12)
!4428 = !DILocation(line: 1181, column: 13, scope: !4427)
!4429 = !DILocation(line: 1181, column: 12, scope: !4404)
!4430 = !DILocation(line: 1182, column: 9, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 1181, column: 39)
!4432 = !DILocation(line: 1182, column: 13, scope: !4431)
!4433 = !DILocation(line: 1182, column: 7, scope: !4431)
!4434 = !DILocation(line: 1183, column: 8, scope: !4431)
!4435 = !DILocation(line: 1183, column: 13, scope: !4431)
!4436 = !DILocation(line: 1183, column: 6, scope: !4431)
!4437 = !DILocation(line: 1184, column: 8, scope: !4431)
!4438 = !DILocation(line: 1184, column: 12, scope: !4431)
!4439 = !DILocation(line: 1184, column: 6, scope: !4431)
!4440 = !DILocation(line: 1185, column: 8, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 1185, column: 7)
!4442 = !DILocation(line: 1185, column: 12, scope: !4441)
!4443 = !DILocation(line: 1185, column: 7, scope: !4431)
!4444 = !DILocation(line: 1186, column: 20, scope: !4441)
!4445 = !DILocation(line: 1186, column: 4, scope: !4441)
!4446 = !DILocation(line: 1187, column: 12, scope: !4431)
!4447 = !DILocation(line: 1187, column: 17, scope: !4431)
!4448 = !DILocation(line: 1187, column: 3, scope: !4431)
!4449 = !DILocation(line: 1188, column: 21, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4427, file: !3, line: 1188, column: 12)
!4451 = !DILocation(line: 1188, column: 13, scope: !4450)
!4452 = !DILocation(line: 1188, column: 12, scope: !4427)
!4453 = !DILocation(line: 1189, column: 9, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 1188, column: 39)
!4455 = !DILocation(line: 1189, column: 13, scope: !4454)
!4456 = !DILocation(line: 1189, column: 7, scope: !4454)
!4457 = !DILocation(line: 1190, column: 8, scope: !4454)
!4458 = !DILocation(line: 1190, column: 13, scope: !4454)
!4459 = !DILocation(line: 1190, column: 6, scope: !4454)
!4460 = !DILocation(line: 1191, column: 8, scope: !4454)
!4461 = !DILocation(line: 1191, column: 12, scope: !4454)
!4462 = !DILocation(line: 1191, column: 6, scope: !4454)
!4463 = !DILocation(line: 1192, column: 8, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 1192, column: 7)
!4465 = !DILocation(line: 1192, column: 12, scope: !4464)
!4466 = !DILocation(line: 1192, column: 7, scope: !4454)
!4467 = !DILocation(line: 1193, column: 20, scope: !4464)
!4468 = !DILocation(line: 1193, column: 4, scope: !4464)
!4469 = !DILocation(line: 1194, column: 12, scope: !4454)
!4470 = !DILocation(line: 1194, column: 16, scope: !4454)
!4471 = !DILocation(line: 1194, column: 3, scope: !4454)
!4472 = !DILocation(line: 1195, column: 21, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 1195, column: 12)
!4474 = !DILocation(line: 1195, column: 13, scope: !4473)
!4475 = !DILocation(line: 1195, column: 12, scope: !4450)
!4476 = !DILocation(line: 1196, column: 9, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 1195, column: 40)
!4478 = !DILocation(line: 1196, column: 13, scope: !4477)
!4479 = !DILocation(line: 1196, column: 7, scope: !4477)
!4480 = !DILocation(line: 1197, column: 8, scope: !4477)
!4481 = !DILocation(line: 1197, column: 13, scope: !4477)
!4482 = !DILocation(line: 1197, column: 6, scope: !4477)
!4483 = !DILocation(line: 1198, column: 8, scope: !4477)
!4484 = !DILocation(line: 1198, column: 12, scope: !4477)
!4485 = !DILocation(line: 1198, column: 6, scope: !4477)
!4486 = !DILocation(line: 1199, column: 8, scope: !4487)
!4487 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 1199, column: 7)
!4488 = !DILocation(line: 1199, column: 12, scope: !4487)
!4489 = !DILocation(line: 1199, column: 7, scope: !4477)
!4490 = !DILocation(line: 1200, column: 20, scope: !4487)
!4491 = !DILocation(line: 1200, column: 4, scope: !4487)
!4492 = !DILocation(line: 1201, column: 12, scope: !4477)
!4493 = !DILocation(line: 1201, column: 16, scope: !4477)
!4494 = !DILocation(line: 1201, column: 3, scope: !4477)
!4495 = !DILocation(line: 1202, column: 21, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 1202, column: 12)
!4497 = !DILocation(line: 1202, column: 13, scope: !4496)
!4498 = !DILocation(line: 1202, column: 12, scope: !4473)
!4499 = !DILocation(line: 1203, column: 12, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1202, column: 36)
!4501 = !DILocation(line: 1203, column: 16, scope: !4500)
!4502 = !DILocation(line: 1203, column: 3, scope: !4500)
!4503 = !DILocation(line: 1205, column: 12, scope: !4496)
!4504 = !DILocation(line: 1205, column: 50, scope: !4496)
!4505 = !DILocation(line: 1205, column: 3, scope: !4496)
!4506 = !DILocation(line: 1206, column: 9, scope: !260)
!4507 = !DILocation(line: 1207, column: 2, scope: !260)
!4508 = !DILocation(line: 1208, column: 1, scope: !260)
!4509 = !DILocalVariable(name: "ap", arg: 1, scope: !265, file: !3, line: 1210, type: !102)
!4510 = !DILocation(line: 1210, column: 26, scope: !265)
!4511 = !DILocalVariable(name: "key", arg: 2, scope: !265, file: !3, line: 1210, type: !238)
!4512 = !DILocation(line: 1210, column: 35, scope: !265)
!4513 = !DILocation(line: 1214, column: 15, scope: !4514)
!4514 = distinct !DILexicalBlock(scope: !265, file: !3, line: 1214, column: 6)
!4515 = !DILocation(line: 1214, column: 7, scope: !4514)
!4516 = !DILocation(line: 1214, column: 6, scope: !265)
!4517 = !DILocation(line: 1215, column: 12, scope: !4514)
!4518 = !DILocation(line: 1215, column: 16, scope: !4514)
!4519 = !DILocation(line: 1215, column: 3, scope: !4514)
!4520 = !DILocation(line: 1216, column: 20, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4514, file: !3, line: 1216, column: 11)
!4522 = !DILocation(line: 1216, column: 12, scope: !4521)
!4523 = !DILocation(line: 1216, column: 11, scope: !4514)
!4524 = !DILocation(line: 1217, column: 12, scope: !4521)
!4525 = !DILocation(line: 1217, column: 16, scope: !4521)
!4526 = !DILocation(line: 1217, column: 3, scope: !4521)
!4527 = !DILocation(line: 1218, column: 20, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 1218, column: 11)
!4529 = !DILocation(line: 1218, column: 12, scope: !4528)
!4530 = !DILocation(line: 1218, column: 11, scope: !4521)
!4531 = !DILocation(line: 1219, column: 12, scope: !4528)
!4532 = !DILocation(line: 1219, column: 16, scope: !4528)
!4533 = !DILocation(line: 1219, column: 3, scope: !4528)
!4534 = !DILocation(line: 1220, column: 20, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1220, column: 11)
!4536 = !DILocation(line: 1220, column: 12, scope: !4535)
!4537 = !DILocation(line: 1220, column: 11, scope: !4528)
!4538 = !DILocation(line: 1221, column: 12, scope: !4535)
!4539 = !DILocation(line: 1221, column: 16, scope: !4535)
!4540 = !DILocation(line: 1221, column: 3, scope: !4535)
!4541 = !DILocation(line: 1222, column: 20, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4535, file: !3, line: 1222, column: 11)
!4543 = !DILocation(line: 1222, column: 12, scope: !4542)
!4544 = !DILocation(line: 1222, column: 11, scope: !4535)
!4545 = !DILocation(line: 1223, column: 12, scope: !4542)
!4546 = !DILocation(line: 1223, column: 16, scope: !4542)
!4547 = !DILocation(line: 1223, column: 3, scope: !4542)
!4548 = !DILocation(line: 1224, column: 20, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4542, file: !3, line: 1224, column: 11)
!4550 = !DILocation(line: 1224, column: 12, scope: !4549)
!4551 = !DILocation(line: 1224, column: 11, scope: !4542)
!4552 = !DILocation(line: 1225, column: 12, scope: !4549)
!4553 = !DILocation(line: 1225, column: 16, scope: !4549)
!4554 = !DILocation(line: 1225, column: 3, scope: !4549)
!4555 = !DILocation(line: 1226, column: 20, scope: !4556)
!4556 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 1226, column: 11)
!4557 = !DILocation(line: 1226, column: 12, scope: !4556)
!4558 = !DILocation(line: 1226, column: 11, scope: !4549)
!4559 = !DILocation(line: 1227, column: 12, scope: !4556)
!4560 = !DILocation(line: 1227, column: 16, scope: !4556)
!4561 = !DILocation(line: 1227, column: 3, scope: !4556)
!4562 = !DILocation(line: 1229, column: 12, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4556, file: !3, line: 1228, column: 6)
!4564 = !DILocation(line: 1229, column: 50, scope: !4563)
!4565 = !DILocation(line: 1229, column: 3, scope: !4563)
!4566 = !DILocation(line: 1230, column: 5, scope: !4563)
!4567 = !DILocation(line: 1231, column: 3, scope: !4563)
!4568 = !DILocation(line: 1233, column: 1, scope: !265)
!4569 = distinct !DISubprogram(name: "NAB_arc", scope: !3, file: !3, line: 1235, type: !4570, scopeLine: 1236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!3227, !102, !238}
!4572 = !DILocalVariable(name: "ap", arg: 1, scope: !4569, file: !3, line: 1235, type: !102)
!4573 = !DILocation(line: 1235, column: 25, scope: !4569)
!4574 = !DILocalVariable(name: "key", arg: 2, scope: !4569, file: !3, line: 1235, type: !238)
!4575 = !DILocation(line: 1235, column: 34, scope: !4569)
!4576 = !DILocalVariable(name: "res", scope: !4569, file: !3, line: 1237, type: !56)
!4577 = !DILocation(line: 1237, column: 13, scope: !4569)
!4578 = !DILocalVariable(name: "sp", scope: !4569, file: !3, line: 1238, type: !38)
!4579 = !DILocation(line: 1238, column: 12, scope: !4569)
!4580 = !DILocalVariable(name: "sp1", scope: !4569, file: !3, line: 1238, type: !38)
!4581 = !DILocation(line: 1238, column: 17, scope: !4569)
!4582 = !DILocalVariable(name: "mp", scope: !4569, file: !3, line: 1239, type: !22)
!4583 = !DILocation(line: 1239, column: 14, scope: !4569)
!4584 = !DILocalVariable(name: "s", scope: !4569, file: !3, line: 1240, type: !36)
!4585 = !DILocation(line: 1240, column: 7, scope: !4569)
!4586 = !DILocalVariable(name: "r", scope: !4569, file: !3, line: 1240, type: !36)
!4587 = !DILocation(line: 1240, column: 10, scope: !4569)
!4588 = !DILocalVariable(name: "name", scope: !4569, file: !3, line: 1241, type: !4589)
!4589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 800, elements: !4590)
!4590 = !{!4591}
!4591 = !DISubrange(count: 100)
!4592 = !DILocation(line: 1241, column: 7, scope: !4569)
!4593 = !DILocation(line: 1243, column: 15, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 1243, column: 6)
!4595 = !DILocation(line: 1243, column: 7, scope: !4594)
!4596 = !DILocation(line: 1243, column: 6, scope: !4569)
!4597 = !DILocation(line: 1244, column: 12, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1243, column: 34)
!4599 = !DILocation(line: 1244, column: 16, scope: !4598)
!4600 = !DILocation(line: 1244, column: 3, scope: !4598)
!4601 = !DILocation(line: 1245, column: 21, scope: !4602)
!4602 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 1245, column: 12)
!4603 = !DILocation(line: 1245, column: 13, scope: !4602)
!4604 = !DILocation(line: 1245, column: 12, scope: !4594)
!4605 = !DILocation(line: 1246, column: 9, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1245, column: 39)
!4607 = !DILocation(line: 1246, column: 13, scope: !4606)
!4608 = !DILocation(line: 1246, column: 7, scope: !4606)
!4609 = !DILocation(line: 1247, column: 12, scope: !4606)
!4610 = !DILocation(line: 1247, column: 17, scope: !4606)
!4611 = !DILocation(line: 1247, column: 3, scope: !4606)
!4612 = !DILocation(line: 1248, column: 21, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1248, column: 12)
!4614 = !DILocation(line: 1248, column: 13, scope: !4613)
!4615 = !DILocation(line: 1248, column: 12, scope: !4602)
!4616 = !DILocation(line: 1249, column: 9, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 1248, column: 37)
!4618 = !DILocation(line: 1249, column: 13, scope: !4617)
!4619 = !DILocation(line: 1249, column: 7, scope: !4617)
!4620 = !DILocation(line: 1250, column: 12, scope: !4617)
!4621 = !DILocation(line: 1250, column: 17, scope: !4617)
!4622 = !DILocation(line: 1250, column: 3, scope: !4617)
!4623 = !DILocation(line: 1251, column: 21, scope: !4624)
!4624 = distinct !DILexicalBlock(scope: !4613, file: !3, line: 1251, column: 12)
!4625 = !DILocation(line: 1251, column: 13, scope: !4624)
!4626 = !DILocation(line: 1251, column: 12, scope: !4613)
!4627 = !DILocation(line: 1252, column: 9, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 1251, column: 42)
!4629 = !DILocation(line: 1252, column: 13, scope: !4628)
!4630 = !DILocation(line: 1252, column: 7, scope: !4628)
!4631 = !DILocation(line: 1253, column: 8, scope: !4628)
!4632 = !DILocation(line: 1253, column: 13, scope: !4628)
!4633 = !DILocation(line: 1253, column: 6, scope: !4628)
!4634 = !DILocation(line: 1254, column: 12, scope: !4628)
!4635 = !DILocation(line: 1254, column: 16, scope: !4628)
!4636 = !DILocation(line: 1254, column: 3, scope: !4628)
!4637 = !DILocation(line: 1255, column: 21, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4624, file: !3, line: 1255, column: 12)
!4639 = !DILocation(line: 1255, column: 13, scope: !4638)
!4640 = !DILocation(line: 1255, column: 12, scope: !4624)
!4641 = !DILocation(line: 1256, column: 9, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1255, column: 40)
!4643 = !DILocation(line: 1256, column: 13, scope: !4642)
!4644 = !DILocation(line: 1256, column: 7, scope: !4642)
!4645 = !DILocation(line: 1257, column: 8, scope: !4642)
!4646 = !DILocation(line: 1257, column: 13, scope: !4642)
!4647 = !DILocation(line: 1257, column: 6, scope: !4642)
!4648 = !DILocation(line: 1258, column: 8, scope: !4642)
!4649 = !DILocation(line: 1258, column: 12, scope: !4642)
!4650 = !DILocation(line: 1258, column: 6, scope: !4642)
!4651 = !DILocation(line: 1259, column: 19, scope: !4642)
!4652 = !DILocation(line: 1259, column: 3, scope: !4642)
!4653 = !DILocation(line: 1260, column: 10, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 1260, column: 3)
!4655 = !DILocation(line: 1260, column: 8, scope: !4654)
!4656 = !DILocation(line: 1260, column: 15, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !3, line: 1260, column: 3)
!4658 = !DILocation(line: 1260, column: 19, scope: !4657)
!4659 = !DILocation(line: 1260, column: 23, scope: !4657)
!4660 = !DILocation(line: 1260, column: 17, scope: !4657)
!4661 = !DILocation(line: 1260, column: 3, scope: !4654)
!4662 = !DILocation(line: 1261, column: 8, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 1261, column: 8)
!4664 = !DILocation(line: 1261, column: 12, scope: !4663)
!4665 = !DILocation(line: 1261, column: 24, scope: !4663)
!4666 = !DILocation(line: 1261, column: 31, scope: !4663)
!4667 = !DILocation(line: 1261, column: 28, scope: !4663)
!4668 = !DILocation(line: 1261, column: 8, scope: !4657)
!4669 = !DILocation(line: 1262, column: 5, scope: !4663)
!4670 = !DILocation(line: 1260, column: 37, scope: !4657)
!4671 = !DILocation(line: 1260, column: 3, scope: !4657)
!4672 = distinct !{!4672, !4661, !4673}
!4673 = !DILocation(line: 1262, column: 5, scope: !4654)
!4674 = !DILocation(line: 1263, column: 10, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 1263, column: 3)
!4676 = !DILocation(line: 1263, column: 21, scope: !4675)
!4677 = !DILocation(line: 1263, column: 25, scope: !4675)
!4678 = !DILocation(line: 1263, column: 19, scope: !4675)
!4679 = !DILocation(line: 1263, column: 8, scope: !4675)
!4680 = !DILocation(line: 1263, column: 36, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1263, column: 3)
!4682 = !DILocation(line: 1263, column: 3, scope: !4675)
!4683 = !DILocation(line: 1264, column: 5, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1263, column: 60)
!4685 = !DILocation(line: 1265, column: 8, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4684, file: !3, line: 1265, column: 8)
!4687 = !DILocation(line: 1265, column: 15, scope: !4686)
!4688 = !DILocation(line: 1265, column: 12, scope: !4686)
!4689 = !DILocation(line: 1265, column: 8, scope: !4684)
!4690 = !DILocation(line: 1266, column: 5, scope: !4686)
!4691 = !DILocation(line: 1267, column: 3, scope: !4684)
!4692 = !DILocation(line: 1263, column: 47, scope: !4681)
!4693 = !DILocation(line: 1263, column: 52, scope: !4681)
!4694 = !DILocation(line: 1263, column: 45, scope: !4681)
!4695 = !DILocation(line: 1263, column: 3, scope: !4681)
!4696 = distinct !{!4696, !4682, !4697}
!4697 = !DILocation(line: 1267, column: 3, scope: !4675)
!4698 = !DILocation(line: 1268, column: 12, scope: !4642)
!4699 = !DILocation(line: 1268, column: 30, scope: !4642)
!4700 = !DILocation(line: 1268, column: 33, scope: !4642)
!4701 = !DILocation(line: 1268, column: 35, scope: !4642)
!4702 = !DILocation(line: 1268, column: 40, scope: !4642)
!4703 = !DILocation(line: 1268, column: 44, scope: !4642)
!4704 = !DILocation(line: 1268, column: 3, scope: !4642)
!4705 = !DILocation(line: 1269, column: 7, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 1269, column: 7)
!4707 = !DILocation(line: 1269, column: 11, scope: !4706)
!4708 = !DILocation(line: 1269, column: 7, scope: !4642)
!4709 = !DILocation(line: 1270, column: 10, scope: !4706)
!4710 = !DILocation(line: 1270, column: 14, scope: !4706)
!4711 = !DILocation(line: 1270, column: 4, scope: !4706)
!4712 = !DILocation(line: 1271, column: 47, scope: !4642)
!4713 = !DILocation(line: 1271, column: 39, scope: !4642)
!4714 = !DILocation(line: 1271, column: 54, scope: !4642)
!4715 = !DILocation(line: 1271, column: 59, scope: !4642)
!4716 = !DILocation(line: 1271, column: 30, scope: !4642)
!4717 = !DILocation(line: 1271, column: 3, scope: !4642)
!4718 = !DILocation(line: 1271, column: 7, scope: !4642)
!4719 = !DILocation(line: 1271, column: 18, scope: !4642)
!4720 = !DILocation(line: 1272, column: 11, scope: !4642)
!4721 = !DILocation(line: 1272, column: 15, scope: !4642)
!4722 = !DILocation(line: 1272, column: 27, scope: !4642)
!4723 = !DILocation(line: 1272, column: 3, scope: !4642)
!4724 = !DILocation(line: 1273, column: 12, scope: !4642)
!4725 = !DILocation(line: 1273, column: 16, scope: !4642)
!4726 = !DILocation(line: 1273, column: 3, scope: !4642)
!4727 = !DILocation(line: 1275, column: 12, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4638, file: !3, line: 1274, column: 7)
!4729 = !DILocation(line: 1275, column: 50, scope: !4728)
!4730 = !DILocation(line: 1275, column: 3, scope: !4728)
!4731 = !DILocation(line: 1276, column: 3, scope: !4728)
!4732 = !DILocation(line: 1278, column: 1, scope: !4569)
!4733 = distinct !DISubprogram(name: "NAB_arp", scope: !3, file: !3, line: 1280, type: !4734, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{!3228, !102, !238}
!4736 = !DILocalVariable(name: "ap", arg: 1, scope: !4733, file: !3, line: 1280, type: !102)
!4737 = !DILocation(line: 1280, column: 27, scope: !4733)
!4738 = !DILocalVariable(name: "key", arg: 2, scope: !4733, file: !3, line: 1280, type: !238)
!4739 = !DILocation(line: 1280, column: 36, scope: !4733)
!4740 = !DILocalVariable(name: "temp", scope: !4733, file: !3, line: 1282, type: !237)
!4741 = !DILocation(line: 1282, column: 8, scope: !4733)
!4742 = !DILocation(line: 1284, column: 9, scope: !4733)
!4743 = !DILocation(line: 1284, column: 13, scope: !4733)
!4744 = !DILocation(line: 1284, column: 7, scope: !4733)
!4745 = !DILocation(line: 1285, column: 10, scope: !4733)
!4746 = !DILocation(line: 1285, column: 8, scope: !4733)
!4747 = !DILocation(line: 1285, column: 2, scope: !4733)
!4748 = !DILocalVariable(name: "dx", arg: 1, scope: !270, file: !3, line: 1315, type: !30)
!4749 = !DILocation(line: 1315, column: 32, scope: !270)
!4750 = !DILocalVariable(name: "dy", arg: 2, scope: !270, file: !3, line: 1315, type: !30)
!4751 = !DILocation(line: 1315, column: 43, scope: !270)
!4752 = !DILocalVariable(name: "dz", arg: 3, scope: !270, file: !3, line: 1315, type: !30)
!4753 = !DILocation(line: 1315, column: 54, scope: !270)
!4754 = !DILocalVariable(name: "rx", arg: 4, scope: !270, file: !3, line: 1315, type: !30)
!4755 = !DILocation(line: 1315, column: 65, scope: !270)
!4756 = !DILocalVariable(name: "ry", arg: 5, scope: !270, file: !3, line: 1315, type: !30)
!4757 = !DILocation(line: 1315, column: 76, scope: !270)
!4758 = !DILocalVariable(name: "rz", arg: 6, scope: !270, file: !3, line: 1315, type: !30)
!4759 = !DILocation(line: 1315, column: 87, scope: !270)
!4760 = !DILocalVariable(name: "temp", scope: !270, file: !3, line: 1317, type: !237)
!4761 = !DILocation(line: 1317, column: 8, scope: !270)
!4762 = !DILocalVariable(name: "rmat", scope: !270, file: !3, line: 1319, type: !241)
!4763 = !DILocation(line: 1319, column: 11, scope: !270)
!4764 = !DILocalVariable(name: "r1mat", scope: !270, file: !3, line: 1319, type: !241)
!4765 = !DILocation(line: 1319, column: 17, scope: !270)
!4766 = !DILocalVariable(name: "tmat", scope: !270, file: !3, line: 1319, type: !241)
!4767 = !DILocation(line: 1319, column: 24, scope: !270)
!4768 = !DILocation(line: 1322, column: 8, scope: !270)
!4769 = !DILocation(line: 1322, column: 7, scope: !270)
!4770 = !DILocation(line: 1322, column: 5, scope: !270)
!4771 = !DILocation(line: 1324, column: 2, scope: !270)
!4772 = !DILocation(line: 1325, column: 17, scope: !270)
!4773 = !DILocation(line: 1325, column: 15, scope: !270)
!4774 = !DILocation(line: 1326, column: 17, scope: !270)
!4775 = !DILocation(line: 1326, column: 15, scope: !270)
!4776 = !DILocation(line: 1327, column: 17, scope: !270)
!4777 = !DILocation(line: 1327, column: 15, scope: !270)
!4778 = !DILocation(line: 1329, column: 12, scope: !270)
!4779 = !DILocation(line: 1329, column: 2, scope: !270)
!4780 = !DILocation(line: 1330, column: 6, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !270, file: !3, line: 1330, column: 6)
!4782 = !DILocation(line: 1330, column: 9, scope: !4781)
!4783 = !DILocation(line: 1330, column: 6, scope: !270)
!4784 = !DILocation(line: 1331, column: 13, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4781, file: !3, line: 1330, column: 17)
!4786 = !DILocation(line: 1331, column: 3, scope: !4785)
!4787 = !DILocation(line: 1332, column: 31, scope: !4785)
!4788 = !DILocation(line: 1332, column: 29, scope: !4785)
!4789 = !DILocation(line: 1332, column: 20, scope: !4785)
!4790 = !DILocation(line: 1332, column: 3, scope: !4785)
!4791 = !DILocation(line: 1332, column: 18, scope: !4785)
!4792 = !DILocation(line: 1333, column: 32, scope: !4785)
!4793 = !DILocation(line: 1333, column: 30, scope: !4785)
!4794 = !DILocation(line: 1333, column: 21, scope: !4785)
!4795 = !DILocation(line: 1333, column: 20, scope: !4785)
!4796 = !DILocation(line: 1333, column: 3, scope: !4785)
!4797 = !DILocation(line: 1333, column: 18, scope: !4785)
!4798 = !DILocation(line: 1334, column: 31, scope: !4785)
!4799 = !DILocation(line: 1334, column: 29, scope: !4785)
!4800 = !DILocation(line: 1334, column: 20, scope: !4785)
!4801 = !DILocation(line: 1334, column: 3, scope: !4785)
!4802 = !DILocation(line: 1334, column: 18, scope: !4785)
!4803 = !DILocation(line: 1335, column: 31, scope: !4785)
!4804 = !DILocation(line: 1335, column: 29, scope: !4785)
!4805 = !DILocation(line: 1335, column: 20, scope: !4785)
!4806 = !DILocation(line: 1335, column: 3, scope: !4785)
!4807 = !DILocation(line: 1335, column: 18, scope: !4785)
!4808 = !DILocation(line: 1336, column: 15, scope: !4785)
!4809 = !DILocation(line: 1336, column: 21, scope: !4785)
!4810 = !DILocation(line: 1336, column: 28, scope: !4785)
!4811 = !DILocation(line: 1336, column: 3, scope: !4785)
!4812 = !DILocation(line: 1337, column: 13, scope: !4785)
!4813 = !DILocation(line: 1337, column: 19, scope: !4785)
!4814 = !DILocation(line: 1337, column: 3, scope: !4785)
!4815 = !DILocation(line: 1338, column: 2, scope: !4785)
!4816 = !DILocation(line: 1339, column: 6, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !270, file: !3, line: 1339, column: 6)
!4818 = !DILocation(line: 1339, column: 9, scope: !4817)
!4819 = !DILocation(line: 1339, column: 6, scope: !270)
!4820 = !DILocation(line: 1340, column: 13, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 1339, column: 17)
!4822 = !DILocation(line: 1340, column: 3, scope: !4821)
!4823 = !DILocation(line: 1341, column: 31, scope: !4821)
!4824 = !DILocation(line: 1341, column: 29, scope: !4821)
!4825 = !DILocation(line: 1341, column: 20, scope: !4821)
!4826 = !DILocation(line: 1341, column: 3, scope: !4821)
!4827 = !DILocation(line: 1341, column: 18, scope: !4821)
!4828 = !DILocation(line: 1346, column: 32, scope: !4821)
!4829 = !DILocation(line: 1346, column: 30, scope: !4821)
!4830 = !DILocation(line: 1346, column: 21, scope: !4821)
!4831 = !DILocation(line: 1346, column: 20, scope: !4821)
!4832 = !DILocation(line: 1346, column: 3, scope: !4821)
!4833 = !DILocation(line: 1346, column: 18, scope: !4821)
!4834 = !DILocation(line: 1347, column: 31, scope: !4821)
!4835 = !DILocation(line: 1347, column: 29, scope: !4821)
!4836 = !DILocation(line: 1347, column: 20, scope: !4821)
!4837 = !DILocation(line: 1347, column: 3, scope: !4821)
!4838 = !DILocation(line: 1347, column: 18, scope: !4821)
!4839 = !DILocation(line: 1348, column: 31, scope: !4821)
!4840 = !DILocation(line: 1348, column: 29, scope: !4821)
!4841 = !DILocation(line: 1348, column: 20, scope: !4821)
!4842 = !DILocation(line: 1348, column: 3, scope: !4821)
!4843 = !DILocation(line: 1348, column: 18, scope: !4821)
!4844 = !DILocation(line: 1349, column: 15, scope: !4821)
!4845 = !DILocation(line: 1349, column: 21, scope: !4821)
!4846 = !DILocation(line: 1349, column: 28, scope: !4821)
!4847 = !DILocation(line: 1349, column: 3, scope: !4821)
!4848 = !DILocation(line: 1350, column: 13, scope: !4821)
!4849 = !DILocation(line: 1350, column: 19, scope: !4821)
!4850 = !DILocation(line: 1350, column: 3, scope: !4821)
!4851 = !DILocation(line: 1351, column: 2, scope: !4821)
!4852 = !DILocation(line: 1352, column: 6, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !270, file: !3, line: 1352, column: 6)
!4854 = !DILocation(line: 1352, column: 9, scope: !4853)
!4855 = !DILocation(line: 1352, column: 6, scope: !270)
!4856 = !DILocation(line: 1353, column: 13, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 1352, column: 17)
!4858 = !DILocation(line: 1353, column: 3, scope: !4857)
!4859 = !DILocation(line: 1354, column: 31, scope: !4857)
!4860 = !DILocation(line: 1354, column: 29, scope: !4857)
!4861 = !DILocation(line: 1354, column: 20, scope: !4857)
!4862 = !DILocation(line: 1354, column: 3, scope: !4857)
!4863 = !DILocation(line: 1354, column: 18, scope: !4857)
!4864 = !DILocation(line: 1355, column: 32, scope: !4857)
!4865 = !DILocation(line: 1355, column: 30, scope: !4857)
!4866 = !DILocation(line: 1355, column: 21, scope: !4857)
!4867 = !DILocation(line: 1355, column: 20, scope: !4857)
!4868 = !DILocation(line: 1355, column: 3, scope: !4857)
!4869 = !DILocation(line: 1355, column: 18, scope: !4857)
!4870 = !DILocation(line: 1356, column: 31, scope: !4857)
!4871 = !DILocation(line: 1356, column: 29, scope: !4857)
!4872 = !DILocation(line: 1356, column: 20, scope: !4857)
!4873 = !DILocation(line: 1356, column: 3, scope: !4857)
!4874 = !DILocation(line: 1356, column: 18, scope: !4857)
!4875 = !DILocation(line: 1357, column: 31, scope: !4857)
!4876 = !DILocation(line: 1357, column: 29, scope: !4857)
!4877 = !DILocation(line: 1357, column: 20, scope: !4857)
!4878 = !DILocation(line: 1357, column: 3, scope: !4857)
!4879 = !DILocation(line: 1357, column: 18, scope: !4857)
!4880 = !DILocation(line: 1358, column: 15, scope: !4857)
!4881 = !DILocation(line: 1358, column: 21, scope: !4857)
!4882 = !DILocation(line: 1358, column: 28, scope: !4857)
!4883 = !DILocation(line: 1358, column: 3, scope: !4857)
!4884 = !DILocation(line: 1359, column: 13, scope: !4857)
!4885 = !DILocation(line: 1359, column: 19, scope: !4857)
!4886 = !DILocation(line: 1359, column: 3, scope: !4857)
!4887 = !DILocation(line: 1360, column: 2, scope: !4857)
!4888 = !DILocation(line: 1362, column: 14, scope: !270)
!4889 = !DILocation(line: 1362, column: 24, scope: !270)
!4890 = !DILocation(line: 1362, column: 2, scope: !270)
!4891 = !DILocation(line: 1363, column: 12, scope: !270)
!4892 = !DILocation(line: 1363, column: 2, scope: !270)
!4893 = !DILocation(line: 1365, column: 7, scope: !270)
!4894 = !DILocation(line: 1366, column: 10, scope: !270)
!4895 = !DILocation(line: 1366, column: 8, scope: !270)
!4896 = !DILocation(line: 1366, column: 2, scope: !270)
!4897 = distinct !DISubprogram(name: "mk_idmat", scope: !3, file: !3, line: 1563, type: !4898, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{null, !278}
!4900 = !DILocalVariable(name: "idmat", arg: 1, scope: !4897, file: !3, line: 1563, type: !278)
!4901 = !DILocation(line: 1563, column: 32, scope: !4897)
!4902 = !DILocalVariable(name: "i", scope: !4897, file: !3, line: 1565, type: !36)
!4903 = !DILocation(line: 1565, column: 6, scope: !4897)
!4904 = !DILocalVariable(name: "j", scope: !4897, file: !3, line: 1565, type: !36)
!4905 = !DILocation(line: 1565, column: 9, scope: !4897)
!4906 = !DILocation(line: 1567, column: 9, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4897, file: !3, line: 1567, column: 2)
!4908 = !DILocation(line: 1567, column: 7, scope: !4907)
!4909 = !DILocation(line: 1567, column: 14, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 1567, column: 2)
!4911 = !DILocation(line: 1567, column: 16, scope: !4910)
!4912 = !DILocation(line: 1567, column: 2, scope: !4907)
!4913 = !DILocation(line: 1568, column: 10, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 1568, column: 3)
!4915 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1567, column: 26)
!4916 = !DILocation(line: 1568, column: 8, scope: !4914)
!4917 = !DILocation(line: 1568, column: 15, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 1568, column: 3)
!4919 = !DILocation(line: 1568, column: 17, scope: !4918)
!4920 = !DILocation(line: 1568, column: 3, scope: !4914)
!4921 = !DILocation(line: 1569, column: 24, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 1568, column: 27)
!4923 = !DILocation(line: 1569, column: 29, scope: !4922)
!4924 = !DILocation(line: 1569, column: 26, scope: !4922)
!4925 = !DILocation(line: 1569, column: 22, scope: !4922)
!4926 = !DILocation(line: 1569, column: 4, scope: !4922)
!4927 = !DILocation(line: 1569, column: 11, scope: !4922)
!4928 = !DILocation(line: 1569, column: 16, scope: !4922)
!4929 = !DILocation(line: 1569, column: 20, scope: !4922)
!4930 = !DILocation(line: 1570, column: 3, scope: !4922)
!4931 = !DILocation(line: 1568, column: 23, scope: !4918)
!4932 = !DILocation(line: 1568, column: 3, scope: !4918)
!4933 = distinct !{!4933, !4920, !4934}
!4934 = !DILocation(line: 1570, column: 3, scope: !4914)
!4935 = !DILocation(line: 1571, column: 2, scope: !4915)
!4936 = !DILocation(line: 1567, column: 22, scope: !4910)
!4937 = !DILocation(line: 1567, column: 2, scope: !4910)
!4938 = distinct !{!4938, !4912, !4939}
!4939 = !DILocation(line: 1571, column: 2, scope: !4907)
!4940 = !DILocation(line: 1572, column: 1, scope: !4897)
!4941 = distinct !DISubprogram(name: "concat_mat", scope: !3, file: !3, line: 1574, type: !4942, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{null, !278, !278, !278}
!4944 = !DILocalVariable(name: "m1", arg: 1, scope: !4941, file: !3, line: 1574, type: !278)
!4945 = !DILocation(line: 1574, column: 34, scope: !4941)
!4946 = !DILocalVariable(name: "m2", arg: 2, scope: !4941, file: !3, line: 1574, type: !278)
!4947 = !DILocation(line: 1574, column: 47, scope: !4941)
!4948 = !DILocalVariable(name: "m3", arg: 3, scope: !4941, file: !3, line: 1574, type: !278)
!4949 = !DILocation(line: 1574, column: 60, scope: !4941)
!4950 = !DILocalVariable(name: "i", scope: !4941, file: !3, line: 1576, type: !36)
!4951 = !DILocation(line: 1576, column: 6, scope: !4941)
!4952 = !DILocalVariable(name: "j", scope: !4941, file: !3, line: 1576, type: !36)
!4953 = !DILocation(line: 1576, column: 9, scope: !4941)
!4954 = !DILocalVariable(name: "k", scope: !4941, file: !3, line: 1576, type: !36)
!4955 = !DILocation(line: 1576, column: 12, scope: !4941)
!4956 = !DILocation(line: 1578, column: 9, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 1578, column: 2)
!4958 = !DILocation(line: 1578, column: 7, scope: !4957)
!4959 = !DILocation(line: 1578, column: 14, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 1578, column: 2)
!4961 = !DILocation(line: 1578, column: 16, scope: !4960)
!4962 = !DILocation(line: 1578, column: 2, scope: !4957)
!4963 = !DILocation(line: 1579, column: 10, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 1579, column: 3)
!4965 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 1578, column: 26)
!4966 = !DILocation(line: 1579, column: 8, scope: !4964)
!4967 = !DILocation(line: 1579, column: 15, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 1579, column: 3)
!4969 = !DILocation(line: 1579, column: 17, scope: !4968)
!4970 = !DILocation(line: 1579, column: 3, scope: !4964)
!4971 = !DILocation(line: 1580, column: 4, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4968, file: !3, line: 1579, column: 27)
!4973 = !DILocation(line: 1580, column: 8, scope: !4972)
!4974 = !DILocation(line: 1580, column: 13, scope: !4972)
!4975 = !DILocation(line: 1580, column: 17, scope: !4972)
!4976 = !DILocation(line: 1581, column: 11, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 1581, column: 4)
!4978 = !DILocation(line: 1581, column: 9, scope: !4977)
!4979 = !DILocation(line: 1581, column: 16, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 1581, column: 4)
!4981 = !DILocation(line: 1581, column: 18, scope: !4980)
!4982 = !DILocation(line: 1581, column: 4, scope: !4977)
!4983 = !DILocation(line: 1582, column: 21, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4980, file: !3, line: 1581, column: 28)
!4985 = !DILocation(line: 1582, column: 25, scope: !4984)
!4986 = !DILocation(line: 1582, column: 30, scope: !4984)
!4987 = !DILocation(line: 1582, column: 36, scope: !4984)
!4988 = !DILocation(line: 1582, column: 40, scope: !4984)
!4989 = !DILocation(line: 1582, column: 45, scope: !4984)
!4990 = !DILocation(line: 1582, column: 34, scope: !4984)
!4991 = !DILocation(line: 1582, column: 5, scope: !4984)
!4992 = !DILocation(line: 1582, column: 9, scope: !4984)
!4993 = !DILocation(line: 1582, column: 14, scope: !4984)
!4994 = !DILocation(line: 1582, column: 18, scope: !4984)
!4995 = !DILocation(line: 1583, column: 4, scope: !4984)
!4996 = !DILocation(line: 1581, column: 24, scope: !4980)
!4997 = !DILocation(line: 1581, column: 4, scope: !4980)
!4998 = distinct !{!4998, !4982, !4999}
!4999 = !DILocation(line: 1583, column: 4, scope: !4977)
!5000 = !DILocation(line: 1584, column: 3, scope: !4972)
!5001 = !DILocation(line: 1579, column: 23, scope: !4968)
!5002 = !DILocation(line: 1579, column: 3, scope: !4968)
!5003 = distinct !{!5003, !4970, !5004}
!5004 = !DILocation(line: 1584, column: 3, scope: !4964)
!5005 = !DILocation(line: 1585, column: 2, scope: !4965)
!5006 = !DILocation(line: 1578, column: 22, scope: !4960)
!5007 = !DILocation(line: 1578, column: 2, scope: !4960)
!5008 = distinct !{!5008, !4962, !5009}
!5009 = !DILocation(line: 1585, column: 2, scope: !4957)
!5010 = !DILocation(line: 1586, column: 1, scope: !4941)
!5011 = distinct !DISubprogram(name: "copy_mat", scope: !3, file: !3, line: 1588, type: !5012, scopeLine: 1589, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5012 = !DISubroutineType(types: !5013)
!5013 = !{null, !278, !278}
!5014 = !DILocalVariable(name: "mold", arg: 1, scope: !5011, file: !3, line: 1588, type: !278)
!5015 = !DILocation(line: 1588, column: 32, scope: !5011)
!5016 = !DILocalVariable(name: "mnew", arg: 2, scope: !5011, file: !3, line: 1588, type: !278)
!5017 = !DILocation(line: 1588, column: 47, scope: !5011)
!5018 = !DILocalVariable(name: "i", scope: !5011, file: !3, line: 1590, type: !36)
!5019 = !DILocation(line: 1590, column: 6, scope: !5011)
!5020 = !DILocalVariable(name: "j", scope: !5011, file: !3, line: 1590, type: !36)
!5021 = !DILocation(line: 1590, column: 9, scope: !5011)
!5022 = !DILocation(line: 1592, column: 9, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1592, column: 2)
!5024 = !DILocation(line: 1592, column: 7, scope: !5023)
!5025 = !DILocation(line: 1592, column: 14, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 1592, column: 2)
!5027 = !DILocation(line: 1592, column: 16, scope: !5026)
!5028 = !DILocation(line: 1592, column: 2, scope: !5023)
!5029 = !DILocation(line: 1593, column: 10, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 1593, column: 3)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !3, line: 1592, column: 26)
!5032 = !DILocation(line: 1593, column: 8, scope: !5030)
!5033 = !DILocation(line: 1593, column: 15, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5030, file: !3, line: 1593, column: 3)
!5035 = !DILocation(line: 1593, column: 17, scope: !5034)
!5036 = !DILocation(line: 1593, column: 3, scope: !5030)
!5037 = !DILocation(line: 1594, column: 21, scope: !5034)
!5038 = !DILocation(line: 1594, column: 27, scope: !5034)
!5039 = !DILocation(line: 1594, column: 32, scope: !5034)
!5040 = !DILocation(line: 1594, column: 4, scope: !5034)
!5041 = !DILocation(line: 1594, column: 10, scope: !5034)
!5042 = !DILocation(line: 1594, column: 15, scope: !5034)
!5043 = !DILocation(line: 1594, column: 19, scope: !5034)
!5044 = !DILocation(line: 1593, column: 23, scope: !5034)
!5045 = !DILocation(line: 1593, column: 3, scope: !5034)
!5046 = distinct !{!5046, !5036, !5047}
!5047 = !DILocation(line: 1594, column: 34, scope: !5030)
!5048 = !DILocation(line: 1595, column: 2, scope: !5031)
!5049 = !DILocation(line: 1592, column: 22, scope: !5026)
!5050 = !DILocation(line: 1592, column: 2, scope: !5026)
!5051 = distinct !{!5051, !5028, !5052}
!5052 = !DILocation(line: 1595, column: 2, scope: !5023)
!5053 = !DILocation(line: 1596, column: 1, scope: !5011)
!5054 = distinct !DISubprogram(name: "transformres", scope: !3, file: !3, line: 1369, type: !5055, scopeLine: 1370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!56, !278, !56, !238}
!5057 = !DILocalVariable(name: "mat", arg: 1, scope: !5054, file: !3, line: 1369, type: !278)
!5058 = !DILocation(line: 1369, column: 35, scope: !5054)
!5059 = !DILocalVariable(name: "res", arg: 2, scope: !5054, file: !3, line: 1369, type: !56)
!5060 = !DILocation(line: 1369, column: 51, scope: !5054)
!5061 = !DILocalVariable(name: "aexp", arg: 3, scope: !5054, file: !3, line: 1369, type: !238)
!5062 = !DILocation(line: 1369, column: 62, scope: !5054)
!5063 = !DILocalVariable(name: "nres", scope: !5054, file: !3, line: 1371, type: !56)
!5064 = !DILocation(line: 1371, column: 13, scope: !5054)
!5065 = !DILocalVariable(name: "a", scope: !5054, file: !3, line: 1372, type: !36)
!5066 = !DILocation(line: 1372, column: 7, scope: !5054)
!5067 = !DILocalVariable(name: "i", scope: !5054, file: !3, line: 1372, type: !36)
!5068 = !DILocation(line: 1372, column: 10, scope: !5054)
!5069 = !DILocalVariable(name: "ap", scope: !5054, file: !3, line: 1373, type: !102)
!5070 = !DILocation(line: 1373, column: 11, scope: !5054)
!5071 = !DILocalVariable(name: "xyz", scope: !5054, file: !3, line: 1374, type: !127)
!5072 = !DILocation(line: 1374, column: 11, scope: !5054)
!5073 = !DILocalVariable(name: "nxyz", scope: !5054, file: !3, line: 1374, type: !127)
!5074 = !DILocation(line: 1374, column: 16, scope: !5054)
!5075 = !DILocation(line: 1376, column: 22, scope: !5054)
!5076 = !DILocation(line: 1376, column: 9, scope: !5054)
!5077 = !DILocation(line: 1376, column: 7, scope: !5054)
!5078 = !DILocation(line: 1377, column: 9, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 1377, column: 2)
!5080 = !DILocation(line: 1377, column: 7, scope: !5079)
!5081 = !DILocation(line: 1377, column: 14, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !3, line: 1377, column: 2)
!5083 = !DILocation(line: 1377, column: 18, scope: !5082)
!5084 = !DILocation(line: 1377, column: 24, scope: !5082)
!5085 = !DILocation(line: 1377, column: 16, scope: !5082)
!5086 = !DILocation(line: 1377, column: 2, scope: !5079)
!5087 = !DILocation(line: 1378, column: 9, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 1377, column: 39)
!5089 = !DILocation(line: 1378, column: 15, scope: !5088)
!5090 = !DILocation(line: 1378, column: 24, scope: !5088)
!5091 = !DILocation(line: 1378, column: 6, scope: !5088)
!5092 = !DILocation(line: 1379, column: 10, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1379, column: 3)
!5094 = !DILocation(line: 1379, column: 8, scope: !5093)
!5095 = !DILocation(line: 1379, column: 15, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1379, column: 3)
!5097 = !DILocation(line: 1379, column: 17, scope: !5096)
!5098 = !DILocation(line: 1379, column: 3, scope: !5093)
!5099 = !DILocation(line: 1380, column: 15, scope: !5096)
!5100 = !DILocation(line: 1380, column: 19, scope: !5096)
!5101 = !DILocation(line: 1380, column: 26, scope: !5096)
!5102 = !DILocation(line: 1380, column: 9, scope: !5096)
!5103 = !DILocation(line: 1380, column: 4, scope: !5096)
!5104 = !DILocation(line: 1380, column: 13, scope: !5096)
!5105 = !DILocation(line: 1379, column: 23, scope: !5096)
!5106 = !DILocation(line: 1379, column: 3, scope: !5096)
!5107 = distinct !{!5107, !5098, !5108}
!5108 = !DILocation(line: 1380, column: 28, scope: !5093)
!5109 = !DILocation(line: 1381, column: 12, scope: !5088)
!5110 = !DILocation(line: 1381, column: 17, scope: !5088)
!5111 = !DILocation(line: 1381, column: 22, scope: !5088)
!5112 = !DILocation(line: 1381, column: 3, scope: !5088)
!5113 = !DILocation(line: 1382, column: 10, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 1382, column: 3)
!5115 = !DILocation(line: 1382, column: 8, scope: !5114)
!5116 = !DILocation(line: 1382, column: 15, scope: !5117)
!5117 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 1382, column: 3)
!5118 = !DILocation(line: 1382, column: 17, scope: !5117)
!5119 = !DILocation(line: 1382, column: 3, scope: !5114)
!5120 = !DILocation(line: 1383, column: 27, scope: !5117)
!5121 = !DILocation(line: 1383, column: 21, scope: !5117)
!5122 = !DILocation(line: 1383, column: 4, scope: !5117)
!5123 = !DILocation(line: 1383, column: 8, scope: !5117)
!5124 = !DILocation(line: 1383, column: 15, scope: !5117)
!5125 = !DILocation(line: 1383, column: 19, scope: !5117)
!5126 = !DILocation(line: 1382, column: 23, scope: !5117)
!5127 = !DILocation(line: 1382, column: 3, scope: !5117)
!5128 = distinct !{!5128, !5119, !5129}
!5129 = !DILocation(line: 1383, column: 29, scope: !5114)
!5130 = !DILocation(line: 1384, column: 2, scope: !5088)
!5131 = !DILocation(line: 1377, column: 35, scope: !5082)
!5132 = !DILocation(line: 1377, column: 2, scope: !5082)
!5133 = distinct !{!5133, !5086, !5134}
!5134 = !DILocation(line: 1384, column: 2, scope: !5079)
!5135 = !DILocation(line: 1386, column: 10, scope: !5054)
!5136 = !DILocation(line: 1386, column: 2, scope: !5054)
!5137 = distinct !DISubprogram(name: "xfm_xyz", scope: !3, file: !3, line: 1598, type: !5138, scopeLine: 1599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5138 = !DISubroutineType(types: !5139)
!5139 = !{null, !180, !278, !180}
!5140 = !DILocalVariable(name: "oxyz", arg: 1, scope: !5137, file: !3, line: 1598, type: !180)
!5141 = !DILocation(line: 1598, column: 30, scope: !5137)
!5142 = !DILocalVariable(name: "mat", arg: 2, scope: !5137, file: !3, line: 1598, type: !278)
!5143 = !DILocation(line: 1598, column: 45, scope: !5137)
!5144 = !DILocalVariable(name: "nxyz", arg: 3, scope: !5137, file: !3, line: 1598, type: !180)
!5145 = !DILocation(line: 1598, column: 58, scope: !5137)
!5146 = !DILocalVariable(name: "i", scope: !5137, file: !3, line: 1600, type: !36)
!5147 = !DILocation(line: 1600, column: 6, scope: !5137)
!5148 = !DILocalVariable(name: "j", scope: !5137, file: !3, line: 1600, type: !36)
!5149 = !DILocation(line: 1600, column: 9, scope: !5137)
!5150 = !DILocalVariable(name: "oxyz4", scope: !5137, file: !3, line: 1601, type: !279)
!5151 = !DILocation(line: 1601, column: 9, scope: !5137)
!5152 = !DILocalVariable(name: "nxyz4", scope: !5137, file: !3, line: 1601, type: !279)
!5153 = !DILocation(line: 1601, column: 21, scope: !5137)
!5154 = !DILocation(line: 1603, column: 9, scope: !5155)
!5155 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1603, column: 2)
!5156 = !DILocation(line: 1603, column: 7, scope: !5155)
!5157 = !DILocation(line: 1603, column: 14, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5155, file: !3, line: 1603, column: 2)
!5159 = !DILocation(line: 1603, column: 16, scope: !5158)
!5160 = !DILocation(line: 1603, column: 2, scope: !5155)
!5161 = !DILocation(line: 1604, column: 16, scope: !5158)
!5162 = !DILocation(line: 1604, column: 22, scope: !5158)
!5163 = !DILocation(line: 1604, column: 10, scope: !5158)
!5164 = !DILocation(line: 1604, column: 3, scope: !5158)
!5165 = !DILocation(line: 1604, column: 14, scope: !5158)
!5166 = !DILocation(line: 1603, column: 22, scope: !5158)
!5167 = !DILocation(line: 1603, column: 2, scope: !5158)
!5168 = distinct !{!5168, !5160, !5169}
!5169 = !DILocation(line: 1604, column: 24, scope: !5155)
!5170 = !DILocation(line: 1605, column: 2, scope: !5137)
!5171 = !DILocation(line: 1605, column: 13, scope: !5137)
!5172 = !DILocation(line: 1607, column: 9, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1607, column: 2)
!5174 = !DILocation(line: 1607, column: 7, scope: !5173)
!5175 = !DILocation(line: 1607, column: 14, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 1607, column: 2)
!5177 = !DILocation(line: 1607, column: 16, scope: !5176)
!5178 = !DILocation(line: 1607, column: 2, scope: !5173)
!5179 = !DILocation(line: 1608, column: 10, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !3, line: 1607, column: 26)
!5181 = !DILocation(line: 1608, column: 3, scope: !5180)
!5182 = !DILocation(line: 1608, column: 14, scope: !5180)
!5183 = !DILocation(line: 1609, column: 10, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5180, file: !3, line: 1609, column: 3)
!5185 = !DILocation(line: 1609, column: 8, scope: !5184)
!5186 = !DILocation(line: 1609, column: 15, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5184, file: !3, line: 1609, column: 3)
!5188 = !DILocation(line: 1609, column: 17, scope: !5187)
!5189 = !DILocation(line: 1609, column: 3, scope: !5184)
!5190 = !DILocation(line: 1610, column: 25, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 1609, column: 27)
!5192 = !DILocation(line: 1610, column: 18, scope: !5191)
!5193 = !DILocation(line: 1610, column: 31, scope: !5191)
!5194 = !DILocation(line: 1610, column: 36, scope: !5191)
!5195 = !DILocation(line: 1610, column: 41, scope: !5191)
!5196 = !DILocation(line: 1610, column: 29, scope: !5191)
!5197 = !DILocation(line: 1610, column: 11, scope: !5191)
!5198 = !DILocation(line: 1610, column: 4, scope: !5191)
!5199 = !DILocation(line: 1610, column: 15, scope: !5191)
!5200 = !DILocation(line: 1611, column: 3, scope: !5191)
!5201 = !DILocation(line: 1609, column: 23, scope: !5187)
!5202 = !DILocation(line: 1609, column: 3, scope: !5187)
!5203 = distinct !{!5203, !5189, !5204}
!5204 = !DILocation(line: 1611, column: 3, scope: !5184)
!5205 = !DILocation(line: 1612, column: 2, scope: !5180)
!5206 = !DILocation(line: 1607, column: 22, scope: !5176)
!5207 = !DILocation(line: 1607, column: 2, scope: !5176)
!5208 = distinct !{!5208, !5178, !5209}
!5209 = !DILocation(line: 1612, column: 2, scope: !5173)
!5210 = !DILocation(line: 1614, column: 9, scope: !5211)
!5211 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1614, column: 2)
!5212 = !DILocation(line: 1614, column: 7, scope: !5211)
!5213 = !DILocation(line: 1614, column: 14, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5211, file: !3, line: 1614, column: 2)
!5215 = !DILocation(line: 1614, column: 16, scope: !5214)
!5216 = !DILocation(line: 1614, column: 2, scope: !5211)
!5217 = !DILocation(line: 1615, column: 22, scope: !5214)
!5218 = !DILocation(line: 1615, column: 15, scope: !5214)
!5219 = !DILocation(line: 1615, column: 3, scope: !5214)
!5220 = !DILocation(line: 1615, column: 9, scope: !5214)
!5221 = !DILocation(line: 1615, column: 13, scope: !5214)
!5222 = !DILocation(line: 1614, column: 22, scope: !5214)
!5223 = !DILocation(line: 1614, column: 2, scope: !5214)
!5224 = distinct !{!5224, !5216, !5225}
!5225 = !DILocation(line: 1615, column: 24, scope: !5211)
!5226 = !DILocation(line: 1616, column: 1, scope: !5137)
!5227 = distinct !DISubprogram(name: "transformmol", scope: !3, file: !3, line: 1389, type: !5228, scopeLine: 1390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{!36, !278, !22, !238}
!5230 = !DILocalVariable(name: "mat", arg: 1, scope: !5227, file: !3, line: 1389, type: !278)
!5231 = !DILocation(line: 1389, column: 28, scope: !5227)
!5232 = !DILocalVariable(name: "mol", arg: 2, scope: !5227, file: !3, line: 1389, type: !22)
!5233 = !DILocation(line: 1389, column: 45, scope: !5227)
!5234 = !DILocalVariable(name: "aexp", arg: 3, scope: !5227, file: !3, line: 1389, type: !238)
!5235 = !DILocation(line: 1389, column: 56, scope: !5227)
!5236 = !DILocalVariable(name: "sp", scope: !5227, file: !3, line: 1391, type: !38)
!5237 = !DILocation(line: 1391, column: 12, scope: !5227)
!5238 = !DILocalVariable(name: "res", scope: !5227, file: !3, line: 1392, type: !56)
!5239 = !DILocation(line: 1392, column: 13, scope: !5227)
!5240 = !DILocalVariable(name: "r", scope: !5227, file: !3, line: 1393, type: !36)
!5241 = !DILocation(line: 1393, column: 7, scope: !5227)
!5242 = !DILocalVariable(name: "a", scope: !5227, file: !3, line: 1393, type: !36)
!5243 = !DILocation(line: 1393, column: 10, scope: !5227)
!5244 = !DILocalVariable(name: "i", scope: !5227, file: !3, line: 1393, type: !36)
!5245 = !DILocation(line: 1393, column: 13, scope: !5227)
!5246 = !DILocalVariable(name: "k", scope: !5227, file: !3, line: 1393, type: !36)
!5247 = !DILocation(line: 1393, column: 16, scope: !5227)
!5248 = !DILocalVariable(name: "ap", scope: !5227, file: !3, line: 1394, type: !102)
!5249 = !DILocation(line: 1394, column: 11, scope: !5227)
!5250 = !DILocalVariable(name: "xyz", scope: !5227, file: !3, line: 1395, type: !127)
!5251 = !DILocation(line: 1395, column: 11, scope: !5227)
!5252 = !DILocalVariable(name: "nxyz", scope: !5227, file: !3, line: 1395, type: !127)
!5253 = !DILocation(line: 1395, column: 16, scope: !5227)
!5254 = !DILocation(line: 1397, column: 16, scope: !5227)
!5255 = !DILocation(line: 1397, column: 21, scope: !5227)
!5256 = !DILocation(line: 1397, column: 2, scope: !5227)
!5257 = !DILocation(line: 1399, column: 12, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5227, file: !3, line: 1399, column: 2)
!5259 = !DILocation(line: 1399, column: 17, scope: !5258)
!5260 = !DILocation(line: 1399, column: 10, scope: !5258)
!5261 = !DILocation(line: 1399, column: 29, scope: !5258)
!5262 = !DILocation(line: 1399, column: 7, scope: !5258)
!5263 = !DILocation(line: 1399, column: 33, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5258, file: !3, line: 1399, column: 2)
!5265 = !DILocation(line: 1399, column: 2, scope: !5258)
!5266 = !DILocation(line: 1400, column: 10, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 1400, column: 3)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 1399, column: 54)
!5269 = !DILocation(line: 1400, column: 8, scope: !5267)
!5270 = !DILocation(line: 1400, column: 15, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 1400, column: 3)
!5272 = !DILocation(line: 1400, column: 19, scope: !5271)
!5273 = !DILocation(line: 1400, column: 23, scope: !5271)
!5274 = !DILocation(line: 1400, column: 17, scope: !5271)
!5275 = !DILocation(line: 1400, column: 3, scope: !5267)
!5276 = !DILocation(line: 1401, column: 10, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 1400, column: 41)
!5278 = !DILocation(line: 1401, column: 14, scope: !5277)
!5279 = !DILocation(line: 1401, column: 26, scope: !5277)
!5280 = !DILocation(line: 1401, column: 8, scope: !5277)
!5281 = !DILocation(line: 1402, column: 11, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 1402, column: 4)
!5283 = !DILocation(line: 1402, column: 9, scope: !5282)
!5284 = !DILocation(line: 1402, column: 16, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1402, column: 4)
!5286 = !DILocation(line: 1402, column: 20, scope: !5285)
!5287 = !DILocation(line: 1402, column: 25, scope: !5285)
!5288 = !DILocation(line: 1402, column: 18, scope: !5285)
!5289 = !DILocation(line: 1402, column: 4, scope: !5282)
!5290 = !DILocation(line: 1403, column: 11, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1402, column: 40)
!5292 = !DILocation(line: 1403, column: 16, scope: !5291)
!5293 = !DILocation(line: 1403, column: 25, scope: !5291)
!5294 = !DILocation(line: 1403, column: 8, scope: !5291)
!5295 = !DILocation(line: 1404, column: 9, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 1404, column: 9)
!5297 = !DILocation(line: 1404, column: 13, scope: !5296)
!5298 = !DILocation(line: 1404, column: 20, scope: !5296)
!5299 = !DILocation(line: 1404, column: 9, scope: !5291)
!5300 = !DILocation(line: 1405, column: 7, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1404, column: 33)
!5302 = !DILocation(line: 1406, column: 13, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5301, file: !3, line: 1406, column: 6)
!5304 = !DILocation(line: 1406, column: 11, scope: !5303)
!5305 = !DILocation(line: 1406, column: 18, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1406, column: 6)
!5307 = !DILocation(line: 1406, column: 20, scope: !5306)
!5308 = !DILocation(line: 1406, column: 6, scope: !5303)
!5309 = !DILocation(line: 1407, column: 18, scope: !5306)
!5310 = !DILocation(line: 1407, column: 22, scope: !5306)
!5311 = !DILocation(line: 1407, column: 29, scope: !5306)
!5312 = !DILocation(line: 1407, column: 12, scope: !5306)
!5313 = !DILocation(line: 1407, column: 7, scope: !5306)
!5314 = !DILocation(line: 1407, column: 16, scope: !5306)
!5315 = !DILocation(line: 1406, column: 26, scope: !5306)
!5316 = !DILocation(line: 1406, column: 6, scope: !5306)
!5317 = distinct !{!5317, !5308, !5318}
!5318 = !DILocation(line: 1407, column: 31, scope: !5303)
!5319 = !DILocation(line: 1408, column: 15, scope: !5301)
!5320 = !DILocation(line: 1408, column: 20, scope: !5301)
!5321 = !DILocation(line: 1408, column: 25, scope: !5301)
!5322 = !DILocation(line: 1408, column: 6, scope: !5301)
!5323 = !DILocation(line: 1409, column: 13, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5301, file: !3, line: 1409, column: 6)
!5325 = !DILocation(line: 1409, column: 11, scope: !5324)
!5326 = !DILocation(line: 1409, column: 18, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 1409, column: 6)
!5328 = !DILocation(line: 1409, column: 20, scope: !5327)
!5329 = !DILocation(line: 1409, column: 6, scope: !5324)
!5330 = !DILocation(line: 1410, column: 30, scope: !5327)
!5331 = !DILocation(line: 1410, column: 24, scope: !5327)
!5332 = !DILocation(line: 1410, column: 7, scope: !5327)
!5333 = !DILocation(line: 1410, column: 11, scope: !5327)
!5334 = !DILocation(line: 1410, column: 18, scope: !5327)
!5335 = !DILocation(line: 1410, column: 22, scope: !5327)
!5336 = !DILocation(line: 1409, column: 26, scope: !5327)
!5337 = !DILocation(line: 1409, column: 6, scope: !5327)
!5338 = distinct !{!5338, !5329, !5339}
!5339 = !DILocation(line: 1410, column: 32, scope: !5324)
!5340 = !DILocation(line: 1411, column: 5, scope: !5301)
!5341 = !DILocation(line: 1412, column: 4, scope: !5291)
!5342 = !DILocation(line: 1402, column: 36, scope: !5285)
!5343 = !DILocation(line: 1402, column: 4, scope: !5285)
!5344 = distinct !{!5344, !5289, !5345}
!5345 = !DILocation(line: 1412, column: 4, scope: !5282)
!5346 = !DILocation(line: 1413, column: 3, scope: !5277)
!5347 = !DILocation(line: 1400, column: 37, scope: !5271)
!5348 = !DILocation(line: 1400, column: 3, scope: !5271)
!5349 = distinct !{!5349, !5275, !5350}
!5350 = !DILocation(line: 1413, column: 3, scope: !5267)
!5351 = !DILocation(line: 1414, column: 2, scope: !5268)
!5352 = !DILocation(line: 1399, column: 42, scope: !5264)
!5353 = !DILocation(line: 1399, column: 46, scope: !5264)
!5354 = !DILocation(line: 1399, column: 40, scope: !5264)
!5355 = !DILocation(line: 1399, column: 2, scope: !5264)
!5356 = distinct !{!5356, !5265, !5357}
!5357 = !DILocation(line: 1414, column: 2, scope: !5258)
!5358 = !DILocation(line: 1416, column: 10, scope: !5227)
!5359 = !DILocation(line: 1416, column: 2, scope: !5227)
!5360 = distinct !DISubprogram(name: "transformpts", scope: !3, file: !3, line: 1419, type: !5361, scopeLine: 1420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5361 = !DISubroutineType(types: !5362)
!5362 = !{!36, !278, !3228, !36}
!5363 = !DILocalVariable(name: "mat", arg: 1, scope: !5360, file: !3, line: 1419, type: !278)
!5364 = !DILocation(line: 1419, column: 28, scope: !5360)
!5365 = !DILocalVariable(name: "pts", arg: 2, scope: !5360, file: !3, line: 1419, type: !3228)
!5366 = !DILocation(line: 1419, column: 41, scope: !5360)
!5367 = !DILocalVariable(name: "npts", arg: 3, scope: !5360, file: !3, line: 1419, type: !36)
!5368 = !DILocation(line: 1419, column: 52, scope: !5360)
!5369 = !DILocalVariable(name: "i", scope: !5360, file: !3, line: 1421, type: !36)
!5370 = !DILocation(line: 1421, column: 6, scope: !5360)
!5371 = !DILocation(line: 1423, column: 9, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5360, file: !3, line: 1423, column: 2)
!5373 = !DILocation(line: 1423, column: 7, scope: !5372)
!5374 = !DILocation(line: 1423, column: 14, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 1423, column: 2)
!5376 = !DILocation(line: 1423, column: 18, scope: !5375)
!5377 = !DILocation(line: 1423, column: 16, scope: !5375)
!5378 = !DILocation(line: 1423, column: 2, scope: !5372)
!5379 = !DILocation(line: 1424, column: 12, scope: !5375)
!5380 = !DILocation(line: 1424, column: 17, scope: !5375)
!5381 = !DILocation(line: 1424, column: 22, scope: !5375)
!5382 = !DILocation(line: 1424, column: 27, scope: !5375)
!5383 = !DILocation(line: 1424, column: 32, scope: !5375)
!5384 = !DILocation(line: 1424, column: 3, scope: !5375)
!5385 = !DILocation(line: 1423, column: 25, scope: !5375)
!5386 = !DILocation(line: 1423, column: 2, scope: !5375)
!5387 = distinct !{!5387, !5378, !5388}
!5388 = !DILocation(line: 1424, column: 36, scope: !5372)
!5389 = !DILocation(line: 1425, column: 2, scope: !5360)
!5390 = !DILocalVariable(name: "m1", arg: 1, scope: !275, file: !3, line: 1428, type: !278)
!5391 = !DILocation(line: 1428, column: 34, scope: !275)
!5392 = !DILocalVariable(name: "m2", arg: 2, scope: !275, file: !3, line: 1428, type: !278)
!5393 = !DILocation(line: 1428, column: 47, scope: !275)
!5394 = !DILocalVariable(name: "temp", scope: !275, file: !3, line: 1430, type: !237)
!5395 = !DILocation(line: 1430, column: 8, scope: !275)
!5396 = !DILocation(line: 1434, column: 14, scope: !275)
!5397 = !DILocation(line: 1434, column: 18, scope: !275)
!5398 = !DILocation(line: 1434, column: 2, scope: !275)
!5399 = !DILocation(line: 1435, column: 7, scope: !275)
!5400 = !DILocation(line: 1436, column: 10, scope: !275)
!5401 = !DILocation(line: 1436, column: 8, scope: !275)
!5402 = !DILocation(line: 1436, column: 2, scope: !275)
!5403 = !DILocalVariable(name: "p1", arg: 1, scope: !282, file: !3, line: 1439, type: !180)
!5404 = !DILocation(line: 1439, column: 28, scope: !282)
!5405 = !DILocalVariable(name: "p2", arg: 2, scope: !282, file: !3, line: 1439, type: !180)
!5406 = !DILocation(line: 1439, column: 40, scope: !282)
!5407 = !DILocalVariable(name: "d", arg: 3, scope: !282, file: !3, line: 1439, type: !30)
!5408 = !DILocation(line: 1439, column: 51, scope: !282)
!5409 = !DILocalVariable(name: "temp", scope: !282, file: !3, line: 1441, type: !237)
!5410 = !DILocation(line: 1441, column: 8, scope: !282)
!5411 = !DILocalVariable(name: "dx", scope: !282, file: !3, line: 1442, type: !30)
!5412 = !DILocation(line: 1442, column: 9, scope: !282)
!5413 = !DILocalVariable(name: "dy", scope: !282, file: !3, line: 1442, type: !30)
!5414 = !DILocation(line: 1442, column: 13, scope: !282)
!5415 = !DILocalVariable(name: "dz", scope: !282, file: !3, line: 1442, type: !30)
!5416 = !DILocation(line: 1442, column: 17, scope: !282)
!5417 = !DILocalVariable(name: "len", scope: !282, file: !3, line: 1442, type: !30)
!5418 = !DILocation(line: 1442, column: 21, scope: !282)
!5419 = !DILocation(line: 1445, column: 7, scope: !282)
!5420 = !DILocation(line: 1445, column: 17, scope: !282)
!5421 = !DILocation(line: 1445, column: 15, scope: !282)
!5422 = !DILocation(line: 1445, column: 5, scope: !282)
!5423 = !DILocation(line: 1446, column: 7, scope: !282)
!5424 = !DILocation(line: 1446, column: 17, scope: !282)
!5425 = !DILocation(line: 1446, column: 15, scope: !282)
!5426 = !DILocation(line: 1446, column: 5, scope: !282)
!5427 = !DILocation(line: 1447, column: 7, scope: !282)
!5428 = !DILocation(line: 1447, column: 17, scope: !282)
!5429 = !DILocation(line: 1447, column: 15, scope: !282)
!5430 = !DILocation(line: 1447, column: 5, scope: !282)
!5431 = !DILocation(line: 1448, column: 20, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !282, file: !3, line: 1448, column: 6)
!5433 = !DILocation(line: 1448, column: 25, scope: !5432)
!5434 = !DILocation(line: 1448, column: 23, scope: !5432)
!5435 = !DILocation(line: 1448, column: 30, scope: !5432)
!5436 = !DILocation(line: 1448, column: 35, scope: !5432)
!5437 = !DILocation(line: 1448, column: 33, scope: !5432)
!5438 = !DILocation(line: 1448, column: 28, scope: !5432)
!5439 = !DILocation(line: 1448, column: 40, scope: !5432)
!5440 = !DILocation(line: 1448, column: 45, scope: !5432)
!5441 = !DILocation(line: 1448, column: 43, scope: !5432)
!5442 = !DILocation(line: 1448, column: 38, scope: !5432)
!5443 = !DILocation(line: 1448, column: 14, scope: !5432)
!5444 = !DILocation(line: 1448, column: 12, scope: !5432)
!5445 = !DILocation(line: 1448, column: 52, scope: !5432)
!5446 = !DILocation(line: 1448, column: 6, scope: !282)
!5447 = !DILocation(line: 1449, column: 20, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 1448, column: 60)
!5449 = !DILocation(line: 1449, column: 3, scope: !5448)
!5450 = !DILocation(line: 1450, column: 2, scope: !5448)
!5451 = !DILocation(line: 1451, column: 9, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5432, file: !3, line: 1450, column: 7)
!5453 = !DILocation(line: 1451, column: 6, scope: !5452)
!5454 = !DILocation(line: 1452, column: 9, scope: !5452)
!5455 = !DILocation(line: 1452, column: 6, scope: !5452)
!5456 = !DILocation(line: 1453, column: 9, scope: !5452)
!5457 = !DILocation(line: 1453, column: 6, scope: !5452)
!5458 = !DILocation(line: 1455, column: 18, scope: !5452)
!5459 = !DILocation(line: 1455, column: 22, scope: !5452)
!5460 = !DILocation(line: 1455, column: 20, scope: !5452)
!5461 = !DILocation(line: 1455, column: 26, scope: !5452)
!5462 = !DILocation(line: 1455, column: 30, scope: !5452)
!5463 = !DILocation(line: 1455, column: 28, scope: !5452)
!5464 = !DILocation(line: 1455, column: 34, scope: !5452)
!5465 = !DILocation(line: 1455, column: 38, scope: !5452)
!5466 = !DILocation(line: 1455, column: 36, scope: !5452)
!5467 = !DILocation(line: 1455, column: 4, scope: !5452)
!5468 = !DILocation(line: 1454, column: 3, scope: !5452)
!5469 = !DILocation(line: 1457, column: 7, scope: !282)
!5470 = !DILocation(line: 1458, column: 10, scope: !282)
!5471 = !DILocation(line: 1458, column: 8, scope: !282)
!5472 = !DILocation(line: 1458, column: 2, scope: !282)
!5473 = distinct !DISubprogram(name: "NAB_matcpy", scope: !3, file: !3, line: 1500, type: !5474, scopeLine: 1501, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{!240, !237, !237}
!5476 = !DILocalVariable(name: "mdst", arg: 1, scope: !5473, file: !3, line: 1500, type: !237)
!5477 = !DILocation(line: 1500, column: 29, scope: !5473)
!5478 = !DILocalVariable(name: "msrc", arg: 2, scope: !5473, file: !3, line: 1500, type: !237)
!5479 = !DILocation(line: 1500, column: 41, scope: !5473)
!5480 = !DILocation(line: 1503, column: 32, scope: !5473)
!5481 = !DILocation(line: 1503, column: 38, scope: !5473)
!5482 = !DILocation(line: 1503, column: 24, scope: !5473)
!5483 = !DILocation(line: 1503, column: 10, scope: !5473)
!5484 = !DILocation(line: 1503, column: 2, scope: !5473)
!5485 = distinct !DISubprogram(name: "trans4", scope: !3, file: !3, line: 1461, type: !5486, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!240, !22, !238, !238, !30}
!5488 = !DILocalVariable(name: "mol", arg: 1, scope: !5485, file: !3, line: 1461, type: !22)
!5489 = !DILocation(line: 1461, column: 31, scope: !5485)
!5490 = !DILocalVariable(name: "aex1", arg: 2, scope: !5485, file: !3, line: 1461, type: !238)
!5491 = !DILocation(line: 1461, column: 41, scope: !5485)
!5492 = !DILocalVariable(name: "aex2", arg: 3, scope: !5485, file: !3, line: 1461, type: !238)
!5493 = !DILocation(line: 1461, column: 54, scope: !5485)
!5494 = !DILocalVariable(name: "d", arg: 4, scope: !5485, file: !3, line: 1461, type: !30)
!5495 = !DILocation(line: 1461, column: 69, scope: !5485)
!5496 = !DILocalVariable(name: "p1", scope: !5485, file: !3, line: 1463, type: !127)
!5497 = !DILocation(line: 1463, column: 10, scope: !5485)
!5498 = !DILocalVariable(name: "p2", scope: !5485, file: !3, line: 1463, type: !127)
!5499 = !DILocation(line: 1463, column: 14, scope: !5485)
!5500 = !DILocation(line: 1465, column: 12, scope: !5485)
!5501 = !DILocation(line: 1465, column: 17, scope: !5485)
!5502 = !DILocation(line: 1465, column: 23, scope: !5485)
!5503 = !DILocation(line: 1465, column: 2, scope: !5485)
!5504 = !DILocation(line: 1466, column: 12, scope: !5485)
!5505 = !DILocation(line: 1466, column: 17, scope: !5485)
!5506 = !DILocation(line: 1466, column: 23, scope: !5485)
!5507 = !DILocation(line: 1466, column: 2, scope: !5485)
!5508 = !DILocation(line: 1467, column: 19, scope: !5485)
!5509 = !DILocation(line: 1467, column: 23, scope: !5485)
!5510 = !DILocation(line: 1467, column: 27, scope: !5485)
!5511 = !DILocation(line: 1467, column: 10, scope: !5485)
!5512 = !DILocation(line: 1467, column: 2, scope: !5485)
!5513 = !DILocalVariable(name: "p1", arg: 1, scope: !287, file: !3, line: 1470, type: !180)
!5514 = !DILocation(line: 1470, column: 26, scope: !287)
!5515 = !DILocalVariable(name: "p2", arg: 2, scope: !287, file: !3, line: 1470, type: !180)
!5516 = !DILocation(line: 1470, column: 38, scope: !287)
!5517 = !DILocalVariable(name: "angle", arg: 3, scope: !287, file: !3, line: 1470, type: !30)
!5518 = !DILocation(line: 1470, column: 49, scope: !287)
!5519 = !DILocalVariable(name: "temp", scope: !287, file: !3, line: 1472, type: !237)
!5520 = !DILocation(line: 1472, column: 8, scope: !287)
!5521 = !DILocalVariable(name: "mat1", scope: !287, file: !3, line: 1473, type: !241)
!5522 = !DILocation(line: 1473, column: 11, scope: !287)
!5523 = !DILocalVariable(name: "mat2", scope: !287, file: !3, line: 1473, type: !241)
!5524 = !DILocation(line: 1473, column: 17, scope: !287)
!5525 = !DILocalVariable(name: "mat3", scope: !287, file: !3, line: 1473, type: !241)
!5526 = !DILocation(line: 1473, column: 23, scope: !287)
!5527 = !DILocalVariable(name: "mat4", scope: !287, file: !3, line: 1473, type: !241)
!5528 = !DILocation(line: 1473, column: 29, scope: !287)
!5529 = !DILocation(line: 1476, column: 14, scope: !287)
!5530 = !DILocation(line: 1477, column: 18, scope: !287)
!5531 = !DILocation(line: 1477, column: 17, scope: !287)
!5532 = !DILocation(line: 1477, column: 26, scope: !287)
!5533 = !DILocation(line: 1477, column: 25, scope: !287)
!5534 = !DILocation(line: 1477, column: 34, scope: !287)
!5535 = !DILocation(line: 1477, column: 33, scope: !287)
!5536 = !DILocation(line: 1477, column: 3, scope: !287)
!5537 = !DILocation(line: 1476, column: 2, scope: !287)
!5538 = !DILocation(line: 1479, column: 11, scope: !287)
!5539 = !DILocation(line: 1479, column: 17, scope: !287)
!5540 = !DILocation(line: 1479, column: 16, scope: !287)
!5541 = !DILocation(line: 1479, column: 24, scope: !287)
!5542 = !DILocation(line: 1479, column: 30, scope: !287)
!5543 = !DILocation(line: 1479, column: 29, scope: !287)
!5544 = !DILocation(line: 1479, column: 37, scope: !287)
!5545 = !DILocation(line: 1479, column: 43, scope: !287)
!5546 = !DILocation(line: 1479, column: 42, scope: !287)
!5547 = !DILocation(line: 1479, column: 51, scope: !287)
!5548 = !DILocation(line: 1479, column: 50, scope: !287)
!5549 = !DILocation(line: 1479, column: 58, scope: !287)
!5550 = !DILocation(line: 1479, column: 2, scope: !287)
!5551 = !DILocation(line: 1481, column: 14, scope: !287)
!5552 = !DILocation(line: 1481, column: 34, scope: !287)
!5553 = !DILocation(line: 1481, column: 41, scope: !287)
!5554 = !DILocation(line: 1481, column: 48, scope: !287)
!5555 = !DILocation(line: 1481, column: 20, scope: !287)
!5556 = !DILocation(line: 1481, column: 2, scope: !287)
!5557 = !DILocation(line: 1483, column: 14, scope: !287)
!5558 = !DILocation(line: 1483, column: 20, scope: !287)
!5559 = !DILocation(line: 1483, column: 26, scope: !287)
!5560 = !DILocation(line: 1483, column: 2, scope: !287)
!5561 = !DILocation(line: 1484, column: 14, scope: !287)
!5562 = !DILocation(line: 1484, column: 20, scope: !287)
!5563 = !DILocation(line: 1484, column: 2, scope: !287)
!5564 = !DILocation(line: 1486, column: 7, scope: !287)
!5565 = !DILocation(line: 1487, column: 10, scope: !287)
!5566 = !DILocation(line: 1487, column: 8, scope: !287)
!5567 = !DILocation(line: 1487, column: 2, scope: !287)
!5568 = distinct !DISubprogram(name: "raa2mat", scope: !3, file: !3, line: 1506, type: !5569, scopeLine: 1507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5569 = !DISubroutineType(types: !5570)
!5570 = !{null, !30, !30, !30, !30, !278}
!5571 = !DILocalVariable(name: "x", arg: 1, scope: !5568, file: !3, line: 1506, type: !30)
!5572 = !DILocation(line: 1506, column: 29, scope: !5568)
!5573 = !DILocalVariable(name: "y", arg: 2, scope: !5568, file: !3, line: 1506, type: !30)
!5574 = !DILocation(line: 1506, column: 39, scope: !5568)
!5575 = !DILocalVariable(name: "z", arg: 3, scope: !5568, file: !3, line: 1506, type: !30)
!5576 = !DILocation(line: 1506, column: 49, scope: !5568)
!5577 = !DILocalVariable(name: "angle", arg: 4, scope: !5568, file: !3, line: 1506, type: !30)
!5578 = !DILocation(line: 1506, column: 59, scope: !5568)
!5579 = !DILocalVariable(name: "mat", arg: 5, scope: !5568, file: !3, line: 1506, type: !278)
!5580 = !DILocation(line: 1506, column: 75, scope: !5568)
!5581 = !DILocalVariable(name: "axlen", scope: !5568, file: !3, line: 1508, type: !30)
!5582 = !DILocation(line: 1508, column: 9, scope: !5568)
!5583 = !DILocalVariable(name: "a1", scope: !5568, file: !3, line: 1509, type: !30)
!5584 = !DILocation(line: 1509, column: 9, scope: !5568)
!5585 = !DILocalVariable(name: "a2", scope: !5568, file: !3, line: 1509, type: !30)
!5586 = !DILocation(line: 1509, column: 13, scope: !5568)
!5587 = !DILocalVariable(name: "a3", scope: !5568, file: !3, line: 1509, type: !30)
!5588 = !DILocation(line: 1509, column: 17, scope: !5568)
!5589 = !DILocalVariable(name: "a1a1", scope: !5568, file: !3, line: 1509, type: !30)
!5590 = !DILocation(line: 1509, column: 21, scope: !5568)
!5591 = !DILocalVariable(name: "a1a2", scope: !5568, file: !3, line: 1509, type: !30)
!5592 = !DILocation(line: 1509, column: 27, scope: !5568)
!5593 = !DILocalVariable(name: "a1a3", scope: !5568, file: !3, line: 1509, type: !30)
!5594 = !DILocation(line: 1509, column: 33, scope: !5568)
!5595 = !DILocalVariable(name: "a2a2", scope: !5568, file: !3, line: 1509, type: !30)
!5596 = !DILocation(line: 1509, column: 39, scope: !5568)
!5597 = !DILocalVariable(name: "a2a3", scope: !5568, file: !3, line: 1509, type: !30)
!5598 = !DILocation(line: 1509, column: 45, scope: !5568)
!5599 = !DILocalVariable(name: "a3a3", scope: !5568, file: !3, line: 1509, type: !30)
!5600 = !DILocation(line: 1509, column: 51, scope: !5568)
!5601 = !DILocalVariable(name: "ca1a2", scope: !5568, file: !3, line: 1510, type: !30)
!5602 = !DILocation(line: 1510, column: 19, scope: !5568)
!5603 = !DILocalVariable(name: "ca2a3", scope: !5568, file: !3, line: 1510, type: !30)
!5604 = !DILocation(line: 1510, column: 26, scope: !5568)
!5605 = !DILocalVariable(name: "ca1a3", scope: !5568, file: !3, line: 1510, type: !30)
!5606 = !DILocation(line: 1510, column: 33, scope: !5568)
!5607 = !DILocalVariable(name: "sa1", scope: !5568, file: !3, line: 1510, type: !30)
!5608 = !DILocation(line: 1510, column: 40, scope: !5568)
!5609 = !DILocalVariable(name: "sa2", scope: !5568, file: !3, line: 1510, type: !30)
!5610 = !DILocation(line: 1510, column: 45, scope: !5568)
!5611 = !DILocalVariable(name: "sa3", scope: !5568, file: !3, line: 1510, type: !30)
!5612 = !DILocation(line: 1510, column: 50, scope: !5568)
!5613 = !DILocalVariable(name: "c", scope: !5568, file: !3, line: 1511, type: !30)
!5614 = !DILocation(line: 1511, column: 10, scope: !5568)
!5615 = !DILocalVariable(name: "s", scope: !5568, file: !3, line: 1511, type: !30)
!5616 = !DILocation(line: 1511, column: 13, scope: !5568)
!5617 = !DILocation(line: 1513, column: 30, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 1513, column: 6)
!5619 = !DILocation(line: 1513, column: 33, scope: !5618)
!5620 = !DILocation(line: 1513, column: 23, scope: !5618)
!5621 = !DILocation(line: 1513, column: 38, scope: !5618)
!5622 = !DILocation(line: 1513, column: 16, scope: !5618)
!5623 = !DILocation(line: 1513, column: 14, scope: !5618)
!5624 = !DILocation(line: 1513, column: 44, scope: !5618)
!5625 = !DILocation(line: 1513, column: 6, scope: !5568)
!5626 = !DILocation(line: 1514, column: 5, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 1513, column: 52)
!5628 = !DILocation(line: 1515, column: 5, scope: !5627)
!5629 = !DILocation(line: 1516, column: 5, scope: !5627)
!5630 = !DILocation(line: 1517, column: 9, scope: !5627)
!5631 = !DILocation(line: 1518, column: 2, scope: !5627)
!5632 = !DILocation(line: 1519, column: 7, scope: !5568)
!5633 = !DILocation(line: 1519, column: 4, scope: !5568)
!5634 = !DILocation(line: 1520, column: 7, scope: !5568)
!5635 = !DILocation(line: 1520, column: 4, scope: !5568)
!5636 = !DILocation(line: 1521, column: 7, scope: !5568)
!5637 = !DILocation(line: 1521, column: 4, scope: !5568)
!5638 = !DILocation(line: 1523, column: 7, scope: !5568)
!5639 = !DILocation(line: 1523, column: 5, scope: !5568)
!5640 = !DILocation(line: 1524, column: 7, scope: !5568)
!5641 = !DILocation(line: 1524, column: 5, scope: !5568)
!5642 = !DILocation(line: 1525, column: 7, scope: !5568)
!5643 = !DILocation(line: 1525, column: 5, scope: !5568)
!5644 = !DILocation(line: 1526, column: 9, scope: !5568)
!5645 = !DILocation(line: 1526, column: 13, scope: !5568)
!5646 = !DILocation(line: 1526, column: 11, scope: !5568)
!5647 = !DILocation(line: 1526, column: 7, scope: !5568)
!5648 = !DILocation(line: 1527, column: 9, scope: !5568)
!5649 = !DILocation(line: 1527, column: 13, scope: !5568)
!5650 = !DILocation(line: 1527, column: 11, scope: !5568)
!5651 = !DILocation(line: 1527, column: 7, scope: !5568)
!5652 = !DILocation(line: 1528, column: 9, scope: !5568)
!5653 = !DILocation(line: 1528, column: 13, scope: !5568)
!5654 = !DILocation(line: 1528, column: 11, scope: !5568)
!5655 = !DILocation(line: 1528, column: 7, scope: !5568)
!5656 = !DILocation(line: 1529, column: 9, scope: !5568)
!5657 = !DILocation(line: 1529, column: 13, scope: !5568)
!5658 = !DILocation(line: 1529, column: 11, scope: !5568)
!5659 = !DILocation(line: 1529, column: 7, scope: !5568)
!5660 = !DILocation(line: 1530, column: 9, scope: !5568)
!5661 = !DILocation(line: 1530, column: 13, scope: !5568)
!5662 = !DILocation(line: 1530, column: 11, scope: !5568)
!5663 = !DILocation(line: 1530, column: 7, scope: !5568)
!5664 = !DILocation(line: 1531, column: 9, scope: !5568)
!5665 = !DILocation(line: 1531, column: 13, scope: !5568)
!5666 = !DILocation(line: 1531, column: 11, scope: !5568)
!5667 = !DILocation(line: 1531, column: 7, scope: !5568)
!5668 = !DILocation(line: 1532, column: 17, scope: !5568)
!5669 = !DILocation(line: 1532, column: 15, scope: !5568)
!5670 = !DILocation(line: 1532, column: 6, scope: !5568)
!5671 = !DILocation(line: 1532, column: 4, scope: !5568)
!5672 = !DILocation(line: 1533, column: 17, scope: !5568)
!5673 = !DILocation(line: 1533, column: 15, scope: !5568)
!5674 = !DILocation(line: 1533, column: 6, scope: !5568)
!5675 = !DILocation(line: 1533, column: 4, scope: !5568)
!5676 = !DILocation(line: 1535, column: 10, scope: !5568)
!5677 = !DILocation(line: 1535, column: 14, scope: !5568)
!5678 = !DILocation(line: 1535, column: 12, scope: !5568)
!5679 = !DILocation(line: 1535, column: 8, scope: !5568)
!5680 = !DILocation(line: 1536, column: 10, scope: !5568)
!5681 = !DILocation(line: 1536, column: 14, scope: !5568)
!5682 = !DILocation(line: 1536, column: 12, scope: !5568)
!5683 = !DILocation(line: 1536, column: 8, scope: !5568)
!5684 = !DILocation(line: 1537, column: 10, scope: !5568)
!5685 = !DILocation(line: 1537, column: 14, scope: !5568)
!5686 = !DILocation(line: 1537, column: 12, scope: !5568)
!5687 = !DILocation(line: 1537, column: 8, scope: !5568)
!5688 = !DILocation(line: 1538, column: 8, scope: !5568)
!5689 = !DILocation(line: 1538, column: 12, scope: !5568)
!5690 = !DILocation(line: 1538, column: 10, scope: !5568)
!5691 = !DILocation(line: 1538, column: 6, scope: !5568)
!5692 = !DILocation(line: 1539, column: 8, scope: !5568)
!5693 = !DILocation(line: 1539, column: 12, scope: !5568)
!5694 = !DILocation(line: 1539, column: 10, scope: !5568)
!5695 = !DILocation(line: 1539, column: 6, scope: !5568)
!5696 = !DILocation(line: 1540, column: 8, scope: !5568)
!5697 = !DILocation(line: 1540, column: 12, scope: !5568)
!5698 = !DILocation(line: 1540, column: 10, scope: !5568)
!5699 = !DILocation(line: 1540, column: 6, scope: !5568)
!5700 = !DILocation(line: 1542, column: 18, scope: !5568)
!5701 = !DILocation(line: 1542, column: 2, scope: !5568)
!5702 = !DILocation(line: 1542, column: 16, scope: !5568)
!5703 = !DILocation(line: 1543, column: 18, scope: !5568)
!5704 = !DILocation(line: 1543, column: 2, scope: !5568)
!5705 = !DILocation(line: 1543, column: 16, scope: !5568)
!5706 = !DILocation(line: 1544, column: 18, scope: !5568)
!5707 = !DILocation(line: 1544, column: 2, scope: !5568)
!5708 = !DILocation(line: 1544, column: 16, scope: !5568)
!5709 = !DILocation(line: 1545, column: 2, scope: !5568)
!5710 = !DILocation(line: 1545, column: 16, scope: !5568)
!5711 = !DILocation(line: 1547, column: 18, scope: !5568)
!5712 = !DILocation(line: 1547, column: 2, scope: !5568)
!5713 = !DILocation(line: 1547, column: 16, scope: !5568)
!5714 = !DILocation(line: 1548, column: 18, scope: !5568)
!5715 = !DILocation(line: 1548, column: 2, scope: !5568)
!5716 = !DILocation(line: 1548, column: 16, scope: !5568)
!5717 = !DILocation(line: 1549, column: 18, scope: !5568)
!5718 = !DILocation(line: 1549, column: 2, scope: !5568)
!5719 = !DILocation(line: 1549, column: 16, scope: !5568)
!5720 = !DILocation(line: 1550, column: 2, scope: !5568)
!5721 = !DILocation(line: 1550, column: 16, scope: !5568)
!5722 = !DILocation(line: 1552, column: 18, scope: !5568)
!5723 = !DILocation(line: 1552, column: 2, scope: !5568)
!5724 = !DILocation(line: 1552, column: 16, scope: !5568)
!5725 = !DILocation(line: 1553, column: 18, scope: !5568)
!5726 = !DILocation(line: 1553, column: 2, scope: !5568)
!5727 = !DILocation(line: 1553, column: 16, scope: !5568)
!5728 = !DILocation(line: 1554, column: 18, scope: !5568)
!5729 = !DILocation(line: 1554, column: 2, scope: !5568)
!5730 = !DILocation(line: 1554, column: 16, scope: !5568)
!5731 = !DILocation(line: 1555, column: 2, scope: !5568)
!5732 = !DILocation(line: 1555, column: 16, scope: !5568)
!5733 = !DILocation(line: 1557, column: 2, scope: !5568)
!5734 = !DILocation(line: 1557, column: 16, scope: !5568)
!5735 = !DILocation(line: 1558, column: 2, scope: !5568)
!5736 = !DILocation(line: 1558, column: 16, scope: !5568)
!5737 = !DILocation(line: 1559, column: 2, scope: !5568)
!5738 = !DILocation(line: 1559, column: 16, scope: !5568)
!5739 = !DILocation(line: 1560, column: 2, scope: !5568)
!5740 = !DILocation(line: 1560, column: 16, scope: !5568)
!5741 = !DILocation(line: 1561, column: 1, scope: !5568)
!5742 = distinct !DISubprogram(name: "rot4", scope: !3, file: !3, line: 1490, type: !5486, scopeLine: 1491, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5743 = !DILocalVariable(name: "mol", arg: 1, scope: !5742, file: !3, line: 1490, type: !22)
!5744 = !DILocation(line: 1490, column: 29, scope: !5742)
!5745 = !DILocalVariable(name: "aex1", arg: 2, scope: !5742, file: !3, line: 1490, type: !238)
!5746 = !DILocation(line: 1490, column: 39, scope: !5742)
!5747 = !DILocalVariable(name: "aex2", arg: 3, scope: !5742, file: !3, line: 1490, type: !238)
!5748 = !DILocation(line: 1490, column: 52, scope: !5742)
!5749 = !DILocalVariable(name: "angle", arg: 4, scope: !5742, file: !3, line: 1490, type: !30)
!5750 = !DILocation(line: 1490, column: 67, scope: !5742)
!5751 = !DILocalVariable(name: "p1", scope: !5742, file: !3, line: 1492, type: !127)
!5752 = !DILocation(line: 1492, column: 10, scope: !5742)
!5753 = !DILocalVariable(name: "p2", scope: !5742, file: !3, line: 1492, type: !127)
!5754 = !DILocation(line: 1492, column: 14, scope: !5742)
!5755 = !DILocation(line: 1494, column: 12, scope: !5742)
!5756 = !DILocation(line: 1494, column: 17, scope: !5742)
!5757 = !DILocation(line: 1494, column: 23, scope: !5742)
!5758 = !DILocation(line: 1494, column: 2, scope: !5742)
!5759 = !DILocation(line: 1495, column: 12, scope: !5742)
!5760 = !DILocation(line: 1495, column: 17, scope: !5742)
!5761 = !DILocation(line: 1495, column: 23, scope: !5742)
!5762 = !DILocation(line: 1495, column: 2, scope: !5742)
!5763 = !DILocation(line: 1497, column: 17, scope: !5742)
!5764 = !DILocation(line: 1497, column: 21, scope: !5742)
!5765 = !DILocation(line: 1497, column: 25, scope: !5742)
!5766 = !DILocation(line: 1497, column: 10, scope: !5742)
!5767 = !DILocation(line: 1497, column: 2, scope: !5742)
!5768 = distinct !DISubprogram(name: "set_belly_mask", scope: !3, file: !3, line: 1894, type: !5769, scopeLine: 1898, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!36, !22, !238, !244}
!5771 = !DILocalVariable(name: "m", arg: 1, scope: !5768, file: !3, line: 1895, type: !22)
!5772 = !DILocation(line: 1895, column: 13, scope: !5768)
!5773 = !DILocalVariable(name: "aex", arg: 2, scope: !5768, file: !3, line: 1896, type: !238)
!5774 = !DILocation(line: 1896, column: 8, scope: !5768)
!5775 = !DILocalVariable(name: "frozen", arg: 3, scope: !5768, file: !3, line: 1897, type: !244)
!5776 = !DILocation(line: 1897, column: 8, scope: !5768)
!5777 = !DILocalVariable(name: "i", scope: !5768, file: !3, line: 1899, type: !36)
!5778 = !DILocation(line: 1899, column: 6, scope: !5768)
!5779 = !DILocalVariable(name: "j", scope: !5768, file: !3, line: 1899, type: !36)
!5780 = !DILocation(line: 1899, column: 9, scope: !5768)
!5781 = !DILocalVariable(name: "k", scope: !5768, file: !3, line: 1899, type: !36)
!5782 = !DILocation(line: 1899, column: 12, scope: !5768)
!5783 = !DILocalVariable(name: "l", scope: !5768, file: !3, line: 1899, type: !36)
!5784 = !DILocation(line: 1899, column: 15, scope: !5768)
!5785 = !DILocalVariable(name: "ib", scope: !5768, file: !3, line: 1899, type: !36)
!5786 = !DILocation(line: 1899, column: 18, scope: !5768)
!5787 = !DILocalVariable(name: "r", scope: !5768, file: !3, line: 1899, type: !36)
!5788 = !DILocation(line: 1899, column: 22, scope: !5768)
!5789 = !DILocalVariable(name: "a", scope: !5768, file: !3, line: 1899, type: !36)
!5790 = !DILocation(line: 1899, column: 25, scope: !5768)
!5791 = !DILocalVariable(name: "n", scope: !5768, file: !3, line: 1899, type: !36)
!5792 = !DILocation(line: 1899, column: 28, scope: !5768)
!5793 = !DILocalVariable(name: "nfrozen", scope: !5768, file: !3, line: 1899, type: !36)
!5794 = !DILocation(line: 1899, column: 31, scope: !5768)
!5795 = !DILocalVariable(name: "nb", scope: !5768, file: !3, line: 1899, type: !36)
!5796 = !DILocation(line: 1899, column: 40, scope: !5768)
!5797 = !DILocalVariable(name: "ibig", scope: !5768, file: !3, line: 1899, type: !36)
!5798 = !DILocation(line: 1899, column: 44, scope: !5768)
!5799 = !DILocalVariable(name: "ismall", scope: !5768, file: !3, line: 1899, type: !36)
!5800 = !DILocation(line: 1899, column: 50, scope: !5768)
!5801 = !DILocalVariable(name: "ka", scope: !5768, file: !3, line: 1899, type: !36)
!5802 = !DILocation(line: 1899, column: 58, scope: !5768)
!5803 = !DILocalVariable(name: "la", scope: !5768, file: !3, line: 1899, type: !36)
!5804 = !DILocation(line: 1899, column: 62, scope: !5768)
!5805 = !DILocalVariable(name: "iptmp", scope: !5768, file: !3, line: 1900, type: !244)
!5806 = !DILocation(line: 1900, column: 7, scope: !5768)
!5807 = !DILocalVariable(name: "sp", scope: !5768, file: !3, line: 1901, type: !38)
!5808 = !DILocation(line: 1901, column: 12, scope: !5768)
!5809 = !DILocalVariable(name: "res", scope: !5768, file: !3, line: 1902, type: !56)
!5810 = !DILocation(line: 1902, column: 13, scope: !5768)
!5811 = !DILocalVariable(name: "ap", scope: !5768, file: !3, line: 1903, type: !102)
!5812 = !DILocation(line: 1903, column: 11, scope: !5768)
!5813 = !DILocalVariable(name: "prm", scope: !5768, file: !3, line: 1904, type: !135)
!5814 = !DILocation(line: 1904, column: 16, scope: !5768)
!5815 = !DILocation(line: 1906, column: 16, scope: !5768)
!5816 = !DILocation(line: 1906, column: 19, scope: !5768)
!5817 = !DILocation(line: 1906, column: 2, scope: !5768)
!5818 = !DILocation(line: 1907, column: 10, scope: !5768)
!5819 = !DILocation(line: 1908, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1908, column: 2)
!5821 = !DILocation(line: 1908, column: 19, scope: !5820)
!5822 = !DILocation(line: 1908, column: 22, scope: !5820)
!5823 = !DILocation(line: 1908, column: 17, scope: !5820)
!5824 = !DILocation(line: 1908, column: 7, scope: !5820)
!5825 = !DILocation(line: 1908, column: 33, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 1908, column: 2)
!5827 = !DILocation(line: 1908, column: 2, scope: !5820)
!5828 = !DILocation(line: 1909, column: 10, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1909, column: 3)
!5830 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1908, column: 54)
!5831 = !DILocation(line: 1909, column: 8, scope: !5829)
!5832 = !DILocation(line: 1909, column: 15, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1909, column: 3)
!5834 = !DILocation(line: 1909, column: 19, scope: !5833)
!5835 = !DILocation(line: 1909, column: 23, scope: !5833)
!5836 = !DILocation(line: 1909, column: 17, scope: !5833)
!5837 = !DILocation(line: 1909, column: 3, scope: !5829)
!5838 = !DILocation(line: 1910, column: 10, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5833, file: !3, line: 1909, column: 41)
!5840 = !DILocation(line: 1910, column: 14, scope: !5839)
!5841 = !DILocation(line: 1910, column: 26, scope: !5839)
!5842 = !DILocation(line: 1910, column: 8, scope: !5839)
!5843 = !DILocation(line: 1911, column: 11, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 1911, column: 4)
!5845 = !DILocation(line: 1911, column: 9, scope: !5844)
!5846 = !DILocation(line: 1911, column: 16, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 1911, column: 4)
!5848 = !DILocation(line: 1911, column: 20, scope: !5847)
!5849 = !DILocation(line: 1911, column: 25, scope: !5847)
!5850 = !DILocation(line: 1911, column: 18, scope: !5847)
!5851 = !DILocation(line: 1911, column: 4, scope: !5844)
!5852 = !DILocation(line: 1912, column: 11, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1911, column: 40)
!5854 = !DILocation(line: 1912, column: 16, scope: !5853)
!5855 = !DILocation(line: 1912, column: 25, scope: !5853)
!5856 = !DILocation(line: 1912, column: 8, scope: !5853)
!5857 = !DILocation(line: 1913, column: 9, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 1913, column: 9)
!5859 = !DILocation(line: 1913, column: 13, scope: !5858)
!5860 = !DILocation(line: 1913, column: 20, scope: !5858)
!5861 = !DILocation(line: 1913, column: 9, scope: !5853)
!5862 = !DILocation(line: 1913, column: 34, scope: !5858)
!5863 = !DILocation(line: 1913, column: 41, scope: !5858)
!5864 = !DILocation(line: 1913, column: 44, scope: !5858)
!5865 = !DILocation(line: 1914, column: 12, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 1914, column: 11)
!5867 = !DILocation(line: 1914, column: 19, scope: !5866)
!5868 = !DILocation(line: 1914, column: 22, scope: !5866)
!5869 = !DILocation(line: 1914, column: 34, scope: !5866)
!5870 = !DILocation(line: 1915, column: 6, scope: !5853)
!5871 = !DILocation(line: 1916, column: 4, scope: !5853)
!5872 = !DILocation(line: 1911, column: 36, scope: !5847)
!5873 = !DILocation(line: 1911, column: 4, scope: !5847)
!5874 = distinct !{!5874, !5851, !5875}
!5875 = !DILocation(line: 1916, column: 4, scope: !5844)
!5876 = !DILocation(line: 1917, column: 3, scope: !5839)
!5877 = !DILocation(line: 1909, column: 37, scope: !5833)
!5878 = !DILocation(line: 1909, column: 3, scope: !5833)
!5879 = distinct !{!5879, !5837, !5880}
!5880 = !DILocation(line: 1917, column: 3, scope: !5829)
!5881 = !DILocation(line: 1918, column: 2, scope: !5830)
!5882 = !DILocation(line: 1908, column: 42, scope: !5826)
!5883 = !DILocation(line: 1908, column: 46, scope: !5826)
!5884 = !DILocation(line: 1908, column: 40, scope: !5826)
!5885 = !DILocation(line: 1908, column: 2, scope: !5826)
!5886 = distinct !{!5886, !5827, !5887}
!5887 = !DILocation(line: 1918, column: 2, scope: !5820)
!5888 = !DILocation(line: 1922, column: 8, scope: !5768)
!5889 = !DILocation(line: 1922, column: 11, scope: !5768)
!5890 = !DILocation(line: 1922, column: 6, scope: !5768)
!5891 = !DILocation(line: 1923, column: 6, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1923, column: 6)
!5893 = !DILocation(line: 1923, column: 6, scope: !5768)
!5894 = !DILocation(line: 1926, column: 10, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1926, column: 3)
!5896 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 1923, column: 11)
!5897 = !DILocation(line: 1926, column: 16, scope: !5895)
!5898 = !DILocation(line: 1926, column: 8, scope: !5895)
!5899 = !DILocation(line: 1926, column: 20, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 1926, column: 3)
!5901 = !DILocation(line: 1926, column: 23, scope: !5900)
!5902 = !DILocation(line: 1926, column: 28, scope: !5900)
!5903 = !DILocation(line: 1926, column: 22, scope: !5900)
!5904 = !DILocation(line: 1926, column: 3, scope: !5895)
!5905 = !DILocation(line: 1927, column: 8, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 1926, column: 41)
!5907 = !DILocation(line: 1927, column: 13, scope: !5906)
!5908 = !DILocation(line: 1927, column: 22, scope: !5906)
!5909 = !DILocation(line: 1927, column: 25, scope: !5906)
!5910 = !DILocation(line: 1927, column: 6, scope: !5906)
!5911 = !DILocation(line: 1928, column: 8, scope: !5906)
!5912 = !DILocation(line: 1928, column: 13, scope: !5906)
!5913 = !DILocation(line: 1928, column: 22, scope: !5906)
!5914 = !DILocation(line: 1928, column: 25, scope: !5906)
!5915 = !DILocation(line: 1928, column: 6, scope: !5906)
!5916 = !DILocation(line: 1929, column: 9, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !5906, file: !3, line: 1929, column: 8)
!5918 = !DILocation(line: 1929, column: 16, scope: !5917)
!5919 = !DILocation(line: 1929, column: 19, scope: !5917)
!5920 = !DILocation(line: 1929, column: 23, scope: !5917)
!5921 = !DILocation(line: 1929, column: 30, scope: !5917)
!5922 = !DILocation(line: 1929, column: 8, scope: !5906)
!5923 = !DILocation(line: 1930, column: 25, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5917, file: !3, line: 1929, column: 34)
!5925 = !DILocation(line: 1930, column: 30, scope: !5924)
!5926 = !DILocation(line: 1930, column: 39, scope: !5924)
!5927 = !DILocation(line: 1930, column: 5, scope: !5924)
!5928 = !DILocation(line: 1930, column: 10, scope: !5924)
!5929 = !DILocation(line: 1930, column: 19, scope: !5924)
!5930 = !DILocation(line: 1930, column: 23, scope: !5924)
!5931 = !DILocation(line: 1931, column: 25, scope: !5924)
!5932 = !DILocation(line: 1931, column: 30, scope: !5924)
!5933 = !DILocation(line: 1931, column: 39, scope: !5924)
!5934 = !DILocation(line: 1931, column: 5, scope: !5924)
!5935 = !DILocation(line: 1931, column: 10, scope: !5924)
!5936 = !DILocation(line: 1931, column: 19, scope: !5924)
!5937 = !DILocation(line: 1931, column: 23, scope: !5924)
!5938 = !DILocation(line: 1932, column: 25, scope: !5924)
!5939 = !DILocation(line: 1932, column: 30, scope: !5924)
!5940 = !DILocation(line: 1932, column: 39, scope: !5924)
!5941 = !DILocation(line: 1932, column: 5, scope: !5924)
!5942 = !DILocation(line: 1932, column: 10, scope: !5924)
!5943 = !DILocation(line: 1932, column: 19, scope: !5924)
!5944 = !DILocation(line: 1932, column: 23, scope: !5924)
!5945 = !DILocation(line: 1933, column: 7, scope: !5924)
!5946 = !DILocation(line: 1934, column: 4, scope: !5924)
!5947 = !DILocation(line: 1935, column: 3, scope: !5906)
!5948 = !DILocation(line: 1926, column: 37, scope: !5900)
!5949 = !DILocation(line: 1926, column: 3, scope: !5900)
!5950 = distinct !{!5950, !5904, !5951}
!5951 = !DILocation(line: 1935, column: 3, scope: !5895)
!5952 = !DILocation(line: 1936, column: 16, scope: !5896)
!5953 = !DILocation(line: 1936, column: 3, scope: !5896)
!5954 = !DILocation(line: 1936, column: 8, scope: !5896)
!5955 = !DILocation(line: 1936, column: 14, scope: !5896)
!5956 = !DILocation(line: 1937, column: 10, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1937, column: 3)
!5958 = !DILocation(line: 1937, column: 16, scope: !5957)
!5959 = !DILocation(line: 1937, column: 8, scope: !5957)
!5960 = !DILocation(line: 1937, column: 20, scope: !5961)
!5961 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 1937, column: 3)
!5962 = !DILocation(line: 1937, column: 23, scope: !5961)
!5963 = !DILocation(line: 1937, column: 28, scope: !5961)
!5964 = !DILocation(line: 1937, column: 22, scope: !5961)
!5965 = !DILocation(line: 1937, column: 3, scope: !5957)
!5966 = !DILocation(line: 1938, column: 8, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 1937, column: 41)
!5968 = !DILocation(line: 1938, column: 13, scope: !5967)
!5969 = !DILocation(line: 1938, column: 21, scope: !5967)
!5970 = !DILocation(line: 1938, column: 24, scope: !5967)
!5971 = !DILocation(line: 1938, column: 6, scope: !5967)
!5972 = !DILocation(line: 1939, column: 8, scope: !5967)
!5973 = !DILocation(line: 1939, column: 13, scope: !5967)
!5974 = !DILocation(line: 1939, column: 21, scope: !5967)
!5975 = !DILocation(line: 1939, column: 24, scope: !5967)
!5976 = !DILocation(line: 1939, column: 6, scope: !5967)
!5977 = !DILocation(line: 1940, column: 9, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1940, column: 8)
!5979 = !DILocation(line: 1940, column: 16, scope: !5978)
!5980 = !DILocation(line: 1940, column: 19, scope: !5978)
!5981 = !DILocation(line: 1940, column: 23, scope: !5978)
!5982 = !DILocation(line: 1940, column: 30, scope: !5978)
!5983 = !DILocation(line: 1940, column: 8, scope: !5967)
!5984 = !DILocation(line: 1941, column: 24, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5978, file: !3, line: 1940, column: 34)
!5986 = !DILocation(line: 1941, column: 29, scope: !5985)
!5987 = !DILocation(line: 1941, column: 37, scope: !5985)
!5988 = !DILocation(line: 1941, column: 5, scope: !5985)
!5989 = !DILocation(line: 1941, column: 10, scope: !5985)
!5990 = !DILocation(line: 1941, column: 18, scope: !5985)
!5991 = !DILocation(line: 1941, column: 22, scope: !5985)
!5992 = !DILocation(line: 1942, column: 24, scope: !5985)
!5993 = !DILocation(line: 1942, column: 29, scope: !5985)
!5994 = !DILocation(line: 1942, column: 37, scope: !5985)
!5995 = !DILocation(line: 1942, column: 5, scope: !5985)
!5996 = !DILocation(line: 1942, column: 10, scope: !5985)
!5997 = !DILocation(line: 1942, column: 18, scope: !5985)
!5998 = !DILocation(line: 1942, column: 22, scope: !5985)
!5999 = !DILocation(line: 1943, column: 24, scope: !5985)
!6000 = !DILocation(line: 1943, column: 29, scope: !5985)
!6001 = !DILocation(line: 1943, column: 37, scope: !5985)
!6002 = !DILocation(line: 1943, column: 5, scope: !5985)
!6003 = !DILocation(line: 1943, column: 10, scope: !5985)
!6004 = !DILocation(line: 1943, column: 18, scope: !5985)
!6005 = !DILocation(line: 1943, column: 22, scope: !5985)
!6006 = !DILocation(line: 1944, column: 7, scope: !5985)
!6007 = !DILocation(line: 1945, column: 4, scope: !5985)
!6008 = !DILocation(line: 1946, column: 3, scope: !5967)
!6009 = !DILocation(line: 1937, column: 37, scope: !5961)
!6010 = !DILocation(line: 1937, column: 3, scope: !5961)
!6011 = distinct !{!6011, !5965, !6012}
!6012 = !DILocation(line: 1946, column: 3, scope: !5957)
!6013 = !DILocation(line: 1947, column: 16, scope: !5896)
!6014 = !DILocation(line: 1947, column: 3, scope: !5896)
!6015 = !DILocation(line: 1947, column: 8, scope: !5896)
!6016 = !DILocation(line: 1947, column: 14, scope: !5896)
!6017 = !DILocation(line: 1948, column: 16, scope: !5896)
!6018 = !DILocation(line: 1948, column: 3, scope: !5896)
!6019 = !DILocation(line: 1948, column: 8, scope: !5896)
!6020 = !DILocation(line: 1948, column: 14, scope: !5896)
!6021 = !DILocation(line: 1951, column: 10, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1951, column: 3)
!6023 = !DILocation(line: 1951, column: 16, scope: !6022)
!6024 = !DILocation(line: 1951, column: 8, scope: !6022)
!6025 = !DILocation(line: 1951, column: 20, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 1951, column: 3)
!6027 = !DILocation(line: 1951, column: 23, scope: !6026)
!6028 = !DILocation(line: 1951, column: 28, scope: !6026)
!6029 = !DILocation(line: 1951, column: 22, scope: !6026)
!6030 = !DILocation(line: 1951, column: 3, scope: !6022)
!6031 = !DILocation(line: 1952, column: 8, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 1951, column: 42)
!6033 = !DILocation(line: 1952, column: 13, scope: !6032)
!6034 = !DILocation(line: 1952, column: 23, scope: !6032)
!6035 = !DILocation(line: 1952, column: 26, scope: !6032)
!6036 = !DILocation(line: 1952, column: 6, scope: !6032)
!6037 = !DILocation(line: 1953, column: 8, scope: !6032)
!6038 = !DILocation(line: 1953, column: 13, scope: !6032)
!6039 = !DILocation(line: 1953, column: 23, scope: !6032)
!6040 = !DILocation(line: 1953, column: 26, scope: !6032)
!6041 = !DILocation(line: 1953, column: 6, scope: !6032)
!6042 = !DILocation(line: 1954, column: 8, scope: !6032)
!6043 = !DILocation(line: 1954, column: 13, scope: !6032)
!6044 = !DILocation(line: 1954, column: 23, scope: !6032)
!6045 = !DILocation(line: 1954, column: 26, scope: !6032)
!6046 = !DILocation(line: 1954, column: 6, scope: !6032)
!6047 = !DILocation(line: 1955, column: 9, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6032, file: !3, line: 1955, column: 8)
!6049 = !DILocation(line: 1955, column: 16, scope: !6048)
!6050 = !DILocation(line: 1955, column: 19, scope: !6048)
!6051 = !DILocation(line: 1955, column: 23, scope: !6048)
!6052 = !DILocation(line: 1955, column: 30, scope: !6048)
!6053 = !DILocation(line: 1955, column: 33, scope: !6048)
!6054 = !DILocation(line: 1955, column: 37, scope: !6048)
!6055 = !DILocation(line: 1955, column: 44, scope: !6048)
!6056 = !DILocation(line: 1955, column: 8, scope: !6032)
!6057 = !DILocation(line: 1956, column: 26, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 1955, column: 48)
!6059 = !DILocation(line: 1956, column: 31, scope: !6058)
!6060 = !DILocation(line: 1956, column: 41, scope: !6058)
!6061 = !DILocation(line: 1956, column: 5, scope: !6058)
!6062 = !DILocation(line: 1956, column: 10, scope: !6058)
!6063 = !DILocation(line: 1956, column: 20, scope: !6058)
!6064 = !DILocation(line: 1956, column: 24, scope: !6058)
!6065 = !DILocation(line: 1957, column: 26, scope: !6058)
!6066 = !DILocation(line: 1957, column: 31, scope: !6058)
!6067 = !DILocation(line: 1957, column: 41, scope: !6058)
!6068 = !DILocation(line: 1957, column: 5, scope: !6058)
!6069 = !DILocation(line: 1957, column: 10, scope: !6058)
!6070 = !DILocation(line: 1957, column: 20, scope: !6058)
!6071 = !DILocation(line: 1957, column: 24, scope: !6058)
!6072 = !DILocation(line: 1958, column: 26, scope: !6058)
!6073 = !DILocation(line: 1958, column: 31, scope: !6058)
!6074 = !DILocation(line: 1958, column: 41, scope: !6058)
!6075 = !DILocation(line: 1958, column: 5, scope: !6058)
!6076 = !DILocation(line: 1958, column: 10, scope: !6058)
!6077 = !DILocation(line: 1958, column: 20, scope: !6058)
!6078 = !DILocation(line: 1958, column: 24, scope: !6058)
!6079 = !DILocation(line: 1959, column: 26, scope: !6058)
!6080 = !DILocation(line: 1959, column: 31, scope: !6058)
!6081 = !DILocation(line: 1959, column: 41, scope: !6058)
!6082 = !DILocation(line: 1959, column: 5, scope: !6058)
!6083 = !DILocation(line: 1959, column: 10, scope: !6058)
!6084 = !DILocation(line: 1959, column: 20, scope: !6058)
!6085 = !DILocation(line: 1959, column: 24, scope: !6058)
!6086 = !DILocation(line: 1960, column: 7, scope: !6058)
!6087 = !DILocation(line: 1961, column: 4, scope: !6058)
!6088 = !DILocation(line: 1962, column: 3, scope: !6032)
!6089 = !DILocation(line: 1951, column: 38, scope: !6026)
!6090 = !DILocation(line: 1951, column: 3, scope: !6026)
!6091 = distinct !{!6091, !6030, !6092}
!6092 = !DILocation(line: 1962, column: 3, scope: !6022)
!6093 = !DILocation(line: 1963, column: 17, scope: !5896)
!6094 = !DILocation(line: 1963, column: 3, scope: !5896)
!6095 = !DILocation(line: 1963, column: 8, scope: !5896)
!6096 = !DILocation(line: 1963, column: 15, scope: !5896)
!6097 = !DILocation(line: 1964, column: 10, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1964, column: 3)
!6099 = !DILocation(line: 1964, column: 16, scope: !6098)
!6100 = !DILocation(line: 1964, column: 8, scope: !6098)
!6101 = !DILocation(line: 1964, column: 20, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 1964, column: 3)
!6103 = !DILocation(line: 1964, column: 23, scope: !6102)
!6104 = !DILocation(line: 1964, column: 28, scope: !6102)
!6105 = !DILocation(line: 1964, column: 22, scope: !6102)
!6106 = !DILocation(line: 1964, column: 3, scope: !6098)
!6107 = !DILocation(line: 1965, column: 8, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 1964, column: 42)
!6109 = !DILocation(line: 1965, column: 13, scope: !6108)
!6110 = !DILocation(line: 1965, column: 22, scope: !6108)
!6111 = !DILocation(line: 1965, column: 25, scope: !6108)
!6112 = !DILocation(line: 1965, column: 6, scope: !6108)
!6113 = !DILocation(line: 1966, column: 8, scope: !6108)
!6114 = !DILocation(line: 1966, column: 13, scope: !6108)
!6115 = !DILocation(line: 1966, column: 22, scope: !6108)
!6116 = !DILocation(line: 1966, column: 25, scope: !6108)
!6117 = !DILocation(line: 1966, column: 6, scope: !6108)
!6118 = !DILocation(line: 1967, column: 8, scope: !6108)
!6119 = !DILocation(line: 1967, column: 13, scope: !6108)
!6120 = !DILocation(line: 1967, column: 22, scope: !6108)
!6121 = !DILocation(line: 1967, column: 25, scope: !6108)
!6122 = !DILocation(line: 1967, column: 6, scope: !6108)
!6123 = !DILocation(line: 1968, column: 9, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 1968, column: 8)
!6125 = !DILocation(line: 1968, column: 16, scope: !6124)
!6126 = !DILocation(line: 1968, column: 19, scope: !6124)
!6127 = !DILocation(line: 1968, column: 23, scope: !6124)
!6128 = !DILocation(line: 1968, column: 30, scope: !6124)
!6129 = !DILocation(line: 1968, column: 33, scope: !6124)
!6130 = !DILocation(line: 1968, column: 37, scope: !6124)
!6131 = !DILocation(line: 1968, column: 44, scope: !6124)
!6132 = !DILocation(line: 1968, column: 8, scope: !6108)
!6133 = !DILocation(line: 1969, column: 25, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 1968, column: 48)
!6135 = !DILocation(line: 1969, column: 30, scope: !6134)
!6136 = !DILocation(line: 1969, column: 39, scope: !6134)
!6137 = !DILocation(line: 1969, column: 5, scope: !6134)
!6138 = !DILocation(line: 1969, column: 10, scope: !6134)
!6139 = !DILocation(line: 1969, column: 19, scope: !6134)
!6140 = !DILocation(line: 1969, column: 23, scope: !6134)
!6141 = !DILocation(line: 1970, column: 25, scope: !6134)
!6142 = !DILocation(line: 1970, column: 30, scope: !6134)
!6143 = !DILocation(line: 1970, column: 39, scope: !6134)
!6144 = !DILocation(line: 1970, column: 5, scope: !6134)
!6145 = !DILocation(line: 1970, column: 10, scope: !6134)
!6146 = !DILocation(line: 1970, column: 19, scope: !6134)
!6147 = !DILocation(line: 1970, column: 23, scope: !6134)
!6148 = !DILocation(line: 1971, column: 25, scope: !6134)
!6149 = !DILocation(line: 1971, column: 30, scope: !6134)
!6150 = !DILocation(line: 1971, column: 39, scope: !6134)
!6151 = !DILocation(line: 1971, column: 5, scope: !6134)
!6152 = !DILocation(line: 1971, column: 10, scope: !6134)
!6153 = !DILocation(line: 1971, column: 19, scope: !6134)
!6154 = !DILocation(line: 1971, column: 23, scope: !6134)
!6155 = !DILocation(line: 1972, column: 25, scope: !6134)
!6156 = !DILocation(line: 1972, column: 30, scope: !6134)
!6157 = !DILocation(line: 1972, column: 39, scope: !6134)
!6158 = !DILocation(line: 1972, column: 5, scope: !6134)
!6159 = !DILocation(line: 1972, column: 10, scope: !6134)
!6160 = !DILocation(line: 1972, column: 19, scope: !6134)
!6161 = !DILocation(line: 1972, column: 23, scope: !6134)
!6162 = !DILocation(line: 1973, column: 7, scope: !6134)
!6163 = !DILocation(line: 1974, column: 4, scope: !6134)
!6164 = !DILocation(line: 1975, column: 3, scope: !6108)
!6165 = !DILocation(line: 1964, column: 38, scope: !6102)
!6166 = !DILocation(line: 1964, column: 3, scope: !6102)
!6167 = distinct !{!6167, !6106, !6168}
!6168 = !DILocation(line: 1975, column: 3, scope: !6098)
!6169 = !DILocation(line: 1976, column: 17, scope: !5896)
!6170 = !DILocation(line: 1976, column: 3, scope: !5896)
!6171 = !DILocation(line: 1976, column: 8, scope: !5896)
!6172 = !DILocation(line: 1976, column: 15, scope: !5896)
!6173 = !DILocation(line: 1980, column: 9, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1980, column: 3)
!6175 = !DILocation(line: 1980, column: 8, scope: !6174)
!6176 = !DILocation(line: 1980, column: 13, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 1980, column: 3)
!6178 = !DILocation(line: 1980, column: 15, scope: !6177)
!6179 = !DILocation(line: 1980, column: 20, scope: !6177)
!6180 = !DILocation(line: 1980, column: 14, scope: !6177)
!6181 = !DILocation(line: 1980, column: 3, scope: !6174)
!6182 = !DILocation(line: 1980, column: 33, scope: !6177)
!6183 = !DILocation(line: 1980, column: 38, scope: !6177)
!6184 = !DILocation(line: 1980, column: 47, scope: !6177)
!6185 = !DILocation(line: 1980, column: 50, scope: !6177)
!6186 = !DILocation(line: 1980, column: 28, scope: !6177)
!6187 = !DILocation(line: 1980, column: 3, scope: !6177)
!6188 = distinct !{!6188, !6181, !6189}
!6189 = !DILocation(line: 1980, column: 52, scope: !6174)
!6190 = !DILocation(line: 1981, column: 38, scope: !5896)
!6191 = !DILocation(line: 1981, column: 43, scope: !5896)
!6192 = !DILocation(line: 1981, column: 37, scope: !5896)
!6193 = !DILocation(line: 1981, column: 19, scope: !5896)
!6194 = !DILocation(line: 1981, column: 11, scope: !5896)
!6195 = !DILocation(line: 1981, column: 9, scope: !5896)
!6196 = !DILocation(line: 1982, column: 10, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 1982, column: 3)
!6198 = !DILocation(line: 1982, column: 16, scope: !6197)
!6199 = !DILocation(line: 1982, column: 8, scope: !6197)
!6200 = !DILocation(line: 1982, column: 20, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1982, column: 3)
!6202 = !DILocation(line: 1982, column: 23, scope: !6201)
!6203 = !DILocation(line: 1982, column: 28, scope: !6201)
!6204 = !DILocation(line: 1982, column: 22, scope: !6201)
!6205 = !DILocation(line: 1982, column: 3, scope: !6197)
!6206 = !DILocation(line: 1983, column: 8, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6201, file: !3, line: 1982, column: 41)
!6208 = !DILocation(line: 1983, column: 13, scope: !6207)
!6209 = !DILocation(line: 1983, column: 21, scope: !6207)
!6210 = !DILocation(line: 1983, column: 24, scope: !6207)
!6211 = !DILocation(line: 1983, column: 6, scope: !6207)
!6212 = !DILocation(line: 1984, column: 8, scope: !6207)
!6213 = !DILocation(line: 1984, column: 13, scope: !6207)
!6214 = !DILocation(line: 1984, column: 21, scope: !6207)
!6215 = !DILocation(line: 1984, column: 24, scope: !6207)
!6216 = !DILocation(line: 1984, column: 6, scope: !6207)
!6217 = !DILocation(line: 1985, column: 8, scope: !6207)
!6218 = !DILocation(line: 1985, column: 13, scope: !6207)
!6219 = !DILocation(line: 1985, column: 21, scope: !6207)
!6220 = !DILocation(line: 1985, column: 24, scope: !6207)
!6221 = !DILocation(line: 1985, column: 6, scope: !6207)
!6222 = !DILocation(line: 1986, column: 8, scope: !6207)
!6223 = !DILocation(line: 1986, column: 13, scope: !6207)
!6224 = !DILocation(line: 1986, column: 21, scope: !6207)
!6225 = !DILocation(line: 1986, column: 24, scope: !6207)
!6226 = !DILocation(line: 1986, column: 6, scope: !6207)
!6227 = !DILocation(line: 1987, column: 9, scope: !6207)
!6228 = !DILocation(line: 1987, column: 7, scope: !6207)
!6229 = !DILocation(line: 1988, column: 9, scope: !6207)
!6230 = !DILocation(line: 1988, column: 7, scope: !6207)
!6231 = !DILocation(line: 1989, column: 9, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 1989, column: 8)
!6233 = !DILocation(line: 1989, column: 16, scope: !6232)
!6234 = !DILocation(line: 1989, column: 19, scope: !6232)
!6235 = !DILocation(line: 1989, column: 23, scope: !6232)
!6236 = !DILocation(line: 1989, column: 30, scope: !6232)
!6237 = !DILocation(line: 1989, column: 33, scope: !6232)
!6238 = !DILocation(line: 1989, column: 37, scope: !6232)
!6239 = !DILocation(line: 1989, column: 44, scope: !6232)
!6240 = !DILocation(line: 1989, column: 48, scope: !6232)
!6241 = !DILocation(line: 1989, column: 52, scope: !6232)
!6242 = !DILocation(line: 1989, column: 59, scope: !6232)
!6243 = !DILocation(line: 1989, column: 8, scope: !6207)
!6244 = !DILocation(line: 1990, column: 24, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6232, file: !3, line: 1989, column: 64)
!6246 = !DILocation(line: 1990, column: 29, scope: !6245)
!6247 = !DILocation(line: 1990, column: 37, scope: !6245)
!6248 = !DILocation(line: 1990, column: 5, scope: !6245)
!6249 = !DILocation(line: 1990, column: 10, scope: !6245)
!6250 = !DILocation(line: 1990, column: 18, scope: !6245)
!6251 = !DILocation(line: 1990, column: 22, scope: !6245)
!6252 = !DILocation(line: 1991, column: 24, scope: !6245)
!6253 = !DILocation(line: 1991, column: 29, scope: !6245)
!6254 = !DILocation(line: 1991, column: 37, scope: !6245)
!6255 = !DILocation(line: 1991, column: 5, scope: !6245)
!6256 = !DILocation(line: 1991, column: 10, scope: !6245)
!6257 = !DILocation(line: 1991, column: 18, scope: !6245)
!6258 = !DILocation(line: 1991, column: 22, scope: !6245)
!6259 = !DILocation(line: 1992, column: 24, scope: !6245)
!6260 = !DILocation(line: 1992, column: 29, scope: !6245)
!6261 = !DILocation(line: 1992, column: 37, scope: !6245)
!6262 = !DILocation(line: 1992, column: 5, scope: !6245)
!6263 = !DILocation(line: 1992, column: 10, scope: !6245)
!6264 = !DILocation(line: 1992, column: 18, scope: !6245)
!6265 = !DILocation(line: 1992, column: 22, scope: !6245)
!6266 = !DILocation(line: 1993, column: 24, scope: !6245)
!6267 = !DILocation(line: 1993, column: 29, scope: !6245)
!6268 = !DILocation(line: 1993, column: 37, scope: !6245)
!6269 = !DILocation(line: 1993, column: 5, scope: !6245)
!6270 = !DILocation(line: 1993, column: 10, scope: !6245)
!6271 = !DILocation(line: 1993, column: 18, scope: !6245)
!6272 = !DILocation(line: 1993, column: 22, scope: !6245)
!6273 = !DILocation(line: 1994, column: 24, scope: !6245)
!6274 = !DILocation(line: 1994, column: 29, scope: !6245)
!6275 = !DILocation(line: 1994, column: 37, scope: !6245)
!6276 = !DILocation(line: 1994, column: 5, scope: !6245)
!6277 = !DILocation(line: 1994, column: 10, scope: !6245)
!6278 = !DILocation(line: 1994, column: 18, scope: !6245)
!6279 = !DILocation(line: 1994, column: 22, scope: !6245)
!6280 = !DILocation(line: 1995, column: 7, scope: !6245)
!6281 = !DILocation(line: 1996, column: 9, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 1996, column: 9)
!6283 = !DILocation(line: 1996, column: 11, scope: !6282)
!6284 = !DILocation(line: 1996, column: 16, scope: !6282)
!6285 = !DILocation(line: 1996, column: 19, scope: !6282)
!6286 = !DILocation(line: 1996, column: 21, scope: !6282)
!6287 = !DILocation(line: 1996, column: 9, scope: !6245)
!6288 = !DILocation(line: 1997, column: 15, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 1996, column: 27)
!6290 = !DILocation(line: 1997, column: 19, scope: !6289)
!6291 = !DILocation(line: 1997, column: 17, scope: !6289)
!6292 = !DILocation(line: 1997, column: 23, scope: !6289)
!6293 = !DILocation(line: 1997, column: 27, scope: !6289)
!6294 = !DILocation(line: 1997, column: 13, scope: !6289)
!6295 = !DILocation(line: 1998, column: 15, scope: !6289)
!6296 = !DILocation(line: 1998, column: 19, scope: !6289)
!6297 = !DILocation(line: 1998, column: 17, scope: !6289)
!6298 = !DILocation(line: 1998, column: 23, scope: !6289)
!6299 = !DILocation(line: 1998, column: 27, scope: !6289)
!6300 = !DILocation(line: 1998, column: 13, scope: !6289)
!6301 = !DILocation(line: 1999, column: 51, scope: !6289)
!6302 = !DILocation(line: 1999, column: 6, scope: !6289)
!6303 = !DILocation(line: 1999, column: 15, scope: !6289)
!6304 = !DILocation(line: 1999, column: 14, scope: !6289)
!6305 = !DILocation(line: 1999, column: 24, scope: !6289)
!6306 = !DILocation(line: 1999, column: 29, scope: !6289)
!6307 = !DILocation(line: 1999, column: 38, scope: !6289)
!6308 = !DILocation(line: 1999, column: 45, scope: !6289)
!6309 = !DILocation(line: 1999, column: 22, scope: !6289)
!6310 = !DILocation(line: 1999, column: 49, scope: !6289)
!6311 = !DILocation(line: 2000, column: 5, scope: !6289)
!6312 = !DILocation(line: 2001, column: 4, scope: !6245)
!6313 = !DILocation(line: 2002, column: 3, scope: !6207)
!6314 = !DILocation(line: 1982, column: 37, scope: !6201)
!6315 = !DILocation(line: 1982, column: 3, scope: !6201)
!6316 = distinct !{!6316, !6205, !6317}
!6317 = !DILocation(line: 2002, column: 3, scope: !6197)
!6318 = !DILocation(line: 2003, column: 16, scope: !5896)
!6319 = !DILocation(line: 2003, column: 3, scope: !5896)
!6320 = !DILocation(line: 2003, column: 8, scope: !5896)
!6321 = !DILocation(line: 2003, column: 14, scope: !5896)
!6322 = !DILocation(line: 2004, column: 10, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2004, column: 3)
!6324 = !DILocation(line: 2004, column: 16, scope: !6323)
!6325 = !DILocation(line: 2004, column: 8, scope: !6323)
!6326 = !DILocation(line: 2004, column: 20, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 2004, column: 3)
!6328 = !DILocation(line: 2004, column: 23, scope: !6327)
!6329 = !DILocation(line: 2004, column: 28, scope: !6327)
!6330 = !DILocation(line: 2004, column: 22, scope: !6327)
!6331 = !DILocation(line: 2004, column: 3, scope: !6323)
!6332 = !DILocation(line: 2005, column: 8, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2004, column: 41)
!6334 = !DILocation(line: 2005, column: 13, scope: !6333)
!6335 = !DILocation(line: 2005, column: 20, scope: !6333)
!6336 = !DILocation(line: 2005, column: 23, scope: !6333)
!6337 = !DILocation(line: 2005, column: 6, scope: !6333)
!6338 = !DILocation(line: 2006, column: 8, scope: !6333)
!6339 = !DILocation(line: 2006, column: 13, scope: !6333)
!6340 = !DILocation(line: 2006, column: 20, scope: !6333)
!6341 = !DILocation(line: 2006, column: 23, scope: !6333)
!6342 = !DILocation(line: 2006, column: 6, scope: !6333)
!6343 = !DILocation(line: 2007, column: 8, scope: !6333)
!6344 = !DILocation(line: 2007, column: 13, scope: !6333)
!6345 = !DILocation(line: 2007, column: 20, scope: !6333)
!6346 = !DILocation(line: 2007, column: 23, scope: !6333)
!6347 = !DILocation(line: 2007, column: 6, scope: !6333)
!6348 = !DILocation(line: 2008, column: 8, scope: !6333)
!6349 = !DILocation(line: 2008, column: 13, scope: !6333)
!6350 = !DILocation(line: 2008, column: 20, scope: !6333)
!6351 = !DILocation(line: 2008, column: 23, scope: !6333)
!6352 = !DILocation(line: 2008, column: 6, scope: !6333)
!6353 = !DILocation(line: 2009, column: 9, scope: !6333)
!6354 = !DILocation(line: 2009, column: 7, scope: !6333)
!6355 = !DILocation(line: 2010, column: 9, scope: !6333)
!6356 = !DILocation(line: 2010, column: 7, scope: !6333)
!6357 = !DILocation(line: 2011, column: 9, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2011, column: 8)
!6359 = !DILocation(line: 2011, column: 16, scope: !6358)
!6360 = !DILocation(line: 2011, column: 19, scope: !6358)
!6361 = !DILocation(line: 2011, column: 23, scope: !6358)
!6362 = !DILocation(line: 2011, column: 30, scope: !6358)
!6363 = !DILocation(line: 2011, column: 33, scope: !6358)
!6364 = !DILocation(line: 2011, column: 37, scope: !6358)
!6365 = !DILocation(line: 2011, column: 44, scope: !6358)
!6366 = !DILocation(line: 2011, column: 48, scope: !6358)
!6367 = !DILocation(line: 2011, column: 52, scope: !6358)
!6368 = !DILocation(line: 2011, column: 59, scope: !6358)
!6369 = !DILocation(line: 2011, column: 8, scope: !6333)
!6370 = !DILocation(line: 2012, column: 23, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6358, file: !3, line: 2011, column: 64)
!6372 = !DILocation(line: 2012, column: 28, scope: !6371)
!6373 = !DILocation(line: 2012, column: 35, scope: !6371)
!6374 = !DILocation(line: 2012, column: 5, scope: !6371)
!6375 = !DILocation(line: 2012, column: 10, scope: !6371)
!6376 = !DILocation(line: 2012, column: 17, scope: !6371)
!6377 = !DILocation(line: 2012, column: 21, scope: !6371)
!6378 = !DILocation(line: 2013, column: 23, scope: !6371)
!6379 = !DILocation(line: 2013, column: 28, scope: !6371)
!6380 = !DILocation(line: 2013, column: 35, scope: !6371)
!6381 = !DILocation(line: 2013, column: 5, scope: !6371)
!6382 = !DILocation(line: 2013, column: 10, scope: !6371)
!6383 = !DILocation(line: 2013, column: 17, scope: !6371)
!6384 = !DILocation(line: 2013, column: 21, scope: !6371)
!6385 = !DILocation(line: 2014, column: 23, scope: !6371)
!6386 = !DILocation(line: 2014, column: 28, scope: !6371)
!6387 = !DILocation(line: 2014, column: 35, scope: !6371)
!6388 = !DILocation(line: 2014, column: 5, scope: !6371)
!6389 = !DILocation(line: 2014, column: 10, scope: !6371)
!6390 = !DILocation(line: 2014, column: 17, scope: !6371)
!6391 = !DILocation(line: 2014, column: 21, scope: !6371)
!6392 = !DILocation(line: 2015, column: 23, scope: !6371)
!6393 = !DILocation(line: 2015, column: 28, scope: !6371)
!6394 = !DILocation(line: 2015, column: 35, scope: !6371)
!6395 = !DILocation(line: 2015, column: 5, scope: !6371)
!6396 = !DILocation(line: 2015, column: 10, scope: !6371)
!6397 = !DILocation(line: 2015, column: 17, scope: !6371)
!6398 = !DILocation(line: 2015, column: 21, scope: !6371)
!6399 = !DILocation(line: 2016, column: 23, scope: !6371)
!6400 = !DILocation(line: 2016, column: 28, scope: !6371)
!6401 = !DILocation(line: 2016, column: 35, scope: !6371)
!6402 = !DILocation(line: 2016, column: 5, scope: !6371)
!6403 = !DILocation(line: 2016, column: 10, scope: !6371)
!6404 = !DILocation(line: 2016, column: 17, scope: !6371)
!6405 = !DILocation(line: 2016, column: 21, scope: !6371)
!6406 = !DILocation(line: 2017, column: 7, scope: !6371)
!6407 = !DILocation(line: 2018, column: 9, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 2018, column: 9)
!6409 = !DILocation(line: 2018, column: 11, scope: !6408)
!6410 = !DILocation(line: 2018, column: 16, scope: !6408)
!6411 = !DILocation(line: 2018, column: 19, scope: !6408)
!6412 = !DILocation(line: 2018, column: 21, scope: !6408)
!6413 = !DILocation(line: 2018, column: 9, scope: !6371)
!6414 = !DILocation(line: 2019, column: 15, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2018, column: 27)
!6416 = !DILocation(line: 2019, column: 19, scope: !6415)
!6417 = !DILocation(line: 2019, column: 17, scope: !6415)
!6418 = !DILocation(line: 2019, column: 23, scope: !6415)
!6419 = !DILocation(line: 2019, column: 27, scope: !6415)
!6420 = !DILocation(line: 2019, column: 13, scope: !6415)
!6421 = !DILocation(line: 2020, column: 15, scope: !6415)
!6422 = !DILocation(line: 2020, column: 19, scope: !6415)
!6423 = !DILocation(line: 2020, column: 17, scope: !6415)
!6424 = !DILocation(line: 2020, column: 23, scope: !6415)
!6425 = !DILocation(line: 2020, column: 27, scope: !6415)
!6426 = !DILocation(line: 2020, column: 13, scope: !6415)
!6427 = !DILocation(line: 2021, column: 51, scope: !6415)
!6428 = !DILocation(line: 2021, column: 6, scope: !6415)
!6429 = !DILocation(line: 2021, column: 15, scope: !6415)
!6430 = !DILocation(line: 2021, column: 14, scope: !6415)
!6431 = !DILocation(line: 2021, column: 24, scope: !6415)
!6432 = !DILocation(line: 2021, column: 29, scope: !6415)
!6433 = !DILocation(line: 2021, column: 38, scope: !6415)
!6434 = !DILocation(line: 2021, column: 45, scope: !6415)
!6435 = !DILocation(line: 2021, column: 22, scope: !6415)
!6436 = !DILocation(line: 2021, column: 49, scope: !6415)
!6437 = !DILocation(line: 2022, column: 5, scope: !6415)
!6438 = !DILocation(line: 2023, column: 4, scope: !6371)
!6439 = !DILocation(line: 2024, column: 3, scope: !6333)
!6440 = !DILocation(line: 2004, column: 37, scope: !6327)
!6441 = !DILocation(line: 2004, column: 3, scope: !6327)
!6442 = distinct !{!6442, !6331, !6443}
!6443 = !DILocation(line: 2024, column: 3, scope: !6323)
!6444 = !DILocation(line: 2025, column: 16, scope: !5896)
!6445 = !DILocation(line: 2025, column: 3, scope: !5896)
!6446 = !DILocation(line: 2025, column: 8, scope: !5896)
!6447 = !DILocation(line: 2025, column: 14, scope: !5896)
!6448 = !DILocation(line: 2026, column: 16, scope: !5896)
!6449 = !DILocation(line: 2026, column: 3, scope: !5896)
!6450 = !DILocation(line: 2026, column: 8, scope: !5896)
!6451 = !DILocation(line: 2026, column: 14, scope: !5896)
!6452 = !DILocation(line: 2027, column: 5, scope: !5896)
!6453 = !DILocation(line: 2028, column: 9, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2028, column: 3)
!6455 = !DILocation(line: 2028, column: 8, scope: !6454)
!6456 = !DILocation(line: 2028, column: 13, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2028, column: 3)
!6458 = !DILocation(line: 2028, column: 15, scope: !6457)
!6459 = !DILocation(line: 2028, column: 20, scope: !6457)
!6460 = !DILocation(line: 2028, column: 26, scope: !6457)
!6461 = !DILocation(line: 2028, column: 14, scope: !6457)
!6462 = !DILocation(line: 2028, column: 3, scope: !6454)
!6463 = !DILocation(line: 2029, column: 10, scope: !6464)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 2029, column: 4)
!6465 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 2028, column: 36)
!6466 = !DILocation(line: 2029, column: 9, scope: !6464)
!6467 = !DILocation(line: 2029, column: 14, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 2029, column: 4)
!6469 = !DILocation(line: 2029, column: 16, scope: !6468)
!6470 = !DILocation(line: 2029, column: 21, scope: !6468)
!6471 = !DILocation(line: 2029, column: 30, scope: !6468)
!6472 = !DILocation(line: 2029, column: 15, scope: !6468)
!6473 = !DILocation(line: 2029, column: 4, scope: !6464)
!6474 = !DILocation(line: 2030, column: 30, scope: !6468)
!6475 = !DILocation(line: 2030, column: 39, scope: !6468)
!6476 = !DILocation(line: 2030, column: 38, scope: !6468)
!6477 = !DILocation(line: 2030, column: 43, scope: !6468)
!6478 = !DILocation(line: 2030, column: 41, scope: !6468)
!6479 = !DILocation(line: 2030, column: 6, scope: !6468)
!6480 = !DILocation(line: 2030, column: 11, scope: !6468)
!6481 = !DILocation(line: 2030, column: 24, scope: !6468)
!6482 = !DILocation(line: 2030, column: 28, scope: !6468)
!6483 = !DILocation(line: 2029, column: 35, scope: !6468)
!6484 = !DILocation(line: 2029, column: 4, scope: !6468)
!6485 = distinct !{!6485, !6473, !6486}
!6486 = !DILocation(line: 2030, column: 44, scope: !6464)
!6487 = !DILocation(line: 2031, column: 3, scope: !6465)
!6488 = !DILocation(line: 2028, column: 32, scope: !6457)
!6489 = !DILocation(line: 2028, column: 3, scope: !6457)
!6490 = distinct !{!6490, !6462, !6491}
!6491 = !DILocation(line: 2031, column: 3, scope: !6454)
!6492 = !DILocation(line: 2032, column: 9, scope: !5896)
!6493 = !DILocation(line: 2032, column: 3, scope: !5896)
!6494 = !DILocation(line: 2033, column: 2, scope: !5896)
!6495 = !DILocation(line: 2034, column: 10, scope: !5768)
!6496 = !DILocation(line: 2034, column: 2, scope: !5768)
!6497 = distinct !DISubprogram(name: "get", scope: !3, file: !3, line: 102, type: !6498, scopeLine: 104, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!6498 = !DISubroutineType(types: !6499)
!6499 = !{!238, !6500}
!6500 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !6501, line: 46, baseType: !6502)
!6501 = !DIFile(filename: "/usr/lib/llvm-10/lib/clang/10.0.0/include/stddef.h", directory: "")
!6502 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!6503 = !DILocalVariable(name: "size", arg: 1, scope: !6497, file: !3, line: 103, type: !6500)
!6504 = !DILocation(line: 103, column: 8, scope: !6497)
!6505 = !DILocalVariable(name: "ptr", scope: !6497, file: !3, line: 105, type: !238)
!6506 = !DILocation(line: 105, column: 8, scope: !6497)
!6507 = !DILocation(line: 107, column: 6, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 107, column: 6)
!6509 = !DILocation(line: 107, column: 11, scope: !6508)
!6510 = !DILocation(line: 107, column: 6, scope: !6497)
!6511 = !DILocation(line: 108, column: 3, scope: !6508)
!6512 = !DILocation(line: 110, column: 29, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 110, column: 6)
!6514 = !DILocation(line: 110, column: 34, scope: !6513)
!6515 = !DILocation(line: 110, column: 22, scope: !6513)
!6516 = !DILocation(line: 110, column: 11, scope: !6513)
!6517 = !DILocation(line: 110, column: 51, scope: !6513)
!6518 = !DILocation(line: 110, column: 6, scope: !6497)
!6519 = !DILocation(line: 111, column: 12, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 110, column: 60)
!6521 = !DILocation(line: 111, column: 41, scope: !6520)
!6522 = !DILocation(line: 111, column: 3, scope: !6520)
!6523 = !DILocation(line: 112, column: 10, scope: !6520)
!6524 = !DILocation(line: 112, column: 3, scope: !6520)
!6525 = !DILocation(line: 113, column: 3, scope: !6520)
!6526 = !DILocation(line: 114, column: 3, scope: !6520)
!6527 = !DILocation(line: 116, column: 9, scope: !6497)
!6528 = !DILocation(line: 116, column: 2, scope: !6497)
!6529 = !DILocation(line: 117, column: 1, scope: !6497)
!6530 = distinct !DISubprogram(name: "set_cons_mask", scope: !3, file: !3, line: 2037, type: !5769, scopeLine: 2041, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!6531 = !DILocalVariable(name: "m", arg: 1, scope: !6530, file: !3, line: 2038, type: !22)
!6532 = !DILocation(line: 2038, column: 13, scope: !6530)
!6533 = !DILocalVariable(name: "aex", arg: 2, scope: !6530, file: !3, line: 2039, type: !238)
!6534 = !DILocation(line: 2039, column: 8, scope: !6530)
!6535 = !DILocalVariable(name: "cons", arg: 3, scope: !6530, file: !3, line: 2040, type: !244)
!6536 = !DILocation(line: 2040, column: 8, scope: !6530)
!6537 = !DILocalVariable(name: "r", scope: !6530, file: !3, line: 2042, type: !36)
!6538 = !DILocation(line: 2042, column: 6, scope: !6530)
!6539 = !DILocalVariable(name: "a", scope: !6530, file: !3, line: 2042, type: !36)
!6540 = !DILocation(line: 2042, column: 9, scope: !6530)
!6541 = !DILocalVariable(name: "n", scope: !6530, file: !3, line: 2042, type: !36)
!6542 = !DILocation(line: 2042, column: 12, scope: !6530)
!6543 = !DILocalVariable(name: "ncons", scope: !6530, file: !3, line: 2042, type: !36)
!6544 = !DILocation(line: 2042, column: 15, scope: !6530)
!6545 = !DILocalVariable(name: "sp", scope: !6530, file: !3, line: 2043, type: !38)
!6546 = !DILocation(line: 2043, column: 12, scope: !6530)
!6547 = !DILocalVariable(name: "res", scope: !6530, file: !3, line: 2044, type: !56)
!6548 = !DILocation(line: 2044, column: 13, scope: !6530)
!6549 = !DILocalVariable(name: "ap", scope: !6530, file: !3, line: 2045, type: !102)
!6550 = !DILocation(line: 2045, column: 11, scope: !6530)
!6551 = !DILocation(line: 2047, column: 16, scope: !6530)
!6552 = !DILocation(line: 2047, column: 19, scope: !6530)
!6553 = !DILocation(line: 2047, column: 2, scope: !6530)
!6554 = !DILocation(line: 2048, column: 8, scope: !6530)
!6555 = !DILocation(line: 2049, column: 9, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 2049, column: 2)
!6557 = !DILocation(line: 2049, column: 19, scope: !6556)
!6558 = !DILocation(line: 2049, column: 22, scope: !6556)
!6559 = !DILocation(line: 2049, column: 17, scope: !6556)
!6560 = !DILocation(line: 2049, column: 7, scope: !6556)
!6561 = !DILocation(line: 2049, column: 33, scope: !6562)
!6562 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 2049, column: 2)
!6563 = !DILocation(line: 2049, column: 2, scope: !6556)
!6564 = !DILocation(line: 2050, column: 10, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 2050, column: 3)
!6566 = distinct !DILexicalBlock(scope: !6562, file: !3, line: 2049, column: 54)
!6567 = !DILocation(line: 2050, column: 8, scope: !6565)
!6568 = !DILocation(line: 2050, column: 15, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 2050, column: 3)
!6570 = !DILocation(line: 2050, column: 19, scope: !6569)
!6571 = !DILocation(line: 2050, column: 23, scope: !6569)
!6572 = !DILocation(line: 2050, column: 17, scope: !6569)
!6573 = !DILocation(line: 2050, column: 3, scope: !6565)
!6574 = !DILocation(line: 2051, column: 10, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6569, file: !3, line: 2050, column: 41)
!6576 = !DILocation(line: 2051, column: 14, scope: !6575)
!6577 = !DILocation(line: 2051, column: 26, scope: !6575)
!6578 = !DILocation(line: 2051, column: 8, scope: !6575)
!6579 = !DILocation(line: 2052, column: 11, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 2052, column: 4)
!6581 = !DILocation(line: 2052, column: 9, scope: !6580)
!6582 = !DILocation(line: 2052, column: 16, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 2052, column: 4)
!6584 = !DILocation(line: 2052, column: 20, scope: !6583)
!6585 = !DILocation(line: 2052, column: 25, scope: !6583)
!6586 = !DILocation(line: 2052, column: 18, scope: !6583)
!6587 = !DILocation(line: 2052, column: 4, scope: !6580)
!6588 = !DILocation(line: 2053, column: 11, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 2052, column: 40)
!6590 = !DILocation(line: 2053, column: 16, scope: !6589)
!6591 = !DILocation(line: 2053, column: 25, scope: !6589)
!6592 = !DILocation(line: 2053, column: 8, scope: !6589)
!6593 = !DILocation(line: 2054, column: 9, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 2054, column: 9)
!6595 = !DILocation(line: 2054, column: 13, scope: !6594)
!6596 = !DILocation(line: 2054, column: 20, scope: !6594)
!6597 = !DILocation(line: 2054, column: 9, scope: !6589)
!6598 = !DILocation(line: 2054, column: 35, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2054, column: 34)
!6600 = !DILocation(line: 2054, column: 40, scope: !6599)
!6601 = !DILocation(line: 2054, column: 43, scope: !6599)
!6602 = !DILocation(line: 2054, column: 53, scope: !6599)
!6603 = !DILocation(line: 2054, column: 57, scope: !6599)
!6604 = !DILocation(line: 2055, column: 12, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 2055, column: 11)
!6606 = !DILocation(line: 2055, column: 17, scope: !6605)
!6607 = !DILocation(line: 2055, column: 20, scope: !6605)
!6608 = !DILocation(line: 2056, column: 6, scope: !6589)
!6609 = !DILocation(line: 2057, column: 4, scope: !6589)
!6610 = !DILocation(line: 2052, column: 36, scope: !6583)
!6611 = !DILocation(line: 2052, column: 4, scope: !6583)
!6612 = distinct !{!6612, !6587, !6613}
!6613 = !DILocation(line: 2057, column: 4, scope: !6580)
!6614 = !DILocation(line: 2058, column: 3, scope: !6575)
!6615 = !DILocation(line: 2050, column: 37, scope: !6569)
!6616 = !DILocation(line: 2050, column: 3, scope: !6569)
!6617 = distinct !{!6617, !6573, !6618}
!6618 = !DILocation(line: 2058, column: 3, scope: !6565)
!6619 = !DILocation(line: 2059, column: 2, scope: !6566)
!6620 = !DILocation(line: 2049, column: 42, scope: !6562)
!6621 = !DILocation(line: 2049, column: 46, scope: !6562)
!6622 = !DILocation(line: 2049, column: 40, scope: !6562)
!6623 = !DILocation(line: 2049, column: 2, scope: !6562)
!6624 = distinct !{!6624, !6563, !6625}
!6625 = !DILocation(line: 2059, column: 2, scope: !6556)
!6626 = !DILocation(line: 2060, column: 10, scope: !6530)
!6627 = !DILocation(line: 2060, column: 2, scope: !6530)
!6628 = distinct !DISubprogram(name: "circle", scope: !3, file: !3, line: 2088, type: !6629, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !252)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!35, !180, !180, !180, !180}
!6631 = !DILocalVariable(name: "p1", arg: 1, scope: !6628, file: !3, line: 2088, type: !180)
!6632 = !DILocation(line: 2088, column: 23, scope: !6628)
!6633 = !DILocalVariable(name: "p2", arg: 2, scope: !6628, file: !3, line: 2088, type: !180)
!6634 = !DILocation(line: 2088, column: 35, scope: !6628)
!6635 = !DILocalVariable(name: "p3", arg: 3, scope: !6628, file: !3, line: 2088, type: !180)
!6636 = !DILocation(line: 2088, column: 47, scope: !6628)
!6637 = !DILocalVariable(name: "pc", arg: 4, scope: !6628, file: !3, line: 2088, type: !180)
!6638 = !DILocation(line: 2088, column: 59, scope: !6628)
!6639 = !DILocalVariable(name: "i", scope: !6628, file: !3, line: 2099, type: !35)
!6640 = !DILocation(line: 2099, column: 9, scope: !6628)
!6641 = !DILocalVariable(name: "v", scope: !6628, file: !3, line: 2100, type: !128)
!6642 = !DILocation(line: 2100, column: 10, scope: !6628)
!6643 = !DILocalVariable(name: "ab", scope: !6628, file: !3, line: 2101, type: !128)
!6644 = !DILocation(line: 2101, column: 10, scope: !6628)
!6645 = !DILocalVariable(name: "ac", scope: !6628, file: !3, line: 2102, type: !128)
!6646 = !DILocation(line: 2102, column: 10, scope: !6628)
!6647 = !DILocalVariable(name: "bc", scope: !6628, file: !3, line: 2103, type: !128)
!6648 = !DILocation(line: 2103, column: 10, scope: !6628)
!6649 = !DILocalVariable(name: "m_ab", scope: !6628, file: !3, line: 2104, type: !128)
!6650 = !DILocation(line: 2104, column: 10, scope: !6628)
!6651 = !DILocalVariable(name: "cm", scope: !6628, file: !3, line: 2105, type: !128)
!6652 = !DILocation(line: 2105, column: 10, scope: !6628)
!6653 = !DILocalVariable(name: "fac1", scope: !6628, file: !3, line: 2106, type: !30)
!6654 = !DILocation(line: 2106, column: 10, scope: !6628)
!6655 = !DILocalVariable(name: "fac2", scope: !6628, file: !3, line: 2106, type: !30)
!6656 = !DILocation(line: 2106, column: 15, scope: !6628)
!6657 = !DILocation(line: 2108, column: 9, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2108, column: 3)
!6659 = !DILocation(line: 2108, column: 8, scope: !6658)
!6660 = !DILocation(line: 2108, column: 12, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2108, column: 3)
!6662 = !DILocation(line: 2108, column: 13, scope: !6661)
!6663 = !DILocation(line: 2108, column: 3, scope: !6658)
!6664 = !DILocation(line: 2108, column: 29, scope: !6661)
!6665 = !DILocation(line: 2108, column: 32, scope: !6661)
!6666 = !DILocation(line: 2108, column: 37, scope: !6661)
!6667 = !DILocation(line: 2108, column: 40, scope: !6661)
!6668 = !DILocation(line: 2108, column: 35, scope: !6661)
!6669 = !DILocation(line: 2108, column: 24, scope: !6661)
!6670 = !DILocation(line: 2108, column: 21, scope: !6661)
!6671 = !DILocation(line: 2108, column: 27, scope: !6661)
!6672 = !DILocation(line: 2108, column: 17, scope: !6661)
!6673 = !DILocation(line: 2108, column: 3, scope: !6661)
!6674 = distinct !{!6674, !6663, !6675}
!6675 = !DILocation(line: 2108, column: 41, scope: !6658)
!6676 = !DILocation(line: 2109, column: 9, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2109, column: 3)
!6678 = !DILocation(line: 2109, column: 8, scope: !6677)
!6679 = !DILocation(line: 2109, column: 12, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 2109, column: 3)
!6681 = !DILocation(line: 2109, column: 13, scope: !6680)
!6682 = !DILocation(line: 2109, column: 3, scope: !6677)
!6683 = !DILocation(line: 2109, column: 29, scope: !6680)
!6684 = !DILocation(line: 2109, column: 32, scope: !6680)
!6685 = !DILocation(line: 2109, column: 37, scope: !6680)
!6686 = !DILocation(line: 2109, column: 40, scope: !6680)
!6687 = !DILocation(line: 2109, column: 35, scope: !6680)
!6688 = !DILocation(line: 2109, column: 24, scope: !6680)
!6689 = !DILocation(line: 2109, column: 21, scope: !6680)
!6690 = !DILocation(line: 2109, column: 27, scope: !6680)
!6691 = !DILocation(line: 2109, column: 17, scope: !6680)
!6692 = !DILocation(line: 2109, column: 3, scope: !6680)
!6693 = distinct !{!6693, !6682, !6694}
!6694 = !DILocation(line: 2109, column: 41, scope: !6677)
!6695 = !DILocation(line: 2110, column: 9, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2110, column: 3)
!6697 = !DILocation(line: 2110, column: 8, scope: !6696)
!6698 = !DILocation(line: 2110, column: 12, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 2110, column: 3)
!6700 = !DILocation(line: 2110, column: 13, scope: !6699)
!6701 = !DILocation(line: 2110, column: 3, scope: !6696)
!6702 = !DILocation(line: 2110, column: 29, scope: !6699)
!6703 = !DILocation(line: 2110, column: 32, scope: !6699)
!6704 = !DILocation(line: 2110, column: 37, scope: !6699)
!6705 = !DILocation(line: 2110, column: 40, scope: !6699)
!6706 = !DILocation(line: 2110, column: 35, scope: !6699)
!6707 = !DILocation(line: 2110, column: 24, scope: !6699)
!6708 = !DILocation(line: 2110, column: 21, scope: !6699)
!6709 = !DILocation(line: 2110, column: 27, scope: !6699)
!6710 = !DILocation(line: 2110, column: 17, scope: !6699)
!6711 = !DILocation(line: 2110, column: 3, scope: !6699)
!6712 = distinct !{!6712, !6701, !6713}
!6713 = !DILocation(line: 2110, column: 41, scope: !6696)
!6714 = !DILocation(line: 2111, column: 9, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2111, column: 3)
!6716 = !DILocation(line: 2111, column: 8, scope: !6715)
!6717 = !DILocation(line: 2111, column: 12, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 2111, column: 3)
!6719 = !DILocation(line: 2111, column: 13, scope: !6718)
!6720 = !DILocation(line: 2111, column: 3, scope: !6715)
!6721 = !DILocation(line: 2111, column: 36, scope: !6718)
!6722 = !DILocation(line: 2111, column: 39, scope: !6718)
!6723 = !DILocation(line: 2111, column: 44, scope: !6718)
!6724 = !DILocation(line: 2111, column: 47, scope: !6718)
!6725 = !DILocation(line: 2111, column: 42, scope: !6718)
!6726 = !DILocation(line: 2111, column: 34, scope: !6718)
!6727 = !DILocation(line: 2111, column: 26, scope: !6718)
!6728 = !DILocation(line: 2111, column: 21, scope: !6718)
!6729 = !DILocation(line: 2111, column: 29, scope: !6718)
!6730 = !DILocation(line: 2111, column: 17, scope: !6718)
!6731 = !DILocation(line: 2111, column: 3, scope: !6718)
!6732 = distinct !{!6732, !6720, !6733}
!6733 = !DILocation(line: 2111, column: 49, scope: !6715)
!6734 = !DILocation(line: 2112, column: 9, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2112, column: 3)
!6736 = !DILocation(line: 2112, column: 8, scope: !6735)
!6737 = !DILocation(line: 2112, column: 12, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 2112, column: 3)
!6739 = !DILocation(line: 2112, column: 13, scope: !6738)
!6740 = !DILocation(line: 2112, column: 3, scope: !6735)
!6741 = !DILocation(line: 2112, column: 29, scope: !6738)
!6742 = !DILocation(line: 2112, column: 32, scope: !6738)
!6743 = !DILocation(line: 2112, column: 42, scope: !6738)
!6744 = !DILocation(line: 2112, column: 37, scope: !6738)
!6745 = !DILocation(line: 2112, column: 35, scope: !6738)
!6746 = !DILocation(line: 2112, column: 24, scope: !6738)
!6747 = !DILocation(line: 2112, column: 21, scope: !6738)
!6748 = !DILocation(line: 2112, column: 27, scope: !6738)
!6749 = !DILocation(line: 2112, column: 17, scope: !6738)
!6750 = !DILocation(line: 2112, column: 3, scope: !6738)
!6751 = distinct !{!6751, !6740, !6752}
!6752 = !DILocation(line: 2112, column: 43, scope: !6735)
!6753 = !DILocation(line: 2114, column: 15, scope: !6628)
!6754 = !DILocation(line: 2114, column: 18, scope: !6628)
!6755 = !DILocation(line: 2114, column: 10, scope: !6628)
!6756 = !DILocation(line: 2114, column: 29, scope: !6628)
!6757 = !DILocation(line: 2114, column: 32, scope: !6628)
!6758 = !DILocation(line: 2114, column: 24, scope: !6628)
!6759 = !DILocation(line: 2114, column: 22, scope: !6628)
!6760 = !DILocation(line: 2114, column: 8, scope: !6628)
!6761 = !DILocation(line: 2116, column: 9, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2116, column: 3)
!6763 = !DILocation(line: 2116, column: 8, scope: !6762)
!6764 = !DILocation(line: 2116, column: 12, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 2116, column: 3)
!6766 = !DILocation(line: 2116, column: 13, scope: !6765)
!6767 = !DILocation(line: 2116, column: 3, scope: !6762)
!6768 = !DILocation(line: 2116, column: 31, scope: !6765)
!6769 = !DILocation(line: 2116, column: 28, scope: !6765)
!6770 = !DILocation(line: 2116, column: 36, scope: !6765)
!6771 = !DILocation(line: 2116, column: 46, scope: !6765)
!6772 = !DILocation(line: 2116, column: 43, scope: !6765)
!6773 = !DILocation(line: 2116, column: 41, scope: !6765)
!6774 = !DILocation(line: 2116, column: 34, scope: !6765)
!6775 = !DILocation(line: 2116, column: 23, scope: !6765)
!6776 = !DILocation(line: 2116, column: 21, scope: !6765)
!6777 = !DILocation(line: 2116, column: 26, scope: !6765)
!6778 = !DILocation(line: 2116, column: 17, scope: !6765)
!6779 = !DILocation(line: 2116, column: 3, scope: !6765)
!6780 = distinct !{!6780, !6767, !6781}
!6781 = !DILocation(line: 2116, column: 47, scope: !6762)
!6782 = !DILocation(line: 2118, column: 15, scope: !6628)
!6783 = !DILocation(line: 2118, column: 18, scope: !6628)
!6784 = !DILocation(line: 2118, column: 10, scope: !6628)
!6785 = !DILocation(line: 2118, column: 8, scope: !6628)
!6786 = !DILocation(line: 2119, column: 12, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2119, column: 7)
!6788 = !DILocation(line: 2119, column: 7, scope: !6787)
!6789 = !DILocation(line: 2119, column: 19, scope: !6787)
!6790 = !DILocation(line: 2119, column: 7, scope: !6628)
!6791 = !DILocation(line: 2121, column: 16, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 2120, column: 5)
!6793 = !DILocation(line: 2121, column: 7, scope: !6792)
!6794 = !DILocation(line: 2122, column: 7, scope: !6792)
!6795 = !DILocation(line: 2124, column: 21, scope: !6628)
!6796 = !DILocation(line: 2124, column: 24, scope: !6628)
!6797 = !DILocation(line: 2124, column: 16, scope: !6628)
!6798 = !DILocation(line: 2124, column: 14, scope: !6628)
!6799 = !DILocation(line: 2124, column: 28, scope: !6628)
!6800 = !DILocation(line: 2124, column: 27, scope: !6628)
!6801 = !DILocation(line: 2124, column: 8, scope: !6628)
!6802 = !DILocation(line: 2126, column: 9, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 2126, column: 3)
!6804 = !DILocation(line: 2126, column: 8, scope: !6803)
!6805 = !DILocation(line: 2126, column: 12, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 2126, column: 3)
!6807 = !DILocation(line: 2126, column: 13, scope: !6806)
!6808 = !DILocation(line: 2126, column: 3, scope: !6803)
!6809 = !DILocation(line: 2126, column: 34, scope: !6806)
!6810 = !DILocation(line: 2126, column: 29, scope: !6806)
!6811 = !DILocation(line: 2126, column: 39, scope: !6806)
!6812 = !DILocation(line: 2126, column: 46, scope: !6806)
!6813 = !DILocation(line: 2126, column: 44, scope: !6806)
!6814 = !DILocation(line: 2126, column: 43, scope: !6806)
!6815 = !DILocation(line: 2126, column: 37, scope: !6806)
!6816 = !DILocation(line: 2126, column: 21, scope: !6806)
!6817 = !DILocation(line: 2126, column: 24, scope: !6806)
!6818 = !DILocation(line: 2126, column: 27, scope: !6806)
!6819 = !DILocation(line: 2126, column: 17, scope: !6806)
!6820 = !DILocation(line: 2126, column: 3, scope: !6806)
!6821 = distinct !{!6821, !6808, !6822}
!6822 = !DILocation(line: 2126, column: 47, scope: !6803)
!6823 = !DILocation(line: 2127, column: 3, scope: !6628)
!6824 = !DILocation(line: 2129, column: 1, scope: !6628)
!6825 = distinct !DISubprogram(name: "vdot", scope: !3, file: !3, line: 2066, type: !2063, scopeLine: 2067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!6826 = !DILocalVariable(name: "x1", arg: 1, scope: !6825, file: !3, line: 2066, type: !180)
!6827 = !DILocation(line: 2066, column: 29, scope: !6825)
!6828 = !DILocalVariable(name: "x2", arg: 2, scope: !6825, file: !3, line: 2066, type: !180)
!6829 = !DILocation(line: 2066, column: 42, scope: !6825)
!6830 = !DILocation(line: 2068, column: 11, scope: !6825)
!6831 = !DILocation(line: 2068, column: 17, scope: !6825)
!6832 = !DILocation(line: 2068, column: 16, scope: !6825)
!6833 = !DILocation(line: 2068, column: 25, scope: !6825)
!6834 = !DILocation(line: 2068, column: 31, scope: !6825)
!6835 = !DILocation(line: 2068, column: 30, scope: !6825)
!6836 = !DILocation(line: 2068, column: 23, scope: !6825)
!6837 = !DILocation(line: 2068, column: 39, scope: !6825)
!6838 = !DILocation(line: 2068, column: 45, scope: !6825)
!6839 = !DILocation(line: 2068, column: 44, scope: !6825)
!6840 = !DILocation(line: 2068, column: 37, scope: !6825)
!6841 = !DILocation(line: 2068, column: 3, scope: !6825)
!6842 = distinct !DISubprogram(name: "find_atom", scope: !3, file: !3, line: 1748, type: !6843, scopeLine: 1749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!36, !56, !238}
!6845 = !DILocalVariable(name: "res", arg: 1, scope: !6842, file: !3, line: 1748, type: !56)
!6846 = !DILocation(line: 1748, column: 34, scope: !6842)
!6847 = !DILocalVariable(name: "aname", arg: 2, scope: !6842, file: !3, line: 1748, type: !238)
!6848 = !DILocation(line: 1748, column: 44, scope: !6842)
!6849 = !DILocalVariable(name: "a", scope: !6842, file: !3, line: 1750, type: !36)
!6850 = !DILocation(line: 1750, column: 6, scope: !6842)
!6851 = !DILocalVariable(name: "ap", scope: !6842, file: !3, line: 1751, type: !102)
!6852 = !DILocation(line: 1751, column: 10, scope: !6842)
!6853 = !DILocation(line: 1753, column: 9, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6842, file: !3, line: 1753, column: 2)
!6855 = !DILocation(line: 1753, column: 19, scope: !6854)
!6856 = !DILocation(line: 1753, column: 24, scope: !6854)
!6857 = !DILocation(line: 1753, column: 17, scope: !6854)
!6858 = !DILocation(line: 1753, column: 7, scope: !6854)
!6859 = !DILocation(line: 1753, column: 33, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 1753, column: 2)
!6861 = !DILocation(line: 1753, column: 37, scope: !6860)
!6862 = !DILocation(line: 1753, column: 42, scope: !6860)
!6863 = !DILocation(line: 1753, column: 35, scope: !6860)
!6864 = !DILocation(line: 1753, column: 2, scope: !6854)
!6865 = !DILocation(line: 1754, column: 15, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 1754, column: 7)
!6867 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 1753, column: 63)
!6868 = !DILocation(line: 1754, column: 19, scope: !6866)
!6869 = !DILocation(line: 1754, column: 31, scope: !6866)
!6870 = !DILocation(line: 1754, column: 7, scope: !6866)
!6871 = !DILocation(line: 1754, column: 39, scope: !6866)
!6872 = !DILocation(line: 1754, column: 7, scope: !6867)
!6873 = !DILocation(line: 1755, column: 12, scope: !6866)
!6874 = !DILocation(line: 1755, column: 4, scope: !6866)
!6875 = !DILocation(line: 1756, column: 2, scope: !6867)
!6876 = !DILocation(line: 1753, column: 53, scope: !6860)
!6877 = !DILocation(line: 1753, column: 59, scope: !6860)
!6878 = !DILocation(line: 1753, column: 2, scope: !6860)
!6879 = distinct !{!6879, !6864, !6880}
!6880 = !DILocation(line: 1756, column: 2, scope: !6854)
!6881 = !DILocation(line: 1757, column: 2, scope: !6842)
!6882 = !DILocation(line: 1758, column: 1, scope: !6842)
!6883 = distinct !DISubprogram(name: "delete_atom", scope: !3, file: !3, line: 1760, type: !6884, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!6884 = !DISubroutineType(types: !6885)
!6885 = !{!36, !56, !36}
!6886 = !DILocalVariable(name: "res", arg: 1, scope: !6883, file: !3, line: 1760, type: !56)
!6887 = !DILocation(line: 1760, column: 36, scope: !6883)
!6888 = !DILocalVariable(name: "anum", arg: 2, scope: !6883, file: !3, line: 1760, type: !36)
!6889 = !DILocation(line: 1760, column: 45, scope: !6883)
!6890 = !DILocalVariable(name: "a", scope: !6883, file: !3, line: 1762, type: !36)
!6891 = !DILocation(line: 1762, column: 6, scope: !6883)
!6892 = !DILocalVariable(name: "ac", scope: !6883, file: !3, line: 1762, type: !36)
!6893 = !DILocation(line: 1762, column: 9, scope: !6883)
!6894 = !DILocalVariable(name: "c", scope: !6883, file: !3, line: 1762, type: !36)
!6895 = !DILocation(line: 1762, column: 13, scope: !6883)
!6896 = !DILocalVariable(name: "c1", scope: !6883, file: !3, line: 1762, type: !36)
!6897 = !DILocation(line: 1762, column: 16, scope: !6883)
!6898 = !DILocalVariable(name: "c2", scope: !6883, file: !3, line: 1762, type: !36)
!6899 = !DILocation(line: 1762, column: 20, scope: !6883)
!6900 = !DILocalVariable(name: "ap", scope: !6883, file: !3, line: 1763, type: !102)
!6901 = !DILocation(line: 1763, column: 10, scope: !6883)
!6902 = !DILocalVariable(name: "apc", scope: !6883, file: !3, line: 1763, type: !102)
!6903 = !DILocation(line: 1763, column: 15, scope: !6883)
!6904 = !DILocation(line: 1765, column: 6, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 1765, column: 6)
!6906 = !DILocation(line: 1765, column: 11, scope: !6905)
!6907 = !DILocation(line: 1765, column: 15, scope: !6905)
!6908 = !DILocation(line: 1765, column: 18, scope: !6905)
!6909 = !DILocation(line: 1765, column: 26, scope: !6905)
!6910 = !DILocation(line: 1765, column: 31, scope: !6905)
!6911 = !DILocation(line: 1765, column: 23, scope: !6905)
!6912 = !DILocation(line: 1765, column: 6, scope: !6883)
!6913 = !DILocation(line: 1766, column: 3, scope: !6905)
!6914 = !DILocation(line: 1767, column: 8, scope: !6883)
!6915 = !DILocation(line: 1767, column: 13, scope: !6883)
!6916 = !DILocation(line: 1767, column: 22, scope: !6883)
!6917 = !DILocation(line: 1767, column: 5, scope: !6883)
!6918 = !DILocation(line: 1768, column: 9, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 1768, column: 2)
!6920 = !DILocation(line: 1768, column: 7, scope: !6919)
!6921 = !DILocation(line: 1768, column: 14, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6919, file: !3, line: 1768, column: 2)
!6923 = !DILocation(line: 1768, column: 18, scope: !6922)
!6924 = !DILocation(line: 1768, column: 22, scope: !6922)
!6925 = !DILocation(line: 1768, column: 16, scope: !6922)
!6926 = !DILocation(line: 1768, column: 2, scope: !6919)
!6927 = !DILocation(line: 1769, column: 8, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 1768, column: 39)
!6929 = !DILocation(line: 1769, column: 12, scope: !6928)
!6930 = !DILocation(line: 1769, column: 23, scope: !6928)
!6931 = !DILocation(line: 1769, column: 6, scope: !6928)
!6932 = !DILocation(line: 1770, column: 10, scope: !6928)
!6933 = !DILocation(line: 1770, column: 15, scope: !6928)
!6934 = !DILocation(line: 1770, column: 24, scope: !6928)
!6935 = !DILocation(line: 1770, column: 7, scope: !6928)
!6936 = !DILocation(line: 1771, column: 11, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 1771, column: 3)
!6938 = !DILocation(line: 1771, column: 8, scope: !6937)
!6939 = !DILocation(line: 1771, column: 16, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 1771, column: 3)
!6941 = !DILocation(line: 1771, column: 21, scope: !6940)
!6942 = !DILocation(line: 1771, column: 26, scope: !6940)
!6943 = !DILocation(line: 1771, column: 19, scope: !6940)
!6944 = !DILocation(line: 1771, column: 3, scope: !6937)
!6945 = !DILocation(line: 1772, column: 8, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1772, column: 8)
!6947 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 1771, column: 44)
!6948 = !DILocation(line: 1772, column: 13, scope: !6946)
!6949 = !DILocation(line: 1772, column: 24, scope: !6946)
!6950 = !DILocation(line: 1772, column: 32, scope: !6946)
!6951 = !DILocation(line: 1772, column: 29, scope: !6946)
!6952 = !DILocation(line: 1772, column: 8, scope: !6947)
!6953 = !DILocation(line: 1773, column: 15, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 1773, column: 5)
!6955 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 1772, column: 38)
!6956 = !DILocation(line: 1773, column: 13, scope: !6954)
!6957 = !DILocation(line: 1773, column: 10, scope: !6954)
!6958 = !DILocation(line: 1773, column: 19, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1773, column: 5)
!6960 = !DILocation(line: 1773, column: 24, scope: !6959)
!6961 = !DILocation(line: 1773, column: 29, scope: !6959)
!6962 = !DILocation(line: 1773, column: 40, scope: !6959)
!6963 = !DILocation(line: 1773, column: 22, scope: !6959)
!6964 = !DILocation(line: 1773, column: 5, scope: !6954)
!6965 = !DILocation(line: 1775, column: 7, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 1773, column: 51)
!6967 = !DILocation(line: 1775, column: 12, scope: !6966)
!6968 = !DILocation(line: 1775, column: 23, scope: !6966)
!6969 = !DILocation(line: 1775, column: 26, scope: !6966)
!6970 = !DILocation(line: 1774, column: 6, scope: !6966)
!6971 = !DILocation(line: 1774, column: 11, scope: !6966)
!6972 = !DILocation(line: 1774, column: 22, scope: !6966)
!6973 = !DILocation(line: 1774, column: 27, scope: !6966)
!6974 = !DILocation(line: 1776, column: 5, scope: !6966)
!6975 = !DILocation(line: 1773, column: 47, scope: !6959)
!6976 = !DILocation(line: 1773, column: 5, scope: !6959)
!6977 = distinct !{!6977, !6964, !6978}
!6978 = !DILocation(line: 1776, column: 5, scope: !6954)
!6979 = !DILocation(line: 1777, column: 5, scope: !6955)
!6980 = !DILocation(line: 1777, column: 10, scope: !6955)
!6981 = !DILocation(line: 1777, column: 20, scope: !6955)
!6982 = !DILocation(line: 1778, column: 15, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 1778, column: 5)
!6984 = !DILocation(line: 1778, column: 20, scope: !6983)
!6985 = !DILocation(line: 1778, column: 13, scope: !6983)
!6986 = !DILocation(line: 1778, column: 10, scope: !6983)
!6987 = !DILocation(line: 1779, column: 6, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 1778, column: 5)
!6989 = !DILocation(line: 1779, column: 9, scope: !6988)
!6990 = !DILocation(line: 1778, column: 5, scope: !6983)
!6991 = !DILocation(line: 1780, column: 6, scope: !6988)
!6992 = !DILocation(line: 1780, column: 11, scope: !6988)
!6993 = !DILocation(line: 1780, column: 22, scope: !6988)
!6994 = !DILocation(line: 1780, column: 27, scope: !6988)
!6995 = !DILocation(line: 1779, column: 29, scope: !6988)
!6996 = !DILocation(line: 1778, column: 5, scope: !6988)
!6997 = distinct !{!6997, !6990, !6998}
!6998 = !DILocation(line: 1780, column: 29, scope: !6983)
!6999 = !DILocation(line: 1781, column: 5, scope: !6955)
!7000 = !DILocation(line: 1783, column: 3, scope: !6947)
!7001 = !DILocation(line: 1771, column: 40, scope: !6940)
!7002 = !DILocation(line: 1771, column: 3, scope: !6940)
!7003 = distinct !{!7003, !6944, !7004}
!7004 = !DILocation(line: 1783, column: 3, scope: !6937)
!7005 = !DILocation(line: 1784, column: 2, scope: !6928)
!7006 = !DILocation(line: 1768, column: 35, scope: !6922)
!7007 = !DILocation(line: 1768, column: 2, scope: !6922)
!7008 = distinct !{!7008, !6926, !7009}
!7009 = !DILocation(line: 1784, column: 2, scope: !6919)
!7010 = !DILocation(line: 1785, column: 11, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 1785, column: 2)
!7012 = !DILocation(line: 1785, column: 9, scope: !7011)
!7013 = !DILocation(line: 1785, column: 7, scope: !7011)
!7014 = !DILocation(line: 1785, column: 17, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1785, column: 2)
!7016 = !DILocation(line: 1785, column: 21, scope: !7015)
!7017 = !DILocation(line: 1785, column: 26, scope: !7015)
!7018 = !DILocation(line: 1785, column: 35, scope: !7015)
!7019 = !DILocation(line: 1785, column: 19, scope: !7015)
!7020 = !DILocation(line: 1785, column: 2, scope: !7011)
!7021 = !DILocation(line: 1786, column: 3, scope: !7015)
!7022 = !DILocation(line: 1786, column: 8, scope: !7015)
!7023 = !DILocation(line: 1786, column: 17, scope: !7015)
!7024 = !DILocation(line: 1786, column: 23, scope: !7015)
!7025 = !DILocation(line: 1786, column: 28, scope: !7015)
!7026 = !DILocation(line: 1786, column: 37, scope: !7015)
!7027 = !DILocation(line: 1786, column: 39, scope: !7015)
!7028 = !DILocation(line: 1785, column: 41, scope: !7015)
!7029 = !DILocation(line: 1785, column: 2, scope: !7015)
!7030 = distinct !{!7030, !7020, !7031}
!7031 = !DILocation(line: 1786, column: 43, scope: !7011)
!7032 = !DILocation(line: 1787, column: 2, scope: !6883)
!7033 = !DILocation(line: 1787, column: 7, scope: !6883)
!7034 = !DILocation(line: 1787, column: 15, scope: !6883)
!7035 = !DILocation(line: 1788, column: 9, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 1788, column: 2)
!7037 = !DILocation(line: 1788, column: 7, scope: !7036)
!7038 = !DILocation(line: 1788, column: 14, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 1788, column: 2)
!7040 = !DILocation(line: 1788, column: 18, scope: !7039)
!7041 = !DILocation(line: 1788, column: 23, scope: !7039)
!7042 = !DILocation(line: 1788, column: 32, scope: !7039)
!7043 = !DILocation(line: 1788, column: 16, scope: !7039)
!7044 = !DILocation(line: 1788, column: 2, scope: !7036)
!7045 = !DILocation(line: 1789, column: 9, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 1788, column: 42)
!7047 = !DILocation(line: 1789, column: 14, scope: !7046)
!7048 = !DILocation(line: 1789, column: 23, scope: !7046)
!7049 = !DILocation(line: 1789, column: 6, scope: !7046)
!7050 = !DILocation(line: 1790, column: 10, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 1790, column: 3)
!7052 = !DILocation(line: 1790, column: 8, scope: !7051)
!7053 = !DILocation(line: 1790, column: 15, scope: !7054)
!7054 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 1790, column: 3)
!7055 = !DILocation(line: 1790, column: 19, scope: !7054)
!7056 = !DILocation(line: 1790, column: 23, scope: !7054)
!7057 = !DILocation(line: 1790, column: 17, scope: !7054)
!7058 = !DILocation(line: 1790, column: 3, scope: !7051)
!7059 = !DILocation(line: 1791, column: 8, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 1791, column: 8)
!7061 = distinct !DILexicalBlock(scope: !7054, file: !3, line: 1790, column: 40)
!7062 = !DILocation(line: 1791, column: 12, scope: !7060)
!7063 = !DILocation(line: 1791, column: 23, scope: !7060)
!7064 = !DILocation(line: 1791, column: 29, scope: !7060)
!7065 = !DILocation(line: 1791, column: 27, scope: !7060)
!7066 = !DILocation(line: 1791, column: 8, scope: !7061)
!7067 = !DILocation(line: 1792, column: 5, scope: !7060)
!7068 = !DILocation(line: 1792, column: 9, scope: !7060)
!7069 = !DILocation(line: 1792, column: 20, scope: !7060)
!7070 = !DILocation(line: 1792, column: 23, scope: !7060)
!7071 = !DILocation(line: 1793, column: 3, scope: !7061)
!7072 = !DILocation(line: 1790, column: 36, scope: !7054)
!7073 = !DILocation(line: 1790, column: 3, scope: !7054)
!7074 = distinct !{!7074, !7058, !7075}
!7075 = !DILocation(line: 1793, column: 3, scope: !7051)
!7076 = !DILocation(line: 1794, column: 2, scope: !7046)
!7077 = !DILocation(line: 1788, column: 38, scope: !7039)
!7078 = !DILocation(line: 1788, column: 2, scope: !7039)
!7079 = distinct !{!7079, !7044, !7080}
!7080 = !DILocation(line: 1794, column: 2, scope: !7036)
!7081 = !DILocation(line: 1795, column: 2, scope: !6883)
!7082 = !DILocation(line: 1796, column: 1, scope: !6883)
!7083 = distinct !DISubprogram(name: "add_atom", scope: !3, file: !3, line: 1798, type: !6843, scopeLine: 1799, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !252)
!7084 = !DILocalVariable(name: "res", arg: 1, scope: !7083, file: !3, line: 1798, type: !56)
!7085 = !DILocation(line: 1798, column: 33, scope: !7083)
!7086 = !DILocalVariable(name: "aname", arg: 2, scope: !7083, file: !3, line: 1798, type: !238)
!7087 = !DILocation(line: 1798, column: 43, scope: !7083)
!7088 = !DILocalVariable(name: "na", scope: !7083, file: !3, line: 1800, type: !36)
!7089 = !DILocation(line: 1800, column: 6, scope: !7083)
!7090 = !DILocalVariable(name: "a", scope: !7083, file: !3, line: 1800, type: !36)
!7091 = !DILocation(line: 1800, column: 10, scope: !7083)
!7092 = !DILocalVariable(name: "c", scope: !7083, file: !3, line: 1800, type: !36)
!7093 = !DILocation(line: 1800, column: 13, scope: !7083)
!7094 = !DILocalVariable(name: "ap", scope: !7083, file: !3, line: 1801, type: !102)
!7095 = !DILocation(line: 1801, column: 10, scope: !7083)
!7096 = !DILocalVariable(name: "nap", scope: !7083, file: !3, line: 1801, type: !102)
!7097 = !DILocation(line: 1801, column: 15, scope: !7083)
!7098 = !DILocalVariable(name: "oap", scope: !7083, file: !3, line: 1801, type: !102)
!7099 = !DILocation(line: 1801, column: 21, scope: !7083)
!7100 = !DILocalVariable(name: "nai", scope: !7083, file: !3, line: 1802, type: !244)
!7101 = !DILocation(line: 1802, column: 7, scope: !7083)
!7102 = !DILocalVariable(name: "oai", scope: !7083, file: !3, line: 1802, type: !244)
!7103 = !DILocation(line: 1802, column: 13, scope: !7083)
!7104 = !DILocalVariable(name: "anp", scope: !7083, file: !3, line: 1803, type: !238)
!7105 = !DILocation(line: 1803, column: 8, scope: !7083)
!7106 = !DILocation(line: 1805, column: 7, scope: !7083)
!7107 = !DILocation(line: 1805, column: 12, scope: !7083)
!7108 = !DILocation(line: 1805, column: 21, scope: !7083)
!7109 = !DILocation(line: 1805, column: 5, scope: !7083)
!7110 = !DILocation(line: 1806, column: 34, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1806, column: 6)
!7112 = !DILocation(line: 1806, column: 37, scope: !7111)
!7113 = !DILocation(line: 1806, column: 26, scope: !7111)
!7114 = !DILocation(line: 1806, column: 14, scope: !7111)
!7115 = !DILocation(line: 1806, column: 12, scope: !7111)
!7116 = !DILocation(line: 1806, column: 60, scope: !7111)
!7117 = !DILocation(line: 1806, column: 6, scope: !7083)
!7118 = !DILocation(line: 1807, column: 12, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 1806, column: 69)
!7120 = !DILocation(line: 1807, column: 3, scope: !7119)
!7121 = !DILocation(line: 1808, column: 3, scope: !7119)
!7122 = !DILocation(line: 1810, column: 31, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1810, column: 6)
!7124 = !DILocation(line: 1810, column: 34, scope: !7123)
!7125 = !DILocation(line: 1810, column: 23, scope: !7123)
!7126 = !DILocation(line: 1810, column: 14, scope: !7123)
!7127 = !DILocation(line: 1810, column: 12, scope: !7123)
!7128 = !DILocation(line: 1810, column: 54, scope: !7123)
!7129 = !DILocation(line: 1810, column: 6, scope: !7083)
!7130 = !DILocation(line: 1811, column: 12, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1810, column: 63)
!7132 = !DILocation(line: 1811, column: 3, scope: !7131)
!7133 = !DILocation(line: 1812, column: 3, scope: !7131)
!7134 = !DILocation(line: 1814, column: 8, scope: !7083)
!7135 = !DILocation(line: 1814, column: 13, scope: !7083)
!7136 = !DILocation(line: 1814, column: 6, scope: !7083)
!7137 = !DILocation(line: 1815, column: 9, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1815, column: 2)
!7139 = !DILocation(line: 1815, column: 7, scope: !7138)
!7140 = !DILocation(line: 1815, column: 14, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1815, column: 2)
!7142 = !DILocation(line: 1815, column: 18, scope: !7141)
!7143 = !DILocation(line: 1815, column: 21, scope: !7141)
!7144 = !DILocation(line: 1815, column: 16, scope: !7141)
!7145 = !DILocation(line: 1815, column: 2, scope: !7138)
!7146 = !DILocation(line: 1816, column: 3, scope: !7141)
!7147 = !DILocation(line: 1816, column: 8, scope: !7141)
!7148 = !DILocation(line: 1816, column: 14, scope: !7141)
!7149 = !DILocation(line: 1816, column: 19, scope: !7141)
!7150 = !DILocation(line: 1815, column: 27, scope: !7141)
!7151 = !DILocation(line: 1815, column: 2, scope: !7141)
!7152 = distinct !{!7152, !7145, !7153}
!7153 = !DILocation(line: 1816, column: 21, scope: !7138)
!7154 = !DILocation(line: 1817, column: 8, scope: !7083)
!7155 = !DILocation(line: 1817, column: 13, scope: !7083)
!7156 = !DILocation(line: 1817, column: 16, scope: !7083)
!7157 = !DILocation(line: 1817, column: 5, scope: !7083)
!7158 = !DILocation(line: 1818, column: 34, scope: !7083)
!7159 = !DILocation(line: 1818, column: 38, scope: !7083)
!7160 = !DILocation(line: 1818, column: 26, scope: !7083)
!7161 = !DILocation(line: 1818, column: 51, scope: !7083)
!7162 = !DILocation(line: 1818, column: 18, scope: !7083)
!7163 = !DILocation(line: 1818, column: 6, scope: !7083)
!7164 = !DILocation(line: 1819, column: 6, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1819, column: 6)
!7166 = !DILocation(line: 1819, column: 10, scope: !7165)
!7167 = !DILocation(line: 1819, column: 6, scope: !7083)
!7168 = !DILocation(line: 1820, column: 12, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1819, column: 19)
!7170 = !DILocation(line: 1820, column: 3, scope: !7169)
!7171 = !DILocation(line: 1821, column: 3, scope: !7169)
!7172 = !DILocation(line: 1823, column: 19, scope: !7083)
!7173 = !DILocation(line: 1823, column: 2, scope: !7083)
!7174 = !DILocation(line: 1823, column: 6, scope: !7083)
!7175 = !DILocation(line: 1823, column: 17, scope: !7083)
!7176 = !DILocation(line: 1824, column: 10, scope: !7083)
!7177 = !DILocation(line: 1824, column: 14, scope: !7083)
!7178 = !DILocation(line: 1824, column: 26, scope: !7083)
!7179 = !DILocation(line: 1824, column: 2, scope: !7083)
!7180 = !DILocation(line: 1825, column: 2, scope: !7083)
!7181 = !DILocation(line: 1825, column: 6, scope: !7083)
!7182 = !DILocation(line: 1825, column: 13, scope: !7083)
!7183 = !DILocation(line: 1826, column: 2, scope: !7083)
!7184 = !DILocation(line: 1826, column: 6, scope: !7083)
!7185 = !DILocation(line: 1826, column: 17, scope: !7083)
!7186 = !DILocation(line: 1827, column: 9, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1827, column: 2)
!7188 = !DILocation(line: 1827, column: 7, scope: !7187)
!7189 = !DILocation(line: 1827, column: 14, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !3, line: 1827, column: 2)
!7191 = !DILocation(line: 1827, column: 16, scope: !7190)
!7192 = !DILocation(line: 1827, column: 2, scope: !7187)
!7193 = !DILocation(line: 1828, column: 3, scope: !7190)
!7194 = !DILocation(line: 1828, column: 7, scope: !7190)
!7195 = !DILocation(line: 1828, column: 18, scope: !7190)
!7196 = !DILocation(line: 1828, column: 22, scope: !7190)
!7197 = !DILocation(line: 1827, column: 35, scope: !7190)
!7198 = !DILocation(line: 1827, column: 2, scope: !7190)
!7199 = distinct !{!7199, !7192, !7200}
!7200 = !DILocation(line: 1828, column: 24, scope: !7187)
!7201 = !DILocation(line: 1829, column: 18, scope: !7083)
!7202 = !DILocation(line: 1829, column: 27, scope: !7083)
!7203 = !DILocation(line: 1829, column: 2, scope: !7083)
!7204 = !DILocation(line: 1829, column: 6, scope: !7083)
!7205 = !DILocation(line: 1829, column: 16, scope: !7083)
!7206 = !DILocation(line: 1830, column: 2, scope: !7083)
!7207 = !DILocation(line: 1830, column: 6, scope: !7083)
!7208 = !DILocation(line: 1830, column: 15, scope: !7083)
!7209 = !DILocation(line: 1831, column: 2, scope: !7083)
!7210 = !DILocation(line: 1831, column: 6, scope: !7083)
!7211 = !DILocation(line: 1831, column: 15, scope: !7083)
!7212 = !DILocation(line: 1832, column: 2, scope: !7083)
!7213 = !DILocation(line: 1832, column: 6, scope: !7083)
!7214 = !DILocation(line: 1832, column: 17, scope: !7083)
!7215 = !DILocation(line: 1833, column: 2, scope: !7083)
!7216 = !DILocation(line: 1833, column: 6, scope: !7083)
!7217 = !DILocation(line: 1833, column: 17, scope: !7083)
!7218 = !DILocation(line: 1834, column: 2, scope: !7083)
!7219 = !DILocation(line: 1834, column: 6, scope: !7083)
!7220 = !DILocation(line: 1834, column: 17, scope: !7083)
!7221 = !DILocation(line: 1835, column: 2, scope: !7083)
!7222 = !DILocation(line: 1835, column: 6, scope: !7083)
!7223 = !DILocation(line: 1835, column: 10, scope: !7083)
!7224 = !DILocation(line: 1836, column: 13, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1836, column: 6)
!7226 = !DILocation(line: 1836, column: 18, scope: !7225)
!7227 = !DILocation(line: 1836, column: 11, scope: !7225)
!7228 = !DILocation(line: 1836, column: 6, scope: !7083)
!7229 = !DILocation(line: 1837, column: 10, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7231, file: !3, line: 1837, column: 3)
!7231 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 1836, column: 29)
!7232 = !DILocation(line: 1837, column: 8, scope: !7230)
!7233 = !DILocation(line: 1837, column: 15, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1837, column: 3)
!7235 = !DILocation(line: 1837, column: 19, scope: !7234)
!7236 = !DILocation(line: 1837, column: 22, scope: !7234)
!7237 = !DILocation(line: 1837, column: 17, scope: !7234)
!7238 = !DILocation(line: 1837, column: 3, scope: !7230)
!7239 = !DILocation(line: 1838, column: 15, scope: !7234)
!7240 = !DILocation(line: 1838, column: 20, scope: !7234)
!7241 = !DILocation(line: 1838, column: 4, scope: !7234)
!7242 = !DILocation(line: 1838, column: 9, scope: !7234)
!7243 = !DILocation(line: 1838, column: 13, scope: !7234)
!7244 = !DILocation(line: 1837, column: 28, scope: !7234)
!7245 = !DILocation(line: 1837, column: 3, scope: !7234)
!7246 = distinct !{!7246, !7238, !7247}
!7247 = !DILocation(line: 1838, column: 22, scope: !7230)
!7248 = !DILocation(line: 1839, column: 19, scope: !7231)
!7249 = !DILocation(line: 1839, column: 22, scope: !7231)
!7250 = !DILocation(line: 1839, column: 3, scope: !7231)
!7251 = !DILocation(line: 1839, column: 8, scope: !7231)
!7252 = !DILocation(line: 1839, column: 11, scope: !7231)
!7253 = !DILocation(line: 1839, column: 17, scope: !7231)
!7254 = !DILocation(line: 1840, column: 2, scope: !7231)
!7255 = !DILocation(line: 1841, column: 10, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7257, file: !3, line: 1841, column: 3)
!7257 = distinct !DILexicalBlock(scope: !7225, file: !3, line: 1840, column: 7)
!7258 = !DILocation(line: 1841, column: 8, scope: !7256)
!7259 = !DILocation(line: 1841, column: 15, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 1841, column: 3)
!7261 = !DILocation(line: 1841, column: 19, scope: !7260)
!7262 = !DILocation(line: 1841, column: 17, scope: !7260)
!7263 = !DILocation(line: 1841, column: 3, scope: !7256)
!7264 = !DILocation(line: 1842, column: 15, scope: !7260)
!7265 = !DILocation(line: 1842, column: 4, scope: !7260)
!7266 = !DILocation(line: 1842, column: 9, scope: !7260)
!7267 = !DILocation(line: 1842, column: 13, scope: !7260)
!7268 = !DILocation(line: 1841, column: 24, scope: !7260)
!7269 = !DILocation(line: 1841, column: 3, scope: !7260)
!7270 = distinct !{!7270, !7263, !7271}
!7271 = !DILocation(line: 1842, column: 15, scope: !7256)
!7272 = !DILocation(line: 1844, column: 18, scope: !7083)
!7273 = !DILocation(line: 1844, column: 2, scope: !7083)
!7274 = !DILocation(line: 1844, column: 7, scope: !7083)
!7275 = !DILocation(line: 1844, column: 16, scope: !7083)
!7276 = !DILocation(line: 1846, column: 2, scope: !7083)
!7277 = !DILocation(line: 1846, column: 7, scope: !7083)
!7278 = !DILocation(line: 1846, column: 15, scope: !7083)
!7279 = !DILocation(line: 1847, column: 17, scope: !7083)
!7280 = !DILocation(line: 1847, column: 2, scope: !7083)
!7281 = !DILocation(line: 1847, column: 7, scope: !7083)
!7282 = !DILocation(line: 1847, column: 15, scope: !7083)
!7283 = !DILocation(line: 1849, column: 6, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 1849, column: 6)
!7285 = !DILocation(line: 1849, column: 6, scope: !7083)
!7286 = !DILocation(line: 1850, column: 9, scope: !7284)
!7287 = !DILocation(line: 1850, column: 3, scope: !7284)
!7288 = !DILocation(line: 1851, column: 8, scope: !7083)
!7289 = !DILocation(line: 1851, column: 2, scope: !7083)
!7290 = !DILocation(line: 1852, column: 2, scope: !7083)
!7291 = !DILocation(line: 1853, column: 1, scope: !7083)
